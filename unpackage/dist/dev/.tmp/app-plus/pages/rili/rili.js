(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["pages/rili/rili"],{

/***/ "../../../../../../Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/main.js?{\"page\":\"pages%2Frili%2Frili\"}":
/*!***************************************************************************************************!*\
  !*** /Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/main.js?{"page":"pages%2Frili%2Frili"} ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("__webpack_require__(/*! uni-pages */ \"../../../../../../Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/pages.json\");\nvar _mpvuePageFactory = _interopRequireDefault(__webpack_require__(/*! mpvue-page-factory */ \"./node_modules/@dcloudio/vue-cli-plugin-uni/packages/mpvue-page-factory/index.js\"));\nvar _rili = _interopRequireDefault(__webpack_require__(/*! ./pages/rili/rili.vue */ \"../../../../../../Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/pages/rili/rili.vue\"));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\nPage((0, _mpvuePageFactory.default)(_rili.default));\n\n//# sourceURL=Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/main.js?%7B%22page%22:%22pages%252Frili%252Frili%22%7D");

/***/ }),

/***/ "../../../../../../Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/node_modules/dayjs/dayjs.min.js":
/*!********************************************************************************************!*\
  !*** /Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/node_modules/dayjs/dayjs.min.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("!function (t, n) { true ? module.exports = n() : undefined;}(void 0, function () {\"use strict\";var t = \"millisecond\",n = \"second\",e = \"minute\",i = \"hour\",r = \"day\",s = \"week\",u = \"month\",a = \"quarter\",o = \"year\",h = /^(\\d{4})-?(\\d{1,2})-?(\\d{0,2})[^0-9]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?.?(\\d{1,3})?$/,f = /\\[([^\\]]+)]|Y{2,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,c = function c(t, n, e) {var i = String(t);return !i || i.length >= n ? t : \"\" + Array(n + 1 - i.length).join(e) + t;},d = { s: c, z: function z(t) {var n = -t.utcOffset(),e = Math.abs(n),i = Math.floor(e / 60),r = e % 60;return (n <= 0 ? \"+\" : \"-\") + c(i, 2, \"0\") + \":\" + c(r, 2, \"0\");}, m: function m(t, n) {var e = 12 * (n.year() - t.year()) + (n.month() - t.month()),i = t.clone().add(e, u),r = n - i < 0,s = t.clone().add(e + (r ? -1 : 1), u);return Number(-(e + (n - i) / (r ? i - s : s - i)) || 0);}, a: function a(t) {return t < 0 ? Math.ceil(t) || 0 : Math.floor(t);}, p: function p(h) {return { M: u, y: o, w: s, d: r, h: i, m: e, s: n, ms: t, Q: a }[h] || String(h || \"\").toLowerCase().replace(/s$/, \"\");}, u: function u(t) {return void 0 === t;} },$ = { name: \"en\", weekdays: \"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"), months: \"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\") },l = \"en\",m = {};m[l] = $;var y = function y(t) {return t instanceof S;},M = function M(t, n, e) {var i;if (!t) return null;if (\"string\" == typeof t) m[t] && (i = t), n && (m[t] = n, i = t);else {var r = t.name;m[r] = t, i = r;}return e || (l = i), i;},g = function g(t, n, e) {if (y(t)) return t.clone();var i = n ? \"string\" == typeof n ? { format: n, pl: e } : n : {};return i.date = t, new S(i);},D = d;D.l = M, D.i = y, D.w = function (t, n) {return g(t, { locale: n.$L, utc: n.$u });};var S = function () {function c(t) {this.$L = this.$L || M(t.locale, null, !0) || l, this.parse(t);}var d = c.prototype;return d.parse = function (t) {this.$d = function (t) {var n = t.date,e = t.utc;if (null === n) return new Date(NaN);if (D.u(n)) return new Date();if (n instanceof Date) return new Date(n);if (\"string\" == typeof n && !/Z$/i.test(n)) {var i = n.match(h);if (i) return e ? new Date(Date.UTC(i[1], i[2] - 1, i[3] || 1, i[4] || 0, i[5] || 0, i[6] || 0, i[7] || 0)) : new Date(i[1], i[2] - 1, i[3] || 1, i[4] || 0, i[5] || 0, i[6] || 0, i[7] || 0);}return new Date(n);}(t), this.init();}, d.init = function () {var t = this.$d;this.$y = t.getFullYear(), this.$M = t.getMonth(), this.$D = t.getDate(), this.$W = t.getDay(), this.$H = t.getHours(), this.$m = t.getMinutes(), this.$s = t.getSeconds(), this.$ms = t.getMilliseconds();}, d.$utils = function () {return D;}, d.isValid = function () {return !(\"Invalid Date\" === this.$d.toString());}, d.isSame = function (t, n) {var e = g(t);return this.startOf(n) <= e && e <= this.endOf(n);}, d.isAfter = function (t, n) {return g(t) < this.startOf(n);}, d.isBefore = function (t, n) {return this.endOf(n) < g(t);}, d.$g = function (t, n, e) {return D.u(t) ? this[n] : this.set(e, t);}, d.year = function (t) {return this.$g(t, \"$y\", o);}, d.month = function (t) {return this.$g(t, \"$M\", u);}, d.day = function (t) {return this.$g(t, \"$W\", r);}, d.date = function (t) {return this.$g(t, \"$D\", \"date\");}, d.hour = function (t) {return this.$g(t, \"$H\", i);}, d.minute = function (t) {return this.$g(t, \"$m\", e);}, d.second = function (t) {return this.$g(t, \"$s\", n);}, d.millisecond = function (n) {return this.$g(n, \"$ms\", t);}, d.unix = function () {return Math.floor(this.valueOf() / 1e3);}, d.valueOf = function () {return this.$d.getTime();}, d.startOf = function (t, a) {var h = this,f = !!D.u(a) || a,c = D.p(t),d = function d(t, n) {var e = D.w(h.$u ? Date.UTC(h.$y, n, t) : new Date(h.$y, n, t), h);return f ? e : e.endOf(r);},$ = function $(t, n) {return D.w(h.toDate()[t].apply(h.toDate(), (f ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(n)), h);},l = this.$W,m = this.$M,y = this.$D,M = \"set\" + (this.$u ? \"UTC\" : \"\");switch (c) {case o:return f ? d(1, 0) : d(31, 11);case u:return f ? d(1, m) : d(0, m + 1);case s:var g = this.$locale().weekStart || 0,S = (l < g ? l + 7 : l) - g;return d(f ? y - S : y + (6 - S), m);case r:case \"date\":return $(M + \"Hours\", 0);case i:return $(M + \"Minutes\", 1);case e:return $(M + \"Seconds\", 2);case n:return $(M + \"Milliseconds\", 3);default:return this.clone();}}, d.endOf = function (t) {return this.startOf(t, !1);}, d.$set = function (s, a) {var h,f = D.p(s),c = \"set\" + (this.$u ? \"UTC\" : \"\"),d = (h = {}, h[r] = c + \"Date\", h.date = c + \"Date\", h[u] = c + \"Month\", h[o] = c + \"FullYear\", h[i] = c + \"Hours\", h[e] = c + \"Minutes\", h[n] = c + \"Seconds\", h[t] = c + \"Milliseconds\", h)[f],$ = f === r ? this.$D + (a - this.$W) : a;if (f === u || f === o) {var l = this.clone().set(\"date\", 1);l.$d[d]($), l.init(), this.$d = l.set(\"date\", Math.min(this.$D, l.daysInMonth())).toDate();} else d && this.$d[d]($);return this.init(), this;}, d.set = function (t, n) {return this.clone().$set(t, n);}, d.get = function (t) {return this[D.p(t)]();}, d.add = function (t, a) {var h,f = this;t = Number(t);var c = D.p(a),d = function d(n) {var e = new Date(f.$d);return e.setDate(e.getDate() + n * t), D.w(e, f);};if (c === u) return this.set(u, this.$M + t);if (c === o) return this.set(o, this.$y + t);if (c === r) return d(1);if (c === s) return d(7);var $ = (h = {}, h[e] = 6e4, h[i] = 36e5, h[n] = 1e3, h)[c] || 1,l = this.valueOf() + t * $;return D.w(l, this);}, d.subtract = function (t, n) {return this.add(-1 * t, n);}, d.format = function (t) {var n = this;if (!this.isValid()) return \"Invalid Date\";var e = t || \"YYYY-MM-DDTHH:mm:ssZ\",i = D.z(this),r = this.$locale(),s = r.weekdays,u = r.months,a = function a(t, n, e, i) {return t && t[n] || e[n].substr(0, i);},o = function o(t) {return D.s(n.$H % 12 || 12, t, \"0\");},h = { YY: String(this.$y).slice(-2), YYYY: String(this.$y), M: String(this.$M + 1), MM: D.s(this.$M + 1, 2, \"0\"), MMM: a(r.monthsShort, this.$M, u, 3), MMMM: u[this.$M], D: String(this.$D), DD: D.s(this.$D, 2, \"0\"), d: String(this.$W), dd: a(r.weekdaysMin, this.$W, s, 2), ddd: a(r.weekdaysShort, this.$W, s, 3), dddd: s[this.$W], H: String(this.$H), HH: D.s(this.$H, 2, \"0\"), h: o(1), hh: o(2), a: this.$H < 12 ? \"am\" : \"pm\", A: this.$H < 12 ? \"AM\" : \"PM\", m: String(this.$m), mm: D.s(this.$m, 2, \"0\"), s: String(this.$s), ss: D.s(this.$s, 2, \"0\"), SSS: D.s(this.$ms, 3, \"0\"), Z: i };return e.replace(f, function (t, n) {return n || h[t] || i.replace(\":\", \"\");});}, d.utcOffset = function () {return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);}, d.diff = function (t, h, f) {var c,d = D.p(h),$ = g(t),l = 6e4 * ($.utcOffset() - this.utcOffset()),m = this - $,y = D.m(this, $);return y = (c = {}, c[o] = y / 12, c[u] = y, c[a] = y / 3, c[s] = (m - l) / 6048e5, c[r] = (m - l) / 864e5, c[i] = m / 36e5, c[e] = m / 6e4, c[n] = m / 1e3, c)[d] || m, f ? y : D.a(y);}, d.daysInMonth = function () {return this.endOf(u).$D;}, d.$locale = function () {return m[this.$L];}, d.locale = function (t, n) {if (!t) return this.$L;var e = this.clone();return e.$L = M(t, n, !0), e;}, d.clone = function () {return D.w(this.toDate(), this);}, d.toDate = function () {return new Date(this.$d);}, d.toJSON = function () {return this.toISOString();}, d.toISOString = function () {return this.$d.toISOString();}, d.toString = function () {return this.$d.toUTCString();}, c;}();return g.prototype = S.prototype, g.extend = function (t, n) {return t(n, S, g), g;}, g.locale = M, g.isDayjs = y, g.unix = function (t) {return g(1e3 * t);}, g.en = m[l], g.Ls = m, g;});\n\n//# sourceURL=uni-app:///node_modules/dayjs/dayjs.min.js?ffa7");

/***/ }),

/***/ "../../../../../../Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/node_modules/image-tools/index.js":
/*!**********************************************************************************************!*\
  !*** /Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/node_modules/image-tools/index.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.pathToBase64 = pathToBase64;exports.base64ToPath = base64ToPath;function pathToBase64(path) {\n  return new Promise(function (resolve, reject) {\n    if (typeof window === 'object' && 'document' in window) {\n      var canvas = document.createElement('canvas');\n      var c2x = canvas.getContext('2d');\n      var img = new Image();\n      img.onload = function () {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        c2x.drawImage(img, 0, 0);\n        resolve(canvas.toDataURL());\n      };\n      img.onerror = reject;\n      img.src = path;\n      return;\n    }\n    if (typeof plus === 'object') {\n      var bitmap = new plus.nativeObj.Bitmap('bitmap' + Date.now());\n      bitmap.load(path, function () {\n        try {\n          var base64 = bitmap.toBase64Data();\n        } catch (error) {\n          reject(error);\n        }\n        bitmap.clear();\n        resolve(base64);\n      }, function (error) {\n        bitmap.clear();\n        reject(error);\n      });\n      return;\n    }\n    if (typeof wx === 'object' && wx.canIUse('getFileSystemManager')) {\n      wx.getFileSystemManager().readFile({\n        filePath: path,\n        encoding: 'base64',\n        success: function success(res) {\n          resolve('data:image/png;base64,' + res.data);\n        },\n        fail: function fail(error) {\n          reject(error);\n        } });\n\n      return;\n    }\n    reject(new Error('not support'));\n  });\n}\n\nfunction base64ToPath(base64) {\n  return new Promise(function (resolve, reject) {\n    if (typeof window === 'object' && 'document' in window) {\n      base64 = base64.split(',');\n      var type = base64[0].match(/:(.*?);/)[1];\n      var str = atob(base64[1]);\n      var n = str.length;\n      var array = new Uint8Array(n);\n      while (n--) {\n        array[n] = str.charCodeAt(n);\n      }\n      return resolve((window.URL || window.webkitURL).createObjectURL(new Blob([array], { type: type })));\n    }\n    var extName = base64.match(/data\\:\\S+\\/(\\S+);/);\n    if (extName) {\n      extName = extName[1];\n    } else {\n      reject(new Error('base64 error'));\n    }\n    var fileName = Date.now() + '.' + extName;\n    if (typeof plus === 'object') {\n      var bitmap = new plus.nativeObj.Bitmap('bitmap' + Date.now());\n      bitmap.loadBase64Data(base64, function () {\n        var filePath = '_doc/uniapp_temp/' + fileName;\n        bitmap.save(filePath, {}, function () {\n          bitmap.clear();\n          resolve(filePath);\n        }, function (error) {\n          bitmap.clear();\n          reject(error);\n        });\n      }, function (error) {\n        bitmap.clear();\n        reject(error);\n      });\n      return;\n    }\n    if (typeof wx === 'object' && wx.canIUse('getFileSystemManager')) {\n      var filePath = wx.env.USER_DATA_PATH + '/' + fileName;\n      wx.getFileSystemManager().writeFile({\n        filePath: filePath,\n        data: base64.replace(/^data:\\S+\\/\\S+;base64,/, ''),\n        encoding: 'base64',\n        success: function success() {\n          resolve(filePath);\n        },\n        fail: function fail(error) {\n          reject(error);\n        } });\n\n      return;\n    }\n    reject(new Error('not support'));\n  });\n}\n\n//# sourceURL=uni-app:///node_modules/image-tools/index.js?a816");

/***/ }),

/***/ "../../../../../../Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/node_modules/jimp/browser/lib/jimp.js":
/*!**************************************************************************************************!*\
  !*** /Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/node_modules/jimp/browser/lib/jimp.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {var require;var require;/*\nJimp v0.6.3\nhttps://github.com/oliver-moran/jimp\nPorted for the Web by Phil Seaton\nMIT License\n\nCopyright (c) 2018 Oliver Moran\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\nif((typeof window=='undefined'||!window)&&typeof self!='undefined')var window=self;\n(function(f){if(true){module.exports=f();}else { var g; }})(function(){var define,module,exports;return function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return require(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a;}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r);},p,p.exports,r,e,n,t);}return n[i].exports;}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++){o(t[i]);}return o;}return r;}()({1:[function(require,module,exports){\nvar Converter=require('./src/converter');\n\n/**\n * Function get source and destination alphabet and return convert function\n *\n * @param {string|Array} srcAlphabet\n * @param {string|Array} dstAlphabet\n *\n * @returns {function(number|Array)}\n */\nfunction anyBase(srcAlphabet,dstAlphabet){\nvar converter=new Converter(srcAlphabet,dstAlphabet);\n/**\n     * Convert function\n     *\n     * @param {string|Array} number\n     *\n     * @return {string|Array} number\n     */\nreturn function(number){\nreturn converter.convert(number);\n};\n};\n\nanyBase.BIN='01';\nanyBase.OCT='01234567';\nanyBase.DEC='0123456789';\nanyBase.HEX='0123456789abcdef';\n\nmodule.exports=anyBase;\n},{\"./src/converter\":2}],2:[function(require,module,exports){\n'use strict';\n\n/**\n * Converter\n *\n * @param {string|Array} srcAlphabet\n * @param {string|Array} dstAlphabet\n * @constructor\n */\nfunction Converter(srcAlphabet,dstAlphabet){\nif(!srcAlphabet||!dstAlphabet||!srcAlphabet.length||!dstAlphabet.length){\nthrow new Error('Bad alphabet');\n}\nthis.srcAlphabet=srcAlphabet;\nthis.dstAlphabet=dstAlphabet;\n}\n\n/**\n * Convert number from source alphabet to destination alphabet\n *\n * @param {string|Array} number - number represented as a string or array of points\n *\n * @returns {string|Array}\n */\nConverter.prototype.convert=function(number){\nvar i,divide,newlen,\nnumberMap={},\nfromBase=this.srcAlphabet.length,\ntoBase=this.dstAlphabet.length,\nlength=number.length,\nresult=typeof number==='string'?'':[];\n\nif(!this.isValid(number)){\nthrow new Error('Number \"'+number+'\" contains of non-alphabetic digits ('+this.srcAlphabet+')');\n}\n\nif(this.srcAlphabet===this.dstAlphabet){\nreturn number;\n}\n\nfor(i=0;i<length;i++){\nnumberMap[i]=this.srcAlphabet.indexOf(number[i]);\n}\ndo{\ndivide=0;\nnewlen=0;\nfor(i=0;i<length;i++){\ndivide=divide*fromBase+numberMap[i];\nif(divide>=toBase){\nnumberMap[newlen++]=parseInt(divide/toBase,10);\ndivide=divide%toBase;\n}else if(newlen>0){\nnumberMap[newlen++]=0;\n}\n}\nlength=newlen;\nresult=this.dstAlphabet.slice(divide,divide+1).concat(result);\n}while(newlen!==0);\n\nreturn result;\n};\n\n/**\n * Valid number with source alphabet\n *\n * @param {number} number\n *\n * @returns {boolean}\n */\nConverter.prototype.isValid=function(number){\nvar i=0;\nfor(;i<number.length;++i){\nif(this.srcAlphabet.indexOf(number[i])===-1){\nreturn false;\n}\n}\nreturn true;\n};\n\nmodule.exports=Converter;\n},{}],3:[function(require,module,exports){\n(function(global){\n'use strict';\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a,b){\nif(a===b){\nreturn 0;\n}\n\nvar x=a.length;\nvar y=b.length;\n\nfor(var i=0,len=Math.min(x,y);i<len;++i){\nif(a[i]!==b[i]){\nx=a[i];\ny=b[i];\nbreak;\n}\n}\n\nif(x<y){\nreturn-1;\n}\nif(y<x){\nreturn 1;\n}\nreturn 0;\n}\nfunction isBuffer(b){\nif(global.Buffer&&typeof global.Buffer.isBuffer==='function'){\nreturn global.Buffer.isBuffer(b);\n}\nreturn!!(b!=null&&b._isBuffer);\n}\n\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util=require('util/');\nvar hasOwn=Object.prototype.hasOwnProperty;\nvar pSlice=Array.prototype.slice;\nvar functionsHaveNames=function(){\nreturn function foo(){}.name==='foo';\n}();\nfunction pToString(obj){\nreturn Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf){\nif(isBuffer(arrbuf)){\nreturn false;\n}\nif(typeof global.ArrayBuffer!=='function'){\nreturn false;\n}\nif(typeof ArrayBuffer.isView==='function'){\nreturn ArrayBuffer.isView(arrbuf);\n}\nif(!arrbuf){\nreturn false;\n}\nif(arrbuf instanceof DataView){\nreturn true;\n}\nif(arrbuf.buffer&&arrbuf.buffer instanceof ArrayBuffer){\nreturn true;\n}\nreturn false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert=module.exports=ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex=/\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func){\nif(!util.isFunction(func)){\nreturn;\n}\nif(functionsHaveNames){\nreturn func.name;\n}\nvar str=func.toString();\nvar match=str.match(regex);\nreturn match&&match[1];\n}\nassert.AssertionError=function AssertionError(options){\nthis.name='AssertionError';\nthis.actual=options.actual;\nthis.expected=options.expected;\nthis.operator=options.operator;\nif(options.message){\nthis.message=options.message;\nthis.generatedMessage=false;\n}else{\nthis.message=getMessage(this);\nthis.generatedMessage=true;\n}\nvar stackStartFunction=options.stackStartFunction||fail;\nif(Error.captureStackTrace){\nError.captureStackTrace(this,stackStartFunction);\n}else{\n// non v8 browsers so we can have a stacktrace\nvar err=new Error();\nif(err.stack){\nvar out=err.stack;\n\n// try to strip useless frames\nvar fn_name=getName(stackStartFunction);\nvar idx=out.indexOf('\\n'+fn_name);\nif(idx>=0){\n// once we have located the function frame\n// we need to strip out everything before it (and its line)\nvar next_line=out.indexOf('\\n',idx+1);\nout=out.substring(next_line+1);\n}\n\nthis.stack=out;\n}\n}\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError,Error);\n\nfunction truncate(s,n){\nif(typeof s==='string'){\nreturn s.length<n?s:s.slice(0,n);\n}else{\nreturn s;\n}\n}\nfunction inspect(something){\nif(functionsHaveNames||!util.isFunction(something)){\nreturn util.inspect(something);\n}\nvar rawname=getName(something);\nvar name=rawname?': '+rawname:'';\nreturn'[Function'+name+']';\n}\nfunction getMessage(self){\nreturn truncate(inspect(self.actual),128)+' '+\nself.operator+' '+\ntruncate(inspect(self.expected),128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual,expected,message,operator,stackStartFunction){\nthrow new assert.AssertionError({\nmessage:message,\nactual:actual,\nexpected:expected,\noperator:operator,\nstackStartFunction:stackStartFunction});\n\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail=fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value,message){\nif(!value)fail(value,true,message,'==',assert.ok);\n}\nassert.ok=ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal=function equal(actual,expected,message){\nif(actual!=expected)fail(actual,expected,message,'==',assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual=function notEqual(actual,expected,message){\nif(actual==expected){\nfail(actual,expected,message,'!=',assert.notEqual);\n}\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual=function deepEqual(actual,expected,message){\nif(!_deepEqual(actual,expected,false)){\nfail(actual,expected,message,'deepEqual',assert.deepEqual);\n}\n};\n\nassert.deepStrictEqual=function deepStrictEqual(actual,expected,message){\nif(!_deepEqual(actual,expected,true)){\nfail(actual,expected,message,'deepStrictEqual',assert.deepStrictEqual);\n}\n};\n\nfunction _deepEqual(actual,expected,strict,memos){\n// 7.1. All identical values are equivalent, as determined by ===.\nif(actual===expected){\nreturn true;\n}else if(isBuffer(actual)&&isBuffer(expected)){\nreturn compare(actual,expected)===0;\n\n// 7.2. If the expected value is a Date object, the actual value is\n// equivalent if it is also a Date object that refers to the same time.\n}else if(util.isDate(actual)&&util.isDate(expected)){\nreturn actual.getTime()===expected.getTime();\n\n// 7.3 If the expected value is a RegExp object, the actual value is\n// equivalent if it is also a RegExp object with the same source and\n// properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n}else if(util.isRegExp(actual)&&util.isRegExp(expected)){\nreturn actual.source===expected.source&&\nactual.global===expected.global&&\nactual.multiline===expected.multiline&&\nactual.lastIndex===expected.lastIndex&&\nactual.ignoreCase===expected.ignoreCase;\n\n// 7.4. Other pairs that do not both pass typeof value == 'object',\n// equivalence is determined by ==.\n}else if((actual===null||typeof actual!=='object')&&(\nexpected===null||typeof expected!=='object')){\nreturn strict?actual===expected:actual==expected;\n\n// If both values are instances of typed arrays, wrap their underlying\n// ArrayBuffers in a Buffer each to increase performance\n// This optimization requires the arrays to have the same type as checked by\n// Object.prototype.toString (aka pToString). Never perform binary\n// comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n// bit patterns are not identical.\n}else if(isView(actual)&&isView(expected)&&\npToString(actual)===pToString(expected)&&\n!(actual instanceof Float32Array||\nactual instanceof Float64Array)){\nreturn compare(new Uint8Array(actual.buffer),\nnew Uint8Array(expected.buffer))===0;\n\n// 7.5 For all other Object pairs, including Array objects, equivalence is\n// determined by having the same number of owned properties (as verified\n// with Object.prototype.hasOwnProperty.call), the same set of keys\n// (although not necessarily the same order), equivalent values for every\n// corresponding key, and an identical 'prototype' property. Note: this\n// accounts for both named and indexed properties on Arrays.\n}else if(isBuffer(actual)!==isBuffer(expected)){\nreturn false;\n}else{\nmemos=memos||{actual:[],expected:[]};\n\nvar actualIndex=memos.actual.indexOf(actual);\nif(actualIndex!==-1){\nif(actualIndex===memos.expected.indexOf(expected)){\nreturn true;\n}\n}\n\nmemos.actual.push(actual);\nmemos.expected.push(expected);\n\nreturn objEquiv(actual,expected,strict,memos);\n}\n}\n\nfunction isArguments(object){\nreturn Object.prototype.toString.call(object)=='[object Arguments]';\n}\n\nfunction objEquiv(a,b,strict,actualVisitedObjects){\nif(a===null||a===undefined||b===null||b===undefined)\nreturn false;\n// if one is a primitive, the other must be same\nif(util.isPrimitive(a)||util.isPrimitive(b))\nreturn a===b;\nif(strict&&Object.getPrototypeOf(a)!==Object.getPrototypeOf(b))\nreturn false;\nvar aIsArgs=isArguments(a);\nvar bIsArgs=isArguments(b);\nif(aIsArgs&&!bIsArgs||!aIsArgs&&bIsArgs)\nreturn false;\nif(aIsArgs){\na=pSlice.call(a);\nb=pSlice.call(b);\nreturn _deepEqual(a,b,strict);\n}\nvar ka=objectKeys(a);\nvar kb=objectKeys(b);\nvar key,i;\n// having the same number of owned properties (keys incorporates\n// hasOwnProperty)\nif(ka.length!==kb.length)\nreturn false;\n//the same set of keys (although not necessarily the same order),\nka.sort();\nkb.sort();\n//~~~cheap key test\nfor(i=ka.length-1;i>=0;i--){\nif(ka[i]!==kb[i])\nreturn false;\n}\n//equivalent values for every corresponding key, and\n//~~~possibly expensive deep test\nfor(i=ka.length-1;i>=0;i--){\nkey=ka[i];\nif(!_deepEqual(a[key],b[key],strict,actualVisitedObjects))\nreturn false;\n}\nreturn true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual=function notDeepEqual(actual,expected,message){\nif(_deepEqual(actual,expected,false)){\nfail(actual,expected,message,'notDeepEqual',assert.notDeepEqual);\n}\n};\n\nassert.notDeepStrictEqual=notDeepStrictEqual;\nfunction notDeepStrictEqual(actual,expected,message){\nif(_deepEqual(actual,expected,true)){\nfail(actual,expected,message,'notDeepStrictEqual',notDeepStrictEqual);\n}\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual=function strictEqual(actual,expected,message){\nif(actual!==expected){\nfail(actual,expected,message,'===',assert.strictEqual);\n}\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual=function notStrictEqual(actual,expected,message){\nif(actual===expected){\nfail(actual,expected,message,'!==',assert.notStrictEqual);\n}\n};\n\nfunction expectedException(actual,expected){\nif(!actual||!expected){\nreturn false;\n}\n\nif(Object.prototype.toString.call(expected)=='[object RegExp]'){\nreturn expected.test(actual);\n}\n\ntry{\nif(actual instanceof expected){\nreturn true;\n}\n}catch(e){\n// Ignore.  The instanceof check doesn't work for arrow functions.\n}\n\nif(Error.isPrototypeOf(expected)){\nreturn false;\n}\n\nreturn expected.call({},actual)===true;\n}\n\nfunction _tryBlock(block){\nvar error;\ntry{\nblock();\n}catch(e){\nerror=e;\n}\nreturn error;\n}\n\nfunction _throws(shouldThrow,block,expected,message){\nvar actual;\n\nif(typeof block!=='function'){\nthrow new TypeError('\"block\" argument must be a function');\n}\n\nif(typeof expected==='string'){\nmessage=expected;\nexpected=null;\n}\n\nactual=_tryBlock(block);\n\nmessage=(expected&&expected.name?' ('+expected.name+').':'.')+(\nmessage?' '+message:'.');\n\nif(shouldThrow&&!actual){\nfail(actual,expected,'Missing expected exception'+message);\n}\n\nvar userProvidedMessage=typeof message==='string';\nvar isUnwantedException=!shouldThrow&&util.isError(actual);\nvar isUnexpectedException=!shouldThrow&&actual&&!expected;\n\nif(isUnwantedException&&\nuserProvidedMessage&&\nexpectedException(actual,expected)||\nisUnexpectedException){\nfail(actual,expected,'Got unwanted exception'+message);\n}\n\nif(shouldThrow&&actual&&expected&&\n!expectedException(actual,expected)||!shouldThrow&&actual){\nthrow actual;\n}\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws=function(block,/*optional*/error,/*optional*/message){\n_throws(true,block,error,message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow=function(block,/*optional*/error,/*optional*/message){\n_throws(false,block,error,message);\n};\n\nassert.ifError=function(err){if(err)throw err;};\n\nvar objectKeys=Object.keys||function(obj){\nvar keys=[];\nfor(var key in obj){\nif(hasOwn.call(obj,key))keys.push(key);\n}\nreturn keys;\n};\n\n}).call(this,typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{});\n},{\"util/\":6}],4:[function(require,module,exports){\nif(typeof Object.create==='function'){\n// implementation from standard node.js 'util' module\nmodule.exports=function inherits(ctor,superCtor){\nctor.super_=superCtor;\nctor.prototype=Object.create(superCtor.prototype,{\nconstructor:{\nvalue:ctor,\nenumerable:false,\nwritable:true,\nconfigurable:true}});\n\n\n};\n}else{\n// old school shim for old browsers\nmodule.exports=function inherits(ctor,superCtor){\nctor.super_=superCtor;\nvar TempCtor=function TempCtor(){};\nTempCtor.prototype=superCtor.prototype;\nctor.prototype=new TempCtor();\nctor.prototype.constructor=ctor;\n};\n}\n\n},{}],5:[function(require,module,exports){\nmodule.exports=function isBuffer(arg){\nreturn arg&&typeof arg==='object'&&\ntypeof arg.copy==='function'&&\ntypeof arg.fill==='function'&&\ntypeof arg.readUInt8==='function';\n};\n},{}],6:[function(require,module,exports){\n(function(process,global){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp=/%[sdj%]/g;\nexports.format=function(f){\nif(!isString(f)){\nvar objects=[];\nfor(var i=0;i<arguments.length;i++){\nobjects.push(inspect(arguments[i]));\n}\nreturn objects.join(' ');\n}\n\nvar i=1;\nvar args=arguments;\nvar len=args.length;\nvar str=String(f).replace(formatRegExp,function(x){\nif(x==='%%')return'%';\nif(i>=len)return x;\nswitch(x){\ncase'%s':return String(args[i++]);\ncase'%d':return Number(args[i++]);\ncase'%j':\ntry{\nreturn JSON.stringify(args[i++]);\n}catch(_){\nreturn'[Circular]';\n}\ndefault:\nreturn x;}\n\n});\nfor(var x=args[i];i<len;x=args[++i]){\nif(isNull(x)||!isObject(x)){\nstr+=' '+x;\n}else{\nstr+=' '+inspect(x);\n}\n}\nreturn str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate=function(fn,msg){\n// Allow for deprecating things in the process of starting up.\nif(isUndefined(global.process)){\nreturn function(){\nreturn exports.deprecate(fn,msg).apply(this,arguments);\n};\n}\n\nif(process.noDeprecation===true){\nreturn fn;\n}\n\nvar warned=false;\nfunction deprecated(){\nif(!warned){\nif(process.throwDeprecation){\nthrow new Error(msg);\n}else if(process.traceDeprecation){\nconsole.trace(msg);\n}else{\nconsole.error(msg);\n}\nwarned=true;\n}\nreturn fn.apply(this,arguments);\n}\n\nreturn deprecated;\n};\n\n\nvar debugs={};\nvar debugEnviron;\nexports.debuglog=function(set){\nif(isUndefined(debugEnviron))\ndebugEnviron=process.env.NODE_DEBUG||'';\nset=set.toUpperCase();\nif(!debugs[set]){\nif(new RegExp('\\\\b'+set+'\\\\b','i').test(debugEnviron)){\nvar pid=process.pid;\ndebugs[set]=function(){\nvar msg=exports.format.apply(exports,arguments);\nconsole.error('%s %d: %s',set,pid,msg);\n};\n}else{\ndebugs[set]=function(){};\n}\n}\nreturn debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj,opts){\n// default options\nvar ctx={\nseen:[],\nstylize:stylizeNoColor};\n\n// legacy...\nif(arguments.length>=3)ctx.depth=arguments[2];\nif(arguments.length>=4)ctx.colors=arguments[3];\nif(isBoolean(opts)){\n// legacy...\nctx.showHidden=opts;\n}else if(opts){\n// got an \"options\" object\nexports._extend(ctx,opts);\n}\n// set default options\nif(isUndefined(ctx.showHidden))ctx.showHidden=false;\nif(isUndefined(ctx.depth))ctx.depth=2;\nif(isUndefined(ctx.colors))ctx.colors=false;\nif(isUndefined(ctx.customInspect))ctx.customInspect=true;\nif(ctx.colors)ctx.stylize=stylizeWithColor;\nreturn formatValue(ctx,obj,ctx.depth);\n}\nexports.inspect=inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors={\n'bold':[1,22],\n'italic':[3,23],\n'underline':[4,24],\n'inverse':[7,27],\n'white':[37,39],\n'grey':[90,39],\n'black':[30,39],\n'blue':[34,39],\n'cyan':[36,39],\n'green':[32,39],\n'magenta':[35,39],\n'red':[31,39],\n'yellow':[33,39]};\n\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles={\n'special':'cyan',\n'number':'yellow',\n'boolean':'yellow',\n'undefined':'grey',\n'null':'bold',\n'string':'green',\n'date':'magenta',\n// \"name\": intentionally not styling\n'regexp':'red'};\n\n\n\nfunction stylizeWithColor(str,styleType){\nvar style=inspect.styles[styleType];\n\nif(style){\nreturn\"\\x1B[\"+inspect.colors[style][0]+'m'+str+\n\"\\x1B[\"+inspect.colors[style][1]+'m';\n}else{\nreturn str;\n}\n}\n\n\nfunction stylizeNoColor(str,styleType){\nreturn str;\n}\n\n\nfunction arrayToHash(array){\nvar hash={};\n\narray.forEach(function(val,idx){\nhash[val]=true;\n});\n\nreturn hash;\n}\n\n\nfunction formatValue(ctx,value,recurseTimes){\n// Provide a hook for user-specified inspect functions.\n// Check that value is an object with an inspect function on it\nif(ctx.customInspect&&\nvalue&&\nisFunction(value.inspect)&&\n// Filter out the util module, it's inspect function is special\nvalue.inspect!==exports.inspect&&\n// Also filter out any prototype objects using the circular check.\n!(value.constructor&&value.constructor.prototype===value)){\nvar ret=value.inspect(recurseTimes,ctx);\nif(!isString(ret)){\nret=formatValue(ctx,ret,recurseTimes);\n}\nreturn ret;\n}\n\n// Primitive types cannot have properties\nvar primitive=formatPrimitive(ctx,value);\nif(primitive){\nreturn primitive;\n}\n\n// Look up the keys of the object.\nvar keys=Object.keys(value);\nvar visibleKeys=arrayToHash(keys);\n\nif(ctx.showHidden){\nkeys=Object.getOwnPropertyNames(value);\n}\n\n// IE doesn't make error fields non-enumerable\n// http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\nif(isError(value)&&(\nkeys.indexOf('message')>=0||keys.indexOf('description')>=0)){\nreturn formatError(value);\n}\n\n// Some type of object without properties can be shortcutted.\nif(keys.length===0){\nif(isFunction(value)){\nvar name=value.name?': '+value.name:'';\nreturn ctx.stylize('[Function'+name+']','special');\n}\nif(isRegExp(value)){\nreturn ctx.stylize(RegExp.prototype.toString.call(value),'regexp');\n}\nif(isDate(value)){\nreturn ctx.stylize(Date.prototype.toString.call(value),'date');\n}\nif(isError(value)){\nreturn formatError(value);\n}\n}\n\nvar base='',array=false,braces=['{','}'];\n\n// Make Array say that they are Array\nif(isArray(value)){\narray=true;\nbraces=['[',']'];\n}\n\n// Make functions say that they are functions\nif(isFunction(value)){\nvar n=value.name?': '+value.name:'';\nbase=' [Function'+n+']';\n}\n\n// Make RegExps say that they are RegExps\nif(isRegExp(value)){\nbase=' '+RegExp.prototype.toString.call(value);\n}\n\n// Make dates with properties first say the date\nif(isDate(value)){\nbase=' '+Date.prototype.toUTCString.call(value);\n}\n\n// Make error with message first say the error\nif(isError(value)){\nbase=' '+formatError(value);\n}\n\nif(keys.length===0&&(!array||value.length==0)){\nreturn braces[0]+base+braces[1];\n}\n\nif(recurseTimes<0){\nif(isRegExp(value)){\nreturn ctx.stylize(RegExp.prototype.toString.call(value),'regexp');\n}else{\nreturn ctx.stylize('[Object]','special');\n}\n}\n\nctx.seen.push(value);\n\nvar output;\nif(array){\noutput=formatArray(ctx,value,recurseTimes,visibleKeys,keys);\n}else{\noutput=keys.map(function(key){\nreturn formatProperty(ctx,value,recurseTimes,visibleKeys,key,array);\n});\n}\n\nctx.seen.pop();\n\nreturn reduceToSingleString(output,base,braces);\n}\n\n\nfunction formatPrimitive(ctx,value){\nif(isUndefined(value))\nreturn ctx.stylize('undefined','undefined');\nif(isString(value)){\nvar simple='\\''+JSON.stringify(value).replace(/^\"|\"$/g,'').\nreplace(/'/g,\"\\\\'\").\nreplace(/\\\\\"/g,'\"')+'\\'';\nreturn ctx.stylize(simple,'string');\n}\nif(isNumber(value))\nreturn ctx.stylize(''+value,'number');\nif(isBoolean(value))\nreturn ctx.stylize(''+value,'boolean');\n// For some reason typeof null is \"object\", so special case here.\nif(isNull(value))\nreturn ctx.stylize('null','null');\n}\n\n\nfunction formatError(value){\nreturn'['+Error.prototype.toString.call(value)+']';\n}\n\n\nfunction formatArray(ctx,value,recurseTimes,visibleKeys,keys){\nvar output=[];\nfor(var i=0,l=value.length;i<l;++i){\nif(hasOwnProperty(value,String(i))){\noutput.push(formatProperty(ctx,value,recurseTimes,visibleKeys,\nString(i),true));\n}else{\noutput.push('');\n}\n}\nkeys.forEach(function(key){\nif(!key.match(/^\\d+$/)){\noutput.push(formatProperty(ctx,value,recurseTimes,visibleKeys,\nkey,true));\n}\n});\nreturn output;\n}\n\n\nfunction formatProperty(ctx,value,recurseTimes,visibleKeys,key,array){\nvar name,str,desc;\ndesc=Object.getOwnPropertyDescriptor(value,key)||{value:value[key]};\nif(desc.get){\nif(desc.set){\nstr=ctx.stylize('[Getter/Setter]','special');\n}else{\nstr=ctx.stylize('[Getter]','special');\n}\n}else{\nif(desc.set){\nstr=ctx.stylize('[Setter]','special');\n}\n}\nif(!hasOwnProperty(visibleKeys,key)){\nname='['+key+']';\n}\nif(!str){\nif(ctx.seen.indexOf(desc.value)<0){\nif(isNull(recurseTimes)){\nstr=formatValue(ctx,desc.value,null);\n}else{\nstr=formatValue(ctx,desc.value,recurseTimes-1);\n}\nif(str.indexOf('\\n')>-1){\nif(array){\nstr=str.split('\\n').map(function(line){\nreturn'  '+line;\n}).join('\\n').substr(2);\n}else{\nstr='\\n'+str.split('\\n').map(function(line){\nreturn'   '+line;\n}).join('\\n');\n}\n}\n}else{\nstr=ctx.stylize('[Circular]','special');\n}\n}\nif(isUndefined(name)){\nif(array&&key.match(/^\\d+$/)){\nreturn str;\n}\nname=JSON.stringify(''+key);\nif(name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)){\nname=name.substr(1,name.length-2);\nname=ctx.stylize(name,'name');\n}else{\nname=name.replace(/'/g,\"\\\\'\").\nreplace(/\\\\\"/g,'\"').\nreplace(/(^\"|\"$)/g,\"'\");\nname=ctx.stylize(name,'string');\n}\n}\n\nreturn name+': '+str;\n}\n\n\nfunction reduceToSingleString(output,base,braces){\nvar numLinesEst=0;\nvar length=output.reduce(function(prev,cur){\nnumLinesEst++;\nif(cur.indexOf('\\n')>=0)numLinesEst++;\nreturn prev+cur.replace(/\\u001b\\[\\d\\d?m/g,'').length+1;\n},0);\n\nif(length>60){\nreturn braces[0]+(\nbase===''?'':base+'\\n ')+\n' '+\noutput.join(',\\n  ')+\n' '+\nbraces[1];\n}\n\nreturn braces[0]+base+' '+output.join(', ')+' '+braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar){\nreturn Array.isArray(ar);\n}\nexports.isArray=isArray;\n\nfunction isBoolean(arg){\nreturn typeof arg==='boolean';\n}\nexports.isBoolean=isBoolean;\n\nfunction isNull(arg){\nreturn arg===null;\n}\nexports.isNull=isNull;\n\nfunction isNullOrUndefined(arg){\nreturn arg==null;\n}\nexports.isNullOrUndefined=isNullOrUndefined;\n\nfunction isNumber(arg){\nreturn typeof arg==='number';\n}\nexports.isNumber=isNumber;\n\nfunction isString(arg){\nreturn typeof arg==='string';\n}\nexports.isString=isString;\n\nfunction isSymbol(arg){\nreturn typeof arg==='symbol';\n}\nexports.isSymbol=isSymbol;\n\nfunction isUndefined(arg){\nreturn arg===void 0;\n}\nexports.isUndefined=isUndefined;\n\nfunction isRegExp(re){\nreturn isObject(re)&&objectToString(re)==='[object RegExp]';\n}\nexports.isRegExp=isRegExp;\n\nfunction isObject(arg){\nreturn typeof arg==='object'&&arg!==null;\n}\nexports.isObject=isObject;\n\nfunction isDate(d){\nreturn isObject(d)&&objectToString(d)==='[object Date]';\n}\nexports.isDate=isDate;\n\nfunction isError(e){\nreturn isObject(e)&&(\nobjectToString(e)==='[object Error]'||e instanceof Error);\n}\nexports.isError=isError;\n\nfunction isFunction(arg){\nreturn typeof arg==='function';\n}\nexports.isFunction=isFunction;\n\nfunction isPrimitive(arg){\nreturn arg===null||\ntypeof arg==='boolean'||\ntypeof arg==='number'||\ntypeof arg==='string'||\ntypeof arg==='symbol'||// ES6 symbol\ntypeof arg==='undefined';\n}\nexports.isPrimitive=isPrimitive;\n\nexports.isBuffer=require('./support/isBuffer');\n\nfunction objectToString(o){\nreturn Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n){\nreturn n<10?'0'+n.toString(10):n.toString(10);\n}\n\n\nvar months=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep',\n'Oct','Nov','Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp(){\nvar d=new Date();\nvar time=[pad(d.getHours()),\npad(d.getMinutes()),\npad(d.getSeconds())].join(':');\nreturn[d.getDate(),months[d.getMonth()],time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log=function(){\nconsole.log('%s - %s',timestamp(),exports.format.apply(exports,arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits=require('inherits');\n\nexports._extend=function(origin,add){\n// Don't do anything if add isn't an object\nif(!add||!isObject(add))return origin;\n\nvar keys=Object.keys(add);\nvar i=keys.length;\nwhile(i--){\norigin[keys[i]]=add[keys[i]];\n}\nreturn origin;\n};\n\nfunction hasOwnProperty(obj,prop){\nreturn Object.prototype.hasOwnProperty.call(obj,prop);\n}\n\n}).call(this,require('_process'),typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{});\n},{\"./support/isBuffer\":5,\"_process\":223,\"inherits\":4}],7:[function(require,module,exports){\n'use strict';\n\nexports.byteLength=byteLength;\nexports.toByteArray=toByteArray;\nexports.fromByteArray=fromByteArray;\n\nvar lookup=[];\nvar revLookup=[];\nvar Arr=typeof Uint8Array!=='undefined'?Uint8Array:Array;\n\nvar code='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nfor(var i=0,len=code.length;i<len;++i){\nlookup[i]=code[i];\nrevLookup[code.charCodeAt(i)]=i;\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)]=62;\nrevLookup['_'.charCodeAt(0)]=63;\n\nfunction getLens(b64){\nvar len=b64.length;\n\nif(len%4>0){\nthrow new Error('Invalid string. Length must be a multiple of 4');\n}\n\n// Trim off extra bytes after placeholder bytes are found\n// See: https://github.com/beatgammit/base64-js/issues/42\nvar validLen=b64.indexOf('=');\nif(validLen===-1)validLen=len;\n\nvar placeHoldersLen=validLen===len?\n0:\n4-validLen%4;\n\nreturn[validLen,placeHoldersLen];\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength(b64){\nvar lens=getLens(b64);\nvar validLen=lens[0];\nvar placeHoldersLen=lens[1];\nreturn(validLen+placeHoldersLen)*3/4-placeHoldersLen;\n}\n\nfunction _byteLength(b64,validLen,placeHoldersLen){\nreturn(validLen+placeHoldersLen)*3/4-placeHoldersLen;\n}\n\nfunction toByteArray(b64){\nvar tmp;\nvar lens=getLens(b64);\nvar validLen=lens[0];\nvar placeHoldersLen=lens[1];\n\nvar arr=new Arr(_byteLength(b64,validLen,placeHoldersLen));\n\nvar curByte=0;\n\n// if there are placeholders, only get up to the last complete 4 chars\nvar len=placeHoldersLen>0?\nvalidLen-4:\nvalidLen;\n\nfor(var i=0;i<len;i+=4){\ntmp=\nrevLookup[b64.charCodeAt(i)]<<18|\nrevLookup[b64.charCodeAt(i+1)]<<12|\nrevLookup[b64.charCodeAt(i+2)]<<6|\nrevLookup[b64.charCodeAt(i+3)];\narr[curByte++]=tmp>>16&0xFF;\narr[curByte++]=tmp>>8&0xFF;\narr[curByte++]=tmp&0xFF;\n}\n\nif(placeHoldersLen===2){\ntmp=\nrevLookup[b64.charCodeAt(i)]<<2|\nrevLookup[b64.charCodeAt(i+1)]>>4;\narr[curByte++]=tmp&0xFF;\n}\n\nif(placeHoldersLen===1){\ntmp=\nrevLookup[b64.charCodeAt(i)]<<10|\nrevLookup[b64.charCodeAt(i+1)]<<4|\nrevLookup[b64.charCodeAt(i+2)]>>2;\narr[curByte++]=tmp>>8&0xFF;\narr[curByte++]=tmp&0xFF;\n}\n\nreturn arr;\n}\n\nfunction tripletToBase64(num){\nreturn lookup[num>>18&0x3F]+\nlookup[num>>12&0x3F]+\nlookup[num>>6&0x3F]+\nlookup[num&0x3F];\n}\n\nfunction encodeChunk(uint8,start,end){\nvar tmp;\nvar output=[];\nfor(var i=start;i<end;i+=3){\ntmp=\n(uint8[i]<<16&0xFF0000)+(\nuint8[i+1]<<8&0xFF00)+(\nuint8[i+2]&0xFF);\noutput.push(tripletToBase64(tmp));\n}\nreturn output.join('');\n}\n\nfunction fromByteArray(uint8){\nvar tmp;\nvar len=uint8.length;\nvar extraBytes=len%3;// if we have 1 byte left, pad 2 bytes\nvar parts=[];\nvar maxChunkLength=16383;// must be multiple of 3\n\n// go through the array every three bytes, we'll deal with trailing stuff later\nfor(var i=0,len2=len-extraBytes;i<len2;i+=maxChunkLength){\nparts.push(encodeChunk(\nuint8,i,i+maxChunkLength>len2?len2:i+maxChunkLength));\n\n}\n\n// pad the end with zeros, but make sure to not forget the extra bytes\nif(extraBytes===1){\ntmp=uint8[len-1];\nparts.push(\nlookup[tmp>>2]+\nlookup[tmp<<4&0x3F]+\n'==');\n\n}else if(extraBytes===2){\ntmp=(uint8[len-2]<<8)+uint8[len-1];\nparts.push(\nlookup[tmp>>10]+\nlookup[tmp>>4&0x3F]+\nlookup[tmp<<2&0x3F]+\n'=');\n\n}\n\nreturn parts.join('');\n}\n\n},{}],8:[function(require,module,exports){\n/**\n * @author shaozilee\n *\n * support 1bit 4bit 8bit 24bit decode\n * encode with 24bit\n * \n */\n\nvar encode=require('./lib/encoder'),\ndecode=require('./lib/decoder');\n\nmodule.exports={\nencode:encode,\ndecode:decode};\n\n\n},{\"./lib/decoder\":9,\"./lib/encoder\":10}],9:[function(require,module,exports){\n(function(Buffer){\n/**\n * @author shaozilee\n *\n * Bmp format decoder,support 1bit 4bit 8bit 24bit bmp\n *\n */\n\nfunction BmpDecoder(buffer,is_with_alpha){\nthis.pos=0;\nthis.buffer=buffer;\nthis.is_with_alpha=!!is_with_alpha;\nthis.bottom_up=true;\nthis.flag=this.buffer.toString(\"utf-8\",0,this.pos+=2);\nif(this.flag!=\"BM\")throw new Error(\"Invalid BMP File\");\nthis.parseHeader();\nthis.parseRGBA();\n}\n\nBmpDecoder.prototype.parseHeader=function(){\nthis.fileSize=this.buffer.readUInt32LE(this.pos);\nthis.pos+=4;\nthis.reserved=this.buffer.readUInt32LE(this.pos);\nthis.pos+=4;\nthis.offset=this.buffer.readUInt32LE(this.pos);\nthis.pos+=4;\nthis.headerSize=this.buffer.readUInt32LE(this.pos);\nthis.pos+=4;\nthis.width=this.buffer.readUInt32LE(this.pos);\nthis.pos+=4;\nthis.height=this.buffer.readInt32LE(this.pos);\nthis.pos+=4;\nthis.planes=this.buffer.readUInt16LE(this.pos);\nthis.pos+=2;\nthis.bitPP=this.buffer.readUInt16LE(this.pos);\nthis.pos+=2;\nthis.compress=this.buffer.readUInt32LE(this.pos);\nthis.pos+=4;\nthis.rawSize=this.buffer.readUInt32LE(this.pos);\nthis.pos+=4;\nthis.hr=this.buffer.readUInt32LE(this.pos);\nthis.pos+=4;\nthis.vr=this.buffer.readUInt32LE(this.pos);\nthis.pos+=4;\nthis.colors=this.buffer.readUInt32LE(this.pos);\nthis.pos+=4;\nthis.importantColors=this.buffer.readUInt32LE(this.pos);\nthis.pos+=4;\n\nif(this.bitPP===16&&this.is_with_alpha){\nthis.bitPP=15;\n}\nif(this.bitPP<15){\nvar len=this.colors===0?1<<this.bitPP:this.colors;\nthis.palette=new Array(len);\nfor(var i=0;i<len;i++){\nvar blue=this.buffer.readUInt8(this.pos++);\nvar green=this.buffer.readUInt8(this.pos++);\nvar red=this.buffer.readUInt8(this.pos++);\nvar quad=this.buffer.readUInt8(this.pos++);\nthis.palette[i]={\nred:red,\ngreen:green,\nblue:blue,\nquad:quad};\n\n}\n}\nif(this.height<0){\nthis.height*=-1;\nthis.bottom_up=false;\n}\n\n};\n\nBmpDecoder.prototype.parseRGBA=function(){\nvar bitn=\"bit\"+this.bitPP;\nvar len=this.width*this.height*4;\nthis.data=new Buffer(len);\nthis[bitn]();\n};\n\nBmpDecoder.prototype.bit1=function(){\nvar xlen=Math.ceil(this.width/8);\nvar mode=xlen%4;\nvar y=this.height>=0?this.height-1:-this.height;\nfor(var y=this.height-1;y>=0;y--){\nvar line=this.bottom_up?y:this.height-1-y;\nfor(var x=0;x<xlen;x++){\nvar b=this.buffer.readUInt8(this.pos++);\nvar location=line*this.width*4+x*8*4;\nfor(var i=0;i<8;i++){\nif(x*8+i<this.width){\nvar rgb=this.palette[b>>7-i&0x1];\n\nthis.data[location+i*4]=0;\nthis.data[location+i*4+1]=rgb.blue;\nthis.data[location+i*4+2]=rgb.green;\nthis.data[location+i*4+3]=rgb.red;\n\n}else{\nbreak;\n}\n}\n}\n\nif(mode!=0){\nthis.pos+=4-mode;\n}\n}\n};\n\nBmpDecoder.prototype.bit4=function(){\n//RLE-4\nif(this.compress==2){var\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsetPixelData=function setPixelData(rgbIndex){\nvar rgb=this.palette[rgbIndex];\nthis.data[location]=0;\nthis.data[location+1]=rgb.blue;\nthis.data[location+2]=rgb.green;\nthis.data[location+3]=rgb.red;\nlocation+=4;\n};this.data.fill(0xff);var location=0;var lines=this.bottom_up?this.height-1:0;var low_nibble=false;//for all count of pixel\nwhile(location<this.data.length){var a=this.buffer.readUInt8(this.pos++);var b=this.buffer.readUInt8(this.pos++);//absolute mode\nif(a==0){if(b==0){//line end\nif(this.bottom_up){lines--;}else{lines++;}location=lines*this.width*4;low_nibble=false;continue;}else if(b==1){//image end\nbreak;}else if(b==2){//offset x,y\nvar x=this.buffer.readUInt8(this.pos++);var y=this.buffer.readUInt8(this.pos++);if(this.bottom_up){lines-=y;}else{lines+=y;}location+=y*this.width*4+x*4;}else{var c=this.buffer.readUInt8(this.pos++);for(var i=0;i<b;i++){if(low_nibble){setPixelData.call(this,c&0x0f);}else{setPixelData.call(this,(c&0xf0)>>4);}if(i&1&&i+1<b){c=this.buffer.readUInt8(this.pos++);}low_nibble=!low_nibble;}if((b+1>>1&1)==1){this.pos++;}}}else{//encoded mode\nfor(var i=0;i<a;i++){if(low_nibble){setPixelData.call(this,b&0x0f);}else{setPixelData.call(this,(b&0xf0)>>4);}low_nibble=!low_nibble;}}}}else{var xlen=Math.ceil(this.width/2);var mode=xlen%4;for(var y=this.height-1;y>=0;y--){var line=this.bottom_up?y:this.height-1-y;\nfor(var x=0;x<xlen;x++){\nvar b=this.buffer.readUInt8(this.pos++);\nvar location=line*this.width*4+x*2*4;\n\nvar before=b>>4;\nvar after=b&0x0F;\n\nvar rgb=this.palette[before];\nthis.data[location]=0;\nthis.data[location+1]=rgb.blue;\nthis.data[location+2]=rgb.green;\nthis.data[location+3]=rgb.red;\n\n\nif(x*2+1>=this.width)break;\n\nrgb=this.palette[after];\n\nthis.data[location+4]=0;\nthis.data[location+4+1]=rgb.blue;\nthis.data[location+4+2]=rgb.green;\nthis.data[location+4+3]=rgb.red;\n\n}\n\nif(mode!=0){\nthis.pos+=4-mode;\n}\n}\n\n}\n\n};\n\nBmpDecoder.prototype.bit8=function(){\n//RLE-8\nif(this.compress==1){var\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsetPixelData=function setPixelData(rgbIndex){\nvar rgb=this.palette[rgbIndex];\nthis.data[location]=0;\nthis.data[location+1]=rgb.blue;\nthis.data[location+2]=rgb.green;\nthis.data[location+3]=rgb.red;\nlocation+=4;\n};this.data.fill(0xff);var location=0;var lines=this.bottom_up?this.height-1:0;while(location<this.data.length){var a=this.buffer.readUInt8(this.pos++);var b=this.buffer.readUInt8(this.pos++);//absolute mode\nif(a==0){if(b==0){//line end\nif(this.bottom_up){lines--;}else{lines++;}location=lines*this.width*4;continue;}else if(b==1){//image end\nbreak;}else if(b==2){//offset x,y\nvar x=this.buffer.readUInt8(this.pos++);var y=this.buffer.readUInt8(this.pos++);if(this.bottom_up){lines-=y;}else{lines+=y;}location+=y*this.width*4+x*4;}else{for(var i=0;i<b;i++){var c=this.buffer.readUInt8(this.pos++);setPixelData.call(this,c);}if(b&1==1){this.pos++;}}}else{//encoded mode\nfor(var i=0;i<a;i++){setPixelData.call(this,b);}}}}else{var mode=this.width%4;for(var y=this.height-1;y>=0;y--){var line=this.bottom_up?y:this.height-1-y;for(var x=0;x<this.width;x++){\nvar b=this.buffer.readUInt8(this.pos++);\nvar location=line*this.width*4+x*4;\nif(b<this.palette.length){\nvar rgb=this.palette[b];\n\nthis.data[location]=0;\nthis.data[location+1]=rgb.blue;\nthis.data[location+2]=rgb.green;\nthis.data[location+3]=rgb.red;\n\n}else{\nthis.data[location]=0;\nthis.data[location+1]=0xFF;\nthis.data[location+2]=0xFF;\nthis.data[location+3]=0xFF;\n}\n}\nif(mode!=0){\nthis.pos+=4-mode;\n}\n}\n}\n};\n\nBmpDecoder.prototype.bit15=function(){\nvar dif_w=this.width%3;\nvar _11111=parseInt(\"11111\",2),_1_5=_11111;\nfor(var y=this.height-1;y>=0;y--){\nvar line=this.bottom_up?y:this.height-1-y;\nfor(var x=0;x<this.width;x++){\n\nvar B=this.buffer.readUInt16LE(this.pos);\nthis.pos+=2;\nvar blue=(B&_1_5)/_1_5*255|0;\nvar green=(B>>5&_1_5)/_1_5*255|0;\nvar red=(B>>10&_1_5)/_1_5*255|0;\nvar alpha=B>>15?0xFF:0x00;\n\nvar location=line*this.width*4+x*4;\n\nthis.data[location]=alpha;\nthis.data[location+1]=blue;\nthis.data[location+2]=green;\nthis.data[location+3]=red;\n}\n//skip extra bytes\nthis.pos+=dif_w;\n}\n};\n\nBmpDecoder.prototype.bit16=function(){\nvar dif_w=this.width%2*2;\n//default xrgb555\nthis.maskRed=0x7C00;\nthis.maskGreen=0x3E0;\nthis.maskBlue=0x1F;\nthis.mask0=0;\n\nif(this.compress==3){\nthis.maskRed=this.buffer.readUInt32LE(this.pos);\nthis.pos+=4;\nthis.maskGreen=this.buffer.readUInt32LE(this.pos);\nthis.pos+=4;\nthis.maskBlue=this.buffer.readUInt32LE(this.pos);\nthis.pos+=4;\nthis.mask0=this.buffer.readUInt32LE(this.pos);\nthis.pos+=4;\n}\n\n\nvar ns=[0,0,0];\nfor(var i=0;i<16;i++){\nif(this.maskRed>>i&0x01)ns[0]++;\nif(this.maskGreen>>i&0x01)ns[1]++;\nif(this.maskBlue>>i&0x01)ns[2]++;\n}\nns[1]+=ns[0];ns[2]+=ns[1];ns[0]=8-ns[0];ns[1]-=8;ns[2]-=8;\n\nfor(var y=this.height-1;y>=0;y--){\nvar line=this.bottom_up?y:this.height-1-y;\nfor(var x=0;x<this.width;x++){\n\nvar B=this.buffer.readUInt16LE(this.pos);\nthis.pos+=2;\n\nvar blue=(B&this.maskBlue)<<ns[0];\nvar green=(B&this.maskGreen)>>ns[1];\nvar red=(B&this.maskRed)>>ns[2];\n\nvar location=line*this.width*4+x*4;\n\nthis.data[location]=0;\nthis.data[location+1]=blue;\nthis.data[location+2]=green;\nthis.data[location+3]=red;\n}\n//skip extra bytes\nthis.pos+=dif_w;\n}\n};\n\nBmpDecoder.prototype.bit24=function(){\nfor(var y=this.height-1;y>=0;y--){\nvar line=this.bottom_up?y:this.height-1-y;\nfor(var x=0;x<this.width;x++){\n//Little Endian rgb\nvar blue=this.buffer.readUInt8(this.pos++);\nvar green=this.buffer.readUInt8(this.pos++);\nvar red=this.buffer.readUInt8(this.pos++);\nvar location=line*this.width*4+x*4;\nthis.data[location]=0;\nthis.data[location+1]=blue;\nthis.data[location+2]=green;\nthis.data[location+3]=red;\n}\n//skip extra bytes\nthis.pos+=this.width%4;\n}\n\n};\n\n/**\n * add 32bit decode func\n * @author soubok\n */\nBmpDecoder.prototype.bit32=function(){\n//BI_BITFIELDS\nif(this.compress==3){\nthis.maskRed=this.buffer.readUInt32LE(this.pos);\nthis.pos+=4;\nthis.maskGreen=this.buffer.readUInt32LE(this.pos);\nthis.pos+=4;\nthis.maskBlue=this.buffer.readUInt32LE(this.pos);\nthis.pos+=4;\nthis.mask0=this.buffer.readUInt32LE(this.pos);\nthis.pos+=4;\nfor(var y=this.height-1;y>=0;y--){\nvar line=this.bottom_up?y:this.height-1-y;\nfor(var x=0;x<this.width;x++){\n//Little Endian rgba\nvar alpha=this.buffer.readUInt8(this.pos++);\nvar blue=this.buffer.readUInt8(this.pos++);\nvar green=this.buffer.readUInt8(this.pos++);\nvar red=this.buffer.readUInt8(this.pos++);\nvar location=line*this.width*4+x*4;\nthis.data[location]=alpha;\nthis.data[location+1]=blue;\nthis.data[location+2]=green;\nthis.data[location+3]=red;\n}\n}\n\n}else{\nfor(var y=this.height-1;y>=0;y--){\nvar line=this.bottom_up?y:this.height-1-y;\nfor(var x=0;x<this.width;x++){\n//Little Endian argb\nvar blue=this.buffer.readUInt8(this.pos++);\nvar green=this.buffer.readUInt8(this.pos++);\nvar red=this.buffer.readUInt8(this.pos++);\nvar alpha=this.buffer.readUInt8(this.pos++);\nvar location=line*this.width*4+x*4;\nthis.data[location]=alpha;\nthis.data[location+1]=blue;\nthis.data[location+2]=green;\nthis.data[location+3]=red;\n}\n}\n\n}\n\n\n\n\n};\n\nBmpDecoder.prototype.getData=function(){\nreturn this.data;\n};\n\nmodule.exports=function(bmpData){\nvar decoder=new BmpDecoder(bmpData);\nreturn decoder;\n};\n\n}).call(this,require(\"buffer\").Buffer);\n},{\"buffer\":16}],10:[function(require,module,exports){\n(function(Buffer){\n/**\n * @author shaozilee\n *\n * BMP format encoder,encode 24bit BMP\n * Not support quality compression\n *\n */\n\nfunction BmpEncoder(imgData){\nthis.buffer=imgData.data;\nthis.width=imgData.width;\nthis.height=imgData.height;\nthis.extraBytes=this.width%4;\nthis.rgbSize=this.height*(3*this.width+this.extraBytes);\nthis.headerInfoSize=40;\n\nthis.data=[];\n/******************header***********************/\nthis.flag=\"BM\";\nthis.reserved=0;\nthis.offset=54;\nthis.fileSize=this.rgbSize+this.offset;\nthis.planes=1;\nthis.bitPP=24;\nthis.compress=0;\nthis.hr=0;\nthis.vr=0;\nthis.colors=0;\nthis.importantColors=0;\n}\n\nBmpEncoder.prototype.encode=function(){\nvar tempBuffer=new Buffer(this.offset+this.rgbSize);\nthis.pos=0;\ntempBuffer.write(this.flag,this.pos,2);this.pos+=2;\ntempBuffer.writeUInt32LE(this.fileSize,this.pos);this.pos+=4;\ntempBuffer.writeUInt32LE(this.reserved,this.pos);this.pos+=4;\ntempBuffer.writeUInt32LE(this.offset,this.pos);this.pos+=4;\n\ntempBuffer.writeUInt32LE(this.headerInfoSize,this.pos);this.pos+=4;\ntempBuffer.writeUInt32LE(this.width,this.pos);this.pos+=4;\ntempBuffer.writeInt32LE(-this.height,this.pos);this.pos+=4;\ntempBuffer.writeUInt16LE(this.planes,this.pos);this.pos+=2;\ntempBuffer.writeUInt16LE(this.bitPP,this.pos);this.pos+=2;\ntempBuffer.writeUInt32LE(this.compress,this.pos);this.pos+=4;\ntempBuffer.writeUInt32LE(this.rgbSize,this.pos);this.pos+=4;\ntempBuffer.writeUInt32LE(this.hr,this.pos);this.pos+=4;\ntempBuffer.writeUInt32LE(this.vr,this.pos);this.pos+=4;\ntempBuffer.writeUInt32LE(this.colors,this.pos);this.pos+=4;\ntempBuffer.writeUInt32LE(this.importantColors,this.pos);this.pos+=4;\n\nvar i=0;\nvar rowBytes=3*this.width+this.extraBytes;\n\nfor(var y=0;y<this.height;y++){\nfor(var x=0;x<this.width;x++){\nvar p=this.pos+y*rowBytes+x*3;\ni++;//a\ntempBuffer[p]=this.buffer[i++];//b\ntempBuffer[p+1]=this.buffer[i++];//g\ntempBuffer[p+2]=this.buffer[i++];//r\n}\nif(this.extraBytes>0){\nvar fillOffset=this.pos+y*rowBytes+this.width*3;\ntempBuffer.fill(0,fillOffset,fillOffset+this.extraBytes);\n}\n}\n\nreturn tempBuffer;\n};\n\nmodule.exports=function(imgData,quality){\nif(typeof quality==='undefined')quality=100;\nvar encoder=new BmpEncoder(imgData);\nvar data=encoder.encode();\nreturn{\ndata:data,\nwidth:imgData.width,\nheight:imgData.height};\n\n};\n\n}).call(this,require(\"buffer\").Buffer);\n},{\"buffer\":16}],11:[function(require,module,exports){\n\n},{}],12:[function(require,module,exports){\n(function(process,Buffer){\n'use strict';\n/* eslint camelcase: \"off\" */\n\nvar assert=require('assert');\n\nvar Zstream=require('pako/lib/zlib/zstream');\nvar zlib_deflate=require('pako/lib/zlib/deflate.js');\nvar zlib_inflate=require('pako/lib/zlib/inflate.js');\nvar constants=require('pako/lib/zlib/constants');\n\nfor(var key in constants){\nexports[key]=constants[key];\n}\n\n// zlib modes\nexports.NONE=0;\nexports.DEFLATE=1;\nexports.INFLATE=2;\nexports.GZIP=3;\nexports.GUNZIP=4;\nexports.DEFLATERAW=5;\nexports.INFLATERAW=6;\nexports.UNZIP=7;\n\nvar GZIP_HEADER_ID1=0x1f;\nvar GZIP_HEADER_ID2=0x8b;\n\n/**\n * Emulate Node's zlib C++ layer for use by the JS layer in index.js\n */\nfunction Zlib(mode){\nif(typeof mode!=='number'||mode<exports.DEFLATE||mode>exports.UNZIP){\nthrow new TypeError('Bad argument');\n}\n\nthis.dictionary=null;\nthis.err=0;\nthis.flush=0;\nthis.init_done=false;\nthis.level=0;\nthis.memLevel=0;\nthis.mode=mode;\nthis.strategy=0;\nthis.windowBits=0;\nthis.write_in_progress=false;\nthis.pending_close=false;\nthis.gzip_id_bytes_read=0;\n}\n\nZlib.prototype.close=function(){\nif(this.write_in_progress){\nthis.pending_close=true;\nreturn;\n}\n\nthis.pending_close=false;\n\nassert(this.init_done,'close before init');\nassert(this.mode<=exports.UNZIP);\n\nif(this.mode===exports.DEFLATE||this.mode===exports.GZIP||this.mode===exports.DEFLATERAW){\nzlib_deflate.deflateEnd(this.strm);\n}else if(this.mode===exports.INFLATE||this.mode===exports.GUNZIP||this.mode===exports.INFLATERAW||this.mode===exports.UNZIP){\nzlib_inflate.inflateEnd(this.strm);\n}\n\nthis.mode=exports.NONE;\n\nthis.dictionary=null;\n};\n\nZlib.prototype.write=function(flush,input,in_off,in_len,out,out_off,out_len){\nreturn this._write(true,flush,input,in_off,in_len,out,out_off,out_len);\n};\n\nZlib.prototype.writeSync=function(flush,input,in_off,in_len,out,out_off,out_len){\nreturn this._write(false,flush,input,in_off,in_len,out,out_off,out_len);\n};\n\nZlib.prototype._write=function(async,flush,input,in_off,in_len,out,out_off,out_len){\nassert.equal(arguments.length,8);\n\nassert(this.init_done,'write before init');\nassert(this.mode!==exports.NONE,'already finalized');\nassert.equal(false,this.write_in_progress,'write already in progress');\nassert.equal(false,this.pending_close,'close is pending');\n\nthis.write_in_progress=true;\n\nassert.equal(false,flush===undefined,'must provide flush value');\n\nthis.write_in_progress=true;\n\nif(flush!==exports.Z_NO_FLUSH&&flush!==exports.Z_PARTIAL_FLUSH&&flush!==exports.Z_SYNC_FLUSH&&flush!==exports.Z_FULL_FLUSH&&flush!==exports.Z_FINISH&&flush!==exports.Z_BLOCK){\nthrow new Error('Invalid flush value');\n}\n\nif(input==null){\ninput=Buffer.alloc(0);\nin_len=0;\nin_off=0;\n}\n\nthis.strm.avail_in=in_len;\nthis.strm.input=input;\nthis.strm.next_in=in_off;\nthis.strm.avail_out=out_len;\nthis.strm.output=out;\nthis.strm.next_out=out_off;\nthis.flush=flush;\n\nif(!async){\n// sync version\nthis._process();\n\nif(this._checkError()){\nreturn this._afterSync();\n}\nreturn;\n}\n\n// async version\nvar self=this;\nprocess.nextTick(function(){\nself._process();\nself._after();\n});\n\nreturn this;\n};\n\nZlib.prototype._afterSync=function(){\nvar avail_out=this.strm.avail_out;\nvar avail_in=this.strm.avail_in;\n\nthis.write_in_progress=false;\n\nreturn[avail_in,avail_out];\n};\n\nZlib.prototype._process=function(){\nvar next_expected_header_byte=null;\n\n// If the avail_out is left at 0, then it means that it ran out\n// of room.  If there was avail_out left over, then it means\n// that all of the input was consumed.\nswitch(this.mode){\ncase exports.DEFLATE:\ncase exports.GZIP:\ncase exports.DEFLATERAW:\nthis.err=zlib_deflate.deflate(this.strm,this.flush);\nbreak;\ncase exports.UNZIP:\nif(this.strm.avail_in>0){\nnext_expected_header_byte=this.strm.next_in;\n}\n\nswitch(this.gzip_id_bytes_read){\ncase 0:\nif(next_expected_header_byte===null){\nbreak;\n}\n\nif(this.strm.input[next_expected_header_byte]===GZIP_HEADER_ID1){\nthis.gzip_id_bytes_read=1;\nnext_expected_header_byte++;\n\nif(this.strm.avail_in===1){\n// The only available byte was already read.\nbreak;\n}\n}else{\nthis.mode=exports.INFLATE;\nbreak;\n}\n\n// fallthrough\ncase 1:\nif(next_expected_header_byte===null){\nbreak;\n}\n\nif(this.strm.input[next_expected_header_byte]===GZIP_HEADER_ID2){\nthis.gzip_id_bytes_read=2;\nthis.mode=exports.GUNZIP;\n}else{\n// There is no actual difference between INFLATE and INFLATERAW\n// (after initialization).\nthis.mode=exports.INFLATE;\n}\n\nbreak;\ndefault:\nthrow new Error('invalid number of gzip magic number bytes read');}\n\n\n// fallthrough\ncase exports.INFLATE:\ncase exports.GUNZIP:\ncase exports.INFLATERAW:\nthis.err=zlib_inflate.inflate(this.strm,this.flush\n\n// If data was encoded with dictionary\n);if(this.err===exports.Z_NEED_DICT&&this.dictionary){\n// Load it\nthis.err=zlib_inflate.inflateSetDictionary(this.strm,this.dictionary);\nif(this.err===exports.Z_OK){\n// And try to decode again\nthis.err=zlib_inflate.inflate(this.strm,this.flush);\n}else if(this.err===exports.Z_DATA_ERROR){\n// Both inflateSetDictionary() and inflate() return Z_DATA_ERROR.\n// Make it possible for After() to tell a bad dictionary from bad\n// input.\nthis.err=exports.Z_NEED_DICT;\n}\n}\nwhile(this.strm.avail_in>0&&this.mode===exports.GUNZIP&&this.err===exports.Z_STREAM_END&&this.strm.next_in[0]!==0x00){\n// Bytes remain in input buffer. Perhaps this is another compressed\n// member in the same archive, or just trailing garbage.\n// Trailing zero bytes are okay, though, since they are frequently\n// used for padding.\n\nthis.reset();\nthis.err=zlib_inflate.inflate(this.strm,this.flush);\n}\nbreak;\ndefault:\nthrow new Error('Unknown mode '+this.mode);}\n\n};\n\nZlib.prototype._checkError=function(){\n// Acceptable error states depend on the type of zlib stream.\nswitch(this.err){\ncase exports.Z_OK:\ncase exports.Z_BUF_ERROR:\nif(this.strm.avail_out!==0&&this.flush===exports.Z_FINISH){\nthis._error('unexpected end of file');\nreturn false;\n}\nbreak;\ncase exports.Z_STREAM_END:\n// normal statuses, not fatal\nbreak;\ncase exports.Z_NEED_DICT:\nif(this.dictionary==null){\nthis._error('Missing dictionary');\n}else{\nthis._error('Bad dictionary');\n}\nreturn false;\ndefault:\n// something else.\nthis._error('Zlib error');\nreturn false;}\n\n\nreturn true;\n};\n\nZlib.prototype._after=function(){\nif(!this._checkError()){\nreturn;\n}\n\nvar avail_out=this.strm.avail_out;\nvar avail_in=this.strm.avail_in;\n\nthis.write_in_progress=false;\n\n// call the write() cb\nthis.callback(avail_in,avail_out);\n\nif(this.pending_close){\nthis.close();\n}\n};\n\nZlib.prototype._error=function(message){\nif(this.strm.msg){\nmessage=this.strm.msg;\n}\nthis.onerror(message,this.err\n\n// no hope of rescue.\n);this.write_in_progress=false;\nif(this.pending_close){\nthis.close();\n}\n};\n\nZlib.prototype.init=function(windowBits,level,memLevel,strategy,dictionary){\nassert(arguments.length===4||arguments.length===5,'init(windowBits, level, memLevel, strategy, [dictionary])');\n\nassert(windowBits>=8&&windowBits<=15,'invalid windowBits');\nassert(level>=-1&&level<=9,'invalid compression level');\n\nassert(memLevel>=1&&memLevel<=9,'invalid memlevel');\n\nassert(strategy===exports.Z_FILTERED||strategy===exports.Z_HUFFMAN_ONLY||strategy===exports.Z_RLE||strategy===exports.Z_FIXED||strategy===exports.Z_DEFAULT_STRATEGY,'invalid strategy');\n\nthis._init(level,windowBits,memLevel,strategy,dictionary);\nthis._setDictionary();\n};\n\nZlib.prototype.params=function(){\nthrow new Error('deflateParams Not supported');\n};\n\nZlib.prototype.reset=function(){\nthis._reset();\nthis._setDictionary();\n};\n\nZlib.prototype._init=function(level,windowBits,memLevel,strategy,dictionary){\nthis.level=level;\nthis.windowBits=windowBits;\nthis.memLevel=memLevel;\nthis.strategy=strategy;\n\nthis.flush=exports.Z_NO_FLUSH;\n\nthis.err=exports.Z_OK;\n\nif(this.mode===exports.GZIP||this.mode===exports.GUNZIP){\nthis.windowBits+=16;\n}\n\nif(this.mode===exports.UNZIP){\nthis.windowBits+=32;\n}\n\nif(this.mode===exports.DEFLATERAW||this.mode===exports.INFLATERAW){\nthis.windowBits=-1*this.windowBits;\n}\n\nthis.strm=new Zstream();\n\nswitch(this.mode){\ncase exports.DEFLATE:\ncase exports.GZIP:\ncase exports.DEFLATERAW:\nthis.err=zlib_deflate.deflateInit2(this.strm,this.level,exports.Z_DEFLATED,this.windowBits,this.memLevel,this.strategy);\nbreak;\ncase exports.INFLATE:\ncase exports.GUNZIP:\ncase exports.INFLATERAW:\ncase exports.UNZIP:\nthis.err=zlib_inflate.inflateInit2(this.strm,this.windowBits);\nbreak;\ndefault:\nthrow new Error('Unknown mode '+this.mode);}\n\n\nif(this.err!==exports.Z_OK){\nthis._error('Init error');\n}\n\nthis.dictionary=dictionary;\n\nthis.write_in_progress=false;\nthis.init_done=true;\n};\n\nZlib.prototype._setDictionary=function(){\nif(this.dictionary==null){\nreturn;\n}\n\nthis.err=exports.Z_OK;\n\nswitch(this.mode){\ncase exports.DEFLATE:\ncase exports.DEFLATERAW:\nthis.err=zlib_deflate.deflateSetDictionary(this.strm,this.dictionary);\nbreak;\ndefault:\nbreak;}\n\n\nif(this.err!==exports.Z_OK){\nthis._error('Failed to set dictionary');\n}\n};\n\nZlib.prototype._reset=function(){\nthis.err=exports.Z_OK;\n\nswitch(this.mode){\ncase exports.DEFLATE:\ncase exports.DEFLATERAW:\ncase exports.GZIP:\nthis.err=zlib_deflate.deflateReset(this.strm);\nbreak;\ncase exports.INFLATE:\ncase exports.INFLATERAW:\ncase exports.GUNZIP:\nthis.err=zlib_inflate.inflateReset(this.strm);\nbreak;\ndefault:\nbreak;}\n\n\nif(this.err!==exports.Z_OK){\nthis._error('Failed to reset stream');\n}\n};\n\nexports.Zlib=Zlib;\n}).call(this,require('_process'),require(\"buffer\").Buffer);\n},{\"_process\":223,\"assert\":3,\"buffer\":16,\"pako/lib/zlib/constants\":182,\"pako/lib/zlib/deflate.js\":184,\"pako/lib/zlib/inflate.js\":187,\"pako/lib/zlib/zstream\":191}],13:[function(require,module,exports){\n(function(process){\n'use strict';\n\nvar Buffer=require('buffer').Buffer;\nvar Transform=require('stream').Transform;\nvar binding=require('./binding');\nvar util=require('util');\nvar assert=require('assert').ok;\nvar kMaxLength=require('buffer').kMaxLength;\nvar kRangeErrorMessage='Cannot create final Buffer. It would be larger '+'than 0x'+kMaxLength.toString(16)+' bytes';\n\n// zlib doesn't provide these, so kludge them in following the same\n// const naming scheme zlib uses.\nbinding.Z_MIN_WINDOWBITS=8;\nbinding.Z_MAX_WINDOWBITS=15;\nbinding.Z_DEFAULT_WINDOWBITS=15;\n\n// fewer than 64 bytes per chunk is stupid.\n// technically it could work with as few as 8, but even 64 bytes\n// is absurdly low.  Usually a MB or more is best.\nbinding.Z_MIN_CHUNK=64;\nbinding.Z_MAX_CHUNK=Infinity;\nbinding.Z_DEFAULT_CHUNK=16*1024;\n\nbinding.Z_MIN_MEMLEVEL=1;\nbinding.Z_MAX_MEMLEVEL=9;\nbinding.Z_DEFAULT_MEMLEVEL=8;\n\nbinding.Z_MIN_LEVEL=-1;\nbinding.Z_MAX_LEVEL=9;\nbinding.Z_DEFAULT_LEVEL=binding.Z_DEFAULT_COMPRESSION;\n\n// expose all the zlib constants\nvar bkeys=Object.keys(binding);\nfor(var bk=0;bk<bkeys.length;bk++){\nvar bkey=bkeys[bk];\nif(bkey.match(/^Z/)){\nObject.defineProperty(exports,bkey,{\nenumerable:true,value:binding[bkey],writable:false});\n\n}\n}\n\n// translation table for return codes.\nvar codes={\nZ_OK:binding.Z_OK,\nZ_STREAM_END:binding.Z_STREAM_END,\nZ_NEED_DICT:binding.Z_NEED_DICT,\nZ_ERRNO:binding.Z_ERRNO,\nZ_STREAM_ERROR:binding.Z_STREAM_ERROR,\nZ_DATA_ERROR:binding.Z_DATA_ERROR,\nZ_MEM_ERROR:binding.Z_MEM_ERROR,\nZ_BUF_ERROR:binding.Z_BUF_ERROR,\nZ_VERSION_ERROR:binding.Z_VERSION_ERROR};\n\n\nvar ckeys=Object.keys(codes);\nfor(var ck=0;ck<ckeys.length;ck++){\nvar ckey=ckeys[ck];\ncodes[codes[ckey]]=ckey;\n}\n\nObject.defineProperty(exports,'codes',{\nenumerable:true,value:Object.freeze(codes),writable:false});\n\n\nexports.Deflate=Deflate;\nexports.Inflate=Inflate;\nexports.Gzip=Gzip;\nexports.Gunzip=Gunzip;\nexports.DeflateRaw=DeflateRaw;\nexports.InflateRaw=InflateRaw;\nexports.Unzip=Unzip;\n\nexports.createDeflate=function(o){\nreturn new Deflate(o);\n};\n\nexports.createInflate=function(o){\nreturn new Inflate(o);\n};\n\nexports.createDeflateRaw=function(o){\nreturn new DeflateRaw(o);\n};\n\nexports.createInflateRaw=function(o){\nreturn new InflateRaw(o);\n};\n\nexports.createGzip=function(o){\nreturn new Gzip(o);\n};\n\nexports.createGunzip=function(o){\nreturn new Gunzip(o);\n};\n\nexports.createUnzip=function(o){\nreturn new Unzip(o);\n};\n\n// Convenience methods.\n// compress/decompress a string or buffer in one step.\nexports.deflate=function(buffer,opts,callback){\nif(typeof opts==='function'){\ncallback=opts;\nopts={};\n}\nreturn zlibBuffer(new Deflate(opts),buffer,callback);\n};\n\nexports.deflateSync=function(buffer,opts){\nreturn zlibBufferSync(new Deflate(opts),buffer);\n};\n\nexports.gzip=function(buffer,opts,callback){\nif(typeof opts==='function'){\ncallback=opts;\nopts={};\n}\nreturn zlibBuffer(new Gzip(opts),buffer,callback);\n};\n\nexports.gzipSync=function(buffer,opts){\nreturn zlibBufferSync(new Gzip(opts),buffer);\n};\n\nexports.deflateRaw=function(buffer,opts,callback){\nif(typeof opts==='function'){\ncallback=opts;\nopts={};\n}\nreturn zlibBuffer(new DeflateRaw(opts),buffer,callback);\n};\n\nexports.deflateRawSync=function(buffer,opts){\nreturn zlibBufferSync(new DeflateRaw(opts),buffer);\n};\n\nexports.unzip=function(buffer,opts,callback){\nif(typeof opts==='function'){\ncallback=opts;\nopts={};\n}\nreturn zlibBuffer(new Unzip(opts),buffer,callback);\n};\n\nexports.unzipSync=function(buffer,opts){\nreturn zlibBufferSync(new Unzip(opts),buffer);\n};\n\nexports.inflate=function(buffer,opts,callback){\nif(typeof opts==='function'){\ncallback=opts;\nopts={};\n}\nreturn zlibBuffer(new Inflate(opts),buffer,callback);\n};\n\nexports.inflateSync=function(buffer,opts){\nreturn zlibBufferSync(new Inflate(opts),buffer);\n};\n\nexports.gunzip=function(buffer,opts,callback){\nif(typeof opts==='function'){\ncallback=opts;\nopts={};\n}\nreturn zlibBuffer(new Gunzip(opts),buffer,callback);\n};\n\nexports.gunzipSync=function(buffer,opts){\nreturn zlibBufferSync(new Gunzip(opts),buffer);\n};\n\nexports.inflateRaw=function(buffer,opts,callback){\nif(typeof opts==='function'){\ncallback=opts;\nopts={};\n}\nreturn zlibBuffer(new InflateRaw(opts),buffer,callback);\n};\n\nexports.inflateRawSync=function(buffer,opts){\nreturn zlibBufferSync(new InflateRaw(opts),buffer);\n};\n\nfunction zlibBuffer(engine,buffer,callback){\nvar buffers=[];\nvar nread=0;\n\nengine.on('error',onError);\nengine.on('end',onEnd);\n\nengine.end(buffer);\nflow();\n\nfunction flow(){\nvar chunk;\nwhile(null!==(chunk=engine.read())){\nbuffers.push(chunk);\nnread+=chunk.length;\n}\nengine.once('readable',flow);\n}\n\nfunction onError(err){\nengine.removeListener('end',onEnd);\nengine.removeListener('readable',flow);\ncallback(err);\n}\n\nfunction onEnd(){\nvar buf;\nvar err=null;\n\nif(nread>=kMaxLength){\nerr=new RangeError(kRangeErrorMessage);\n}else{\nbuf=Buffer.concat(buffers,nread);\n}\n\nbuffers=[];\nengine.close();\ncallback(err,buf);\n}\n}\n\nfunction zlibBufferSync(engine,buffer){\nif(typeof buffer==='string')buffer=Buffer.from(buffer);\n\nif(!Buffer.isBuffer(buffer))throw new TypeError('Not a string or buffer');\n\nvar flushFlag=engine._finishFlushFlag;\n\nreturn engine._processChunk(buffer,flushFlag);\n}\n\n// generic zlib\n// minimal 2-byte header\nfunction Deflate(opts){\nif(!(this instanceof Deflate))return new Deflate(opts);\nZlib.call(this,opts,binding.DEFLATE);\n}\n\nfunction Inflate(opts){\nif(!(this instanceof Inflate))return new Inflate(opts);\nZlib.call(this,opts,binding.INFLATE);\n}\n\n// gzip - bigger header, same deflate compression\nfunction Gzip(opts){\nif(!(this instanceof Gzip))return new Gzip(opts);\nZlib.call(this,opts,binding.GZIP);\n}\n\nfunction Gunzip(opts){\nif(!(this instanceof Gunzip))return new Gunzip(opts);\nZlib.call(this,opts,binding.GUNZIP);\n}\n\n// raw - no header\nfunction DeflateRaw(opts){\nif(!(this instanceof DeflateRaw))return new DeflateRaw(opts);\nZlib.call(this,opts,binding.DEFLATERAW);\n}\n\nfunction InflateRaw(opts){\nif(!(this instanceof InflateRaw))return new InflateRaw(opts);\nZlib.call(this,opts,binding.INFLATERAW);\n}\n\n// auto-detect header.\nfunction Unzip(opts){\nif(!(this instanceof Unzip))return new Unzip(opts);\nZlib.call(this,opts,binding.UNZIP);\n}\n\nfunction isValidFlushFlag(flag){\nreturn flag===binding.Z_NO_FLUSH||flag===binding.Z_PARTIAL_FLUSH||flag===binding.Z_SYNC_FLUSH||flag===binding.Z_FULL_FLUSH||flag===binding.Z_FINISH||flag===binding.Z_BLOCK;\n}\n\n// the Zlib class they all inherit from\n// This thing manages the queue of requests, and returns\n// true or false if there is anything in the queue when\n// you call the .write() method.\n\nfunction Zlib(opts,mode){\nvar _this=this;\n\nthis._opts=opts=opts||{};\nthis._chunkSize=opts.chunkSize||exports.Z_DEFAULT_CHUNK;\n\nTransform.call(this,opts);\n\nif(opts.flush&&!isValidFlushFlag(opts.flush)){\nthrow new Error('Invalid flush flag: '+opts.flush);\n}\nif(opts.finishFlush&&!isValidFlushFlag(opts.finishFlush)){\nthrow new Error('Invalid flush flag: '+opts.finishFlush);\n}\n\nthis._flushFlag=opts.flush||binding.Z_NO_FLUSH;\nthis._finishFlushFlag=typeof opts.finishFlush!=='undefined'?opts.finishFlush:binding.Z_FINISH;\n\nif(opts.chunkSize){\nif(opts.chunkSize<exports.Z_MIN_CHUNK||opts.chunkSize>exports.Z_MAX_CHUNK){\nthrow new Error('Invalid chunk size: '+opts.chunkSize);\n}\n}\n\nif(opts.windowBits){\nif(opts.windowBits<exports.Z_MIN_WINDOWBITS||opts.windowBits>exports.Z_MAX_WINDOWBITS){\nthrow new Error('Invalid windowBits: '+opts.windowBits);\n}\n}\n\nif(opts.level){\nif(opts.level<exports.Z_MIN_LEVEL||opts.level>exports.Z_MAX_LEVEL){\nthrow new Error('Invalid compression level: '+opts.level);\n}\n}\n\nif(opts.memLevel){\nif(opts.memLevel<exports.Z_MIN_MEMLEVEL||opts.memLevel>exports.Z_MAX_MEMLEVEL){\nthrow new Error('Invalid memLevel: '+opts.memLevel);\n}\n}\n\nif(opts.strategy){\nif(opts.strategy!=exports.Z_FILTERED&&opts.strategy!=exports.Z_HUFFMAN_ONLY&&opts.strategy!=exports.Z_RLE&&opts.strategy!=exports.Z_FIXED&&opts.strategy!=exports.Z_DEFAULT_STRATEGY){\nthrow new Error('Invalid strategy: '+opts.strategy);\n}\n}\n\nif(opts.dictionary){\nif(!Buffer.isBuffer(opts.dictionary)){\nthrow new Error('Invalid dictionary: it should be a Buffer instance');\n}\n}\n\nthis._handle=new binding.Zlib(mode);\n\nvar self=this;\nthis._hadError=false;\nthis._handle.onerror=function(message,errno){\n// there is no way to cleanly recover.\n// continuing only obscures problems.\n_close(self);\nself._hadError=true;\n\nvar error=new Error(message);\nerror.errno=errno;\nerror.code=exports.codes[errno];\nself.emit('error',error);\n};\n\nvar level=exports.Z_DEFAULT_COMPRESSION;\nif(typeof opts.level==='number')level=opts.level;\n\nvar strategy=exports.Z_DEFAULT_STRATEGY;\nif(typeof opts.strategy==='number')strategy=opts.strategy;\n\nthis._handle.init(opts.windowBits||exports.Z_DEFAULT_WINDOWBITS,level,opts.memLevel||exports.Z_DEFAULT_MEMLEVEL,strategy,opts.dictionary);\n\nthis._buffer=Buffer.allocUnsafe(this._chunkSize);\nthis._offset=0;\nthis._level=level;\nthis._strategy=strategy;\n\nthis.once('end',this.close);\n\nObject.defineProperty(this,'_closed',{\nget:function get(){\nreturn!_this._handle;\n},\nconfigurable:true,\nenumerable:true});\n\n}\n\nutil.inherits(Zlib,Transform);\n\nZlib.prototype.params=function(level,strategy,callback){\nif(level<exports.Z_MIN_LEVEL||level>exports.Z_MAX_LEVEL){\nthrow new RangeError('Invalid compression level: '+level);\n}\nif(strategy!=exports.Z_FILTERED&&strategy!=exports.Z_HUFFMAN_ONLY&&strategy!=exports.Z_RLE&&strategy!=exports.Z_FIXED&&strategy!=exports.Z_DEFAULT_STRATEGY){\nthrow new TypeError('Invalid strategy: '+strategy);\n}\n\nif(this._level!==level||this._strategy!==strategy){\nvar self=this;\nthis.flush(binding.Z_SYNC_FLUSH,function(){\nassert(self._handle,'zlib binding closed');\nself._handle.params(level,strategy);\nif(!self._hadError){\nself._level=level;\nself._strategy=strategy;\nif(callback)callback();\n}\n});\n}else{\nprocess.nextTick(callback);\n}\n};\n\nZlib.prototype.reset=function(){\nassert(this._handle,'zlib binding closed');\nreturn this._handle.reset();\n};\n\n// This is the _flush function called by the transform class,\n// internally, when the last chunk has been written.\nZlib.prototype._flush=function(callback){\nthis._transform(Buffer.alloc(0),'',callback);\n};\n\nZlib.prototype.flush=function(kind,callback){\nvar _this2=this;\n\nvar ws=this._writableState;\n\nif(typeof kind==='function'||kind===undefined&&!callback){\ncallback=kind;\nkind=binding.Z_FULL_FLUSH;\n}\n\nif(ws.ended){\nif(callback)process.nextTick(callback);\n}else if(ws.ending){\nif(callback)this.once('end',callback);\n}else if(ws.needDrain){\nif(callback){\nthis.once('drain',function(){\nreturn _this2.flush(kind,callback);\n});\n}\n}else{\nthis._flushFlag=kind;\nthis.write(Buffer.alloc(0),'',callback);\n}\n};\n\nZlib.prototype.close=function(callback){\n_close(this,callback);\nprocess.nextTick(emitCloseNT,this);\n};\n\nfunction _close(engine,callback){\nif(callback)process.nextTick(callback);\n\n// Caller may invoke .close after a zlib error (which will null _handle).\nif(!engine._handle)return;\n\nengine._handle.close();\nengine._handle=null;\n}\n\nfunction emitCloseNT(self){\nself.emit('close');\n}\n\nZlib.prototype._transform=function(chunk,encoding,cb){\nvar flushFlag;\nvar ws=this._writableState;\nvar ending=ws.ending||ws.ended;\nvar last=ending&&(!chunk||ws.length===chunk.length);\n\nif(chunk!==null&&!Buffer.isBuffer(chunk))return cb(new Error('invalid input'));\n\nif(!this._handle)return cb(new Error('zlib binding closed'));\n\n// If it's the last chunk, or a final flush, we use the Z_FINISH flush flag\n// (or whatever flag was provided using opts.finishFlush).\n// If it's explicitly flushing at some other time, then we use\n// Z_FULL_FLUSH. Otherwise, use Z_NO_FLUSH for maximum compression\n// goodness.\nif(last)flushFlag=this._finishFlushFlag;else{\nflushFlag=this._flushFlag;\n// once we've flushed the last of the queue, stop flushing and\n// go back to the normal behavior.\nif(chunk.length>=ws.length){\nthis._flushFlag=this._opts.flush||binding.Z_NO_FLUSH;\n}\n}\n\nthis._processChunk(chunk,flushFlag,cb);\n};\n\nZlib.prototype._processChunk=function(chunk,flushFlag,cb){\nvar availInBefore=chunk&&chunk.length;\nvar availOutBefore=this._chunkSize-this._offset;\nvar inOff=0;\n\nvar self=this;\n\nvar async=typeof cb==='function';\n\nif(!async){\nvar buffers=[];\nvar nread=0;\n\nvar error;\nthis.on('error',function(er){\nerror=er;\n});\n\nassert(this._handle,'zlib binding closed');\ndo{\nvar res=this._handle.writeSync(flushFlag,chunk,// in\ninOff,// in_off\navailInBefore,// in_len\nthis._buffer,// out\nthis._offset,//out_off\navailOutBefore);// out_len\n}while(!this._hadError&&callback(res[0],res[1]));\n\nif(this._hadError){\nthrow error;\n}\n\nif(nread>=kMaxLength){\n_close(this);\nthrow new RangeError(kRangeErrorMessage);\n}\n\nvar buf=Buffer.concat(buffers,nread);\n_close(this);\n\nreturn buf;\n}\n\nassert(this._handle,'zlib binding closed');\nvar req=this._handle.write(flushFlag,chunk,// in\ninOff,// in_off\navailInBefore,// in_len\nthis._buffer,// out\nthis._offset,//out_off\navailOutBefore);// out_len\n\nreq.buffer=chunk;\nreq.callback=callback;\n\nfunction callback(availInAfter,availOutAfter){\n// When the callback is used in an async write, the callback's\n// context is the `req` object that was created. The req object\n// is === this._handle, and that's why it's important to null\n// out the values after they are done being used. `this._handle`\n// can stay in memory longer than the callback and buffer are needed.\nif(this){\nthis.buffer=null;\nthis.callback=null;\n}\n\nif(self._hadError)return;\n\nvar have=availOutBefore-availOutAfter;\nassert(have>=0,'have should not go down');\n\nif(have>0){\nvar out=self._buffer.slice(self._offset,self._offset+have);\nself._offset+=have;\n// serve some output to the consumer.\nif(async){\nself.push(out);\n}else{\nbuffers.push(out);\nnread+=out.length;\n}\n}\n\n// exhausted the output buffer, or used all the input create a new one.\nif(availOutAfter===0||self._offset>=self._chunkSize){\navailOutBefore=self._chunkSize;\nself._offset=0;\nself._buffer=Buffer.allocUnsafe(self._chunkSize);\n}\n\nif(availOutAfter===0){\n// Not actually done.  Need to reprocess.\n// Also, update the availInBefore to the availInAfter value,\n// so that if we have to hit it a third (fourth, etc.) time,\n// it'll have the correct byte counts.\ninOff+=availInBefore-availInAfter;\navailInBefore=availInAfter;\n\nif(!async)return true;\n\nvar newReq=self._handle.write(flushFlag,chunk,inOff,availInBefore,self._buffer,self._offset,self._chunkSize);\nnewReq.callback=callback;// this same function\nnewReq.buffer=chunk;\nreturn;\n}\n\nif(!async)return false;\n\n// finished with the chunk.\ncb();\n}\n};\n\nutil.inherits(Deflate,Zlib);\nutil.inherits(Inflate,Zlib);\nutil.inherits(Gzip,Zlib);\nutil.inherits(Gunzip,Zlib);\nutil.inherits(DeflateRaw,Zlib);\nutil.inherits(InflateRaw,Zlib);\nutil.inherits(Unzip,Zlib);\n}).call(this,require('_process'));\n},{\"./binding\":12,\"_process\":223,\"assert\":3,\"buffer\":16,\"stream\":242,\"util\":258}],14:[function(require,module,exports){\narguments[4][11][0].apply(exports,arguments);\n},{\"dup\":11}],15:[function(require,module,exports){\nvar Buffer=require('buffer').Buffer;// for use with browserify\n\nmodule.exports=function(a,b){\nif(!Buffer.isBuffer(a))return undefined;\nif(!Buffer.isBuffer(b))return undefined;\nif(typeof a.equals==='function')return a.equals(b);\nif(a.length!==b.length)return false;\n\nfor(var i=0;i<a.length;i++){\nif(a[i]!==b[i])return false;\n}\n\nreturn true;\n};\n\n},{\"buffer\":16}],16:[function(require,module,exports){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict';\n\nvar base64=require('base64-js');\nvar ieee754=require('ieee754');\n\nexports.Buffer=Buffer;\nexports.SlowBuffer=SlowBuffer;\nexports.INSPECT_MAX_BYTES=50;\n\nvar K_MAX_LENGTH=0x7fffffff;\nexports.kMaxLength=K_MAX_LENGTH;\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT=typedArraySupport();\n\nif(!Buffer.TYPED_ARRAY_SUPPORT&&typeof console!=='undefined'&&\ntypeof console.error==='function'){\nconsole.error(\n'This browser lacks typed array (Uint8Array) support which is required by '+\n'`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');\n\n}\n\nfunction typedArraySupport(){\n// Can typed array instances can be augmented?\ntry{\nvar arr=new Uint8Array(1);\narr.__proto__={__proto__:Uint8Array.prototype,foo:function foo(){return 42;}};\nreturn arr.foo()===42;\n}catch(e){\nreturn false;\n}\n}\n\nObject.defineProperty(Buffer.prototype,'parent',{\nenumerable:true,\nget:function get(){\nif(!Buffer.isBuffer(this))return undefined;\nreturn this.buffer;\n}});\n\n\nObject.defineProperty(Buffer.prototype,'offset',{\nenumerable:true,\nget:function get(){\nif(!Buffer.isBuffer(this))return undefined;\nreturn this.byteOffset;\n}});\n\n\nfunction createBuffer(length){\nif(length>K_MAX_LENGTH){\nthrow new RangeError('The value \"'+length+'\" is invalid for option \"size\"');\n}\n// Return an augmented `Uint8Array` instance\nvar buf=new Uint8Array(length);\nbuf.__proto__=Buffer.prototype;\nreturn buf;\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer(arg,encodingOrOffset,length){\n// Common case.\nif(typeof arg==='number'){\nif(typeof encodingOrOffset==='string'){\nthrow new TypeError(\n'The \"string\" argument must be of type string. Received type number');\n\n}\nreturn allocUnsafe(arg);\n}\nreturn from(arg,encodingOrOffset,length);\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif(typeof Symbol!=='undefined'&&Symbol.species!=null&&\nBuffer[Symbol.species]===Buffer){\nObject.defineProperty(Buffer,Symbol.species,{\nvalue:null,\nconfigurable:true,\nenumerable:false,\nwritable:false});\n\n}\n\nBuffer.poolSize=8192;// not used by this implementation\n\nfunction from(value,encodingOrOffset,length){\nif(typeof value==='string'){\nreturn fromString(value,encodingOrOffset);\n}\n\nif(ArrayBuffer.isView(value)){\nreturn fromArrayLike(value);\n}\n\nif(value==null){\nthrow TypeError(\n'The first argument must be one of type string, Buffer, ArrayBuffer, Array, '+\n'or Array-like Object. Received type '+typeof value);\n\n}\n\nif(isInstance(value,ArrayBuffer)||\nvalue&&isInstance(value.buffer,ArrayBuffer)){\nreturn fromArrayBuffer(value,encodingOrOffset,length);\n}\n\nif(typeof value==='number'){\nthrow new TypeError(\n'The \"value\" argument must not be of type number. Received type number');\n\n}\n\nvar valueOf=value.valueOf&&value.valueOf();\nif(valueOf!=null&&valueOf!==value){\nreturn Buffer.from(valueOf,encodingOrOffset,length);\n}\n\nvar b=fromObject(value);\nif(b)return b;\n\nif(typeof Symbol!=='undefined'&&Symbol.toPrimitive!=null&&\ntypeof value[Symbol.toPrimitive]==='function'){\nreturn Buffer.from(\nvalue[Symbol.toPrimitive]('string'),encodingOrOffset,length);\n\n}\n\nthrow new TypeError(\n'The first argument must be one of type string, Buffer, ArrayBuffer, Array, '+\n'or Array-like Object. Received type '+typeof value);\n\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from=function(value,encodingOrOffset,length){\nreturn from(value,encodingOrOffset,length);\n};\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__=Uint8Array.prototype;\nBuffer.__proto__=Uint8Array;\n\nfunction assertSize(size){\nif(typeof size!=='number'){\nthrow new TypeError('\"size\" argument must be of type number');\n}else if(size<0){\nthrow new RangeError('The value \"'+size+'\" is invalid for option \"size\"');\n}\n}\n\nfunction alloc(size,fill,encoding){\nassertSize(size);\nif(size<=0){\nreturn createBuffer(size);\n}\nif(fill!==undefined){\n// Only pay attention to encoding if it's a string. This\n// prevents accidentally sending in a number that would\n// be interpretted as a start offset.\nreturn typeof encoding==='string'?\ncreateBuffer(size).fill(fill,encoding):\ncreateBuffer(size).fill(fill);\n}\nreturn createBuffer(size);\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc=function(size,fill,encoding){\nreturn alloc(size,fill,encoding);\n};\n\nfunction allocUnsafe(size){\nassertSize(size);\nreturn createBuffer(size<0?0:checked(size)|0);\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe=function(size){\nreturn allocUnsafe(size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow=function(size){\nreturn allocUnsafe(size);\n};\n\nfunction fromString(string,encoding){\nif(typeof encoding!=='string'||encoding===''){\nencoding='utf8';\n}\n\nif(!Buffer.isEncoding(encoding)){\nthrow new TypeError('Unknown encoding: '+encoding);\n}\n\nvar length=byteLength(string,encoding)|0;\nvar buf=createBuffer(length);\n\nvar actual=buf.write(string,encoding);\n\nif(actual!==length){\n// Writing a hex string, for example, that contains invalid characters will\n// cause everything after the first invalid character to be ignored. (e.g.\n// 'abxxcd' will be treated as 'ab')\nbuf=buf.slice(0,actual);\n}\n\nreturn buf;\n}\n\nfunction fromArrayLike(array){\nvar length=array.length<0?0:checked(array.length)|0;\nvar buf=createBuffer(length);\nfor(var i=0;i<length;i+=1){\nbuf[i]=array[i]&255;\n}\nreturn buf;\n}\n\nfunction fromArrayBuffer(array,byteOffset,length){\nif(byteOffset<0||array.byteLength<byteOffset){\nthrow new RangeError('\"offset\" is outside of buffer bounds');\n}\n\nif(array.byteLength<byteOffset+(length||0)){\nthrow new RangeError('\"length\" is outside of buffer bounds');\n}\n\nvar buf;\nif(byteOffset===undefined&&length===undefined){\nbuf=new Uint8Array(array);\n}else if(length===undefined){\nbuf=new Uint8Array(array,byteOffset);\n}else{\nbuf=new Uint8Array(array,byteOffset,length);\n}\n\n// Return an augmented `Uint8Array` instance\nbuf.__proto__=Buffer.prototype;\nreturn buf;\n}\n\nfunction fromObject(obj){\nif(Buffer.isBuffer(obj)){\nvar len=checked(obj.length)|0;\nvar buf=createBuffer(len);\n\nif(buf.length===0){\nreturn buf;\n}\n\nobj.copy(buf,0,0,len);\nreturn buf;\n}\n\nif(obj.length!==undefined){\nif(typeof obj.length!=='number'||numberIsNaN(obj.length)){\nreturn createBuffer(0);\n}\nreturn fromArrayLike(obj);\n}\n\nif(obj.type==='Buffer'&&Array.isArray(obj.data)){\nreturn fromArrayLike(obj.data);\n}\n}\n\nfunction checked(length){\n// Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n// length is NaN (which is otherwise coerced to zero.)\nif(length>=K_MAX_LENGTH){\nthrow new RangeError('Attempt to allocate Buffer larger than maximum '+\n'size: 0x'+K_MAX_LENGTH.toString(16)+' bytes');\n}\nreturn length|0;\n}\n\nfunction SlowBuffer(length){\nif(+length!=length){// eslint-disable-line eqeqeq\nlength=0;\n}\nreturn Buffer.alloc(+length);\n}\n\nBuffer.isBuffer=function isBuffer(b){\nreturn b!=null&&b._isBuffer===true&&\nb!==Buffer.prototype;// so Buffer.isBuffer(Buffer.prototype) will be false\n};\n\nBuffer.compare=function compare(a,b){\nif(isInstance(a,Uint8Array))a=Buffer.from(a,a.offset,a.byteLength);\nif(isInstance(b,Uint8Array))b=Buffer.from(b,b.offset,b.byteLength);\nif(!Buffer.isBuffer(a)||!Buffer.isBuffer(b)){\nthrow new TypeError(\n'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n\n}\n\nif(a===b)return 0;\n\nvar x=a.length;\nvar y=b.length;\n\nfor(var i=0,len=Math.min(x,y);i<len;++i){\nif(a[i]!==b[i]){\nx=a[i];\ny=b[i];\nbreak;\n}\n}\n\nif(x<y)return-1;\nif(y<x)return 1;\nreturn 0;\n};\n\nBuffer.isEncoding=function isEncoding(encoding){\nswitch(String(encoding).toLowerCase()){\ncase'hex':\ncase'utf8':\ncase'utf-8':\ncase'ascii':\ncase'latin1':\ncase'binary':\ncase'base64':\ncase'ucs2':\ncase'ucs-2':\ncase'utf16le':\ncase'utf-16le':\nreturn true;\ndefault:\nreturn false;}\n\n};\n\nBuffer.concat=function concat(list,length){\nif(!Array.isArray(list)){\nthrow new TypeError('\"list\" argument must be an Array of Buffers');\n}\n\nif(list.length===0){\nreturn Buffer.alloc(0);\n}\n\nvar i;\nif(length===undefined){\nlength=0;\nfor(i=0;i<list.length;++i){\nlength+=list[i].length;\n}\n}\n\nvar buffer=Buffer.allocUnsafe(length);\nvar pos=0;\nfor(i=0;i<list.length;++i){\nvar buf=list[i];\nif(isInstance(buf,Uint8Array)){\nbuf=Buffer.from(buf);\n}\nif(!Buffer.isBuffer(buf)){\nthrow new TypeError('\"list\" argument must be an Array of Buffers');\n}\nbuf.copy(buffer,pos);\npos+=buf.length;\n}\nreturn buffer;\n};\n\nfunction byteLength(string,encoding){\nif(Buffer.isBuffer(string)){\nreturn string.length;\n}\nif(ArrayBuffer.isView(string)||isInstance(string,ArrayBuffer)){\nreturn string.byteLength;\n}\nif(typeof string!=='string'){\nthrow new TypeError(\n'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. '+\n'Received type '+typeof string);\n\n}\n\nvar len=string.length;\nvar mustMatch=arguments.length>2&&arguments[2]===true;\nif(!mustMatch&&len===0)return 0;\n\n// Use a for loop to avoid recursion\nvar loweredCase=false;\nfor(;;){\nswitch(encoding){\ncase'ascii':\ncase'latin1':\ncase'binary':\nreturn len;\ncase'utf8':\ncase'utf-8':\nreturn utf8ToBytes(string).length;\ncase'ucs2':\ncase'ucs-2':\ncase'utf16le':\ncase'utf-16le':\nreturn len*2;\ncase'hex':\nreturn len>>>1;\ncase'base64':\nreturn base64ToBytes(string).length;\ndefault:\nif(loweredCase){\nreturn mustMatch?-1:utf8ToBytes(string).length;// assume utf8\n}\nencoding=(''+encoding).toLowerCase();\nloweredCase=true;}\n\n}\n}\nBuffer.byteLength=byteLength;\n\nfunction slowToString(encoding,start,end){\nvar loweredCase=false;\n\n// No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n// property of a typed array.\n\n// This behaves neither like String nor Uint8Array in that we set start/end\n// to their upper/lower bounds if the value passed is out of range.\n// undefined is handled specially as per ECMA-262 6th Edition,\n// Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\nif(start===undefined||start<0){\nstart=0;\n}\n// Return early if start > this.length. Done here to prevent potential uint32\n// coercion fail below.\nif(start>this.length){\nreturn'';\n}\n\nif(end===undefined||end>this.length){\nend=this.length;\n}\n\nif(end<=0){\nreturn'';\n}\n\n// Force coersion to uint32. This will also coerce falsey/NaN values to 0.\nend>>>=0;\nstart>>>=0;\n\nif(end<=start){\nreturn'';\n}\n\nif(!encoding)encoding='utf8';\n\nwhile(true){\nswitch(encoding){\ncase'hex':\nreturn hexSlice(this,start,end);\n\ncase'utf8':\ncase'utf-8':\nreturn utf8Slice(this,start,end);\n\ncase'ascii':\nreturn asciiSlice(this,start,end);\n\ncase'latin1':\ncase'binary':\nreturn latin1Slice(this,start,end);\n\ncase'base64':\nreturn base64Slice(this,start,end);\n\ncase'ucs2':\ncase'ucs-2':\ncase'utf16le':\ncase'utf-16le':\nreturn utf16leSlice(this,start,end);\n\ndefault:\nif(loweredCase)throw new TypeError('Unknown encoding: '+encoding);\nencoding=(encoding+'').toLowerCase();\nloweredCase=true;}\n\n}\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer=true;\n\nfunction swap(b,n,m){\nvar i=b[n];\nb[n]=b[m];\nb[m]=i;\n}\n\nBuffer.prototype.swap16=function swap16(){\nvar len=this.length;\nif(len%2!==0){\nthrow new RangeError('Buffer size must be a multiple of 16-bits');\n}\nfor(var i=0;i<len;i+=2){\nswap(this,i,i+1);\n}\nreturn this;\n};\n\nBuffer.prototype.swap32=function swap32(){\nvar len=this.length;\nif(len%4!==0){\nthrow new RangeError('Buffer size must be a multiple of 32-bits');\n}\nfor(var i=0;i<len;i+=4){\nswap(this,i,i+3);\nswap(this,i+1,i+2);\n}\nreturn this;\n};\n\nBuffer.prototype.swap64=function swap64(){\nvar len=this.length;\nif(len%8!==0){\nthrow new RangeError('Buffer size must be a multiple of 64-bits');\n}\nfor(var i=0;i<len;i+=8){\nswap(this,i,i+7);\nswap(this,i+1,i+6);\nswap(this,i+2,i+5);\nswap(this,i+3,i+4);\n}\nreturn this;\n};\n\nBuffer.prototype.toString=function toString(){\nvar length=this.length;\nif(length===0)return'';\nif(arguments.length===0)return utf8Slice(this,0,length);\nreturn slowToString.apply(this,arguments);\n};\n\nBuffer.prototype.toLocaleString=Buffer.prototype.toString;\n\nBuffer.prototype.equals=function equals(b){\nif(!Buffer.isBuffer(b))throw new TypeError('Argument must be a Buffer');\nif(this===b)return true;\nreturn Buffer.compare(this,b)===0;\n};\n\nBuffer.prototype.inspect=function inspect(){\nvar str='';\nvar max=exports.INSPECT_MAX_BYTES;\nstr=this.toString('hex',0,max).replace(/(.{2})/g,'$1 ').trim();\nif(this.length>max)str+=' ... ';\nreturn'<Buffer '+str+'>';\n};\n\nBuffer.prototype.compare=function compare(target,start,end,thisStart,thisEnd){\nif(isInstance(target,Uint8Array)){\ntarget=Buffer.from(target,target.offset,target.byteLength);\n}\nif(!Buffer.isBuffer(target)){\nthrow new TypeError(\n'The \"target\" argument must be one of type Buffer or Uint8Array. '+\n'Received type '+typeof target);\n\n}\n\nif(start===undefined){\nstart=0;\n}\nif(end===undefined){\nend=target?target.length:0;\n}\nif(thisStart===undefined){\nthisStart=0;\n}\nif(thisEnd===undefined){\nthisEnd=this.length;\n}\n\nif(start<0||end>target.length||thisStart<0||thisEnd>this.length){\nthrow new RangeError('out of range index');\n}\n\nif(thisStart>=thisEnd&&start>=end){\nreturn 0;\n}\nif(thisStart>=thisEnd){\nreturn-1;\n}\nif(start>=end){\nreturn 1;\n}\n\nstart>>>=0;\nend>>>=0;\nthisStart>>>=0;\nthisEnd>>>=0;\n\nif(this===target)return 0;\n\nvar x=thisEnd-thisStart;\nvar y=end-start;\nvar len=Math.min(x,y);\n\nvar thisCopy=this.slice(thisStart,thisEnd);\nvar targetCopy=target.slice(start,end);\n\nfor(var i=0;i<len;++i){\nif(thisCopy[i]!==targetCopy[i]){\nx=thisCopy[i];\ny=targetCopy[i];\nbreak;\n}\n}\n\nif(x<y)return-1;\nif(y<x)return 1;\nreturn 0;\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf(buffer,val,byteOffset,encoding,dir){\n// Empty buffer means no match\nif(buffer.length===0)return-1;\n\n// Normalize byteOffset\nif(typeof byteOffset==='string'){\nencoding=byteOffset;\nbyteOffset=0;\n}else if(byteOffset>0x7fffffff){\nbyteOffset=0x7fffffff;\n}else if(byteOffset<-0x80000000){\nbyteOffset=-0x80000000;\n}\nbyteOffset=+byteOffset;// Coerce to Number.\nif(numberIsNaN(byteOffset)){\n// byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\nbyteOffset=dir?0:buffer.length-1;\n}\n\n// Normalize byteOffset: negative offsets start from the end of the buffer\nif(byteOffset<0)byteOffset=buffer.length+byteOffset;\nif(byteOffset>=buffer.length){\nif(dir)return-1;else\nbyteOffset=buffer.length-1;\n}else if(byteOffset<0){\nif(dir)byteOffset=0;else\nreturn-1;\n}\n\n// Normalize val\nif(typeof val==='string'){\nval=Buffer.from(val,encoding);\n}\n\n// Finally, search either indexOf (if dir is true) or lastIndexOf\nif(Buffer.isBuffer(val)){\n// Special case: looking for empty string/buffer always fails\nif(val.length===0){\nreturn-1;\n}\nreturn arrayIndexOf(buffer,val,byteOffset,encoding,dir);\n}else if(typeof val==='number'){\nval=val&0xFF;// Search for a byte value [0-255]\nif(typeof Uint8Array.prototype.indexOf==='function'){\nif(dir){\nreturn Uint8Array.prototype.indexOf.call(buffer,val,byteOffset);\n}else{\nreturn Uint8Array.prototype.lastIndexOf.call(buffer,val,byteOffset);\n}\n}\nreturn arrayIndexOf(buffer,[val],byteOffset,encoding,dir);\n}\n\nthrow new TypeError('val must be string, number or Buffer');\n}\n\nfunction arrayIndexOf(arr,val,byteOffset,encoding,dir){\nvar indexSize=1;\nvar arrLength=arr.length;\nvar valLength=val.length;\n\nif(encoding!==undefined){\nencoding=String(encoding).toLowerCase();\nif(encoding==='ucs2'||encoding==='ucs-2'||\nencoding==='utf16le'||encoding==='utf-16le'){\nif(arr.length<2||val.length<2){\nreturn-1;\n}\nindexSize=2;\narrLength/=2;\nvalLength/=2;\nbyteOffset/=2;\n}\n}\n\nfunction read(buf,i){\nif(indexSize===1){\nreturn buf[i];\n}else{\nreturn buf.readUInt16BE(i*indexSize);\n}\n}\n\nvar i;\nif(dir){\nvar foundIndex=-1;\nfor(i=byteOffset;i<arrLength;i++){\nif(read(arr,i)===read(val,foundIndex===-1?0:i-foundIndex)){\nif(foundIndex===-1)foundIndex=i;\nif(i-foundIndex+1===valLength)return foundIndex*indexSize;\n}else{\nif(foundIndex!==-1)i-=i-foundIndex;\nfoundIndex=-1;\n}\n}\n}else{\nif(byteOffset+valLength>arrLength)byteOffset=arrLength-valLength;\nfor(i=byteOffset;i>=0;i--){\nvar found=true;\nfor(var j=0;j<valLength;j++){\nif(read(arr,i+j)!==read(val,j)){\nfound=false;\nbreak;\n}\n}\nif(found)return i;\n}\n}\n\nreturn-1;\n}\n\nBuffer.prototype.includes=function includes(val,byteOffset,encoding){\nreturn this.indexOf(val,byteOffset,encoding)!==-1;\n};\n\nBuffer.prototype.indexOf=function indexOf(val,byteOffset,encoding){\nreturn bidirectionalIndexOf(this,val,byteOffset,encoding,true);\n};\n\nBuffer.prototype.lastIndexOf=function lastIndexOf(val,byteOffset,encoding){\nreturn bidirectionalIndexOf(this,val,byteOffset,encoding,false);\n};\n\nfunction hexWrite(buf,string,offset,length){\noffset=Number(offset)||0;\nvar remaining=buf.length-offset;\nif(!length){\nlength=remaining;\n}else{\nlength=Number(length);\nif(length>remaining){\nlength=remaining;\n}\n}\n\nvar strLen=string.length;\n\nif(length>strLen/2){\nlength=strLen/2;\n}\nfor(var i=0;i<length;++i){\nvar parsed=parseInt(string.substr(i*2,2),16);\nif(numberIsNaN(parsed))return i;\nbuf[offset+i]=parsed;\n}\nreturn i;\n}\n\nfunction utf8Write(buf,string,offset,length){\nreturn blitBuffer(utf8ToBytes(string,buf.length-offset),buf,offset,length);\n}\n\nfunction asciiWrite(buf,string,offset,length){\nreturn blitBuffer(asciiToBytes(string),buf,offset,length);\n}\n\nfunction latin1Write(buf,string,offset,length){\nreturn asciiWrite(buf,string,offset,length);\n}\n\nfunction base64Write(buf,string,offset,length){\nreturn blitBuffer(base64ToBytes(string),buf,offset,length);\n}\n\nfunction ucs2Write(buf,string,offset,length){\nreturn blitBuffer(utf16leToBytes(string,buf.length-offset),buf,offset,length);\n}\n\nBuffer.prototype.write=function write(string,offset,length,encoding){\n// Buffer#write(string)\nif(offset===undefined){\nencoding='utf8';\nlength=this.length;\noffset=0;\n// Buffer#write(string, encoding)\n}else if(length===undefined&&typeof offset==='string'){\nencoding=offset;\nlength=this.length;\noffset=0;\n// Buffer#write(string, offset[, length][, encoding])\n}else if(isFinite(offset)){\noffset=offset>>>0;\nif(isFinite(length)){\nlength=length>>>0;\nif(encoding===undefined)encoding='utf8';\n}else{\nencoding=length;\nlength=undefined;\n}\n}else{\nthrow new Error(\n'Buffer.write(string, encoding, offset[, length]) is no longer supported');\n\n}\n\nvar remaining=this.length-offset;\nif(length===undefined||length>remaining)length=remaining;\n\nif(string.length>0&&(length<0||offset<0)||offset>this.length){\nthrow new RangeError('Attempt to write outside buffer bounds');\n}\n\nif(!encoding)encoding='utf8';\n\nvar loweredCase=false;\nfor(;;){\nswitch(encoding){\ncase'hex':\nreturn hexWrite(this,string,offset,length);\n\ncase'utf8':\ncase'utf-8':\nreturn utf8Write(this,string,offset,length);\n\ncase'ascii':\nreturn asciiWrite(this,string,offset,length);\n\ncase'latin1':\ncase'binary':\nreturn latin1Write(this,string,offset,length);\n\ncase'base64':\n// Warning: maxLength not taken into account in base64Write\nreturn base64Write(this,string,offset,length);\n\ncase'ucs2':\ncase'ucs-2':\ncase'utf16le':\ncase'utf-16le':\nreturn ucs2Write(this,string,offset,length);\n\ndefault:\nif(loweredCase)throw new TypeError('Unknown encoding: '+encoding);\nencoding=(''+encoding).toLowerCase();\nloweredCase=true;}\n\n}\n};\n\nBuffer.prototype.toJSON=function toJSON(){\nreturn{\ntype:'Buffer',\ndata:Array.prototype.slice.call(this._arr||this,0)};\n\n};\n\nfunction base64Slice(buf,start,end){\nif(start===0&&end===buf.length){\nreturn base64.fromByteArray(buf);\n}else{\nreturn base64.fromByteArray(buf.slice(start,end));\n}\n}\n\nfunction utf8Slice(buf,start,end){\nend=Math.min(buf.length,end);\nvar res=[];\n\nvar i=start;\nwhile(i<end){\nvar firstByte=buf[i];\nvar codePoint=null;\nvar bytesPerSequence=firstByte>0xEF?4:\nfirstByte>0xDF?3:\nfirstByte>0xBF?2:\n1;\n\nif(i+bytesPerSequence<=end){\nvar secondByte,thirdByte,fourthByte,tempCodePoint;\n\nswitch(bytesPerSequence){\ncase 1:\nif(firstByte<0x80){\ncodePoint=firstByte;\n}\nbreak;\ncase 2:\nsecondByte=buf[i+1];\nif((secondByte&0xC0)===0x80){\ntempCodePoint=(firstByte&0x1F)<<0x6|secondByte&0x3F;\nif(tempCodePoint>0x7F){\ncodePoint=tempCodePoint;\n}\n}\nbreak;\ncase 3:\nsecondByte=buf[i+1];\nthirdByte=buf[i+2];\nif((secondByte&0xC0)===0x80&&(thirdByte&0xC0)===0x80){\ntempCodePoint=(firstByte&0xF)<<0xC|(secondByte&0x3F)<<0x6|thirdByte&0x3F;\nif(tempCodePoint>0x7FF&&(tempCodePoint<0xD800||tempCodePoint>0xDFFF)){\ncodePoint=tempCodePoint;\n}\n}\nbreak;\ncase 4:\nsecondByte=buf[i+1];\nthirdByte=buf[i+2];\nfourthByte=buf[i+3];\nif((secondByte&0xC0)===0x80&&(thirdByte&0xC0)===0x80&&(fourthByte&0xC0)===0x80){\ntempCodePoint=(firstByte&0xF)<<0x12|(secondByte&0x3F)<<0xC|(thirdByte&0x3F)<<0x6|fourthByte&0x3F;\nif(tempCodePoint>0xFFFF&&tempCodePoint<0x110000){\ncodePoint=tempCodePoint;\n}\n}}\n\n}\n\nif(codePoint===null){\n// we did not generate a valid codePoint so insert a\n// replacement char (U+FFFD) and advance only 1 byte\ncodePoint=0xFFFD;\nbytesPerSequence=1;\n}else if(codePoint>0xFFFF){\n// encode to utf16 (surrogate pair dance)\ncodePoint-=0x10000;\nres.push(codePoint>>>10&0x3FF|0xD800);\ncodePoint=0xDC00|codePoint&0x3FF;\n}\n\nres.push(codePoint);\ni+=bytesPerSequence;\n}\n\nreturn decodeCodePointsArray(res);\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH=0x1000;\n\nfunction decodeCodePointsArray(codePoints){\nvar len=codePoints.length;\nif(len<=MAX_ARGUMENTS_LENGTH){\nreturn String.fromCharCode.apply(String,codePoints);// avoid extra slice()\n}\n\n// Decode in chunks to avoid \"call stack size exceeded\".\nvar res='';\nvar i=0;\nwhile(i<len){\nres+=String.fromCharCode.apply(\nString,\ncodePoints.slice(i,i+=MAX_ARGUMENTS_LENGTH));\n\n}\nreturn res;\n}\n\nfunction asciiSlice(buf,start,end){\nvar ret='';\nend=Math.min(buf.length,end);\n\nfor(var i=start;i<end;++i){\nret+=String.fromCharCode(buf[i]&0x7F);\n}\nreturn ret;\n}\n\nfunction latin1Slice(buf,start,end){\nvar ret='';\nend=Math.min(buf.length,end);\n\nfor(var i=start;i<end;++i){\nret+=String.fromCharCode(buf[i]);\n}\nreturn ret;\n}\n\nfunction hexSlice(buf,start,end){\nvar len=buf.length;\n\nif(!start||start<0)start=0;\nif(!end||end<0||end>len)end=len;\n\nvar out='';\nfor(var i=start;i<end;++i){\nout+=toHex(buf[i]);\n}\nreturn out;\n}\n\nfunction utf16leSlice(buf,start,end){\nvar bytes=buf.slice(start,end);\nvar res='';\nfor(var i=0;i<bytes.length;i+=2){\nres+=String.fromCharCode(bytes[i]+bytes[i+1]*256);\n}\nreturn res;\n}\n\nBuffer.prototype.slice=function slice(start,end){\nvar len=this.length;\nstart=~~start;\nend=end===undefined?len:~~end;\n\nif(start<0){\nstart+=len;\nif(start<0)start=0;\n}else if(start>len){\nstart=len;\n}\n\nif(end<0){\nend+=len;\nif(end<0)end=0;\n}else if(end>len){\nend=len;\n}\n\nif(end<start)end=start;\n\nvar newBuf=this.subarray(start,end);\n// Return an augmented `Uint8Array` instance\nnewBuf.__proto__=Buffer.prototype;\nreturn newBuf;\n};\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset(offset,ext,length){\nif(offset%1!==0||offset<0)throw new RangeError('offset is not uint');\nif(offset+ext>length)throw new RangeError('Trying to access beyond buffer length');\n}\n\nBuffer.prototype.readUIntLE=function readUIntLE(offset,byteLength,noAssert){\noffset=offset>>>0;\nbyteLength=byteLength>>>0;\nif(!noAssert)checkOffset(offset,byteLength,this.length);\n\nvar val=this[offset];\nvar mul=1;\nvar i=0;\nwhile(++i<byteLength&&(mul*=0x100)){\nval+=this[offset+i]*mul;\n}\n\nreturn val;\n};\n\nBuffer.prototype.readUIntBE=function readUIntBE(offset,byteLength,noAssert){\noffset=offset>>>0;\nbyteLength=byteLength>>>0;\nif(!noAssert){\ncheckOffset(offset,byteLength,this.length);\n}\n\nvar val=this[offset+--byteLength];\nvar mul=1;\nwhile(byteLength>0&&(mul*=0x100)){\nval+=this[offset+--byteLength]*mul;\n}\n\nreturn val;\n};\n\nBuffer.prototype.readUInt8=function readUInt8(offset,noAssert){\noffset=offset>>>0;\nif(!noAssert)checkOffset(offset,1,this.length);\nreturn this[offset];\n};\n\nBuffer.prototype.readUInt16LE=function readUInt16LE(offset,noAssert){\noffset=offset>>>0;\nif(!noAssert)checkOffset(offset,2,this.length);\nreturn this[offset]|this[offset+1]<<8;\n};\n\nBuffer.prototype.readUInt16BE=function readUInt16BE(offset,noAssert){\noffset=offset>>>0;\nif(!noAssert)checkOffset(offset,2,this.length);\nreturn this[offset]<<8|this[offset+1];\n};\n\nBuffer.prototype.readUInt32LE=function readUInt32LE(offset,noAssert){\noffset=offset>>>0;\nif(!noAssert)checkOffset(offset,4,this.length);\n\nreturn(this[offset]|\nthis[offset+1]<<8|\nthis[offset+2]<<16)+\nthis[offset+3]*0x1000000;\n};\n\nBuffer.prototype.readUInt32BE=function readUInt32BE(offset,noAssert){\noffset=offset>>>0;\nif(!noAssert)checkOffset(offset,4,this.length);\n\nreturn this[offset]*0x1000000+(\nthis[offset+1]<<16|\nthis[offset+2]<<8|\nthis[offset+3]);\n};\n\nBuffer.prototype.readIntLE=function readIntLE(offset,byteLength,noAssert){\noffset=offset>>>0;\nbyteLength=byteLength>>>0;\nif(!noAssert)checkOffset(offset,byteLength,this.length);\n\nvar val=this[offset];\nvar mul=1;\nvar i=0;\nwhile(++i<byteLength&&(mul*=0x100)){\nval+=this[offset+i]*mul;\n}\nmul*=0x80;\n\nif(val>=mul)val-=Math.pow(2,8*byteLength);\n\nreturn val;\n};\n\nBuffer.prototype.readIntBE=function readIntBE(offset,byteLength,noAssert){\noffset=offset>>>0;\nbyteLength=byteLength>>>0;\nif(!noAssert)checkOffset(offset,byteLength,this.length);\n\nvar i=byteLength;\nvar mul=1;\nvar val=this[offset+--i];\nwhile(i>0&&(mul*=0x100)){\nval+=this[offset+--i]*mul;\n}\nmul*=0x80;\n\nif(val>=mul)val-=Math.pow(2,8*byteLength);\n\nreturn val;\n};\n\nBuffer.prototype.readInt8=function readInt8(offset,noAssert){\noffset=offset>>>0;\nif(!noAssert)checkOffset(offset,1,this.length);\nif(!(this[offset]&0x80))return this[offset];\nreturn(0xff-this[offset]+1)*-1;\n};\n\nBuffer.prototype.readInt16LE=function readInt16LE(offset,noAssert){\noffset=offset>>>0;\nif(!noAssert)checkOffset(offset,2,this.length);\nvar val=this[offset]|this[offset+1]<<8;\nreturn val&0x8000?val|0xFFFF0000:val;\n};\n\nBuffer.prototype.readInt16BE=function readInt16BE(offset,noAssert){\noffset=offset>>>0;\nif(!noAssert)checkOffset(offset,2,this.length);\nvar val=this[offset+1]|this[offset]<<8;\nreturn val&0x8000?val|0xFFFF0000:val;\n};\n\nBuffer.prototype.readInt32LE=function readInt32LE(offset,noAssert){\noffset=offset>>>0;\nif(!noAssert)checkOffset(offset,4,this.length);\n\nreturn this[offset]|\nthis[offset+1]<<8|\nthis[offset+2]<<16|\nthis[offset+3]<<24;\n};\n\nBuffer.prototype.readInt32BE=function readInt32BE(offset,noAssert){\noffset=offset>>>0;\nif(!noAssert)checkOffset(offset,4,this.length);\n\nreturn this[offset]<<24|\nthis[offset+1]<<16|\nthis[offset+2]<<8|\nthis[offset+3];\n};\n\nBuffer.prototype.readFloatLE=function readFloatLE(offset,noAssert){\noffset=offset>>>0;\nif(!noAssert)checkOffset(offset,4,this.length);\nreturn ieee754.read(this,offset,true,23,4);\n};\n\nBuffer.prototype.readFloatBE=function readFloatBE(offset,noAssert){\noffset=offset>>>0;\nif(!noAssert)checkOffset(offset,4,this.length);\nreturn ieee754.read(this,offset,false,23,4);\n};\n\nBuffer.prototype.readDoubleLE=function readDoubleLE(offset,noAssert){\noffset=offset>>>0;\nif(!noAssert)checkOffset(offset,8,this.length);\nreturn ieee754.read(this,offset,true,52,8);\n};\n\nBuffer.prototype.readDoubleBE=function readDoubleBE(offset,noAssert){\noffset=offset>>>0;\nif(!noAssert)checkOffset(offset,8,this.length);\nreturn ieee754.read(this,offset,false,52,8);\n};\n\nfunction checkInt(buf,value,offset,ext,max,min){\nif(!Buffer.isBuffer(buf))throw new TypeError('\"buffer\" argument must be a Buffer instance');\nif(value>max||value<min)throw new RangeError('\"value\" argument is out of bounds');\nif(offset+ext>buf.length)throw new RangeError('Index out of range');\n}\n\nBuffer.prototype.writeUIntLE=function writeUIntLE(value,offset,byteLength,noAssert){\nvalue=+value;\noffset=offset>>>0;\nbyteLength=byteLength>>>0;\nif(!noAssert){\nvar maxBytes=Math.pow(2,8*byteLength)-1;\ncheckInt(this,value,offset,byteLength,maxBytes,0);\n}\n\nvar mul=1;\nvar i=0;\nthis[offset]=value&0xFF;\nwhile(++i<byteLength&&(mul*=0x100)){\nthis[offset+i]=value/mul&0xFF;\n}\n\nreturn offset+byteLength;\n};\n\nBuffer.prototype.writeUIntBE=function writeUIntBE(value,offset,byteLength,noAssert){\nvalue=+value;\noffset=offset>>>0;\nbyteLength=byteLength>>>0;\nif(!noAssert){\nvar maxBytes=Math.pow(2,8*byteLength)-1;\ncheckInt(this,value,offset,byteLength,maxBytes,0);\n}\n\nvar i=byteLength-1;\nvar mul=1;\nthis[offset+i]=value&0xFF;\nwhile(--i>=0&&(mul*=0x100)){\nthis[offset+i]=value/mul&0xFF;\n}\n\nreturn offset+byteLength;\n};\n\nBuffer.prototype.writeUInt8=function writeUInt8(value,offset,noAssert){\nvalue=+value;\noffset=offset>>>0;\nif(!noAssert)checkInt(this,value,offset,1,0xff,0);\nthis[offset]=value&0xff;\nreturn offset+1;\n};\n\nBuffer.prototype.writeUInt16LE=function writeUInt16LE(value,offset,noAssert){\nvalue=+value;\noffset=offset>>>0;\nif(!noAssert)checkInt(this,value,offset,2,0xffff,0);\nthis[offset]=value&0xff;\nthis[offset+1]=value>>>8;\nreturn offset+2;\n};\n\nBuffer.prototype.writeUInt16BE=function writeUInt16BE(value,offset,noAssert){\nvalue=+value;\noffset=offset>>>0;\nif(!noAssert)checkInt(this,value,offset,2,0xffff,0);\nthis[offset]=value>>>8;\nthis[offset+1]=value&0xff;\nreturn offset+2;\n};\n\nBuffer.prototype.writeUInt32LE=function writeUInt32LE(value,offset,noAssert){\nvalue=+value;\noffset=offset>>>0;\nif(!noAssert)checkInt(this,value,offset,4,0xffffffff,0);\nthis[offset+3]=value>>>24;\nthis[offset+2]=value>>>16;\nthis[offset+1]=value>>>8;\nthis[offset]=value&0xff;\nreturn offset+4;\n};\n\nBuffer.prototype.writeUInt32BE=function writeUInt32BE(value,offset,noAssert){\nvalue=+value;\noffset=offset>>>0;\nif(!noAssert)checkInt(this,value,offset,4,0xffffffff,0);\nthis[offset]=value>>>24;\nthis[offset+1]=value>>>16;\nthis[offset+2]=value>>>8;\nthis[offset+3]=value&0xff;\nreturn offset+4;\n};\n\nBuffer.prototype.writeIntLE=function writeIntLE(value,offset,byteLength,noAssert){\nvalue=+value;\noffset=offset>>>0;\nif(!noAssert){\nvar limit=Math.pow(2,8*byteLength-1);\n\ncheckInt(this,value,offset,byteLength,limit-1,-limit);\n}\n\nvar i=0;\nvar mul=1;\nvar sub=0;\nthis[offset]=value&0xFF;\nwhile(++i<byteLength&&(mul*=0x100)){\nif(value<0&&sub===0&&this[offset+i-1]!==0){\nsub=1;\n}\nthis[offset+i]=(value/mul>>0)-sub&0xFF;\n}\n\nreturn offset+byteLength;\n};\n\nBuffer.prototype.writeIntBE=function writeIntBE(value,offset,byteLength,noAssert){\nvalue=+value;\noffset=offset>>>0;\nif(!noAssert){\nvar limit=Math.pow(2,8*byteLength-1);\n\ncheckInt(this,value,offset,byteLength,limit-1,-limit);\n}\n\nvar i=byteLength-1;\nvar mul=1;\nvar sub=0;\nthis[offset+i]=value&0xFF;\nwhile(--i>=0&&(mul*=0x100)){\nif(value<0&&sub===0&&this[offset+i+1]!==0){\nsub=1;\n}\nthis[offset+i]=(value/mul>>0)-sub&0xFF;\n}\n\nreturn offset+byteLength;\n};\n\nBuffer.prototype.writeInt8=function writeInt8(value,offset,noAssert){\nvalue=+value;\noffset=offset>>>0;\nif(!noAssert)checkInt(this,value,offset,1,0x7f,-0x80);\nif(value<0)value=0xff+value+1;\nthis[offset]=value&0xff;\nreturn offset+1;\n};\n\nBuffer.prototype.writeInt16LE=function writeInt16LE(value,offset,noAssert){\nvalue=+value;\noffset=offset>>>0;\nif(!noAssert)checkInt(this,value,offset,2,0x7fff,-0x8000);\nthis[offset]=value&0xff;\nthis[offset+1]=value>>>8;\nreturn offset+2;\n};\n\nBuffer.prototype.writeInt16BE=function writeInt16BE(value,offset,noAssert){\nvalue=+value;\noffset=offset>>>0;\nif(!noAssert)checkInt(this,value,offset,2,0x7fff,-0x8000);\nthis[offset]=value>>>8;\nthis[offset+1]=value&0xff;\nreturn offset+2;\n};\n\nBuffer.prototype.writeInt32LE=function writeInt32LE(value,offset,noAssert){\nvalue=+value;\noffset=offset>>>0;\nif(!noAssert)checkInt(this,value,offset,4,0x7fffffff,-0x80000000);\nthis[offset]=value&0xff;\nthis[offset+1]=value>>>8;\nthis[offset+2]=value>>>16;\nthis[offset+3]=value>>>24;\nreturn offset+4;\n};\n\nBuffer.prototype.writeInt32BE=function writeInt32BE(value,offset,noAssert){\nvalue=+value;\noffset=offset>>>0;\nif(!noAssert)checkInt(this,value,offset,4,0x7fffffff,-0x80000000);\nif(value<0)value=0xffffffff+value+1;\nthis[offset]=value>>>24;\nthis[offset+1]=value>>>16;\nthis[offset+2]=value>>>8;\nthis[offset+3]=value&0xff;\nreturn offset+4;\n};\n\nfunction checkIEEE754(buf,value,offset,ext,max,min){\nif(offset+ext>buf.length)throw new RangeError('Index out of range');\nif(offset<0)throw new RangeError('Index out of range');\n}\n\nfunction writeFloat(buf,value,offset,littleEndian,noAssert){\nvalue=+value;\noffset=offset>>>0;\nif(!noAssert){\ncheckIEEE754(buf,value,offset,4,3.4028234663852886e+38,-3.4028234663852886e+38);\n}\nieee754.write(buf,value,offset,littleEndian,23,4);\nreturn offset+4;\n}\n\nBuffer.prototype.writeFloatLE=function writeFloatLE(value,offset,noAssert){\nreturn writeFloat(this,value,offset,true,noAssert);\n};\n\nBuffer.prototype.writeFloatBE=function writeFloatBE(value,offset,noAssert){\nreturn writeFloat(this,value,offset,false,noAssert);\n};\n\nfunction writeDouble(buf,value,offset,littleEndian,noAssert){\nvalue=+value;\noffset=offset>>>0;\nif(!noAssert){\ncheckIEEE754(buf,value,offset,8,1.7976931348623157E+308,-1.7976931348623157E+308);\n}\nieee754.write(buf,value,offset,littleEndian,52,8);\nreturn offset+8;\n}\n\nBuffer.prototype.writeDoubleLE=function writeDoubleLE(value,offset,noAssert){\nreturn writeDouble(this,value,offset,true,noAssert);\n};\n\nBuffer.prototype.writeDoubleBE=function writeDoubleBE(value,offset,noAssert){\nreturn writeDouble(this,value,offset,false,noAssert);\n};\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy=function copy(target,targetStart,start,end){\nif(!Buffer.isBuffer(target))throw new TypeError('argument should be a Buffer');\nif(!start)start=0;\nif(!end&&end!==0)end=this.length;\nif(targetStart>=target.length)targetStart=target.length;\nif(!targetStart)targetStart=0;\nif(end>0&&end<start)end=start;\n\n// Copy 0 bytes; we're done\nif(end===start)return 0;\nif(target.length===0||this.length===0)return 0;\n\n// Fatal error conditions\nif(targetStart<0){\nthrow new RangeError('targetStart out of bounds');\n}\nif(start<0||start>=this.length)throw new RangeError('Index out of range');\nif(end<0)throw new RangeError('sourceEnd out of bounds');\n\n// Are we oob?\nif(end>this.length)end=this.length;\nif(target.length-targetStart<end-start){\nend=target.length-targetStart+start;\n}\n\nvar len=end-start;\n\nif(this===target&&typeof Uint8Array.prototype.copyWithin==='function'){\n// Use built-in when available, missing from IE11\nthis.copyWithin(targetStart,start,end);\n}else if(this===target&&start<targetStart&&targetStart<end){\n// descending copy from end\nfor(var i=len-1;i>=0;--i){\ntarget[i+targetStart]=this[i+start];\n}\n}else{\nUint8Array.prototype.set.call(\ntarget,\nthis.subarray(start,end),\ntargetStart);\n\n}\n\nreturn len;\n};\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill=function fill(val,start,end,encoding){\n// Handle string cases:\nif(typeof val==='string'){\nif(typeof start==='string'){\nencoding=start;\nstart=0;\nend=this.length;\n}else if(typeof end==='string'){\nencoding=end;\nend=this.length;\n}\nif(encoding!==undefined&&typeof encoding!=='string'){\nthrow new TypeError('encoding must be a string');\n}\nif(typeof encoding==='string'&&!Buffer.isEncoding(encoding)){\nthrow new TypeError('Unknown encoding: '+encoding);\n}\nif(val.length===1){\nvar code=val.charCodeAt(0);\nif(encoding==='utf8'&&code<128||\nencoding==='latin1'){\n// Fast path: If `val` fits into a single byte, use that numeric value.\nval=code;\n}\n}\n}else if(typeof val==='number'){\nval=val&255;\n}\n\n// Invalid ranges are not set to a default, so can range check early.\nif(start<0||this.length<start||this.length<end){\nthrow new RangeError('Out of range index');\n}\n\nif(end<=start){\nreturn this;\n}\n\nstart=start>>>0;\nend=end===undefined?this.length:end>>>0;\n\nif(!val)val=0;\n\nvar i;\nif(typeof val==='number'){\nfor(i=start;i<end;++i){\nthis[i]=val;\n}\n}else{\nvar bytes=Buffer.isBuffer(val)?\nval:\nBuffer.from(val,encoding);\nvar len=bytes.length;\nif(len===0){\nthrow new TypeError('The value \"'+val+\n'\" is invalid for argument \"value\"');\n}\nfor(i=0;i<end-start;++i){\nthis[i+start]=bytes[i%len];\n}\n}\n\nreturn this;\n};\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE=/[^+/0-9A-Za-z-_]/g;\n\nfunction base64clean(str){\n// Node takes equal signs as end of the Base64 encoding\nstr=str.split('=')[0];\n// Node strips out invalid characters like \\n and \\t from the string, base64-js does not\nstr=str.trim().replace(INVALID_BASE64_RE,'');\n// Node converts strings with length < 2 to ''\nif(str.length<2)return'';\n// Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\nwhile(str.length%4!==0){\nstr=str+'=';\n}\nreturn str;\n}\n\nfunction toHex(n){\nif(n<16)return'0'+n.toString(16);\nreturn n.toString(16);\n}\n\nfunction utf8ToBytes(string,units){\nunits=units||Infinity;\nvar codePoint;\nvar length=string.length;\nvar leadSurrogate=null;\nvar bytes=[];\n\nfor(var i=0;i<length;++i){\ncodePoint=string.charCodeAt(i);\n\n// is surrogate component\nif(codePoint>0xD7FF&&codePoint<0xE000){\n// last char was a lead\nif(!leadSurrogate){\n// no lead yet\nif(codePoint>0xDBFF){\n// unexpected trail\nif((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);\ncontinue;\n}else if(i+1===length){\n// unpaired lead\nif((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);\ncontinue;\n}\n\n// valid lead\nleadSurrogate=codePoint;\n\ncontinue;\n}\n\n// 2 leads in a row\nif(codePoint<0xDC00){\nif((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);\nleadSurrogate=codePoint;\ncontinue;\n}\n\n// valid surrogate pair\ncodePoint=(leadSurrogate-0xD800<<10|codePoint-0xDC00)+0x10000;\n}else if(leadSurrogate){\n// valid bmp char, but last char was a lead\nif((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);\n}\n\nleadSurrogate=null;\n\n// encode utf8\nif(codePoint<0x80){\nif((units-=1)<0)break;\nbytes.push(codePoint);\n}else if(codePoint<0x800){\nif((units-=2)<0)break;\nbytes.push(\ncodePoint>>0x6|0xC0,\ncodePoint&0x3F|0x80);\n\n}else if(codePoint<0x10000){\nif((units-=3)<0)break;\nbytes.push(\ncodePoint>>0xC|0xE0,\ncodePoint>>0x6&0x3F|0x80,\ncodePoint&0x3F|0x80);\n\n}else if(codePoint<0x110000){\nif((units-=4)<0)break;\nbytes.push(\ncodePoint>>0x12|0xF0,\ncodePoint>>0xC&0x3F|0x80,\ncodePoint>>0x6&0x3F|0x80,\ncodePoint&0x3F|0x80);\n\n}else{\nthrow new Error('Invalid code point');\n}\n}\n\nreturn bytes;\n}\n\nfunction asciiToBytes(str){\nvar byteArray=[];\nfor(var i=0;i<str.length;++i){\n// Node's code seems to be doing this and not & 0x7F..\nbyteArray.push(str.charCodeAt(i)&0xFF);\n}\nreturn byteArray;\n}\n\nfunction utf16leToBytes(str,units){\nvar c,hi,lo;\nvar byteArray=[];\nfor(var i=0;i<str.length;++i){\nif((units-=2)<0)break;\n\nc=str.charCodeAt(i);\nhi=c>>8;\nlo=c%256;\nbyteArray.push(lo);\nbyteArray.push(hi);\n}\n\nreturn byteArray;\n}\n\nfunction base64ToBytes(str){\nreturn base64.toByteArray(base64clean(str));\n}\n\nfunction blitBuffer(src,dst,offset,length){\nfor(var i=0;i<length;++i){\nif(i+offset>=dst.length||i>=src.length)break;\ndst[i+offset]=src[i];\n}\nreturn i;\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance(obj,type){\nreturn obj instanceof type||\nobj!=null&&obj.constructor!=null&&obj.constructor.name!=null&&\nobj.constructor.name===type.name;\n}\nfunction numberIsNaN(obj){\n// For IE11 support\nreturn obj!==obj;// eslint-disable-line no-self-compare\n}\n\n},{\"base64-js\":7,\"ieee754\":165}],17:[function(require,module,exports){\nmodule.exports={\n\"100\":\"Continue\",\n\"101\":\"Switching Protocols\",\n\"102\":\"Processing\",\n\"200\":\"OK\",\n\"201\":\"Created\",\n\"202\":\"Accepted\",\n\"203\":\"Non-Authoritative Information\",\n\"204\":\"No Content\",\n\"205\":\"Reset Content\",\n\"206\":\"Partial Content\",\n\"207\":\"Multi-Status\",\n\"208\":\"Already Reported\",\n\"226\":\"IM Used\",\n\"300\":\"Multiple Choices\",\n\"301\":\"Moved Permanently\",\n\"302\":\"Found\",\n\"303\":\"See Other\",\n\"304\":\"Not Modified\",\n\"305\":\"Use Proxy\",\n\"307\":\"Temporary Redirect\",\n\"308\":\"Permanent Redirect\",\n\"400\":\"Bad Request\",\n\"401\":\"Unauthorized\",\n\"402\":\"Payment Required\",\n\"403\":\"Forbidden\",\n\"404\":\"Not Found\",\n\"405\":\"Method Not Allowed\",\n\"406\":\"Not Acceptable\",\n\"407\":\"Proxy Authentication Required\",\n\"408\":\"Request Timeout\",\n\"409\":\"Conflict\",\n\"410\":\"Gone\",\n\"411\":\"Length Required\",\n\"412\":\"Precondition Failed\",\n\"413\":\"Payload Too Large\",\n\"414\":\"URI Too Long\",\n\"415\":\"Unsupported Media Type\",\n\"416\":\"Range Not Satisfiable\",\n\"417\":\"Expectation Failed\",\n\"418\":\"I'm a teapot\",\n\"421\":\"Misdirected Request\",\n\"422\":\"Unprocessable Entity\",\n\"423\":\"Locked\",\n\"424\":\"Failed Dependency\",\n\"425\":\"Unordered Collection\",\n\"426\":\"Upgrade Required\",\n\"428\":\"Precondition Required\",\n\"429\":\"Too Many Requests\",\n\"431\":\"Request Header Fields Too Large\",\n\"451\":\"Unavailable For Legal Reasons\",\n\"500\":\"Internal Server Error\",\n\"501\":\"Not Implemented\",\n\"502\":\"Bad Gateway\",\n\"503\":\"Service Unavailable\",\n\"504\":\"Gateway Timeout\",\n\"505\":\"HTTP Version Not Supported\",\n\"506\":\"Variant Also Negotiates\",\n\"507\":\"Insufficient Storage\",\n\"508\":\"Loop Detected\",\n\"509\":\"Bandwidth Limit Exceeded\",\n\"510\":\"Not Extended\",\n\"511\":\"Network Authentication Required\"};\n\n\n},{}],18:[function(require,module,exports){\nmodule.exports=function(it){\nif(typeof it!='function')throw TypeError(it+' is not a function!');\nreturn it;\n};\n\n},{}],19:[function(require,module,exports){\n// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES=require('./_wks')('unscopables');\nvar ArrayProto=Array.prototype;\nif(ArrayProto[UNSCOPABLES]==undefined)require('./_hide')(ArrayProto,UNSCOPABLES,{});\nmodule.exports=function(key){\nArrayProto[UNSCOPABLES][key]=true;\n};\n\n},{\"./_hide\":47,\"./_wks\":112}],20:[function(require,module,exports){\nmodule.exports=function(it,Constructor,name,forbiddenField){\nif(!(it instanceof Constructor)||forbiddenField!==undefined&&forbiddenField in it){\nthrow TypeError(name+': incorrect invocation!');\n}return it;\n};\n\n},{}],21:[function(require,module,exports){\nvar isObject=require('./_is-object');\nmodule.exports=function(it){\nif(!isObject(it))throw TypeError(it+' is not an object!');\nreturn it;\n};\n\n},{\"./_is-object\":55}],22:[function(require,module,exports){\n// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\n'use strict';\nvar toObject=require('./_to-object');\nvar toAbsoluteIndex=require('./_to-absolute-index');\nvar toLength=require('./_to-length');\n\nmodule.exports=[].copyWithin||function copyWithin(target/* = 0 */,start/* = 0, end = @length */){\nvar O=toObject(this);\nvar len=toLength(O.length);\nvar to=toAbsoluteIndex(target,len);\nvar from=toAbsoluteIndex(start,len);\nvar end=arguments.length>2?arguments[2]:undefined;\nvar count=Math.min((end===undefined?len:toAbsoluteIndex(end,len))-from,len-to);\nvar inc=1;\nif(from<to&&to<from+count){\ninc=-1;\nfrom+=count-1;\nto+=count-1;\n}\nwhile(count-->0){\nif(from in O)O[to]=O[from];else\ndelete O[to];\nto+=inc;\nfrom+=inc;\n}return O;\n};\n\n},{\"./_to-absolute-index\":98,\"./_to-length\":102,\"./_to-object\":103}],23:[function(require,module,exports){\n// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject=require('./_to-object');\nvar toAbsoluteIndex=require('./_to-absolute-index');\nvar toLength=require('./_to-length');\nmodule.exports=function fill(value/* , start = 0, end = @length */){\nvar O=toObject(this);\nvar length=toLength(O.length);\nvar aLen=arguments.length;\nvar index=toAbsoluteIndex(aLen>1?arguments[1]:undefined,length);\nvar end=aLen>2?arguments[2]:undefined;\nvar endPos=end===undefined?length:toAbsoluteIndex(end,length);\nwhile(endPos>index){O[index++]=value;}\nreturn O;\n};\n\n},{\"./_to-absolute-index\":98,\"./_to-length\":102,\"./_to-object\":103}],24:[function(require,module,exports){\n// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject=require('./_to-iobject');\nvar toLength=require('./_to-length');\nvar toAbsoluteIndex=require('./_to-absolute-index');\nmodule.exports=function(IS_INCLUDES){\nreturn function($this,el,fromIndex){\nvar O=toIObject($this);\nvar length=toLength(O.length);\nvar index=toAbsoluteIndex(fromIndex,length);\nvar value;\n// Array#includes uses SameValueZero equality algorithm\n// eslint-disable-next-line no-self-compare\nif(IS_INCLUDES&&el!=el)while(length>index){\nvalue=O[index++];\n// eslint-disable-next-line no-self-compare\nif(value!=value)return true;\n// Array#indexOf ignores holes, Array#includes - not\n}else for(;length>index;index++){if(IS_INCLUDES||index in O){\nif(O[index]===el)return IS_INCLUDES||index||0;\n}}return!IS_INCLUDES&&-1;\n};\n};\n\n},{\"./_to-absolute-index\":98,\"./_to-iobject\":101,\"./_to-length\":102}],25:[function(require,module,exports){\n// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx=require('./_ctx');\nvar IObject=require('./_iobject');\nvar toObject=require('./_to-object');\nvar toLength=require('./_to-length');\nvar asc=require('./_array-species-create');\nmodule.exports=function(TYPE,$create){\nvar IS_MAP=TYPE==1;\nvar IS_FILTER=TYPE==2;\nvar IS_SOME=TYPE==3;\nvar IS_EVERY=TYPE==4;\nvar IS_FIND_INDEX=TYPE==6;\nvar NO_HOLES=TYPE==5||IS_FIND_INDEX;\nvar create=$create||asc;\nreturn function($this,callbackfn,that){\nvar O=toObject($this);\nvar self=IObject(O);\nvar f=ctx(callbackfn,that,3);\nvar length=toLength(self.length);\nvar index=0;\nvar result=IS_MAP?create($this,length):IS_FILTER?create($this,0):undefined;\nvar val,res;\nfor(;length>index;index++){if(NO_HOLES||index in self){\nval=self[index];\nres=f(val,index,O);\nif(TYPE){\nif(IS_MAP)result[index]=res;// map\nelse if(res)switch(TYPE){\ncase 3:return true;// some\ncase 5:return val;// find\ncase 6:return index;// findIndex\ncase 2:result.push(val);// filter\n}else if(IS_EVERY)return false;// every\n}\n}}\nreturn IS_FIND_INDEX?-1:IS_SOME||IS_EVERY?IS_EVERY:result;\n};\n};\n\n},{\"./_array-species-create\":27,\"./_ctx\":33,\"./_iobject\":52,\"./_to-length\":102,\"./_to-object\":103}],26:[function(require,module,exports){\nvar isObject=require('./_is-object');\nvar isArray=require('./_is-array');\nvar SPECIES=require('./_wks')('species');\n\nmodule.exports=function(original){\nvar C;\nif(isArray(original)){\nC=original.constructor;\n// cross-realm fallback\nif(typeof C=='function'&&(C===Array||isArray(C.prototype)))C=undefined;\nif(isObject(C)){\nC=C[SPECIES];\nif(C===null)C=undefined;\n}\n}return C===undefined?Array:C;\n};\n\n},{\"./_is-array\":54,\"./_is-object\":55,\"./_wks\":112}],27:[function(require,module,exports){\n// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor=require('./_array-species-constructor');\n\nmodule.exports=function(original,length){\nreturn new(speciesConstructor(original))(length);\n};\n\n},{\"./_array-species-constructor\":26}],28:[function(require,module,exports){\n'use strict';\nvar aFunction=require('./_a-function');\nvar isObject=require('./_is-object');\nvar invoke=require('./_invoke');\nvar arraySlice=[].slice;\nvar factories={};\n\nvar construct=function construct(F,len,args){\nif(!(len in factories)){\nfor(var n=[],i=0;i<len;i++){n[i]='a['+i+']';}\n// eslint-disable-next-line no-new-func\nfactories[len]=Function('F,a','return new F('+n.join(',')+')');\n}return factories[len](F,args);\n};\n\nmodule.exports=Function.bind||function bind(that/* , ...args */){\nvar fn=aFunction(this);\nvar partArgs=arraySlice.call(arguments,1);\nvar bound=function bound()/* args... */{\nvar args=partArgs.concat(arraySlice.call(arguments));\nreturn this instanceof bound?construct(fn,args.length,args):invoke(fn,args,that);\n};\nif(isObject(fn.prototype))bound.prototype=fn.prototype;\nreturn bound;\n};\n\n},{\"./_a-function\":18,\"./_invoke\":51,\"./_is-object\":55}],29:[function(require,module,exports){\n// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof=require('./_cof');\nvar TAG=require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG=cof(function(){return arguments;}())=='Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet=function tryGet(it,key){\ntry{\nreturn it[key];\n}catch(e){/* empty */}\n};\n\nmodule.exports=function(it){\nvar O,T,B;\nreturn it===undefined?'Undefined':it===null?'Null'\n// @@toStringTag case\n:typeof(T=tryGet(O=Object(it),TAG))=='string'?T\n// builtinTag case\n:ARG?cof(O)\n// ES3 arguments fallback\n:(B=cof(O))=='Object'&&typeof O.callee=='function'?'Arguments':B;\n};\n\n},{\"./_cof\":30,\"./_wks\":112}],30:[function(require,module,exports){\nvar toString={}.toString;\n\nmodule.exports=function(it){\nreturn toString.call(it).slice(8,-1);\n};\n\n},{}],31:[function(require,module,exports){\nvar core=module.exports={version:'2.5.7'};\nif(typeof __e=='number')__e=core;// eslint-disable-line no-undef\n\n},{}],32:[function(require,module,exports){\n'use strict';\nvar $defineProperty=require('./_object-dp');\nvar createDesc=require('./_property-desc');\n\nmodule.exports=function(object,index,value){\nif(index in object)$defineProperty.f(object,index,createDesc(0,value));else\nobject[index]=value;\n};\n\n},{\"./_object-dp\":69,\"./_property-desc\":83}],33:[function(require,module,exports){\n// optional / simple context binding\nvar aFunction=require('./_a-function');\nmodule.exports=function(fn,that,length){\naFunction(fn);\nif(that===undefined)return fn;\nswitch(length){\ncase 1:return function(a){\nreturn fn.call(that,a);\n};\ncase 2:return function(a,b){\nreturn fn.call(that,a,b);\n};\ncase 3:return function(a,b,c){\nreturn fn.call(that,a,b,c);\n};}\n\nreturn function()/* ...args */{\nreturn fn.apply(that,arguments);\n};\n};\n\n},{\"./_a-function\":18}],34:[function(require,module,exports){\n// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports=function(it){\nif(it==undefined)throw TypeError(\"Can't call method on  \"+it);\nreturn it;\n};\n\n},{}],35:[function(require,module,exports){\n// Thank's IE8 for his funny defineProperty\nmodule.exports=!require('./_fails')(function(){\nreturn Object.defineProperty({},'a',{get:function get(){return 7;}}).a!=7;\n});\n\n},{\"./_fails\":41}],36:[function(require,module,exports){\nvar isObject=require('./_is-object');\nvar document=require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is=isObject(document)&&isObject(document.createElement);\nmodule.exports=function(it){\nreturn is?document.createElement(it):{};\n};\n\n},{\"./_global\":45,\"./_is-object\":55}],37:[function(require,module,exports){\n// IE 8- don't enum bug keys\nmodule.exports=\n'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.\nsplit(',');\n\n},{}],38:[function(require,module,exports){\n// all enumerable object keys, includes symbols\nvar getKeys=require('./_object-keys');\nvar gOPS=require('./_object-gops');\nvar pIE=require('./_object-pie');\nmodule.exports=function(it){\nvar result=getKeys(it);\nvar getSymbols=gOPS.f;\nif(getSymbols){\nvar symbols=getSymbols(it);\nvar isEnum=pIE.f;\nvar i=0;\nvar key;\nwhile(symbols.length>i){if(isEnum.call(it,key=symbols[i++]))result.push(key);}\n}return result;\n};\n\n},{\"./_object-gops\":74,\"./_object-keys\":77,\"./_object-pie\":78}],39:[function(require,module,exports){\nvar global=require('./_global');\nvar core=require('./_core');\nvar hide=require('./_hide');\nvar redefine=require('./_redefine');\nvar ctx=require('./_ctx');\nvar PROTOTYPE='prototype';\n\nvar $export=function $export(type,name,source){\nvar IS_FORCED=type&$export.F;\nvar IS_GLOBAL=type&$export.G;\nvar IS_STATIC=type&$export.S;\nvar IS_PROTO=type&$export.P;\nvar IS_BIND=type&$export.B;\nvar target=IS_GLOBAL?global:IS_STATIC?global[name]||(global[name]={}):(global[name]||{})[PROTOTYPE];\nvar exports=IS_GLOBAL?core:core[name]||(core[name]={});\nvar expProto=exports[PROTOTYPE]||(exports[PROTOTYPE]={});\nvar key,own,out,exp;\nif(IS_GLOBAL)source=name;\nfor(key in source){\n// contains in native\nown=!IS_FORCED&&target&&target[key]!==undefined;\n// export native or passed\nout=(own?target:source)[key];\n// bind timers to global for call from export context\nexp=IS_BIND&&own?ctx(out,global):IS_PROTO&&typeof out=='function'?ctx(Function.call,out):out;\n// extend global\nif(target)redefine(target,key,out,type&$export.U);\n// export\nif(exports[key]!=out)hide(exports,key,exp);\nif(IS_PROTO&&expProto[key]!=out)expProto[key]=out;\n}\n};\nglobal.core=core;\n// type bitmap\n$export.F=1;// forced\n$export.G=2;// global\n$export.S=4;// static\n$export.P=8;// proto\n$export.B=16;// bind\n$export.W=32;// wrap\n$export.U=64;// safe\n$export.R=128;// real proto method for `library`\nmodule.exports=$export;\n\n},{\"./_core\":31,\"./_ctx\":33,\"./_global\":45,\"./_hide\":47,\"./_redefine\":85}],40:[function(require,module,exports){\nvar MATCH=require('./_wks')('match');\nmodule.exports=function(KEY){\nvar re=/./;\ntry{\n'/./'[KEY](re);\n}catch(e){\ntry{\nre[MATCH]=false;\nreturn!'/./'[KEY](re);\n}catch(f){/* empty */}\n}return true;\n};\n\n},{\"./_wks\":112}],41:[function(require,module,exports){\nmodule.exports=function(exec){\ntry{\nreturn!!exec();\n}catch(e){\nreturn true;\n}\n};\n\n},{}],42:[function(require,module,exports){\n'use strict';\nvar hide=require('./_hide');\nvar redefine=require('./_redefine');\nvar fails=require('./_fails');\nvar defined=require('./_defined');\nvar wks=require('./_wks');\n\nmodule.exports=function(KEY,length,exec){\nvar SYMBOL=wks(KEY);\nvar fns=exec(defined,SYMBOL,''[KEY]);\nvar strfn=fns[0];\nvar rxfn=fns[1];\nif(fails(function(){\nvar O={};\nO[SYMBOL]=function(){return 7;};\nreturn''[KEY](O)!=7;\n})){\nredefine(String.prototype,KEY,strfn);\nhide(RegExp.prototype,SYMBOL,length==2\n// 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n// 21.2.5.11 RegExp.prototype[@@split](string, limit)\n?function(string,arg){return rxfn.call(string,this,arg);}\n// 21.2.5.6 RegExp.prototype[@@match](string)\n// 21.2.5.9 RegExp.prototype[@@search](string)\n:function(string){return rxfn.call(string,this);});\n\n}\n};\n\n},{\"./_defined\":34,\"./_fails\":41,\"./_hide\":47,\"./_redefine\":85,\"./_wks\":112}],43:[function(require,module,exports){\n'use strict';\n// 21.2.5.3 get RegExp.prototype.flags\nvar anObject=require('./_an-object');\nmodule.exports=function(){\nvar that=anObject(this);\nvar result='';\nif(that.global)result+='g';\nif(that.ignoreCase)result+='i';\nif(that.multiline)result+='m';\nif(that.unicode)result+='u';\nif(that.sticky)result+='y';\nreturn result;\n};\n\n},{\"./_an-object\":21}],44:[function(require,module,exports){\nvar ctx=require('./_ctx');\nvar call=require('./_iter-call');\nvar isArrayIter=require('./_is-array-iter');\nvar anObject=require('./_an-object');\nvar toLength=require('./_to-length');\nvar getIterFn=require('./core.get-iterator-method');\nvar BREAK={};\nvar RETURN={};\nvar exports=module.exports=function(iterable,entries,fn,that,ITERATOR){\nvar iterFn=ITERATOR?function(){return iterable;}:getIterFn(iterable);\nvar f=ctx(fn,that,entries?2:1);\nvar index=0;\nvar length,step,iterator,result;\nif(typeof iterFn!='function')throw TypeError(iterable+' is not iterable!');\n// fast case for arrays with default iterator\nif(isArrayIter(iterFn))for(length=toLength(iterable.length);length>index;index++){\nresult=entries?f(anObject(step=iterable[index])[0],step[1]):f(iterable[index]);\nif(result===BREAK||result===RETURN)return result;\n}else for(iterator=iterFn.call(iterable);!(step=iterator.next()).done;){\nresult=call(iterator,f,step.value,entries);\nif(result===BREAK||result===RETURN)return result;\n}\n};\nexports.BREAK=BREAK;\nexports.RETURN=RETURN;\n\n},{\"./_an-object\":21,\"./_ctx\":33,\"./_is-array-iter\":53,\"./_iter-call\":57,\"./_to-length\":102,\"./core.get-iterator-method\":113}],45:[function(require,module,exports){\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global=module.exports=typeof window!='undefined'&&window.Math==Math?\nwindow:typeof self!='undefined'&&self.Math==Math?self\n// eslint-disable-next-line no-new-func\n:Function('return this')();\nif(typeof __g=='number')__g=global;// eslint-disable-line no-undef\n\n},{}],46:[function(require,module,exports){\nvar hasOwnProperty={}.hasOwnProperty;\nmodule.exports=function(it,key){\nreturn hasOwnProperty.call(it,key);\n};\n\n},{}],47:[function(require,module,exports){\nvar dP=require('./_object-dp');\nvar createDesc=require('./_property-desc');\nmodule.exports=require('./_descriptors')?function(object,key,value){\nreturn dP.f(object,key,createDesc(1,value));\n}:function(object,key,value){\nobject[key]=value;\nreturn object;\n};\n\n},{\"./_descriptors\":35,\"./_object-dp\":69,\"./_property-desc\":83}],48:[function(require,module,exports){\nvar document=require('./_global').document;\nmodule.exports=document&&document.documentElement;\n\n},{\"./_global\":45}],49:[function(require,module,exports){\nmodule.exports=!require('./_descriptors')&&!require('./_fails')(function(){\nreturn Object.defineProperty(require('./_dom-create')('div'),'a',{get:function get(){return 7;}}).a!=7;\n});\n\n},{\"./_descriptors\":35,\"./_dom-create\":36,\"./_fails\":41}],50:[function(require,module,exports){\nvar isObject=require('./_is-object');\nvar setPrototypeOf=require('./_set-proto').set;\nmodule.exports=function(that,target,C){\nvar S=target.constructor;\nvar P;\nif(S!==C&&typeof S=='function'&&(P=S.prototype)!==C.prototype&&isObject(P)&&setPrototypeOf){\nsetPrototypeOf(that,P);\n}return that;\n};\n\n},{\"./_is-object\":55,\"./_set-proto\":86}],51:[function(require,module,exports){\n// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports=function(fn,args,that){\nvar un=that===undefined;\nswitch(args.length){\ncase 0:return un?fn():\nfn.call(that);\ncase 1:return un?fn(args[0]):\nfn.call(that,args[0]);\ncase 2:return un?fn(args[0],args[1]):\nfn.call(that,args[0],args[1]);\ncase 3:return un?fn(args[0],args[1],args[2]):\nfn.call(that,args[0],args[1],args[2]);\ncase 4:return un?fn(args[0],args[1],args[2],args[3]):\nfn.call(that,args[0],args[1],args[2],args[3]);}\nreturn fn.apply(that,args);\n};\n\n},{}],52:[function(require,module,exports){\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof=require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports=Object('z').propertyIsEnumerable(0)?Object:function(it){\nreturn cof(it)=='String'?it.split(''):Object(it);\n};\n\n},{\"./_cof\":30}],53:[function(require,module,exports){\n// check on default Array iterator\nvar Iterators=require('./_iterators');\nvar ITERATOR=require('./_wks')('iterator');\nvar ArrayProto=Array.prototype;\n\nmodule.exports=function(it){\nreturn it!==undefined&&(Iterators.Array===it||ArrayProto[ITERATOR]===it);\n};\n\n},{\"./_iterators\":62,\"./_wks\":112}],54:[function(require,module,exports){\n// 7.2.2 IsArray(argument)\nvar cof=require('./_cof');\nmodule.exports=Array.isArray||function isArray(arg){\nreturn cof(arg)=='Array';\n};\n\n},{\"./_cof\":30}],55:[function(require,module,exports){\nmodule.exports=function(it){\nreturn typeof it==='object'?it!==null:typeof it==='function';\n};\n\n},{}],56:[function(require,module,exports){\n// 7.2.8 IsRegExp(argument)\nvar isObject=require('./_is-object');\nvar cof=require('./_cof');\nvar MATCH=require('./_wks')('match');\nmodule.exports=function(it){\nvar isRegExp;\nreturn isObject(it)&&((isRegExp=it[MATCH])!==undefined?!!isRegExp:cof(it)=='RegExp');\n};\n\n},{\"./_cof\":30,\"./_is-object\":55,\"./_wks\":112}],57:[function(require,module,exports){\n// call something on iterator step with safe closing on error\nvar anObject=require('./_an-object');\nmodule.exports=function(iterator,fn,value,entries){\ntry{\nreturn entries?fn(anObject(value)[0],value[1]):fn(value);\n// 7.4.6 IteratorClose(iterator, completion)\n}catch(e){\nvar ret=iterator['return'];\nif(ret!==undefined)anObject(ret.call(iterator));\nthrow e;\n}\n};\n\n},{\"./_an-object\":21}],58:[function(require,module,exports){\n'use strict';\nvar create=require('./_object-create');\nvar descriptor=require('./_property-desc');\nvar setToStringTag=require('./_set-to-string-tag');\nvar IteratorPrototype={};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype,require('./_wks')('iterator'),function(){return this;});\n\nmodule.exports=function(Constructor,NAME,next){\nConstructor.prototype=create(IteratorPrototype,{next:descriptor(1,next)});\nsetToStringTag(Constructor,NAME+' Iterator');\n};\n\n},{\"./_hide\":47,\"./_object-create\":68,\"./_property-desc\":83,\"./_set-to-string-tag\":88,\"./_wks\":112}],59:[function(require,module,exports){\n'use strict';\nvar LIBRARY=require('./_library');\nvar $export=require('./_export');\nvar redefine=require('./_redefine');\nvar hide=require('./_hide');\nvar Iterators=require('./_iterators');\nvar $iterCreate=require('./_iter-create');\nvar setToStringTag=require('./_set-to-string-tag');\nvar getPrototypeOf=require('./_object-gpo');\nvar ITERATOR=require('./_wks')('iterator');\nvar BUGGY=!([].keys&&'next'in[].keys());// Safari has buggy iterators w/o `next`\nvar FF_ITERATOR='@@iterator';\nvar KEYS='keys';\nvar VALUES='values';\n\nvar returnThis=function returnThis(){return this;};\n\nmodule.exports=function(Base,NAME,Constructor,next,DEFAULT,IS_SET,FORCED){\n$iterCreate(Constructor,NAME,next);\nvar getMethod=function getMethod(kind){\nif(!BUGGY&&kind in proto)return proto[kind];\nswitch(kind){\ncase KEYS:return function keys(){return new Constructor(this,kind);};\ncase VALUES:return function values(){return new Constructor(this,kind);};}\nreturn function entries(){return new Constructor(this,kind);};\n};\nvar TAG=NAME+' Iterator';\nvar DEF_VALUES=DEFAULT==VALUES;\nvar VALUES_BUG=false;\nvar proto=Base.prototype;\nvar $native=proto[ITERATOR]||proto[FF_ITERATOR]||DEFAULT&&proto[DEFAULT];\nvar $default=$native||getMethod(DEFAULT);\nvar $entries=DEFAULT?!DEF_VALUES?$default:getMethod('entries'):undefined;\nvar $anyNative=NAME=='Array'?proto.entries||$native:$native;\nvar methods,key,IteratorPrototype;\n// Fix native\nif($anyNative){\nIteratorPrototype=getPrototypeOf($anyNative.call(new Base()));\nif(IteratorPrototype!==Object.prototype&&IteratorPrototype.next){\n// Set @@toStringTag to native iterators\nsetToStringTag(IteratorPrototype,TAG,true);\n// fix for some old engines\nif(!LIBRARY&&typeof IteratorPrototype[ITERATOR]!='function')hide(IteratorPrototype,ITERATOR,returnThis);\n}\n}\n// fix Array#{values, @@iterator}.name in V8 / FF\nif(DEF_VALUES&&$native&&$native.name!==VALUES){\nVALUES_BUG=true;\n$default=function values(){return $native.call(this);};\n}\n// Define iterator\nif((!LIBRARY||FORCED)&&(BUGGY||VALUES_BUG||!proto[ITERATOR])){\nhide(proto,ITERATOR,$default);\n}\n// Plug for library\nIterators[NAME]=$default;\nIterators[TAG]=returnThis;\nif(DEFAULT){\nmethods={\nvalues:DEF_VALUES?$default:getMethod(VALUES),\nkeys:IS_SET?$default:getMethod(KEYS),\nentries:$entries};\n\nif(FORCED)for(key in methods){\nif(!(key in proto))redefine(proto,key,methods[key]);\n}else $export($export.P+$export.F*(BUGGY||VALUES_BUG),NAME,methods);\n}\nreturn methods;\n};\n\n},{\"./_export\":39,\"./_hide\":47,\"./_iter-create\":58,\"./_iterators\":62,\"./_library\":63,\"./_object-gpo\":75,\"./_redefine\":85,\"./_set-to-string-tag\":88,\"./_wks\":112}],60:[function(require,module,exports){\nvar ITERATOR=require('./_wks')('iterator');\nvar SAFE_CLOSING=false;\n\ntry{\nvar riter=[7][ITERATOR]();\nriter['return']=function(){SAFE_CLOSING=true;};\n// eslint-disable-next-line no-throw-literal\nArray.from(riter,function(){throw 2;});\n}catch(e){/* empty */}\n\nmodule.exports=function(exec,skipClosing){\nif(!skipClosing&&!SAFE_CLOSING)return false;\nvar safe=false;\ntry{\nvar arr=[7];\nvar iter=arr[ITERATOR]();\niter.next=function(){return{done:safe=true};};\narr[ITERATOR]=function(){return iter;};\nexec(arr);\n}catch(e){/* empty */}\nreturn safe;\n};\n\n},{\"./_wks\":112}],61:[function(require,module,exports){\nmodule.exports=function(done,value){\nreturn{value:value,done:!!done};\n};\n\n},{}],62:[function(require,module,exports){\nmodule.exports={};\n\n},{}],63:[function(require,module,exports){\nmodule.exports=false;\n\n},{}],64:[function(require,module,exports){\nvar META=require('./_uid')('meta');\nvar isObject=require('./_is-object');\nvar has=require('./_has');\nvar setDesc=require('./_object-dp').f;\nvar id=0;\nvar isExtensible=Object.isExtensible||function(){\nreturn true;\n};\nvar FREEZE=!require('./_fails')(function(){\nreturn isExtensible(Object.preventExtensions({}));\n});\nvar setMeta=function setMeta(it){\nsetDesc(it,META,{value:{\ni:'O'+ ++id,// object ID\nw:{}// weak collections IDs\n}});\n};\nvar fastKey=function fastKey(it,create){\n// return primitive with prefix\nif(!isObject(it))return typeof it=='symbol'?it:(typeof it=='string'?'S':'P')+it;\nif(!has(it,META)){\n// can't set metadata to uncaught frozen object\nif(!isExtensible(it))return'F';\n// not necessary to add metadata\nif(!create)return'E';\n// add missing metadata\nsetMeta(it);\n// return object ID\n}return it[META].i;\n};\nvar getWeak=function getWeak(it,create){\nif(!has(it,META)){\n// can't set metadata to uncaught frozen object\nif(!isExtensible(it))return true;\n// not necessary to add metadata\nif(!create)return false;\n// add missing metadata\nsetMeta(it);\n// return hash weak collections IDs\n}return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze=function onFreeze(it){\nif(FREEZE&&meta.NEED&&isExtensible(it)&&!has(it,META))setMeta(it);\nreturn it;\n};\nvar meta=module.exports={\nKEY:META,\nNEED:false,\nfastKey:fastKey,\ngetWeak:getWeak,\nonFreeze:onFreeze};\n\n\n},{\"./_fails\":41,\"./_has\":46,\"./_is-object\":55,\"./_object-dp\":69,\"./_uid\":108}],65:[function(require,module,exports){\nvar global=require('./_global');\nvar macrotask=require('./_task').set;\nvar Observer=global.MutationObserver||global.WebKitMutationObserver;\nvar process=global.process;\nvar Promise=global.Promise;\nvar isNode=require('./_cof')(process)=='process';\n\nmodule.exports=function(){\nvar head,last,notify;\n\nvar flush=function flush(){\nvar parent,fn;\nif(isNode&&(parent=process.domain))parent.exit();\nwhile(head){\nfn=head.fn;\nhead=head.next;\ntry{\nfn();\n}catch(e){\nif(head)notify();else\nlast=undefined;\nthrow e;\n}\n}last=undefined;\nif(parent)parent.enter();\n};\n\n// Node.js\nif(isNode){\nnotify=function notify(){\nprocess.nextTick(flush);\n};\n// browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n}else if(Observer&&!(global.navigator&&global.navigator.standalone)){\nvar toggle=true;\nvar node=document.createTextNode('');\nnew Observer(flush).observe(node,{characterData:true});// eslint-disable-line no-new\nnotify=function notify(){\nnode.data=toggle=!toggle;\n};\n// environments with maybe non-completely correct, but existent Promise\n}else if(Promise&&Promise.resolve){\n// Promise.resolve without an argument throws an error in LG WebOS 2\nvar promise=Promise.resolve(undefined);\nnotify=function notify(){\npromise.then(flush);\n};\n// for other environments - macrotask based on:\n// - setImmediate\n// - MessageChannel\n// - window.postMessag\n// - onreadystatechange\n// - setTimeout\n}else{\nnotify=function notify(){\n// strange IE + webpack dev server bug - use .call(global)\nmacrotask.call(global,flush);\n};\n}\n\nreturn function(fn){\nvar task={fn:fn,next:undefined};\nif(last)last.next=task;\nif(!head){\nhead=task;\nnotify();\n}last=task;\n};\n};\n\n},{\"./_cof\":30,\"./_global\":45,\"./_task\":97}],66:[function(require,module,exports){\n'use strict';\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction=require('./_a-function');\n\nfunction PromiseCapability(C){\nvar resolve,reject;\nthis.promise=new C(function($$resolve,$$reject){\nif(resolve!==undefined||reject!==undefined)throw TypeError('Bad Promise constructor');\nresolve=$$resolve;\nreject=$$reject;\n});\nthis.resolve=aFunction(resolve);\nthis.reject=aFunction(reject);\n}\n\nmodule.exports.f=function(C){\nreturn new PromiseCapability(C);\n};\n\n},{\"./_a-function\":18}],67:[function(require,module,exports){\n'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys=require('./_object-keys');\nvar gOPS=require('./_object-gops');\nvar pIE=require('./_object-pie');\nvar toObject=require('./_to-object');\nvar IObject=require('./_iobject');\nvar $assign=Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports=!$assign||require('./_fails')(function(){\nvar A={};\nvar B={};\n// eslint-disable-next-line no-undef\nvar S=Symbol();\nvar K='abcdefghijklmnopqrst';\nA[S]=7;\nK.split('').forEach(function(k){B[k]=k;});\nreturn $assign({},A)[S]!=7||Object.keys($assign({},B)).join('')!=K;\n})?function assign(target,source){// eslint-disable-line no-unused-vars\nvar T=toObject(target);\nvar aLen=arguments.length;\nvar index=1;\nvar getSymbols=gOPS.f;\nvar isEnum=pIE.f;\nwhile(aLen>index){\nvar S=IObject(arguments[index++]);\nvar keys=getSymbols?getKeys(S).concat(getSymbols(S)):getKeys(S);\nvar length=keys.length;\nvar j=0;\nvar key;\nwhile(length>j){if(isEnum.call(S,key=keys[j++]))T[key]=S[key];}\n}return T;\n}:$assign;\n\n},{\"./_fails\":41,\"./_iobject\":52,\"./_object-gops\":74,\"./_object-keys\":77,\"./_object-pie\":78,\"./_to-object\":103}],68:[function(require,module,exports){\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject=require('./_an-object');\nvar dPs=require('./_object-dps');\nvar enumBugKeys=require('./_enum-bug-keys');\nvar IE_PROTO=require('./_shared-key')('IE_PROTO');\nvar Empty=function Empty(){/* empty */};\nvar PROTOTYPE='prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar _createDict=function createDict(){\n// Thrash, waste and sodomy: IE GC bug\nvar iframe=require('./_dom-create')('iframe');\nvar i=enumBugKeys.length;\nvar lt='<';\nvar gt='>';\nvar iframeDocument;\niframe.style.display='none';\nrequire('./_html').appendChild(iframe);\niframe.src='javascript:';// eslint-disable-line no-script-url\n// createDict = iframe.contentWindow.Object;\n// html.removeChild(iframe);\niframeDocument=iframe.contentWindow.document;\niframeDocument.open();\niframeDocument.write(lt+'script'+gt+'document.F=Object'+lt+'/script'+gt);\niframeDocument.close();\n_createDict=iframeDocument.F;\nwhile(i--){delete _createDict[PROTOTYPE][enumBugKeys[i]];}\nreturn _createDict();\n};\n\nmodule.exports=Object.create||function create(O,Properties){\nvar result;\nif(O!==null){\nEmpty[PROTOTYPE]=anObject(O);\nresult=new Empty();\nEmpty[PROTOTYPE]=null;\n// add \"__proto__\" for Object.getPrototypeOf polyfill\nresult[IE_PROTO]=O;\n}else result=_createDict();\nreturn Properties===undefined?result:dPs(result,Properties);\n};\n\n},{\"./_an-object\":21,\"./_dom-create\":36,\"./_enum-bug-keys\":37,\"./_html\":48,\"./_object-dps\":70,\"./_shared-key\":89}],69:[function(require,module,exports){\nvar anObject=require('./_an-object');\nvar IE8_DOM_DEFINE=require('./_ie8-dom-define');\nvar toPrimitive=require('./_to-primitive');\nvar dP=Object.defineProperty;\n\nexports.f=require('./_descriptors')?Object.defineProperty:function defineProperty(O,P,Attributes){\nanObject(O);\nP=toPrimitive(P,true);\nanObject(Attributes);\nif(IE8_DOM_DEFINE)try{\nreturn dP(O,P,Attributes);\n}catch(e){/* empty */}\nif('get'in Attributes||'set'in Attributes)throw TypeError('Accessors not supported!');\nif('value'in Attributes)O[P]=Attributes.value;\nreturn O;\n};\n\n},{\"./_an-object\":21,\"./_descriptors\":35,\"./_ie8-dom-define\":49,\"./_to-primitive\":104}],70:[function(require,module,exports){\nvar dP=require('./_object-dp');\nvar anObject=require('./_an-object');\nvar getKeys=require('./_object-keys');\n\nmodule.exports=require('./_descriptors')?Object.defineProperties:function defineProperties(O,Properties){\nanObject(O);\nvar keys=getKeys(Properties);\nvar length=keys.length;\nvar i=0;\nvar P;\nwhile(length>i){dP.f(O,P=keys[i++],Properties[P]);}\nreturn O;\n};\n\n},{\"./_an-object\":21,\"./_descriptors\":35,\"./_object-dp\":69,\"./_object-keys\":77}],71:[function(require,module,exports){\nvar pIE=require('./_object-pie');\nvar createDesc=require('./_property-desc');\nvar toIObject=require('./_to-iobject');\nvar toPrimitive=require('./_to-primitive');\nvar has=require('./_has');\nvar IE8_DOM_DEFINE=require('./_ie8-dom-define');\nvar gOPD=Object.getOwnPropertyDescriptor;\n\nexports.f=require('./_descriptors')?gOPD:function getOwnPropertyDescriptor(O,P){\nO=toIObject(O);\nP=toPrimitive(P,true);\nif(IE8_DOM_DEFINE)try{\nreturn gOPD(O,P);\n}catch(e){/* empty */}\nif(has(O,P))return createDesc(!pIE.f.call(O,P),O[P]);\n};\n\n},{\"./_descriptors\":35,\"./_has\":46,\"./_ie8-dom-define\":49,\"./_object-pie\":78,\"./_property-desc\":83,\"./_to-iobject\":101,\"./_to-primitive\":104}],72:[function(require,module,exports){\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject=require('./_to-iobject');\nvar gOPN=require('./_object-gopn').f;\nvar toString={}.toString;\n\nvar windowNames=typeof window=='object'&&window&&Object.getOwnPropertyNames?\nObject.getOwnPropertyNames(window):[];\n\nvar getWindowNames=function getWindowNames(it){\ntry{\nreturn gOPN(it);\n}catch(e){\nreturn windowNames.slice();\n}\n};\n\nmodule.exports.f=function getOwnPropertyNames(it){\nreturn windowNames&&toString.call(it)=='[object Window]'?getWindowNames(it):gOPN(toIObject(it));\n};\n\n},{\"./_object-gopn\":73,\"./_to-iobject\":101}],73:[function(require,module,exports){\n// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys=require('./_object-keys-internal');\nvar hiddenKeys=require('./_enum-bug-keys').concat('length','prototype');\n\nexports.f=Object.getOwnPropertyNames||function getOwnPropertyNames(O){\nreturn $keys(O,hiddenKeys);\n};\n\n},{\"./_enum-bug-keys\":37,\"./_object-keys-internal\":76}],74:[function(require,module,exports){\nexports.f=Object.getOwnPropertySymbols;\n\n},{}],75:[function(require,module,exports){\n// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has=require('./_has');\nvar toObject=require('./_to-object');\nvar IE_PROTO=require('./_shared-key')('IE_PROTO');\nvar ObjectProto=Object.prototype;\n\nmodule.exports=Object.getPrototypeOf||function(O){\nO=toObject(O);\nif(has(O,IE_PROTO))return O[IE_PROTO];\nif(typeof O.constructor=='function'&&O instanceof O.constructor){\nreturn O.constructor.prototype;\n}return O instanceof Object?ObjectProto:null;\n};\n\n},{\"./_has\":46,\"./_shared-key\":89,\"./_to-object\":103}],76:[function(require,module,exports){\nvar has=require('./_has');\nvar toIObject=require('./_to-iobject');\nvar arrayIndexOf=require('./_array-includes')(false);\nvar IE_PROTO=require('./_shared-key')('IE_PROTO');\n\nmodule.exports=function(object,names){\nvar O=toIObject(object);\nvar i=0;\nvar result=[];\nvar key;\nfor(key in O){if(key!=IE_PROTO)has(O,key)&&result.push(key);}\n// Don't enum bug & hidden keys\nwhile(names.length>i){if(has(O,key=names[i++])){\n~arrayIndexOf(result,key)||result.push(key);\n}}\nreturn result;\n};\n\n},{\"./_array-includes\":24,\"./_has\":46,\"./_shared-key\":89,\"./_to-iobject\":101}],77:[function(require,module,exports){\n// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys=require('./_object-keys-internal');\nvar enumBugKeys=require('./_enum-bug-keys');\n\nmodule.exports=Object.keys||function keys(O){\nreturn $keys(O,enumBugKeys);\n};\n\n},{\"./_enum-bug-keys\":37,\"./_object-keys-internal\":76}],78:[function(require,module,exports){\nexports.f={}.propertyIsEnumerable;\n\n},{}],79:[function(require,module,exports){\n// most Object methods by ES6 should accept primitives\nvar $export=require('./_export');\nvar core=require('./_core');\nvar fails=require('./_fails');\nmodule.exports=function(KEY,exec){\nvar fn=(core.Object||{})[KEY]||Object[KEY];\nvar exp={};\nexp[KEY]=exec(fn);\n$export($export.S+$export.F*fails(function(){fn(1);}),'Object',exp);\n};\n\n},{\"./_core\":31,\"./_export\":39,\"./_fails\":41}],80:[function(require,module,exports){\nvar getKeys=require('./_object-keys');\nvar toIObject=require('./_to-iobject');\nvar isEnum=require('./_object-pie').f;\nmodule.exports=function(isEntries){\nreturn function(it){\nvar O=toIObject(it);\nvar keys=getKeys(O);\nvar length=keys.length;\nvar i=0;\nvar result=[];\nvar key;\nwhile(length>i){if(isEnum.call(O,key=keys[i++])){\nresult.push(isEntries?[key,O[key]]:O[key]);\n}}return result;\n};\n};\n\n},{\"./_object-keys\":77,\"./_object-pie\":78,\"./_to-iobject\":101}],81:[function(require,module,exports){\nmodule.exports=function(exec){\ntry{\nreturn{e:false,v:exec()};\n}catch(e){\nreturn{e:true,v:e};\n}\n};\n\n},{}],82:[function(require,module,exports){\nvar anObject=require('./_an-object');\nvar isObject=require('./_is-object');\nvar newPromiseCapability=require('./_new-promise-capability');\n\nmodule.exports=function(C,x){\nanObject(C);\nif(isObject(x)&&x.constructor===C)return x;\nvar promiseCapability=newPromiseCapability.f(C);\nvar resolve=promiseCapability.resolve;\nresolve(x);\nreturn promiseCapability.promise;\n};\n\n},{\"./_an-object\":21,\"./_is-object\":55,\"./_new-promise-capability\":66}],83:[function(require,module,exports){\nmodule.exports=function(bitmap,value){\nreturn{\nenumerable:!(bitmap&1),\nconfigurable:!(bitmap&2),\nwritable:!(bitmap&4),\nvalue:value};\n\n};\n\n},{}],84:[function(require,module,exports){\nvar redefine=require('./_redefine');\nmodule.exports=function(target,src,safe){\nfor(var key in src){redefine(target,key,src[key],safe);}\nreturn target;\n};\n\n},{\"./_redefine\":85}],85:[function(require,module,exports){\nvar global=require('./_global');\nvar hide=require('./_hide');\nvar has=require('./_has');\nvar SRC=require('./_uid')('src');\nvar TO_STRING='toString';\nvar $toString=Function[TO_STRING];\nvar TPL=(''+$toString).split(TO_STRING);\n\nrequire('./_core').inspectSource=function(it){\nreturn $toString.call(it);\n};\n\n(module.exports=function(O,key,val,safe){\nvar isFunction=typeof val=='function';\nif(isFunction)has(val,'name')||hide(val,'name',key);\nif(O[key]===val)return;\nif(isFunction)has(val,SRC)||hide(val,SRC,O[key]?''+O[key]:TPL.join(String(key)));\nif(O===global){\nO[key]=val;\n}else if(!safe){\ndelete O[key];\nhide(O,key,val);\n}else if(O[key]){\nO[key]=val;\n}else{\nhide(O,key,val);\n}\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype,TO_STRING,function toString(){\nreturn typeof this=='function'&&this[SRC]||$toString.call(this);\n});\n\n},{\"./_core\":31,\"./_global\":45,\"./_has\":46,\"./_hide\":47,\"./_uid\":108}],86:[function(require,module,exports){\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject=require('./_is-object');\nvar anObject=require('./_an-object');\nvar check=function check(O,proto){\nanObject(O);\nif(!isObject(proto)&&proto!==null)throw TypeError(proto+\": can't set as prototype!\");\n};\nmodule.exports={\nset:Object.setPrototypeOf||('__proto__'in{}?// eslint-disable-line\nfunction(test,buggy,set){\ntry{\nset=require('./_ctx')(Function.call,require('./_object-gopd').f(Object.prototype,'__proto__').set,2);\nset(test,[]);\nbuggy=!(test instanceof Array);\n}catch(e){buggy=true;}\nreturn function setPrototypeOf(O,proto){\ncheck(O,proto);\nif(buggy)O.__proto__=proto;else\nset(O,proto);\nreturn O;\n};\n}({},false):undefined),\ncheck:check};\n\n\n},{\"./_an-object\":21,\"./_ctx\":33,\"./_is-object\":55,\"./_object-gopd\":71}],87:[function(require,module,exports){\n'use strict';\nvar global=require('./_global');\nvar dP=require('./_object-dp');\nvar DESCRIPTORS=require('./_descriptors');\nvar SPECIES=require('./_wks')('species');\n\nmodule.exports=function(KEY){\nvar C=global[KEY];\nif(DESCRIPTORS&&C&&!C[SPECIES])dP.f(C,SPECIES,{\nconfigurable:true,\nget:function get(){return this;}});\n\n};\n\n},{\"./_descriptors\":35,\"./_global\":45,\"./_object-dp\":69,\"./_wks\":112}],88:[function(require,module,exports){\nvar def=require('./_object-dp').f;\nvar has=require('./_has');\nvar TAG=require('./_wks')('toStringTag');\n\nmodule.exports=function(it,tag,stat){\nif(it&&!has(it=stat?it:it.prototype,TAG))def(it,TAG,{configurable:true,value:tag});\n};\n\n},{\"./_has\":46,\"./_object-dp\":69,\"./_wks\":112}],89:[function(require,module,exports){\nvar shared=require('./_shared')('keys');\nvar uid=require('./_uid');\nmodule.exports=function(key){\nreturn shared[key]||(shared[key]=uid(key));\n};\n\n},{\"./_shared\":90,\"./_uid\":108}],90:[function(require,module,exports){\nvar core=require('./_core');\nvar global=require('./_global');\nvar SHARED='__core-js_shared__';\nvar store=global[SHARED]||(global[SHARED]={});\n\n(module.exports=function(key,value){\nreturn store[key]||(store[key]=value!==undefined?value:{});\n})('versions',[]).push({\nversion:core.version,\nmode:require('./_library')?'pure':'global',\ncopyright:'© 2018 Denis Pushkarev (zloirock.ru)'});\n\n\n},{\"./_core\":31,\"./_global\":45,\"./_library\":63}],91:[function(require,module,exports){\n// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject=require('./_an-object');\nvar aFunction=require('./_a-function');\nvar SPECIES=require('./_wks')('species');\nmodule.exports=function(O,D){\nvar C=anObject(O).constructor;\nvar S;\nreturn C===undefined||(S=anObject(C)[SPECIES])==undefined?D:aFunction(S);\n};\n\n},{\"./_a-function\":18,\"./_an-object\":21,\"./_wks\":112}],92:[function(require,module,exports){\n'use strict';\nvar fails=require('./_fails');\n\nmodule.exports=function(method,arg){\nreturn!!method&&fails(function(){\n// eslint-disable-next-line no-useless-call\narg?method.call(null,function(){/* empty */},1):method.call(null);\n});\n};\n\n},{\"./_fails\":41}],93:[function(require,module,exports){\nvar toInteger=require('./_to-integer');\nvar defined=require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports=function(TO_STRING){\nreturn function(that,pos){\nvar s=String(defined(that));\nvar i=toInteger(pos);\nvar l=s.length;\nvar a,b;\nif(i<0||i>=l)return TO_STRING?'':undefined;\na=s.charCodeAt(i);\nreturn a<0xd800||a>0xdbff||i+1===l||(b=s.charCodeAt(i+1))<0xdc00||b>0xdfff?\nTO_STRING?s.charAt(i):a:\nTO_STRING?s.slice(i,i+2):(a-0xd800<<10)+(b-0xdc00)+0x10000;\n};\n};\n\n},{\"./_defined\":34,\"./_to-integer\":100}],94:[function(require,module,exports){\n// helper for String#{startsWith, endsWith, includes}\nvar isRegExp=require('./_is-regexp');\nvar defined=require('./_defined');\n\nmodule.exports=function(that,searchString,NAME){\nif(isRegExp(searchString))throw TypeError('String#'+NAME+\" doesn't accept regex!\");\nreturn String(defined(that));\n};\n\n},{\"./_defined\":34,\"./_is-regexp\":56}],95:[function(require,module,exports){\nvar $export=require('./_export');\nvar defined=require('./_defined');\nvar fails=require('./_fails');\nvar spaces=require('./_string-ws');\nvar space='['+spaces+']';\nvar non=\"\\u200B\\x85\";\nvar ltrim=RegExp('^'+space+space+'*');\nvar rtrim=RegExp(space+space+'*$');\n\nvar exporter=function exporter(KEY,exec,ALIAS){\nvar exp={};\nvar FORCE=fails(function(){\nreturn!!spaces[KEY]()||non[KEY]()!=non;\n});\nvar fn=exp[KEY]=FORCE?exec(trim):spaces[KEY];\nif(ALIAS)exp[ALIAS]=fn;\n$export($export.P+$export.F*FORCE,'String',exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim=exporter.trim=function(string,TYPE){\nstring=String(defined(string));\nif(TYPE&1)string=string.replace(ltrim,'');\nif(TYPE&2)string=string.replace(rtrim,'');\nreturn string;\n};\n\nmodule.exports=exporter;\n\n},{\"./_defined\":34,\"./_export\":39,\"./_fails\":41,\"./_string-ws\":96}],96:[function(require,module,exports){\nmodule.exports=\"\\t\\n\\x0B\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\"+\n\"\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF\";\n\n},{}],97:[function(require,module,exports){\nvar ctx=require('./_ctx');\nvar invoke=require('./_invoke');\nvar html=require('./_html');\nvar cel=require('./_dom-create');\nvar global=require('./_global');\nvar process=global.process;\nvar setTask=global.setImmediate;\nvar clearTask=global.clearImmediate;\nvar MessageChannel=global.MessageChannel;\nvar Dispatch=global.Dispatch;\nvar counter=0;\nvar queue={};\nvar ONREADYSTATECHANGE='onreadystatechange';\nvar defer,channel,port;\nvar run=function run(){\nvar id=+this;\n// eslint-disable-next-line no-prototype-builtins\nif(queue.hasOwnProperty(id)){\nvar fn=queue[id];\ndelete queue[id];\nfn();\n}\n};\nvar listener=function listener(event){\nrun.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif(!setTask||!clearTask){\nsetTask=function setImmediate(fn){\nvar args=[];\nvar i=1;\nwhile(arguments.length>i){args.push(arguments[i++]);}\nqueue[++counter]=function(){\n// eslint-disable-next-line no-new-func\ninvoke(typeof fn=='function'?fn:Function(fn),args);\n};\ndefer(counter);\nreturn counter;\n};\nclearTask=function clearImmediate(id){\ndelete queue[id];\n};\n// Node.js 0.8-\nif(require('./_cof')(process)=='process'){\ndefer=function defer(id){\nprocess.nextTick(ctx(run,id,1));\n};\n// Sphere (JS game engine) Dispatch API\n}else if(Dispatch&&Dispatch.now){\ndefer=function defer(id){\nDispatch.now(ctx(run,id,1));\n};\n// Browsers with MessageChannel, includes WebWorkers\n}else if(MessageChannel){\nchannel=new MessageChannel();\nport=channel.port2;\nchannel.port1.onmessage=listener;\ndefer=ctx(port.postMessage,port,1);\n// Browsers with postMessage, skip WebWorkers\n// IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n}else if(global.addEventListener&&typeof postMessage=='function'&&!global.importScripts){\ndefer=function defer(id){\nglobal.postMessage(id+'','*');\n};\nglobal.addEventListener('message',listener,false);\n// IE8-\n}else if(ONREADYSTATECHANGE in cel('script')){\ndefer=function defer(id){\nhtml.appendChild(cel('script'))[ONREADYSTATECHANGE]=function(){\nhtml.removeChild(this);\nrun.call(id);\n};\n};\n// Rest old browsers\n}else{\ndefer=function defer(id){\nsetTimeout(ctx(run,id,1),0);\n};\n}\n}\nmodule.exports={\nset:setTask,\nclear:clearTask};\n\n\n},{\"./_cof\":30,\"./_ctx\":33,\"./_dom-create\":36,\"./_global\":45,\"./_html\":48,\"./_invoke\":51}],98:[function(require,module,exports){\nvar toInteger=require('./_to-integer');\nvar max=Math.max;\nvar min=Math.min;\nmodule.exports=function(index,length){\nindex=toInteger(index);\nreturn index<0?max(index+length,0):min(index,length);\n};\n\n},{\"./_to-integer\":100}],99:[function(require,module,exports){\n// https://tc39.github.io/ecma262/#sec-toindex\nvar toInteger=require('./_to-integer');\nvar toLength=require('./_to-length');\nmodule.exports=function(it){\nif(it===undefined)return 0;\nvar number=toInteger(it);\nvar length=toLength(number);\nif(number!==length)throw RangeError('Wrong length!');\nreturn length;\n};\n\n},{\"./_to-integer\":100,\"./_to-length\":102}],100:[function(require,module,exports){\n// 7.1.4 ToInteger\nvar ceil=Math.ceil;\nvar floor=Math.floor;\nmodule.exports=function(it){\nreturn isNaN(it=+it)?0:(it>0?floor:ceil)(it);\n};\n\n},{}],101:[function(require,module,exports){\n// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject=require('./_iobject');\nvar defined=require('./_defined');\nmodule.exports=function(it){\nreturn IObject(defined(it));\n};\n\n},{\"./_defined\":34,\"./_iobject\":52}],102:[function(require,module,exports){\n// 7.1.15 ToLength\nvar toInteger=require('./_to-integer');\nvar min=Math.min;\nmodule.exports=function(it){\nreturn it>0?min(toInteger(it),0x1fffffffffffff):0;// pow(2, 53) - 1 == 9007199254740991\n};\n\n},{\"./_to-integer\":100}],103:[function(require,module,exports){\n// 7.1.13 ToObject(argument)\nvar defined=require('./_defined');\nmodule.exports=function(it){\nreturn Object(defined(it));\n};\n\n},{\"./_defined\":34}],104:[function(require,module,exports){\n// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject=require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports=function(it,S){\nif(!isObject(it))return it;\nvar fn,val;\nif(S&&typeof(fn=it.toString)=='function'&&!isObject(val=fn.call(it)))return val;\nif(typeof(fn=it.valueOf)=='function'&&!isObject(val=fn.call(it)))return val;\nif(!S&&typeof(fn=it.toString)=='function'&&!isObject(val=fn.call(it)))return val;\nthrow TypeError(\"Can't convert object to primitive value\");\n};\n\n},{\"./_is-object\":55}],105:[function(require,module,exports){\n'use strict';\nif(require('./_descriptors')){\nvar LIBRARY=require('./_library');\nvar global=require('./_global');\nvar fails=require('./_fails');\nvar $export=require('./_export');\nvar $typed=require('./_typed');\nvar $buffer=require('./_typed-buffer');\nvar ctx=require('./_ctx');\nvar anInstance=require('./_an-instance');\nvar propertyDesc=require('./_property-desc');\nvar hide=require('./_hide');\nvar redefineAll=require('./_redefine-all');\nvar toInteger=require('./_to-integer');\nvar toLength=require('./_to-length');\nvar toIndex=require('./_to-index');\nvar toAbsoluteIndex=require('./_to-absolute-index');\nvar toPrimitive=require('./_to-primitive');\nvar has=require('./_has');\nvar classof=require('./_classof');\nvar isObject=require('./_is-object');\nvar toObject=require('./_to-object');\nvar isArrayIter=require('./_is-array-iter');\nvar create=require('./_object-create');\nvar getPrototypeOf=require('./_object-gpo');\nvar gOPN=require('./_object-gopn').f;\nvar getIterFn=require('./core.get-iterator-method');\nvar uid=require('./_uid');\nvar wks=require('./_wks');\nvar createArrayMethod=require('./_array-methods');\nvar createArrayIncludes=require('./_array-includes');\nvar speciesConstructor=require('./_species-constructor');\nvar ArrayIterators=require('./es6.array.iterator');\nvar Iterators=require('./_iterators');\nvar $iterDetect=require('./_iter-detect');\nvar setSpecies=require('./_set-species');\nvar arrayFill=require('./_array-fill');\nvar arrayCopyWithin=require('./_array-copy-within');\nvar $DP=require('./_object-dp');\nvar $GOPD=require('./_object-gopd');\nvar dP=$DP.f;\nvar gOPD=$GOPD.f;\nvar RangeError=global.RangeError;\nvar TypeError=global.TypeError;\nvar Uint8Array=global.Uint8Array;\nvar ARRAY_BUFFER='ArrayBuffer';\nvar SHARED_BUFFER='Shared'+ARRAY_BUFFER;\nvar BYTES_PER_ELEMENT='BYTES_PER_ELEMENT';\nvar PROTOTYPE='prototype';\nvar ArrayProto=Array[PROTOTYPE];\nvar $ArrayBuffer=$buffer.ArrayBuffer;\nvar $DataView=$buffer.DataView;\nvar arrayForEach=createArrayMethod(0);\nvar arrayFilter=createArrayMethod(2);\nvar arraySome=createArrayMethod(3);\nvar arrayEvery=createArrayMethod(4);\nvar arrayFind=createArrayMethod(5);\nvar arrayFindIndex=createArrayMethod(6);\nvar arrayIncludes=createArrayIncludes(true);\nvar arrayIndexOf=createArrayIncludes(false);\nvar arrayValues=ArrayIterators.values;\nvar arrayKeys=ArrayIterators.keys;\nvar arrayEntries=ArrayIterators.entries;\nvar arrayLastIndexOf=ArrayProto.lastIndexOf;\nvar arrayReduce=ArrayProto.reduce;\nvar arrayReduceRight=ArrayProto.reduceRight;\nvar arrayJoin=ArrayProto.join;\nvar arraySort=ArrayProto.sort;\nvar arraySlice=ArrayProto.slice;\nvar arrayToString=ArrayProto.toString;\nvar arrayToLocaleString=ArrayProto.toLocaleString;\nvar ITERATOR=wks('iterator');\nvar TAG=wks('toStringTag');\nvar TYPED_CONSTRUCTOR=uid('typed_constructor');\nvar DEF_CONSTRUCTOR=uid('def_constructor');\nvar ALL_CONSTRUCTORS=$typed.CONSTR;\nvar TYPED_ARRAY=$typed.TYPED;\nvar VIEW=$typed.VIEW;\nvar WRONG_LENGTH='Wrong length!';\n\nvar $map=createArrayMethod(1,function(O,length){\nreturn allocate(speciesConstructor(O,O[DEF_CONSTRUCTOR]),length);\n});\n\nvar LITTLE_ENDIAN=fails(function(){\n// eslint-disable-next-line no-undef\nreturn new Uint8Array(new Uint16Array([1]).buffer)[0]===1;\n});\n\nvar FORCED_SET=!!Uint8Array&&!!Uint8Array[PROTOTYPE].set&&fails(function(){\nnew Uint8Array(1).set({});\n});\n\nvar toOffset=function toOffset(it,BYTES){\nvar offset=toInteger(it);\nif(offset<0||offset%BYTES)throw RangeError('Wrong offset!');\nreturn offset;\n};\n\nvar validate=function validate(it){\nif(isObject(it)&&TYPED_ARRAY in it)return it;\nthrow TypeError(it+' is not a typed array!');\n};\n\nvar allocate=function allocate(C,length){\nif(!(isObject(C)&&TYPED_CONSTRUCTOR in C)){\nthrow TypeError('It is not a typed array constructor!');\n}return new C(length);\n};\n\nvar speciesFromList=function speciesFromList(O,list){\nreturn fromList(speciesConstructor(O,O[DEF_CONSTRUCTOR]),list);\n};\n\nvar fromList=function fromList(C,list){\nvar index=0;\nvar length=list.length;\nvar result=allocate(C,length);\nwhile(length>index){result[index]=list[index++];}\nreturn result;\n};\n\nvar addGetter=function addGetter(it,key,internal){\ndP(it,key,{get:function get(){return this._d[internal];}});\n};\n\nvar $from=function from(source/* , mapfn, thisArg */){\nvar O=toObject(source);\nvar aLen=arguments.length;\nvar mapfn=aLen>1?arguments[1]:undefined;\nvar mapping=mapfn!==undefined;\nvar iterFn=getIterFn(O);\nvar i,length,values,result,step,iterator;\nif(iterFn!=undefined&&!isArrayIter(iterFn)){\nfor(iterator=iterFn.call(O),values=[],i=0;!(step=iterator.next()).done;i++){\nvalues.push(step.value);\n}O=values;\n}\nif(mapping&&aLen>2)mapfn=ctx(mapfn,arguments[2],2);\nfor(i=0,length=toLength(O.length),result=allocate(this,length);length>i;i++){\nresult[i]=mapping?mapfn(O[i],i):O[i];\n}\nreturn result;\n};\n\nvar $of=function of()/* ...items */{\nvar index=0;\nvar length=arguments.length;\nvar result=allocate(this,length);\nwhile(length>index){result[index]=arguments[index++];}\nreturn result;\n};\n\n// iOS Safari 6.x fails here\nvar TO_LOCALE_BUG=!!Uint8Array&&fails(function(){arrayToLocaleString.call(new Uint8Array(1));});\n\nvar $toLocaleString=function toLocaleString(){\nreturn arrayToLocaleString.apply(TO_LOCALE_BUG?arraySlice.call(validate(this)):validate(this),arguments);\n};\n\nvar proto={\ncopyWithin:function copyWithin(target,start/* , end */){\nreturn arrayCopyWithin.call(validate(this),target,start,arguments.length>2?arguments[2]:undefined);\n},\nevery:function every(callbackfn/* , thisArg */){\nreturn arrayEvery(validate(this),callbackfn,arguments.length>1?arguments[1]:undefined);\n},\nfill:function fill(value/* , start, end */){// eslint-disable-line no-unused-vars\nreturn arrayFill.apply(validate(this),arguments);\n},\nfilter:function filter(callbackfn/* , thisArg */){\nreturn speciesFromList(this,arrayFilter(validate(this),callbackfn,\narguments.length>1?arguments[1]:undefined));\n},\nfind:function find(predicate/* , thisArg */){\nreturn arrayFind(validate(this),predicate,arguments.length>1?arguments[1]:undefined);\n},\nfindIndex:function findIndex(predicate/* , thisArg */){\nreturn arrayFindIndex(validate(this),predicate,arguments.length>1?arguments[1]:undefined);\n},\nforEach:function forEach(callbackfn/* , thisArg */){\narrayForEach(validate(this),callbackfn,arguments.length>1?arguments[1]:undefined);\n},\nindexOf:function indexOf(searchElement/* , fromIndex */){\nreturn arrayIndexOf(validate(this),searchElement,arguments.length>1?arguments[1]:undefined);\n},\nincludes:function includes(searchElement/* , fromIndex */){\nreturn arrayIncludes(validate(this),searchElement,arguments.length>1?arguments[1]:undefined);\n},\njoin:function join(separator){// eslint-disable-line no-unused-vars\nreturn arrayJoin.apply(validate(this),arguments);\n},\nlastIndexOf:function lastIndexOf(searchElement/* , fromIndex */){// eslint-disable-line no-unused-vars\nreturn arrayLastIndexOf.apply(validate(this),arguments);\n},\nmap:function map(mapfn/* , thisArg */){\nreturn $map(validate(this),mapfn,arguments.length>1?arguments[1]:undefined);\n},\nreduce:function reduce(callbackfn/* , initialValue */){// eslint-disable-line no-unused-vars\nreturn arrayReduce.apply(validate(this),arguments);\n},\nreduceRight:function reduceRight(callbackfn/* , initialValue */){// eslint-disable-line no-unused-vars\nreturn arrayReduceRight.apply(validate(this),arguments);\n},\nreverse:function reverse(){\nvar that=this;\nvar length=validate(that).length;\nvar middle=Math.floor(length/2);\nvar index=0;\nvar value;\nwhile(index<middle){\nvalue=that[index];\nthat[index++]=that[--length];\nthat[length]=value;\n}return that;\n},\nsome:function some(callbackfn/* , thisArg */){\nreturn arraySome(validate(this),callbackfn,arguments.length>1?arguments[1]:undefined);\n},\nsort:function sort(comparefn){\nreturn arraySort.call(validate(this),comparefn);\n},\nsubarray:function subarray(begin,end){\nvar O=validate(this);\nvar length=O.length;\nvar $begin=toAbsoluteIndex(begin,length);\nreturn new(speciesConstructor(O,O[DEF_CONSTRUCTOR]))(\nO.buffer,\nO.byteOffset+$begin*O.BYTES_PER_ELEMENT,\ntoLength((end===undefined?length:toAbsoluteIndex(end,length))-$begin));\n\n}};\n\n\nvar $slice=function slice(start,end){\nreturn speciesFromList(this,arraySlice.call(validate(this),start,end));\n};\n\nvar $set=function set(arrayLike/* , offset */){\nvalidate(this);\nvar offset=toOffset(arguments[1],1);\nvar length=this.length;\nvar src=toObject(arrayLike);\nvar len=toLength(src.length);\nvar index=0;\nif(len+offset>length)throw RangeError(WRONG_LENGTH);\nwhile(index<len){this[offset+index]=src[index++];}\n};\n\nvar $iterators={\nentries:function entries(){\nreturn arrayEntries.call(validate(this));\n},\nkeys:function keys(){\nreturn arrayKeys.call(validate(this));\n},\nvalues:function values(){\nreturn arrayValues.call(validate(this));\n}};\n\n\nvar isTAIndex=function isTAIndex(target,key){\nreturn isObject(target)&&\ntarget[TYPED_ARRAY]&&\ntypeof key!='symbol'&&\nkey in target&&\nString(+key)==String(key);\n};\nvar $getDesc=function getOwnPropertyDescriptor(target,key){\nreturn isTAIndex(target,key=toPrimitive(key,true))?\npropertyDesc(2,target[key]):\ngOPD(target,key);\n};\nvar $setDesc=function defineProperty(target,key,desc){\nif(isTAIndex(target,key=toPrimitive(key,true))&&\nisObject(desc)&&\nhas(desc,'value')&&\n!has(desc,'get')&&\n!has(desc,'set')\n// TODO: add validation descriptor w/o calling accessors\n&&!desc.configurable&&(\n!has(desc,'writable')||desc.writable)&&(\n!has(desc,'enumerable')||desc.enumerable))\n{\ntarget[key]=desc.value;\nreturn target;\n}return dP(target,key,desc);\n};\n\nif(!ALL_CONSTRUCTORS){\n$GOPD.f=$getDesc;\n$DP.f=$setDesc;\n}\n\n$export($export.S+$export.F*!ALL_CONSTRUCTORS,'Object',{\ngetOwnPropertyDescriptor:$getDesc,\ndefineProperty:$setDesc});\n\n\nif(fails(function(){arrayToString.call({});})){\narrayToString=arrayToLocaleString=function toString(){\nreturn arrayJoin.call(this);\n};\n}\n\nvar $TypedArrayPrototype$=redefineAll({},proto);\nredefineAll($TypedArrayPrototype$,$iterators);\nhide($TypedArrayPrototype$,ITERATOR,$iterators.values);\nredefineAll($TypedArrayPrototype$,{\nslice:$slice,\nset:$set,\nconstructor:function constructor(){/* noop */},\ntoString:arrayToString,\ntoLocaleString:$toLocaleString});\n\naddGetter($TypedArrayPrototype$,'buffer','b');\naddGetter($TypedArrayPrototype$,'byteOffset','o');\naddGetter($TypedArrayPrototype$,'byteLength','l');\naddGetter($TypedArrayPrototype$,'length','e');\ndP($TypedArrayPrototype$,TAG,{\nget:function get(){return this[TYPED_ARRAY];}});\n\n\n// eslint-disable-next-line max-statements\nmodule.exports=function(KEY,BYTES,wrapper,CLAMPED){\nCLAMPED=!!CLAMPED;\nvar NAME=KEY+(CLAMPED?'Clamped':'')+'Array';\nvar GETTER='get'+KEY;\nvar SETTER='set'+KEY;\nvar TypedArray=global[NAME];\nvar Base=TypedArray||{};\nvar TAC=TypedArray&&getPrototypeOf(TypedArray);\nvar FORCED=!TypedArray||!$typed.ABV;\nvar O={};\nvar TypedArrayPrototype=TypedArray&&TypedArray[PROTOTYPE];\nvar getter=function getter(that,index){\nvar data=that._d;\nreturn data.v[GETTER](index*BYTES+data.o,LITTLE_ENDIAN);\n};\nvar setter=function setter(that,index,value){\nvar data=that._d;\nif(CLAMPED)value=(value=Math.round(value))<0?0:value>0xff?0xff:value&0xff;\ndata.v[SETTER](index*BYTES+data.o,value,LITTLE_ENDIAN);\n};\nvar addElement=function addElement(that,index){\ndP(that,index,{\nget:function get(){\nreturn getter(this,index);\n},\nset:function set(value){\nreturn setter(this,index,value);\n},\nenumerable:true});\n\n};\nif(FORCED){\nTypedArray=wrapper(function(that,data,$offset,$length){\nanInstance(that,TypedArray,NAME,'_d');\nvar index=0;\nvar offset=0;\nvar buffer,byteLength,length,klass;\nif(!isObject(data)){\nlength=toIndex(data);\nbyteLength=length*BYTES;\nbuffer=new $ArrayBuffer(byteLength);\n}else if(data instanceof $ArrayBuffer||(klass=classof(data))==ARRAY_BUFFER||klass==SHARED_BUFFER){\nbuffer=data;\noffset=toOffset($offset,BYTES);\nvar $len=data.byteLength;\nif($length===undefined){\nif($len%BYTES)throw RangeError(WRONG_LENGTH);\nbyteLength=$len-offset;\nif(byteLength<0)throw RangeError(WRONG_LENGTH);\n}else{\nbyteLength=toLength($length)*BYTES;\nif(byteLength+offset>$len)throw RangeError(WRONG_LENGTH);\n}\nlength=byteLength/BYTES;\n}else if(TYPED_ARRAY in data){\nreturn fromList(TypedArray,data);\n}else{\nreturn $from.call(TypedArray,data);\n}\nhide(that,'_d',{\nb:buffer,\no:offset,\nl:byteLength,\ne:length,\nv:new $DataView(buffer)});\n\nwhile(index<length){addElement(that,index++);}\n});\nTypedArrayPrototype=TypedArray[PROTOTYPE]=create($TypedArrayPrototype$);\nhide(TypedArrayPrototype,'constructor',TypedArray);\n}else if(!fails(function(){\nTypedArray(1);\n})||!fails(function(){\nnew TypedArray(-1);// eslint-disable-line no-new\n})||!$iterDetect(function(iter){\nnew TypedArray();// eslint-disable-line no-new\nnew TypedArray(null);// eslint-disable-line no-new\nnew TypedArray(1.5);// eslint-disable-line no-new\nnew TypedArray(iter);// eslint-disable-line no-new\n},true)){\nTypedArray=wrapper(function(that,data,$offset,$length){\nanInstance(that,TypedArray,NAME);\nvar klass;\n// `ws` module bug, temporarily remove validation length for Uint8Array\n// https://github.com/websockets/ws/pull/645\nif(!isObject(data))return new Base(toIndex(data));\nif(data instanceof $ArrayBuffer||(klass=classof(data))==ARRAY_BUFFER||klass==SHARED_BUFFER){\nreturn $length!==undefined?\nnew Base(data,toOffset($offset,BYTES),$length):\n$offset!==undefined?\nnew Base(data,toOffset($offset,BYTES)):\nnew Base(data);\n}\nif(TYPED_ARRAY in data)return fromList(TypedArray,data);\nreturn $from.call(TypedArray,data);\n});\narrayForEach(TAC!==Function.prototype?gOPN(Base).concat(gOPN(TAC)):gOPN(Base),function(key){\nif(!(key in TypedArray))hide(TypedArray,key,Base[key]);\n});\nTypedArray[PROTOTYPE]=TypedArrayPrototype;\nif(!LIBRARY)TypedArrayPrototype.constructor=TypedArray;\n}\nvar $nativeIterator=TypedArrayPrototype[ITERATOR];\nvar CORRECT_ITER_NAME=!!$nativeIterator&&(\n$nativeIterator.name=='values'||$nativeIterator.name==undefined);\nvar $iterator=$iterators.values;\nhide(TypedArray,TYPED_CONSTRUCTOR,true);\nhide(TypedArrayPrototype,TYPED_ARRAY,NAME);\nhide(TypedArrayPrototype,VIEW,true);\nhide(TypedArrayPrototype,DEF_CONSTRUCTOR,TypedArray);\n\nif(CLAMPED?new TypedArray(1)[TAG]!=NAME:!(TAG in TypedArrayPrototype)){\ndP(TypedArrayPrototype,TAG,{\nget:function get(){return NAME;}});\n\n}\n\nO[NAME]=TypedArray;\n\n$export($export.G+$export.W+$export.F*(TypedArray!=Base),O);\n\n$export($export.S,NAME,{\nBYTES_PER_ELEMENT:BYTES});\n\n\n$export($export.S+$export.F*fails(function(){Base.of.call(TypedArray,1);}),NAME,{\nfrom:$from,\nof:$of});\n\n\nif(!(BYTES_PER_ELEMENT in TypedArrayPrototype))hide(TypedArrayPrototype,BYTES_PER_ELEMENT,BYTES);\n\n$export($export.P,NAME,proto);\n\nsetSpecies(NAME);\n\n$export($export.P+$export.F*FORCED_SET,NAME,{set:$set});\n\n$export($export.P+$export.F*!CORRECT_ITER_NAME,NAME,$iterators);\n\nif(!LIBRARY&&TypedArrayPrototype.toString!=arrayToString)TypedArrayPrototype.toString=arrayToString;\n\n$export($export.P+$export.F*fails(function(){\nnew TypedArray(1).slice();\n}),NAME,{slice:$slice});\n\n$export($export.P+$export.F*(fails(function(){\nreturn[1,2].toLocaleString()!=new TypedArray([1,2]).toLocaleString();\n})||!fails(function(){\nTypedArrayPrototype.toLocaleString.call([1,2]);\n})),NAME,{toLocaleString:$toLocaleString});\n\nIterators[NAME]=CORRECT_ITER_NAME?$nativeIterator:$iterator;\nif(!LIBRARY&&!CORRECT_ITER_NAME)hide(TypedArrayPrototype,ITERATOR,$iterator);\n};\n}else module.exports=function(){/* empty */};\n\n},{\"./_an-instance\":20,\"./_array-copy-within\":22,\"./_array-fill\":23,\"./_array-includes\":24,\"./_array-methods\":25,\"./_classof\":29,\"./_ctx\":33,\"./_descriptors\":35,\"./_export\":39,\"./_fails\":41,\"./_global\":45,\"./_has\":46,\"./_hide\":47,\"./_is-array-iter\":53,\"./_is-object\":55,\"./_iter-detect\":60,\"./_iterators\":62,\"./_library\":63,\"./_object-create\":68,\"./_object-dp\":69,\"./_object-gopd\":71,\"./_object-gopn\":73,\"./_object-gpo\":75,\"./_property-desc\":83,\"./_redefine-all\":84,\"./_set-species\":87,\"./_species-constructor\":91,\"./_to-absolute-index\":98,\"./_to-index\":99,\"./_to-integer\":100,\"./_to-length\":102,\"./_to-object\":103,\"./_to-primitive\":104,\"./_typed\":107,\"./_typed-buffer\":106,\"./_uid\":108,\"./_wks\":112,\"./core.get-iterator-method\":113,\"./es6.array.iterator\":122}],106:[function(require,module,exports){\n'use strict';\nvar global=require('./_global');\nvar DESCRIPTORS=require('./_descriptors');\nvar LIBRARY=require('./_library');\nvar $typed=require('./_typed');\nvar hide=require('./_hide');\nvar redefineAll=require('./_redefine-all');\nvar fails=require('./_fails');\nvar anInstance=require('./_an-instance');\nvar toInteger=require('./_to-integer');\nvar toLength=require('./_to-length');\nvar toIndex=require('./_to-index');\nvar gOPN=require('./_object-gopn').f;\nvar dP=require('./_object-dp').f;\nvar arrayFill=require('./_array-fill');\nvar setToStringTag=require('./_set-to-string-tag');\nvar ARRAY_BUFFER='ArrayBuffer';\nvar DATA_VIEW='DataView';\nvar PROTOTYPE='prototype';\nvar WRONG_LENGTH='Wrong length!';\nvar WRONG_INDEX='Wrong index!';\nvar $ArrayBuffer=global[ARRAY_BUFFER];\nvar $DataView=global[DATA_VIEW];\nvar Math=global.Math;\nvar RangeError=global.RangeError;\n// eslint-disable-next-line no-shadow-restricted-names\nvar Infinity=global.Infinity;\nvar BaseBuffer=$ArrayBuffer;\nvar abs=Math.abs;\nvar pow=Math.pow;\nvar floor=Math.floor;\nvar log=Math.log;\nvar LN2=Math.LN2;\nvar BUFFER='buffer';\nvar BYTE_LENGTH='byteLength';\nvar BYTE_OFFSET='byteOffset';\nvar $BUFFER=DESCRIPTORS?'_b':BUFFER;\nvar $LENGTH=DESCRIPTORS?'_l':BYTE_LENGTH;\nvar $OFFSET=DESCRIPTORS?'_o':BYTE_OFFSET;\n\n// IEEE754 conversions based on https://github.com/feross/ieee754\nfunction packIEEE754(value,mLen,nBytes){\nvar buffer=new Array(nBytes);\nvar eLen=nBytes*8-mLen-1;\nvar eMax=(1<<eLen)-1;\nvar eBias=eMax>>1;\nvar rt=mLen===23?pow(2,-24)-pow(2,-77):0;\nvar i=0;\nvar s=value<0||value===0&&1/value<0?1:0;\nvar e,m,c;\nvalue=abs(value);\n// eslint-disable-next-line no-self-compare\nif(value!=value||value===Infinity){\n// eslint-disable-next-line no-self-compare\nm=value!=value?1:0;\ne=eMax;\n}else{\ne=floor(log(value)/LN2);\nif(value*(c=pow(2,-e))<1){\ne--;\nc*=2;\n}\nif(e+eBias>=1){\nvalue+=rt/c;\n}else{\nvalue+=rt*pow(2,1-eBias);\n}\nif(value*c>=2){\ne++;\nc/=2;\n}\nif(e+eBias>=eMax){\nm=0;\ne=eMax;\n}else if(e+eBias>=1){\nm=(value*c-1)*pow(2,mLen);\ne=e+eBias;\n}else{\nm=value*pow(2,eBias-1)*pow(2,mLen);\ne=0;\n}\n}\nfor(;mLen>=8;buffer[i++]=m&255,m/=256,mLen-=8){;}\ne=e<<mLen|m;\neLen+=mLen;\nfor(;eLen>0;buffer[i++]=e&255,e/=256,eLen-=8){;}\nbuffer[--i]|=s*128;\nreturn buffer;\n}\nfunction unpackIEEE754(buffer,mLen,nBytes){\nvar eLen=nBytes*8-mLen-1;\nvar eMax=(1<<eLen)-1;\nvar eBias=eMax>>1;\nvar nBits=eLen-7;\nvar i=nBytes-1;\nvar s=buffer[i--];\nvar e=s&127;\nvar m;\ns>>=7;\nfor(;nBits>0;e=e*256+buffer[i],i--,nBits-=8){;}\nm=e&(1<<-nBits)-1;\ne>>=-nBits;\nnBits+=mLen;\nfor(;nBits>0;m=m*256+buffer[i],i--,nBits-=8){;}\nif(e===0){\ne=1-eBias;\n}else if(e===eMax){\nreturn m?NaN:s?-Infinity:Infinity;\n}else{\nm=m+pow(2,mLen);\ne=e-eBias;\n}return(s?-1:1)*m*pow(2,e-mLen);\n}\n\nfunction unpackI32(bytes){\nreturn bytes[3]<<24|bytes[2]<<16|bytes[1]<<8|bytes[0];\n}\nfunction packI8(it){\nreturn[it&0xff];\n}\nfunction packI16(it){\nreturn[it&0xff,it>>8&0xff];\n}\nfunction packI32(it){\nreturn[it&0xff,it>>8&0xff,it>>16&0xff,it>>24&0xff];\n}\nfunction packF64(it){\nreturn packIEEE754(it,52,8);\n}\nfunction packF32(it){\nreturn packIEEE754(it,23,4);\n}\n\nfunction addGetter(C,key,internal){\ndP(C[PROTOTYPE],key,{get:function get(){return this[internal];}});\n}\n\nfunction get(view,bytes,index,isLittleEndian){\nvar numIndex=+index;\nvar intIndex=toIndex(numIndex);\nif(intIndex+bytes>view[$LENGTH])throw RangeError(WRONG_INDEX);\nvar store=view[$BUFFER]._b;\nvar start=intIndex+view[$OFFSET];\nvar pack=store.slice(start,start+bytes);\nreturn isLittleEndian?pack:pack.reverse();\n}\nfunction set(view,bytes,index,conversion,value,isLittleEndian){\nvar numIndex=+index;\nvar intIndex=toIndex(numIndex);\nif(intIndex+bytes>view[$LENGTH])throw RangeError(WRONG_INDEX);\nvar store=view[$BUFFER]._b;\nvar start=intIndex+view[$OFFSET];\nvar pack=conversion(+value);\nfor(var i=0;i<bytes;i++){store[start+i]=pack[isLittleEndian?i:bytes-i-1];}\n}\n\nif(!$typed.ABV){\n$ArrayBuffer=function ArrayBuffer(length){\nanInstance(this,$ArrayBuffer,ARRAY_BUFFER);\nvar byteLength=toIndex(length);\nthis._b=arrayFill.call(new Array(byteLength),0);\nthis[$LENGTH]=byteLength;\n};\n\n$DataView=function DataView(buffer,byteOffset,byteLength){\nanInstance(this,$DataView,DATA_VIEW);\nanInstance(buffer,$ArrayBuffer,DATA_VIEW);\nvar bufferLength=buffer[$LENGTH];\nvar offset=toInteger(byteOffset);\nif(offset<0||offset>bufferLength)throw RangeError('Wrong offset!');\nbyteLength=byteLength===undefined?bufferLength-offset:toLength(byteLength);\nif(offset+byteLength>bufferLength)throw RangeError(WRONG_LENGTH);\nthis[$BUFFER]=buffer;\nthis[$OFFSET]=offset;\nthis[$LENGTH]=byteLength;\n};\n\nif(DESCRIPTORS){\naddGetter($ArrayBuffer,BYTE_LENGTH,'_l');\naddGetter($DataView,BUFFER,'_b');\naddGetter($DataView,BYTE_LENGTH,'_l');\naddGetter($DataView,BYTE_OFFSET,'_o');\n}\n\nredefineAll($DataView[PROTOTYPE],{\ngetInt8:function getInt8(byteOffset){\nreturn get(this,1,byteOffset)[0]<<24>>24;\n},\ngetUint8:function getUint8(byteOffset){\nreturn get(this,1,byteOffset)[0];\n},\ngetInt16:function getInt16(byteOffset/* , littleEndian */){\nvar bytes=get(this,2,byteOffset,arguments[1]);\nreturn(bytes[1]<<8|bytes[0])<<16>>16;\n},\ngetUint16:function getUint16(byteOffset/* , littleEndian */){\nvar bytes=get(this,2,byteOffset,arguments[1]);\nreturn bytes[1]<<8|bytes[0];\n},\ngetInt32:function getInt32(byteOffset/* , littleEndian */){\nreturn unpackI32(get(this,4,byteOffset,arguments[1]));\n},\ngetUint32:function getUint32(byteOffset/* , littleEndian */){\nreturn unpackI32(get(this,4,byteOffset,arguments[1]))>>>0;\n},\ngetFloat32:function getFloat32(byteOffset/* , littleEndian */){\nreturn unpackIEEE754(get(this,4,byteOffset,arguments[1]),23,4);\n},\ngetFloat64:function getFloat64(byteOffset/* , littleEndian */){\nreturn unpackIEEE754(get(this,8,byteOffset,arguments[1]),52,8);\n},\nsetInt8:function setInt8(byteOffset,value){\nset(this,1,byteOffset,packI8,value);\n},\nsetUint8:function setUint8(byteOffset,value){\nset(this,1,byteOffset,packI8,value);\n},\nsetInt16:function setInt16(byteOffset,value/* , littleEndian */){\nset(this,2,byteOffset,packI16,value,arguments[2]);\n},\nsetUint16:function setUint16(byteOffset,value/* , littleEndian */){\nset(this,2,byteOffset,packI16,value,arguments[2]);\n},\nsetInt32:function setInt32(byteOffset,value/* , littleEndian */){\nset(this,4,byteOffset,packI32,value,arguments[2]);\n},\nsetUint32:function setUint32(byteOffset,value/* , littleEndian */){\nset(this,4,byteOffset,packI32,value,arguments[2]);\n},\nsetFloat32:function setFloat32(byteOffset,value/* , littleEndian */){\nset(this,4,byteOffset,packF32,value,arguments[2]);\n},\nsetFloat64:function setFloat64(byteOffset,value/* , littleEndian */){\nset(this,8,byteOffset,packF64,value,arguments[2]);\n}});\n\n}else{\nif(!fails(function(){\n$ArrayBuffer(1);\n})||!fails(function(){\nnew $ArrayBuffer(-1);// eslint-disable-line no-new\n})||fails(function(){\nnew $ArrayBuffer();// eslint-disable-line no-new\nnew $ArrayBuffer(1.5);// eslint-disable-line no-new\nnew $ArrayBuffer(NaN);// eslint-disable-line no-new\nreturn $ArrayBuffer.name!=ARRAY_BUFFER;\n})){\n$ArrayBuffer=function ArrayBuffer(length){\nanInstance(this,$ArrayBuffer);\nreturn new BaseBuffer(toIndex(length));\n};\nvar ArrayBufferProto=$ArrayBuffer[PROTOTYPE]=BaseBuffer[PROTOTYPE];\nfor(var keys=gOPN(BaseBuffer),j=0,key;keys.length>j;){\nif(!((key=keys[j++])in $ArrayBuffer))hide($ArrayBuffer,key,BaseBuffer[key]);\n}\nif(!LIBRARY)ArrayBufferProto.constructor=$ArrayBuffer;\n}\n// iOS Safari 7.x bug\nvar view=new $DataView(new $ArrayBuffer(2));\nvar $setInt8=$DataView[PROTOTYPE].setInt8;\nview.setInt8(0,2147483648);\nview.setInt8(1,2147483649);\nif(view.getInt8(0)||!view.getInt8(1))redefineAll($DataView[PROTOTYPE],{\nsetInt8:function setInt8(byteOffset,value){\n$setInt8.call(this,byteOffset,value<<24>>24);\n},\nsetUint8:function setUint8(byteOffset,value){\n$setInt8.call(this,byteOffset,value<<24>>24);\n}},\ntrue);\n}\nsetToStringTag($ArrayBuffer,ARRAY_BUFFER);\nsetToStringTag($DataView,DATA_VIEW);\nhide($DataView[PROTOTYPE],$typed.VIEW,true);\nexports[ARRAY_BUFFER]=$ArrayBuffer;\nexports[DATA_VIEW]=$DataView;\n\n},{\"./_an-instance\":20,\"./_array-fill\":23,\"./_descriptors\":35,\"./_fails\":41,\"./_global\":45,\"./_hide\":47,\"./_library\":63,\"./_object-dp\":69,\"./_object-gopn\":73,\"./_redefine-all\":84,\"./_set-to-string-tag\":88,\"./_to-index\":99,\"./_to-integer\":100,\"./_to-length\":102,\"./_typed\":107}],107:[function(require,module,exports){\nvar global=require('./_global');\nvar hide=require('./_hide');\nvar uid=require('./_uid');\nvar TYPED=uid('typed_array');\nvar VIEW=uid('view');\nvar ABV=!!(global.ArrayBuffer&&global.DataView);\nvar CONSTR=ABV;\nvar i=0;\nvar l=9;\nvar Typed;\n\nvar TypedArrayConstructors=\n'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'.\nsplit(',');\n\nwhile(i<l){\nif(Typed=global[TypedArrayConstructors[i++]]){\nhide(Typed.prototype,TYPED,true);\nhide(Typed.prototype,VIEW,true);\n}else CONSTR=false;\n}\n\nmodule.exports={\nABV:ABV,\nCONSTR:CONSTR,\nTYPED:TYPED,\nVIEW:VIEW};\n\n\n},{\"./_global\":45,\"./_hide\":47,\"./_uid\":108}],108:[function(require,module,exports){\nvar id=0;\nvar px=Math.random();\nmodule.exports=function(key){\nreturn'Symbol('.concat(key===undefined?'':key,')_',(++id+px).toString(36));\n};\n\n},{}],109:[function(require,module,exports){\nvar global=require('./_global');\nvar navigator=global.navigator;\n\nmodule.exports=navigator&&navigator.userAgent||'';\n\n},{\"./_global\":45}],110:[function(require,module,exports){\nvar global=require('./_global');\nvar core=require('./_core');\nvar LIBRARY=require('./_library');\nvar wksExt=require('./_wks-ext');\nvar defineProperty=require('./_object-dp').f;\nmodule.exports=function(name){\nvar $Symbol=core.Symbol||(core.Symbol=LIBRARY?{}:global.Symbol||{});\nif(name.charAt(0)!='_'&&!(name in $Symbol))defineProperty($Symbol,name,{value:wksExt.f(name)});\n};\n\n},{\"./_core\":31,\"./_global\":45,\"./_library\":63,\"./_object-dp\":69,\"./_wks-ext\":111}],111:[function(require,module,exports){\nexports.f=require('./_wks');\n\n},{\"./_wks\":112}],112:[function(require,module,exports){\nvar store=require('./_shared')('wks');\nvar uid=require('./_uid');\nvar Symbol=require('./_global').Symbol;\nvar USE_SYMBOL=typeof Symbol=='function';\n\nvar $exports=module.exports=function(name){\nreturn store[name]||(store[name]=\nUSE_SYMBOL&&Symbol[name]||(USE_SYMBOL?Symbol:uid)('Symbol.'+name));\n};\n\n$exports.store=store;\n\n},{\"./_global\":45,\"./_shared\":90,\"./_uid\":108}],113:[function(require,module,exports){\nvar classof=require('./_classof');\nvar ITERATOR=require('./_wks')('iterator');\nvar Iterators=require('./_iterators');\nmodule.exports=require('./_core').getIteratorMethod=function(it){\nif(it!=undefined)return it[ITERATOR]||\nit['@@iterator']||\nIterators[classof(it)];\n};\n\n},{\"./_classof\":29,\"./_core\":31,\"./_iterators\":62,\"./_wks\":112}],114:[function(require,module,exports){\n// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export=require('./_export');\n\n$export($export.P,'Array',{fill:require('./_array-fill')});\n\nrequire('./_add-to-unscopables')('fill');\n\n},{\"./_add-to-unscopables\":19,\"./_array-fill\":23,\"./_export\":39}],115:[function(require,module,exports){\n'use strict';\nvar $export=require('./_export');\nvar $filter=require('./_array-methods')(2);\n\n$export($export.P+$export.F*!require('./_strict-method')([].filter,true),'Array',{\n// 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])\nfilter:function filter(callbackfn/* , thisArg */){\nreturn $filter(this,callbackfn,arguments[1]);\n}});\n\n\n},{\"./_array-methods\":25,\"./_export\":39,\"./_strict-method\":92}],116:[function(require,module,exports){\n'use strict';\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\nvar $export=require('./_export');\nvar $find=require('./_array-methods')(6);\nvar KEY='findIndex';\nvar forced=true;\n// Shouldn't skip holes\nif(KEY in[])Array(1)[KEY](function(){forced=false;});\n$export($export.P+$export.F*forced,'Array',{\nfindIndex:function findIndex(callbackfn/* , that = undefined */){\nreturn $find(this,callbackfn,arguments.length>1?arguments[1]:undefined);\n}});\n\nrequire('./_add-to-unscopables')(KEY);\n\n},{\"./_add-to-unscopables\":19,\"./_array-methods\":25,\"./_export\":39}],117:[function(require,module,exports){\n'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export=require('./_export');\nvar $find=require('./_array-methods')(5);\nvar KEY='find';\nvar forced=true;\n// Shouldn't skip holes\nif(KEY in[])Array(1)[KEY](function(){forced=false;});\n$export($export.P+$export.F*forced,'Array',{\nfind:function find(callbackfn/* , that = undefined */){\nreturn $find(this,callbackfn,arguments.length>1?arguments[1]:undefined);\n}});\n\nrequire('./_add-to-unscopables')(KEY);\n\n},{\"./_add-to-unscopables\":19,\"./_array-methods\":25,\"./_export\":39}],118:[function(require,module,exports){\n'use strict';\nvar $export=require('./_export');\nvar $forEach=require('./_array-methods')(0);\nvar STRICT=require('./_strict-method')([].forEach,true);\n\n$export($export.P+$export.F*!STRICT,'Array',{\n// 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])\nforEach:function forEach(callbackfn/* , thisArg */){\nreturn $forEach(this,callbackfn,arguments[1]);\n}});\n\n\n},{\"./_array-methods\":25,\"./_export\":39,\"./_strict-method\":92}],119:[function(require,module,exports){\n'use strict';\nvar ctx=require('./_ctx');\nvar $export=require('./_export');\nvar toObject=require('./_to-object');\nvar call=require('./_iter-call');\nvar isArrayIter=require('./_is-array-iter');\nvar toLength=require('./_to-length');\nvar createProperty=require('./_create-property');\nvar getIterFn=require('./core.get-iterator-method');\n\n$export($export.S+$export.F*!require('./_iter-detect')(function(iter){Array.from(iter);}),'Array',{\n// 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\nfrom:function from(arrayLike/* , mapfn = undefined, thisArg = undefined */){\nvar O=toObject(arrayLike);\nvar C=typeof this=='function'?this:Array;\nvar aLen=arguments.length;\nvar mapfn=aLen>1?arguments[1]:undefined;\nvar mapping=mapfn!==undefined;\nvar index=0;\nvar iterFn=getIterFn(O);\nvar length,result,step,iterator;\nif(mapping)mapfn=ctx(mapfn,aLen>2?arguments[2]:undefined,2);\n// if object isn't iterable or it's array with default iterator - use simple case\nif(iterFn!=undefined&&!(C==Array&&isArrayIter(iterFn))){\nfor(iterator=iterFn.call(O),result=new C();!(step=iterator.next()).done;index++){\ncreateProperty(result,index,mapping?call(iterator,mapfn,[step.value,index],true):step.value);\n}\n}else{\nlength=toLength(O.length);\nfor(result=new C(length);length>index;index++){\ncreateProperty(result,index,mapping?mapfn(O[index],index):O[index]);\n}\n}\nresult.length=index;\nreturn result;\n}});\n\n\n},{\"./_create-property\":32,\"./_ctx\":33,\"./_export\":39,\"./_is-array-iter\":53,\"./_iter-call\":57,\"./_iter-detect\":60,\"./_to-length\":102,\"./_to-object\":103,\"./core.get-iterator-method\":113}],120:[function(require,module,exports){\n'use strict';\nvar $export=require('./_export');\nvar $indexOf=require('./_array-includes')(false);\nvar $native=[].indexOf;\nvar NEGATIVE_ZERO=!!$native&&1/[1].indexOf(1,-0)<0;\n\n$export($export.P+$export.F*(NEGATIVE_ZERO||!require('./_strict-method')($native)),'Array',{\n// 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])\nindexOf:function indexOf(searchElement/* , fromIndex = 0 */){\nreturn NEGATIVE_ZERO\n// convert -0 to +0\n?$native.apply(this,arguments)||0:\n$indexOf(this,searchElement,arguments[1]);\n}});\n\n\n},{\"./_array-includes\":24,\"./_export\":39,\"./_strict-method\":92}],121:[function(require,module,exports){\n// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)\nvar $export=require('./_export');\n\n$export($export.S,'Array',{isArray:require('./_is-array')});\n\n},{\"./_export\":39,\"./_is-array\":54}],122:[function(require,module,exports){\n'use strict';\nvar addToUnscopables=require('./_add-to-unscopables');\nvar step=require('./_iter-step');\nvar Iterators=require('./_iterators');\nvar toIObject=require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports=require('./_iter-define')(Array,'Array',function(iterated,kind){\nthis._t=toIObject(iterated);// target\nthis._i=0;// next index\nthis._k=kind;// kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n},function(){\nvar O=this._t;\nvar kind=this._k;\nvar index=this._i++;\nif(!O||index>=O.length){\nthis._t=undefined;\nreturn step(1);\n}\nif(kind=='keys')return step(0,index);\nif(kind=='values')return step(0,O[index]);\nreturn step(0,[index,O[index]]);\n},'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments=Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n},{\"./_add-to-unscopables\":19,\"./_iter-define\":59,\"./_iter-step\":61,\"./_iterators\":62,\"./_to-iobject\":101}],123:[function(require,module,exports){\n'use strict';\nvar $export=require('./_export');\nvar $map=require('./_array-methods')(1);\n\n$export($export.P+$export.F*!require('./_strict-method')([].map,true),'Array',{\n// 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])\nmap:function map(callbackfn/* , thisArg */){\nreturn $map(this,callbackfn,arguments[1]);\n}});\n\n\n},{\"./_array-methods\":25,\"./_export\":39,\"./_strict-method\":92}],124:[function(require,module,exports){\nvar DateProto=Date.prototype;\nvar INVALID_DATE='Invalid Date';\nvar TO_STRING='toString';\nvar $toString=DateProto[TO_STRING];\nvar getTime=DateProto.getTime;\nif(new Date(NaN)+''!=INVALID_DATE){\nrequire('./_redefine')(DateProto,TO_STRING,function toString(){\nvar value=getTime.call(this);\n// eslint-disable-next-line no-self-compare\nreturn value===value?$toString.call(this):INVALID_DATE;\n});\n}\n\n},{\"./_redefine\":85}],125:[function(require,module,exports){\n// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)\nvar $export=require('./_export');\n\n$export($export.P,'Function',{bind:require('./_bind')});\n\n},{\"./_bind\":28,\"./_export\":39}],126:[function(require,module,exports){\n'use strict';\nvar global=require('./_global');\nvar has=require('./_has');\nvar cof=require('./_cof');\nvar inheritIfRequired=require('./_inherit-if-required');\nvar toPrimitive=require('./_to-primitive');\nvar fails=require('./_fails');\nvar gOPN=require('./_object-gopn').f;\nvar gOPD=require('./_object-gopd').f;\nvar dP=require('./_object-dp').f;\nvar $trim=require('./_string-trim').trim;\nvar NUMBER='Number';\nvar $Number=global[NUMBER];\nvar Base=$Number;\nvar proto=$Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF=cof(require('./_object-create')(proto))==NUMBER;\nvar TRIM='trim'in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber=function toNumber(argument){\nvar it=toPrimitive(argument,false);\nif(typeof it=='string'&&it.length>2){\nit=TRIM?it.trim():$trim(it,3);\nvar first=it.charCodeAt(0);\nvar third,radix,maxCode;\nif(first===43||first===45){\nthird=it.charCodeAt(2);\nif(third===88||third===120)return NaN;// Number('+0x1') should be NaN, old V8 fix\n}else if(first===48){\nswitch(it.charCodeAt(1)){\ncase 66:case 98:radix=2;maxCode=49;break;// fast equal /^0b[01]+$/i\ncase 79:case 111:radix=8;maxCode=55;break;// fast equal /^0o[0-7]+$/i\ndefault:return+it;}\n\nfor(var digits=it.slice(2),i=0,l=digits.length,code;i<l;i++){\ncode=digits.charCodeAt(i);\n// parseInt parses a string to a first unavailable symbol\n// but ToNumber should return NaN if a string contains unavailable symbols\nif(code<48||code>maxCode)return NaN;\n}return parseInt(digits,radix);\n}\n}return+it;\n};\n\nif(!$Number(' 0o1')||!$Number('0b1')||$Number('+0x1')){\n$Number=function Number(value){\nvar it=arguments.length<1?0:value;\nvar that=this;\nreturn that instanceof $Number\n// check on 1..constructor(foo) case\n&&(BROKEN_COF?fails(function(){proto.valueOf.call(that);}):cof(that)!=NUMBER)?\ninheritIfRequired(new Base(toNumber(it)),that,$Number):toNumber(it);\n};\nfor(var keys=require('./_descriptors')?gOPN(Base):(\n// ES3:\n'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,'+\n// ES6 (in case, if modules with ES6 Number statics required before):\n'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,'+\n'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger').\nsplit(','),j=0,key;keys.length>j;j++){\nif(has(Base,key=keys[j])&&!has($Number,key)){\ndP($Number,key,gOPD(Base,key));\n}\n}\n$Number.prototype=proto;\nproto.constructor=$Number;\nrequire('./_redefine')(global,NUMBER,$Number);\n}\n\n},{\"./_cof\":30,\"./_descriptors\":35,\"./_fails\":41,\"./_global\":45,\"./_has\":46,\"./_inherit-if-required\":50,\"./_object-create\":68,\"./_object-dp\":69,\"./_object-gopd\":71,\"./_object-gopn\":73,\"./_redefine\":85,\"./_string-trim\":95,\"./_to-primitive\":104}],127:[function(require,module,exports){\n// 19.1.3.1 Object.assign(target, source)\nvar $export=require('./_export');\n\n$export($export.S+$export.F,'Object',{assign:require('./_object-assign')});\n\n},{\"./_export\":39,\"./_object-assign\":67}],128:[function(require,module,exports){\nvar $export=require('./_export');\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n$export($export.S,'Object',{create:require('./_object-create')});\n\n},{\"./_export\":39,\"./_object-create\":68}],129:[function(require,module,exports){\nvar $export=require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S+$export.F*!require('./_descriptors'),'Object',{defineProperty:require('./_object-dp').f});\n\n},{\"./_descriptors\":35,\"./_export\":39,\"./_object-dp\":69}],130:[function(require,module,exports){\n// 19.1.2.14 Object.keys(O)\nvar toObject=require('./_to-object');\nvar $keys=require('./_object-keys');\n\nrequire('./_object-sap')('keys',function(){\nreturn function keys(it){\nreturn $keys(toObject(it));\n};\n});\n\n},{\"./_object-keys\":77,\"./_object-sap\":79,\"./_to-object\":103}],131:[function(require,module,exports){\n// 19.1.3.19 Object.setPrototypeOf(O, proto)\nvar $export=require('./_export');\n$export($export.S,'Object',{setPrototypeOf:require('./_set-proto').set});\n\n},{\"./_export\":39,\"./_set-proto\":86}],132:[function(require,module,exports){\n'use strict';\nvar LIBRARY=require('./_library');\nvar global=require('./_global');\nvar ctx=require('./_ctx');\nvar classof=require('./_classof');\nvar $export=require('./_export');\nvar isObject=require('./_is-object');\nvar aFunction=require('./_a-function');\nvar anInstance=require('./_an-instance');\nvar forOf=require('./_for-of');\nvar speciesConstructor=require('./_species-constructor');\nvar task=require('./_task').set;\nvar microtask=require('./_microtask')();\nvar newPromiseCapabilityModule=require('./_new-promise-capability');\nvar perform=require('./_perform');\nvar userAgent=require('./_user-agent');\nvar promiseResolve=require('./_promise-resolve');\nvar PROMISE='Promise';\nvar TypeError=global.TypeError;\nvar process=global.process;\nvar versions=process&&process.versions;\nvar v8=versions&&versions.v8||'';\nvar $Promise=global[PROMISE];\nvar isNode=classof(process)=='process';\nvar empty=function empty(){/* empty */};\nvar Internal,newGenericPromiseCapability,OwnPromiseCapability,Wrapper;\nvar newPromiseCapability=newGenericPromiseCapability=newPromiseCapabilityModule.f;\n\nvar USE_NATIVE=!!function(){\ntry{\n// correct subclassing with @@species support\nvar promise=$Promise.resolve(1);\nvar FakePromise=(promise.constructor={})[require('./_wks')('species')]=function(exec){\nexec(empty,empty);\n};\n// unhandled rejections tracking support, NodeJS Promise without it fails @@species test\nreturn(isNode||typeof PromiseRejectionEvent=='function')&&\npromise.then(empty)instanceof FakePromise\n// v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n// https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n// we can't detect it synchronously, so just check versions\n&&v8.indexOf('6.6')!==0&&\nuserAgent.indexOf('Chrome/66')===-1;\n}catch(e){/* empty */}\n}();\n\n// helpers\nvar isThenable=function isThenable(it){\nvar then;\nreturn isObject(it)&&typeof(then=it.then)=='function'?then:false;\n};\nvar notify=function notify(promise,isReject){\nif(promise._n)return;\npromise._n=true;\nvar chain=promise._c;\nmicrotask(function(){\nvar value=promise._v;\nvar ok=promise._s==1;\nvar i=0;\nvar run=function run(reaction){\nvar handler=ok?reaction.ok:reaction.fail;\nvar resolve=reaction.resolve;\nvar reject=reaction.reject;\nvar domain=reaction.domain;\nvar result,then,exited;\ntry{\nif(handler){\nif(!ok){\nif(promise._h==2)onHandleUnhandled(promise);\npromise._h=1;\n}\nif(handler===true)result=value;else\n{\nif(domain)domain.enter();\nresult=handler(value);// may throw\nif(domain){\ndomain.exit();\nexited=true;\n}\n}\nif(result===reaction.promise){\nreject(TypeError('Promise-chain cycle'));\n}else if(then=isThenable(result)){\nthen.call(result,resolve,reject);\n}else resolve(result);\n}else reject(value);\n}catch(e){\nif(domain&&!exited)domain.exit();\nreject(e);\n}\n};\nwhile(chain.length>i){run(chain[i++]);}// variable length - can't use forEach\npromise._c=[];\npromise._n=false;\nif(isReject&&!promise._h)onUnhandled(promise);\n});\n};\nvar onUnhandled=function onUnhandled(promise){\ntask.call(global,function(){\nvar value=promise._v;\nvar unhandled=isUnhandled(promise);\nvar result,handler,console;\nif(unhandled){\nresult=perform(function(){\nif(isNode){\nprocess.emit('unhandledRejection',value,promise);\n}else if(handler=global.onunhandledrejection){\nhandler({promise:promise,reason:value});\n}else if((console=global.console)&&console.error){\nconsole.error('Unhandled promise rejection',value);\n}\n});\n// Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\npromise._h=isNode||isUnhandled(promise)?2:1;\n}promise._a=undefined;\nif(unhandled&&result.e)throw result.v;\n});\n};\nvar isUnhandled=function isUnhandled(promise){\nreturn promise._h!==1&&(promise._a||promise._c).length===0;\n};\nvar onHandleUnhandled=function onHandleUnhandled(promise){\ntask.call(global,function(){\nvar handler;\nif(isNode){\nprocess.emit('rejectionHandled',promise);\n}else if(handler=global.onrejectionhandled){\nhandler({promise:promise,reason:promise._v});\n}\n});\n};\nvar $reject=function $reject(value){\nvar promise=this;\nif(promise._d)return;\npromise._d=true;\npromise=promise._w||promise;// unwrap\npromise._v=value;\npromise._s=2;\nif(!promise._a)promise._a=promise._c.slice();\nnotify(promise,true);\n};\nvar $resolve=function $resolve(value){\nvar promise=this;\nvar then;\nif(promise._d)return;\npromise._d=true;\npromise=promise._w||promise;// unwrap\ntry{\nif(promise===value)throw TypeError(\"Promise can't be resolved itself\");\nif(then=isThenable(value)){\nmicrotask(function(){\nvar wrapper={_w:promise,_d:false};// wrap\ntry{\nthen.call(value,ctx($resolve,wrapper,1),ctx($reject,wrapper,1));\n}catch(e){\n$reject.call(wrapper,e);\n}\n});\n}else{\npromise._v=value;\npromise._s=1;\nnotify(promise,false);\n}\n}catch(e){\n$reject.call({_w:promise,_d:false},e);// wrap\n}\n};\n\n// constructor polyfill\nif(!USE_NATIVE){\n// 25.4.3.1 Promise(executor)\n$Promise=function Promise(executor){\nanInstance(this,$Promise,PROMISE,'_h');\naFunction(executor);\nInternal.call(this);\ntry{\nexecutor(ctx($resolve,this,1),ctx($reject,this,1));\n}catch(err){\n$reject.call(this,err);\n}\n};\n// eslint-disable-next-line no-unused-vars\nInternal=function Promise(executor){\nthis._c=[];// <- awaiting reactions\nthis._a=undefined;// <- checked in isUnhandled reactions\nthis._s=0;// <- state\nthis._d=false;// <- done\nthis._v=undefined;// <- value\nthis._h=0;// <- rejection state, 0 - default, 1 - handled, 2 - unhandled\nthis._n=false;// <- notify\n};\nInternal.prototype=require('./_redefine-all')($Promise.prototype,{\n// 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\nthen:function then(onFulfilled,onRejected){\nvar reaction=newPromiseCapability(speciesConstructor(this,$Promise));\nreaction.ok=typeof onFulfilled=='function'?onFulfilled:true;\nreaction.fail=typeof onRejected=='function'&&onRejected;\nreaction.domain=isNode?process.domain:undefined;\nthis._c.push(reaction);\nif(this._a)this._a.push(reaction);\nif(this._s)notify(this,false);\nreturn reaction.promise;\n},\n// 25.4.5.1 Promise.prototype.catch(onRejected)\n'catch':function _catch(onRejected){\nreturn this.then(undefined,onRejected);\n}});\n\nOwnPromiseCapability=function OwnPromiseCapability(){\nvar promise=new Internal();\nthis.promise=promise;\nthis.resolve=ctx($resolve,promise,1);\nthis.reject=ctx($reject,promise,1);\n};\nnewPromiseCapabilityModule.f=newPromiseCapability=function newPromiseCapability(C){\nreturn C===$Promise||C===Wrapper?\nnew OwnPromiseCapability(C):\nnewGenericPromiseCapability(C);\n};\n}\n\n$export($export.G+$export.W+$export.F*!USE_NATIVE,{Promise:$Promise});\nrequire('./_set-to-string-tag')($Promise,PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper=require('./_core')[PROMISE];\n\n// statics\n$export($export.S+$export.F*!USE_NATIVE,PROMISE,{\n// 25.4.4.5 Promise.reject(r)\nreject:function reject(r){\nvar capability=newPromiseCapability(this);\nvar $$reject=capability.reject;\n$$reject(r);\nreturn capability.promise;\n}});\n\n$export($export.S+$export.F*(LIBRARY||!USE_NATIVE),PROMISE,{\n// 25.4.4.6 Promise.resolve(x)\nresolve:function resolve(x){\nreturn promiseResolve(LIBRARY&&this===Wrapper?$Promise:this,x);\n}});\n\n$export($export.S+$export.F*!(USE_NATIVE&&require('./_iter-detect')(function(iter){\n$Promise.all(iter)['catch'](empty);\n})),PROMISE,{\n// 25.4.4.1 Promise.all(iterable)\nall:function all(iterable){\nvar C=this;\nvar capability=newPromiseCapability(C);\nvar resolve=capability.resolve;\nvar reject=capability.reject;\nvar result=perform(function(){\nvar values=[];\nvar index=0;\nvar remaining=1;\nforOf(iterable,false,function(promise){\nvar $index=index++;\nvar alreadyCalled=false;\nvalues.push(undefined);\nremaining++;\nC.resolve(promise).then(function(value){\nif(alreadyCalled)return;\nalreadyCalled=true;\nvalues[$index]=value;\n--remaining||resolve(values);\n},reject);\n});\n--remaining||resolve(values);\n});\nif(result.e)reject(result.v);\nreturn capability.promise;\n},\n// 25.4.4.4 Promise.race(iterable)\nrace:function race(iterable){\nvar C=this;\nvar capability=newPromiseCapability(C);\nvar reject=capability.reject;\nvar result=perform(function(){\nforOf(iterable,false,function(promise){\nC.resolve(promise).then(capability.resolve,reject);\n});\n});\nif(result.e)reject(result.v);\nreturn capability.promise;\n}});\n\n\n},{\"./_a-function\":18,\"./_an-instance\":20,\"./_classof\":29,\"./_core\":31,\"./_ctx\":33,\"./_export\":39,\"./_for-of\":44,\"./_global\":45,\"./_is-object\":55,\"./_iter-detect\":60,\"./_library\":63,\"./_microtask\":65,\"./_new-promise-capability\":66,\"./_perform\":81,\"./_promise-resolve\":82,\"./_redefine-all\":84,\"./_set-species\":87,\"./_set-to-string-tag\":88,\"./_species-constructor\":91,\"./_task\":97,\"./_user-agent\":109,\"./_wks\":112}],133:[function(require,module,exports){\n// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export=require('./_export');\nvar create=require('./_object-create');\nvar aFunction=require('./_a-function');\nvar anObject=require('./_an-object');\nvar isObject=require('./_is-object');\nvar fails=require('./_fails');\nvar bind=require('./_bind');\nvar rConstruct=(require('./_global').Reflect||{}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG=fails(function(){\nfunction F(){/* empty */}\nreturn!(rConstruct(function(){/* empty */},[],F)instanceof F);\n});\nvar ARGS_BUG=!fails(function(){\nrConstruct(function(){/* empty */});\n});\n\n$export($export.S+$export.F*(NEW_TARGET_BUG||ARGS_BUG),'Reflect',{\nconstruct:function construct(Target,args/* , newTarget */){\naFunction(Target);\nanObject(args);\nvar newTarget=arguments.length<3?Target:aFunction(arguments[2]);\nif(ARGS_BUG&&!NEW_TARGET_BUG)return rConstruct(Target,args,newTarget);\nif(Target==newTarget){\n// w/o altered newTarget, optimization for 0-4 arguments\nswitch(args.length){\ncase 0:return new Target();\ncase 1:return new Target(args[0]);\ncase 2:return new Target(args[0],args[1]);\ncase 3:return new Target(args[0],args[1],args[2]);\ncase 4:return new Target(args[0],args[1],args[2],args[3]);}\n\n// w/o altered newTarget, lot of arguments case\nvar $args=[null];\n$args.push.apply($args,args);\nreturn new(bind.apply(Target,$args))();\n}\n// with altered newTarget, not support built-in constructors\nvar proto=newTarget.prototype;\nvar instance=create(isObject(proto)?proto:Object.prototype);\nvar result=Function.apply.call(Target,instance,args);\nreturn isObject(result)?result:instance;\n}});\n\n\n},{\"./_a-function\":18,\"./_an-object\":21,\"./_bind\":28,\"./_export\":39,\"./_fails\":41,\"./_global\":45,\"./_is-object\":55,\"./_object-create\":68}],134:[function(require,module,exports){\n// 21.2.5.3 get RegExp.prototype.flags()\nif(require('./_descriptors')&&/./g.flags!='g')require('./_object-dp').f(RegExp.prototype,'flags',{\nconfigurable:true,\nget:require('./_flags')});\n\n\n},{\"./_descriptors\":35,\"./_flags\":43,\"./_object-dp\":69}],135:[function(require,module,exports){\n// @@match logic\nrequire('./_fix-re-wks')('match',1,function(defined,MATCH,$match){\n// 21.1.3.11 String.prototype.match(regexp)\nreturn[function match(regexp){\n'use strict';\nvar O=defined(this);\nvar fn=regexp==undefined?undefined:regexp[MATCH];\nreturn fn!==undefined?fn.call(regexp,O):new RegExp(regexp)[MATCH](String(O));\n},$match];\n});\n\n},{\"./_fix-re-wks\":42}],136:[function(require,module,exports){\n// @@replace logic\nrequire('./_fix-re-wks')('replace',2,function(defined,REPLACE,$replace){\n// 21.1.3.14 String.prototype.replace(searchValue, replaceValue)\nreturn[function replace(searchValue,replaceValue){\n'use strict';\nvar O=defined(this);\nvar fn=searchValue==undefined?undefined:searchValue[REPLACE];\nreturn fn!==undefined?\nfn.call(searchValue,O,replaceValue):\n$replace.call(String(O),searchValue,replaceValue);\n},$replace];\n});\n\n},{\"./_fix-re-wks\":42}],137:[function(require,module,exports){\n// @@split logic\nrequire('./_fix-re-wks')('split',2,function(defined,SPLIT,$split){\n'use strict';\nvar isRegExp=require('./_is-regexp');\nvar _split=$split;\nvar $push=[].push;\nvar $SPLIT='split';\nvar LENGTH='length';\nvar LAST_INDEX='lastIndex';\nif(\n'abbc'[$SPLIT](/(b)*/)[1]=='c'||\n'test'[$SPLIT](/(?:)/,-1)[LENGTH]!=4||\n'ab'[$SPLIT](/(?:ab)*/)[LENGTH]!=2||\n'.'[$SPLIT](/(.?)(.?)/)[LENGTH]!=4||\n'.'[$SPLIT](/()()/)[LENGTH]>1||\n''[$SPLIT](/.?/)[LENGTH])\n{\nvar NPCG=/()??/.exec('')[1]===undefined;// nonparticipating capturing group\n// based on es5-shim implementation, need to rework it\n$split=function $split(separator,limit){\nvar string=String(this);\nif(separator===undefined&&limit===0)return[];\n// If `separator` is not a regex, use native split\nif(!isRegExp(separator))return _split.call(string,separator,limit);\nvar output=[];\nvar flags=(separator.ignoreCase?'i':'')+(\nseparator.multiline?'m':'')+(\nseparator.unicode?'u':'')+(\nseparator.sticky?'y':'');\nvar lastLastIndex=0;\nvar splitLimit=limit===undefined?4294967295:limit>>>0;\n// Make `global` and avoid `lastIndex` issues by working with a copy\nvar separatorCopy=new RegExp(separator.source,flags+'g');\nvar separator2,match,lastIndex,lastLength,i;\n// Doesn't need flags gy, but they don't hurt\nif(!NPCG)separator2=new RegExp('^'+separatorCopy.source+'$(?!\\\\s)',flags);\nwhile(match=separatorCopy.exec(string)){\n// `separatorCopy.lastIndex` is not reliable cross-browser\nlastIndex=match.index+match[0][LENGTH];\nif(lastIndex>lastLastIndex){\noutput.push(string.slice(lastLastIndex,match.index));\n// Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG\n// eslint-disable-next-line no-loop-func\nif(!NPCG&&match[LENGTH]>1)match[0].replace(separator2,function(){\nfor(i=1;i<arguments[LENGTH]-2;i++){if(arguments[i]===undefined)match[i]=undefined;}\n});\nif(match[LENGTH]>1&&match.index<string[LENGTH])$push.apply(output,match.slice(1));\nlastLength=match[0][LENGTH];\nlastLastIndex=lastIndex;\nif(output[LENGTH]>=splitLimit)break;\n}\nif(separatorCopy[LAST_INDEX]===match.index)separatorCopy[LAST_INDEX]++;// Avoid an infinite loop\n}\nif(lastLastIndex===string[LENGTH]){\nif(lastLength||!separatorCopy.test(''))output.push('');\n}else output.push(string.slice(lastLastIndex));\nreturn output[LENGTH]>splitLimit?output.slice(0,splitLimit):output;\n};\n// Chakra, V8\n}else if('0'[$SPLIT](undefined,0)[LENGTH]){\n$split=function $split(separator,limit){\nreturn separator===undefined&&limit===0?[]:_split.call(this,separator,limit);\n};\n}\n// 21.1.3.17 String.prototype.split(separator, limit)\nreturn[function split(separator,limit){\nvar O=defined(this);\nvar fn=separator==undefined?undefined:separator[SPLIT];\nreturn fn!==undefined?fn.call(separator,O,limit):$split.call(String(O),separator,limit);\n},$split];\n});\n\n},{\"./_fix-re-wks\":42,\"./_is-regexp\":56}],138:[function(require,module,exports){\n'use strict';\nrequire('./es6.regexp.flags');\nvar anObject=require('./_an-object');\nvar $flags=require('./_flags');\nvar DESCRIPTORS=require('./_descriptors');\nvar TO_STRING='toString';\nvar $toString=/./[TO_STRING];\n\nvar define=function define(fn){\nrequire('./_redefine')(RegExp.prototype,TO_STRING,fn,true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif(require('./_fails')(function(){return $toString.call({source:'a',flags:'b'})!='/a/b';})){\ndefine(function toString(){\nvar R=anObject(this);\nreturn'/'.concat(R.source,'/',\n'flags'in R?R.flags:!DESCRIPTORS&&R instanceof RegExp?$flags.call(R):undefined);\n});\n// FF44- RegExp#toString has a wrong name\n}else if($toString.name!=TO_STRING){\ndefine(function toString(){\nreturn $toString.call(this);\n});\n}\n\n},{\"./_an-object\":21,\"./_descriptors\":35,\"./_fails\":41,\"./_flags\":43,\"./_redefine\":85,\"./es6.regexp.flags\":134}],139:[function(require,module,exports){\n// 21.1.3.7 String.prototype.includes(searchString, position = 0)\n'use strict';\nvar $export=require('./_export');\nvar context=require('./_string-context');\nvar INCLUDES='includes';\n\n$export($export.P+$export.F*require('./_fails-is-regexp')(INCLUDES),'String',{\nincludes:function includes(searchString/* , position = 0 */){\nreturn!!~context(this,searchString,INCLUDES).\nindexOf(searchString,arguments.length>1?arguments[1]:undefined);\n}});\n\n\n},{\"./_export\":39,\"./_fails-is-regexp\":40,\"./_string-context\":94}],140:[function(require,module,exports){\n'use strict';\nvar $at=require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String,'String',function(iterated){\nthis._t=String(iterated);// target\nthis._i=0;// next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n},function(){\nvar O=this._t;\nvar index=this._i;\nvar point;\nif(index>=O.length)return{value:undefined,done:true};\npoint=$at(O,index);\nthis._i+=point.length;\nreturn{value:point,done:false};\n});\n\n},{\"./_iter-define\":59,\"./_string-at\":93}],141:[function(require,module,exports){\n'use strict';\n// ECMAScript 6 symbols shim\nvar global=require('./_global');\nvar has=require('./_has');\nvar DESCRIPTORS=require('./_descriptors');\nvar $export=require('./_export');\nvar redefine=require('./_redefine');\nvar META=require('./_meta').KEY;\nvar $fails=require('./_fails');\nvar shared=require('./_shared');\nvar setToStringTag=require('./_set-to-string-tag');\nvar uid=require('./_uid');\nvar wks=require('./_wks');\nvar wksExt=require('./_wks-ext');\nvar wksDefine=require('./_wks-define');\nvar enumKeys=require('./_enum-keys');\nvar isArray=require('./_is-array');\nvar anObject=require('./_an-object');\nvar isObject=require('./_is-object');\nvar toIObject=require('./_to-iobject');\nvar toPrimitive=require('./_to-primitive');\nvar createDesc=require('./_property-desc');\nvar _create=require('./_object-create');\nvar gOPNExt=require('./_object-gopn-ext');\nvar $GOPD=require('./_object-gopd');\nvar $DP=require('./_object-dp');\nvar $keys=require('./_object-keys');\nvar gOPD=$GOPD.f;\nvar dP=$DP.f;\nvar gOPN=gOPNExt.f;\nvar $Symbol=global.Symbol;\nvar $JSON=global.JSON;\nvar _stringify=$JSON&&$JSON.stringify;\nvar PROTOTYPE='prototype';\nvar HIDDEN=wks('_hidden');\nvar TO_PRIMITIVE=wks('toPrimitive');\nvar isEnum={}.propertyIsEnumerable;\nvar SymbolRegistry=shared('symbol-registry');\nvar AllSymbols=shared('symbols');\nvar OPSymbols=shared('op-symbols');\nvar ObjectProto=Object[PROTOTYPE];\nvar USE_NATIVE=typeof $Symbol=='function';\nvar QObject=global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter=!QObject||!QObject[PROTOTYPE]||!QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc=DESCRIPTORS&&$fails(function(){\nreturn _create(dP({},'a',{\nget:function get(){return dP(this,'a',{value:7}).a;}})).\na!=7;\n})?function(it,key,D){\nvar protoDesc=gOPD(ObjectProto,key);\nif(protoDesc)delete ObjectProto[key];\ndP(it,key,D);\nif(protoDesc&&it!==ObjectProto)dP(ObjectProto,key,protoDesc);\n}:dP;\n\nvar wrap=function wrap(tag){\nvar sym=AllSymbols[tag]=_create($Symbol[PROTOTYPE]);\nsym._k=tag;\nreturn sym;\n};\n\nvar isSymbol=USE_NATIVE&&typeof $Symbol.iterator=='symbol'?function(it){\nreturn typeof it=='symbol';\n}:function(it){\nreturn it instanceof $Symbol;\n};\n\nvar $defineProperty=function defineProperty(it,key,D){\nif(it===ObjectProto)$defineProperty(OPSymbols,key,D);\nanObject(it);\nkey=toPrimitive(key,true);\nanObject(D);\nif(has(AllSymbols,key)){\nif(!D.enumerable){\nif(!has(it,HIDDEN))dP(it,HIDDEN,createDesc(1,{}));\nit[HIDDEN][key]=true;\n}else{\nif(has(it,HIDDEN)&&it[HIDDEN][key])it[HIDDEN][key]=false;\nD=_create(D,{enumerable:createDesc(0,false)});\n}return setSymbolDesc(it,key,D);\n}return dP(it,key,D);\n};\nvar $defineProperties=function defineProperties(it,P){\nanObject(it);\nvar keys=enumKeys(P=toIObject(P));\nvar i=0;\nvar l=keys.length;\nvar key;\nwhile(l>i){$defineProperty(it,key=keys[i++],P[key]);}\nreturn it;\n};\nvar $create=function create(it,P){\nreturn P===undefined?_create(it):$defineProperties(_create(it),P);\n};\nvar $propertyIsEnumerable=function propertyIsEnumerable(key){\nvar E=isEnum.call(this,key=toPrimitive(key,true));\nif(this===ObjectProto&&has(AllSymbols,key)&&!has(OPSymbols,key))return false;\nreturn E||!has(this,key)||!has(AllSymbols,key)||has(this,HIDDEN)&&this[HIDDEN][key]?E:true;\n};\nvar $getOwnPropertyDescriptor=function getOwnPropertyDescriptor(it,key){\nit=toIObject(it);\nkey=toPrimitive(key,true);\nif(it===ObjectProto&&has(AllSymbols,key)&&!has(OPSymbols,key))return;\nvar D=gOPD(it,key);\nif(D&&has(AllSymbols,key)&&!(has(it,HIDDEN)&&it[HIDDEN][key]))D.enumerable=true;\nreturn D;\n};\nvar $getOwnPropertyNames=function getOwnPropertyNames(it){\nvar names=gOPN(toIObject(it));\nvar result=[];\nvar i=0;\nvar key;\nwhile(names.length>i){\nif(!has(AllSymbols,key=names[i++])&&key!=HIDDEN&&key!=META)result.push(key);\n}return result;\n};\nvar $getOwnPropertySymbols=function getOwnPropertySymbols(it){\nvar IS_OP=it===ObjectProto;\nvar names=gOPN(IS_OP?OPSymbols:toIObject(it));\nvar result=[];\nvar i=0;\nvar key;\nwhile(names.length>i){\nif(has(AllSymbols,key=names[i++])&&(IS_OP?has(ObjectProto,key):true))result.push(AllSymbols[key]);\n}return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif(!USE_NATIVE){\n$Symbol=function Symbol(){\nif(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');\nvar tag=uid(arguments.length>0?arguments[0]:undefined);\nvar $set=function $set(value){\nif(this===ObjectProto)$set.call(OPSymbols,value);\nif(has(this,HIDDEN)&&has(this[HIDDEN],tag))this[HIDDEN][tag]=false;\nsetSymbolDesc(this,tag,createDesc(1,value));\n};\nif(DESCRIPTORS&&setter)setSymbolDesc(ObjectProto,tag,{configurable:true,set:$set});\nreturn wrap(tag);\n};\nredefine($Symbol[PROTOTYPE],'toString',function toString(){\nreturn this._k;\n});\n\n$GOPD.f=$getOwnPropertyDescriptor;\n$DP.f=$defineProperty;\nrequire('./_object-gopn').f=gOPNExt.f=$getOwnPropertyNames;\nrequire('./_object-pie').f=$propertyIsEnumerable;\nrequire('./_object-gops').f=$getOwnPropertySymbols;\n\nif(DESCRIPTORS&&!require('./_library')){\nredefine(ObjectProto,'propertyIsEnumerable',$propertyIsEnumerable,true);\n}\n\nwksExt.f=function(name){\nreturn wrap(wks(name));\n};\n}\n\n$export($export.G+$export.W+$export.F*!USE_NATIVE,{Symbol:$Symbol});\n\nfor(var es6Symbols=\n// 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'.\nsplit(','),j=0;es6Symbols.length>j;){wks(es6Symbols[j++]);}\n\nfor(var wellKnownSymbols=$keys(wks.store),k=0;wellKnownSymbols.length>k;){wksDefine(wellKnownSymbols[k++]);}\n\n$export($export.S+$export.F*!USE_NATIVE,'Symbol',{\n// 19.4.2.1 Symbol.for(key)\n'for':function _for(key){\nreturn has(SymbolRegistry,key+='')?\nSymbolRegistry[key]:\nSymbolRegistry[key]=$Symbol(key);\n},\n// 19.4.2.5 Symbol.keyFor(sym)\nkeyFor:function keyFor(sym){\nif(!isSymbol(sym))throw TypeError(sym+' is not a symbol!');\nfor(var key in SymbolRegistry){if(SymbolRegistry[key]===sym)return key;}\n},\nuseSetter:function useSetter(){setter=true;},\nuseSimple:function useSimple(){setter=false;}});\n\n\n$export($export.S+$export.F*!USE_NATIVE,'Object',{\n// 19.1.2.2 Object.create(O [, Properties])\ncreate:$create,\n// 19.1.2.4 Object.defineProperty(O, P, Attributes)\ndefineProperty:$defineProperty,\n// 19.1.2.3 Object.defineProperties(O, Properties)\ndefineProperties:$defineProperties,\n// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\ngetOwnPropertyDescriptor:$getOwnPropertyDescriptor,\n// 19.1.2.7 Object.getOwnPropertyNames(O)\ngetOwnPropertyNames:$getOwnPropertyNames,\n// 19.1.2.8 Object.getOwnPropertySymbols(O)\ngetOwnPropertySymbols:$getOwnPropertySymbols});\n\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON&&$export($export.S+$export.F*(!USE_NATIVE||$fails(function(){\nvar S=$Symbol();\n// MS Edge converts symbol values to JSON as {}\n// WebKit converts symbol values to JSON as null\n// V8 throws on boxed symbols\nreturn _stringify([S])!='[null]'||_stringify({a:S})!='{}'||_stringify(Object(S))!='{}';\n})),'JSON',{\nstringify:function stringify(it){\nvar args=[it];\nvar i=1;\nvar replacer,$replacer;\nwhile(arguments.length>i){args.push(arguments[i++]);}\n$replacer=replacer=args[1];\nif(!isObject(replacer)&&it===undefined||isSymbol(it))return;// IE8 returns string on undefined\nif(!isArray(replacer))replacer=function replacer(key,value){\nif(typeof $replacer=='function')value=$replacer.call(this,key,value);\nif(!isSymbol(value))return value;\n};\nargs[1]=replacer;\nreturn _stringify.apply($JSON,args);\n}});\n\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE]||require('./_hide')($Symbol[PROTOTYPE],TO_PRIMITIVE,$Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol,'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math,'Math',true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON,'JSON',true);\n\n},{\"./_an-object\":21,\"./_descriptors\":35,\"./_enum-keys\":38,\"./_export\":39,\"./_fails\":41,\"./_global\":45,\"./_has\":46,\"./_hide\":47,\"./_is-array\":54,\"./_is-object\":55,\"./_library\":63,\"./_meta\":64,\"./_object-create\":68,\"./_object-dp\":69,\"./_object-gopd\":71,\"./_object-gopn\":73,\"./_object-gopn-ext\":72,\"./_object-gops\":74,\"./_object-keys\":77,\"./_object-pie\":78,\"./_property-desc\":83,\"./_redefine\":85,\"./_set-to-string-tag\":88,\"./_shared\":90,\"./_to-iobject\":101,\"./_to-primitive\":104,\"./_uid\":108,\"./_wks\":112,\"./_wks-define\":110,\"./_wks-ext\":111}],142:[function(require,module,exports){\nrequire('./_typed-array')('Float32',4,function(init){\nreturn function Float32Array(data,byteOffset,length){\nreturn init(this,data,byteOffset,length);\n};\n});\n\n},{\"./_typed-array\":105}],143:[function(require,module,exports){\nrequire('./_typed-array')('Float64',8,function(init){\nreturn function Float64Array(data,byteOffset,length){\nreturn init(this,data,byteOffset,length);\n};\n});\n\n},{\"./_typed-array\":105}],144:[function(require,module,exports){\nrequire('./_typed-array')('Uint8',1,function(init){\nreturn function Uint8Array(data,byteOffset,length){\nreturn init(this,data,byteOffset,length);\n};\n});\n\n},{\"./_typed-array\":105}],145:[function(require,module,exports){\nrequire('./_typed-array')('Uint8',1,function(init){\nreturn function Uint8ClampedArray(data,byteOffset,length){\nreturn init(this,data,byteOffset,length);\n};\n},true);\n\n},{\"./_typed-array\":105}],146:[function(require,module,exports){\n'use strict';\n// https://github.com/tc39/Array.prototype.includes\nvar $export=require('./_export');\nvar $includes=require('./_array-includes')(true);\n\n$export($export.P,'Array',{\nincludes:function includes(el/* , fromIndex = 0 */){\nreturn $includes(this,el,arguments.length>1?arguments[1]:undefined);\n}});\n\n\nrequire('./_add-to-unscopables')('includes');\n\n},{\"./_add-to-unscopables\":19,\"./_array-includes\":24,\"./_export\":39}],147:[function(require,module,exports){\n// https://github.com/tc39/proposal-object-values-entries\nvar $export=require('./_export');\nvar $entries=require('./_object-to-array')(true);\n\n$export($export.S,'Object',{\nentries:function entries(it){\nreturn $entries(it);\n}});\n\n\n},{\"./_export\":39,\"./_object-to-array\":80}],148:[function(require,module,exports){\nrequire('./_wks-define')('asyncIterator');\n\n},{\"./_wks-define\":110}],149:[function(require,module,exports){\nvar $iterators=require('./es6.array.iterator');\nvar getKeys=require('./_object-keys');\nvar redefine=require('./_redefine');\nvar global=require('./_global');\nvar hide=require('./_hide');\nvar Iterators=require('./_iterators');\nvar wks=require('./_wks');\nvar ITERATOR=wks('iterator');\nvar TO_STRING_TAG=wks('toStringTag');\nvar ArrayValues=Iterators.Array;\n\nvar DOMIterables={\nCSSRuleList:true,// TODO: Not spec compliant, should be false.\nCSSStyleDeclaration:false,\nCSSValueList:false,\nClientRectList:false,\nDOMRectList:false,\nDOMStringList:false,\nDOMTokenList:true,\nDataTransferItemList:false,\nFileList:false,\nHTMLAllCollection:false,\nHTMLCollection:false,\nHTMLFormElement:false,\nHTMLSelectElement:false,\nMediaList:true,// TODO: Not spec compliant, should be false.\nMimeTypeArray:false,\nNamedNodeMap:false,\nNodeList:true,\nPaintRequestList:false,\nPlugin:false,\nPluginArray:false,\nSVGLengthList:false,\nSVGNumberList:false,\nSVGPathSegList:false,\nSVGPointList:false,\nSVGStringList:false,\nSVGTransformList:false,\nSourceBufferList:false,\nStyleSheetList:true,// TODO: Not spec compliant, should be false.\nTextTrackCueList:false,\nTextTrackList:false,\nTouchList:false};\n\n\nfor(var collections=getKeys(DOMIterables),i=0;i<collections.length;i++){\nvar NAME=collections[i];\nvar explicit=DOMIterables[NAME];\nvar Collection=global[NAME];\nvar proto=Collection&&Collection.prototype;\nvar key;\nif(proto){\nif(!proto[ITERATOR])hide(proto,ITERATOR,ArrayValues);\nif(!proto[TO_STRING_TAG])hide(proto,TO_STRING_TAG,NAME);\nIterators[NAME]=ArrayValues;\nif(explicit)for(key in $iterators){if(!proto[key])redefine(proto,key,$iterators[key],true);}\n}\n}\n\n},{\"./_global\":45,\"./_hide\":47,\"./_iterators\":62,\"./_object-keys\":77,\"./_redefine\":85,\"./_wks\":112,\"./es6.array.iterator\":122}],150:[function(require,module,exports){\n(function(Buffer){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg){\nif(Array.isArray){\nreturn Array.isArray(arg);\n}\nreturn objectToString(arg)==='[object Array]';\n}\nexports.isArray=isArray;\n\nfunction isBoolean(arg){\nreturn typeof arg==='boolean';\n}\nexports.isBoolean=isBoolean;\n\nfunction isNull(arg){\nreturn arg===null;\n}\nexports.isNull=isNull;\n\nfunction isNullOrUndefined(arg){\nreturn arg==null;\n}\nexports.isNullOrUndefined=isNullOrUndefined;\n\nfunction isNumber(arg){\nreturn typeof arg==='number';\n}\nexports.isNumber=isNumber;\n\nfunction isString(arg){\nreturn typeof arg==='string';\n}\nexports.isString=isString;\n\nfunction isSymbol(arg){\nreturn typeof arg==='symbol';\n}\nexports.isSymbol=isSymbol;\n\nfunction isUndefined(arg){\nreturn arg===void 0;\n}\nexports.isUndefined=isUndefined;\n\nfunction isRegExp(re){\nreturn objectToString(re)==='[object RegExp]';\n}\nexports.isRegExp=isRegExp;\n\nfunction isObject(arg){\nreturn typeof arg==='object'&&arg!==null;\n}\nexports.isObject=isObject;\n\nfunction isDate(d){\nreturn objectToString(d)==='[object Date]';\n}\nexports.isDate=isDate;\n\nfunction isError(e){\nreturn objectToString(e)==='[object Error]'||e instanceof Error;\n}\nexports.isError=isError;\n\nfunction isFunction(arg){\nreturn typeof arg==='function';\n}\nexports.isFunction=isFunction;\n\nfunction isPrimitive(arg){\nreturn arg===null||\ntypeof arg==='boolean'||\ntypeof arg==='number'||\ntypeof arg==='string'||\ntypeof arg==='symbol'||// ES6 symbol\ntypeof arg==='undefined';\n}\nexports.isPrimitive=isPrimitive;\n\nexports.isBuffer=Buffer.isBuffer;\n\nfunction objectToString(o){\nreturn Object.prototype.toString.call(o);\n}\n\n}).call(this,{\"isBuffer\":require(\"../../is-buffer/index.js\")});\n},{\"../../is-buffer/index.js\":167}],151:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar objectCreate=Object.create||objectCreatePolyfill;\nvar objectKeys=Object.keys||objectKeysPolyfill;\nvar bind=Function.prototype.bind||functionBindPolyfill;\n\nfunction EventEmitter(){\nif(!this._events||!Object.prototype.hasOwnProperty.call(this,'_events')){\nthis._events=objectCreate(null);\nthis._eventsCount=0;\n}\n\nthis._maxListeners=this._maxListeners||undefined;\n}\nmodule.exports=EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter=EventEmitter;\n\nEventEmitter.prototype._events=undefined;\nEventEmitter.prototype._maxListeners=undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners=10;\n\nvar hasDefineProperty;\ntry{\nvar o={};\nif(Object.defineProperty)Object.defineProperty(o,'x',{value:0});\nhasDefineProperty=o.x===0;\n}catch(err){hasDefineProperty=false;}\nif(hasDefineProperty){\nObject.defineProperty(EventEmitter,'defaultMaxListeners',{\nenumerable:true,\nget:function get(){\nreturn defaultMaxListeners;\n},\nset:function set(arg){\n// check whether the input is a positive number (whose value is zero or\n// greater and not a NaN).\nif(typeof arg!=='number'||arg<0||arg!==arg)\nthrow new TypeError('\"defaultMaxListeners\" must be a positive number');\ndefaultMaxListeners=arg;\n}});\n\n}else{\nEventEmitter.defaultMaxListeners=defaultMaxListeners;\n}\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners=function setMaxListeners(n){\nif(typeof n!=='number'||n<0||isNaN(n))\nthrow new TypeError('\"n\" argument must be a positive number');\nthis._maxListeners=n;\nreturn this;\n};\n\nfunction $getMaxListeners(that){\nif(that._maxListeners===undefined)\nreturn EventEmitter.defaultMaxListeners;\nreturn that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners=function getMaxListeners(){\nreturn $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler,isFn,self){\nif(isFn)\nhandler.call(self);else\n{\nvar len=handler.length;\nvar listeners=arrayClone(handler,len);\nfor(var i=0;i<len;++i){\nlisteners[i].call(self);}\n}\n}\nfunction emitOne(handler,isFn,self,arg1){\nif(isFn)\nhandler.call(self,arg1);else\n{\nvar len=handler.length;\nvar listeners=arrayClone(handler,len);\nfor(var i=0;i<len;++i){\nlisteners[i].call(self,arg1);}\n}\n}\nfunction emitTwo(handler,isFn,self,arg1,arg2){\nif(isFn)\nhandler.call(self,arg1,arg2);else\n{\nvar len=handler.length;\nvar listeners=arrayClone(handler,len);\nfor(var i=0;i<len;++i){\nlisteners[i].call(self,arg1,arg2);}\n}\n}\nfunction emitThree(handler,isFn,self,arg1,arg2,arg3){\nif(isFn)\nhandler.call(self,arg1,arg2,arg3);else\n{\nvar len=handler.length;\nvar listeners=arrayClone(handler,len);\nfor(var i=0;i<len;++i){\nlisteners[i].call(self,arg1,arg2,arg3);}\n}\n}\n\nfunction emitMany(handler,isFn,self,args){\nif(isFn)\nhandler.apply(self,args);else\n{\nvar len=handler.length;\nvar listeners=arrayClone(handler,len);\nfor(var i=0;i<len;++i){\nlisteners[i].apply(self,args);}\n}\n}\n\nEventEmitter.prototype.emit=function emit(type){\nvar er,handler,len,args,i,events;\nvar doError=type==='error';\n\nevents=this._events;\nif(events)\ndoError=doError&&events.error==null;else\nif(!doError)\nreturn false;\n\n// If there is no 'error' event listener then throw.\nif(doError){\nif(arguments.length>1)\ner=arguments[1];\nif(er instanceof Error){\nthrow er;// Unhandled 'error' event\n}else{\n// At least give some kind of context to the user\nvar err=new Error('Unhandled \"error\" event. ('+er+')');\nerr.context=er;\nthrow err;\n}\nreturn false;\n}\n\nhandler=events[type];\n\nif(!handler)\nreturn false;\n\nvar isFn=typeof handler==='function';\nlen=arguments.length;\nswitch(len){\n// fast cases\ncase 1:\nemitNone(handler,isFn,this);\nbreak;\ncase 2:\nemitOne(handler,isFn,this,arguments[1]);\nbreak;\ncase 3:\nemitTwo(handler,isFn,this,arguments[1],arguments[2]);\nbreak;\ncase 4:\nemitThree(handler,isFn,this,arguments[1],arguments[2],arguments[3]);\nbreak;\n// slower\ndefault:\nargs=new Array(len-1);\nfor(i=1;i<len;i++){\nargs[i-1]=arguments[i];}\nemitMany(handler,isFn,this,args);}\n\n\nreturn true;\n};\n\nfunction _addListener(target,type,listener,prepend){\nvar m;\nvar events;\nvar existing;\n\nif(typeof listener!=='function')\nthrow new TypeError('\"listener\" argument must be a function');\n\nevents=target._events;\nif(!events){\nevents=target._events=objectCreate(null);\ntarget._eventsCount=0;\n}else{\n// To avoid recursion in the case that type === \"newListener\"! Before\n// adding it to the listeners, first emit \"newListener\".\nif(events.newListener){\ntarget.emit('newListener',type,\nlistener.listener?listener.listener:listener);\n\n// Re-assign `events` because a newListener handler could have caused the\n// this._events to be assigned to a new object\nevents=target._events;\n}\nexisting=events[type];\n}\n\nif(!existing){\n// Optimize the case of one listener. Don't need the extra array object.\nexisting=events[type]=listener;\n++target._eventsCount;\n}else{\nif(typeof existing==='function'){\n// Adding the second element, need to change to array.\nexisting=events[type]=\nprepend?[listener,existing]:[existing,listener];\n}else{\n// If we've already got an array, just append.\nif(prepend){\nexisting.unshift(listener);\n}else{\nexisting.push(listener);\n}\n}\n\n// Check for listener leak\nif(!existing.warned){\nm=$getMaxListeners(target);\nif(m&&m>0&&existing.length>m){\nexisting.warned=true;\nvar w=new Error('Possible EventEmitter memory leak detected. '+\nexisting.length+' \"'+String(type)+'\" listeners '+\n'added. Use emitter.setMaxListeners() to '+\n'increase limit.');\nw.name='MaxListenersExceededWarning';\nw.emitter=target;\nw.type=type;\nw.count=existing.length;\nif(typeof console==='object'&&console.warn){\nconsole.warn('%s: %s',w.name,w.message);\n}\n}\n}\n}\n\nreturn target;\n}\n\nEventEmitter.prototype.addListener=function addListener(type,listener){\nreturn _addListener(this,type,listener,false);\n};\n\nEventEmitter.prototype.on=EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener=\nfunction prependListener(type,listener){\nreturn _addListener(this,type,listener,true);\n};\n\nfunction onceWrapper(){\nif(!this.fired){\nthis.target.removeListener(this.type,this.wrapFn);\nthis.fired=true;\nswitch(arguments.length){\ncase 0:\nreturn this.listener.call(this.target);\ncase 1:\nreturn this.listener.call(this.target,arguments[0]);\ncase 2:\nreturn this.listener.call(this.target,arguments[0],arguments[1]);\ncase 3:\nreturn this.listener.call(this.target,arguments[0],arguments[1],\narguments[2]);\ndefault:\nvar args=new Array(arguments.length);\nfor(var i=0;i<args.length;++i){\nargs[i]=arguments[i];}\nthis.listener.apply(this.target,args);}\n\n}\n}\n\nfunction _onceWrap(target,type,listener){\nvar state={fired:false,wrapFn:undefined,target:target,type:type,listener:listener};\nvar wrapped=bind.call(onceWrapper,state);\nwrapped.listener=listener;\nstate.wrapFn=wrapped;\nreturn wrapped;\n}\n\nEventEmitter.prototype.once=function once(type,listener){\nif(typeof listener!=='function')\nthrow new TypeError('\"listener\" argument must be a function');\nthis.on(type,_onceWrap(this,type,listener));\nreturn this;\n};\n\nEventEmitter.prototype.prependOnceListener=\nfunction prependOnceListener(type,listener){\nif(typeof listener!=='function')\nthrow new TypeError('\"listener\" argument must be a function');\nthis.prependListener(type,_onceWrap(this,type,listener));\nreturn this;\n};\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener=\nfunction removeListener(type,listener){\nvar list,events,position,i,originalListener;\n\nif(typeof listener!=='function')\nthrow new TypeError('\"listener\" argument must be a function');\n\nevents=this._events;\nif(!events)\nreturn this;\n\nlist=events[type];\nif(!list)\nreturn this;\n\nif(list===listener||list.listener===listener){\nif(--this._eventsCount===0)\nthis._events=objectCreate(null);else\n{\ndelete events[type];\nif(events.removeListener)\nthis.emit('removeListener',type,list.listener||listener);\n}\n}else if(typeof list!=='function'){\nposition=-1;\n\nfor(i=list.length-1;i>=0;i--){\nif(list[i]===listener||list[i].listener===listener){\noriginalListener=list[i].listener;\nposition=i;\nbreak;\n}\n}\n\nif(position<0)\nreturn this;\n\nif(position===0)\nlist.shift();else\n\nspliceOne(list,position);\n\nif(list.length===1)\nevents[type]=list[0];\n\nif(events.removeListener)\nthis.emit('removeListener',type,originalListener||listener);\n}\n\nreturn this;\n};\n\nEventEmitter.prototype.removeAllListeners=\nfunction removeAllListeners(type){\nvar listeners,events,i;\n\nevents=this._events;\nif(!events)\nreturn this;\n\n// not listening for removeListener, no need to emit\nif(!events.removeListener){\nif(arguments.length===0){\nthis._events=objectCreate(null);\nthis._eventsCount=0;\n}else if(events[type]){\nif(--this._eventsCount===0)\nthis._events=objectCreate(null);else\n\ndelete events[type];\n}\nreturn this;\n}\n\n// emit removeListener for all listeners on all events\nif(arguments.length===0){\nvar keys=objectKeys(events);\nvar key;\nfor(i=0;i<keys.length;++i){\nkey=keys[i];\nif(key==='removeListener')continue;\nthis.removeAllListeners(key);\n}\nthis.removeAllListeners('removeListener');\nthis._events=objectCreate(null);\nthis._eventsCount=0;\nreturn this;\n}\n\nlisteners=events[type];\n\nif(typeof listeners==='function'){\nthis.removeListener(type,listeners);\n}else if(listeners){\n// LIFO order\nfor(i=listeners.length-1;i>=0;i--){\nthis.removeListener(type,listeners[i]);\n}\n}\n\nreturn this;\n};\n\nfunction _listeners(target,type,unwrap){\nvar events=target._events;\n\nif(!events)\nreturn[];\n\nvar evlistener=events[type];\nif(!evlistener)\nreturn[];\n\nif(typeof evlistener==='function')\nreturn unwrap?[evlistener.listener||evlistener]:[evlistener];\n\nreturn unwrap?unwrapListeners(evlistener):arrayClone(evlistener,evlistener.length);\n}\n\nEventEmitter.prototype.listeners=function listeners(type){\nreturn _listeners(this,type,true);\n};\n\nEventEmitter.prototype.rawListeners=function rawListeners(type){\nreturn _listeners(this,type,false);\n};\n\nEventEmitter.listenerCount=function(emitter,type){\nif(typeof emitter.listenerCount==='function'){\nreturn emitter.listenerCount(type);\n}else{\nreturn listenerCount.call(emitter,type);\n}\n};\n\nEventEmitter.prototype.listenerCount=listenerCount;\nfunction listenerCount(type){\nvar events=this._events;\n\nif(events){\nvar evlistener=events[type];\n\nif(typeof evlistener==='function'){\nreturn 1;\n}else if(evlistener){\nreturn evlistener.length;\n}\n}\n\nreturn 0;\n}\n\nEventEmitter.prototype.eventNames=function eventNames(){\nreturn this._eventsCount>0?Reflect.ownKeys(this._events):[];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list,index){\nfor(var i=index,k=i+1,n=list.length;k<n;i+=1,k+=1){\nlist[i]=list[k];}\nlist.pop();\n}\n\nfunction arrayClone(arr,n){\nvar copy=new Array(n);\nfor(var i=0;i<n;++i){\ncopy[i]=arr[i];}\nreturn copy;\n}\n\nfunction unwrapListeners(arr){\nvar ret=new Array(arr.length);\nfor(var i=0;i<ret.length;++i){\nret[i]=arr[i].listener||arr[i];\n}\nreturn ret;\n}\n\nfunction objectCreatePolyfill(proto){\nvar F=function F(){};\nF.prototype=proto;\nreturn new F();\n}\nfunction objectKeysPolyfill(obj){\nvar keys=[];\nfor(var k in obj){if(Object.prototype.hasOwnProperty.call(obj,k)){\nkeys.push(k);\n}}\nreturn k;\n}\nfunction functionBindPolyfill(context){\nvar fn=this;\nreturn function(){\nreturn fn.apply(context,arguments);\n};\n}\n\n},{}],152:[function(require,module,exports){\nvar Parser=require('./lib/parser');\n\nfunction getGlobal(){\nreturn(1,eval)('this');\n}\n\nmodule.exports={\ncreate:function create(buffer,global){\nglobal=global||getGlobal();\nif(buffer instanceof global.ArrayBuffer){\nvar DOMBufferStream=require('./lib/dom-bufferstream');\nreturn new Parser(new DOMBufferStream(buffer,0,buffer.byteLength,true,global));\n}else{\nvar NodeBufferStream=require('./lib/bufferstream');\nreturn new Parser(new NodeBufferStream(buffer,0,buffer.length,true));\n}\n}};\n\n\n},{\"./lib/bufferstream\":153,\"./lib/dom-bufferstream\":155,\"./lib/parser\":159}],153:[function(require,module,exports){\nfunction BufferStream(buffer,offset,length,bigEndian){\nthis.buffer=buffer;\nthis.offset=offset||0;\nlength=typeof length==='number'?length:buffer.length;\nthis.endPosition=this.offset+length;\nthis.setBigEndian(bigEndian);\n}\n\nBufferStream.prototype={\nsetBigEndian:function setBigEndian(bigEndian){\nthis.bigEndian=!!bigEndian;\n},\nnextUInt8:function nextUInt8(){\nvar value=this.buffer.readUInt8(this.offset);\nthis.offset+=1;\nreturn value;\n},\nnextInt8:function nextInt8(){\nvar value=this.buffer.readInt8(this.offset);\nthis.offset+=1;\nreturn value;\n},\nnextUInt16:function nextUInt16(){\nvar value=this.bigEndian?this.buffer.readUInt16BE(this.offset):this.buffer.readUInt16LE(this.offset);\nthis.offset+=2;\nreturn value;\n},\nnextUInt32:function nextUInt32(){\nvar value=this.bigEndian?this.buffer.readUInt32BE(this.offset):this.buffer.readUInt32LE(this.offset);\nthis.offset+=4;\nreturn value;\n},\nnextInt16:function nextInt16(){\nvar value=this.bigEndian?this.buffer.readInt16BE(this.offset):this.buffer.readInt16LE(this.offset);\nthis.offset+=2;\nreturn value;\n},\nnextInt32:function nextInt32(){\nvar value=this.bigEndian?this.buffer.readInt32BE(this.offset):this.buffer.readInt32LE(this.offset);\nthis.offset+=4;\nreturn value;\n},\nnextFloat:function nextFloat(){\nvar value=this.bigEndian?this.buffer.readFloatBE(this.offset):this.buffer.readFloatLE(this.offset);\nthis.offset+=4;\nreturn value;\n},\nnextDouble:function nextDouble(){\nvar value=this.bigEndian?this.buffer.readDoubleBE(this.offset):this.buffer.readDoubleLE(this.offset);\nthis.offset+=8;\nreturn value;\n},\nnextBuffer:function nextBuffer(length){\nvar value=this.buffer.slice(this.offset,this.offset+length);\nthis.offset+=length;\nreturn value;\n},\nremainingLength:function remainingLength(){\nreturn this.endPosition-this.offset;\n},\nnextString:function nextString(length){\nvar value=this.buffer.toString('utf8',this.offset,this.offset+length);\nthis.offset+=length;\nreturn value;\n},\nmark:function mark(){\nvar self=this;\nreturn{\nopenWithOffset:function openWithOffset(offset){\noffset=(offset||0)+this.offset;\nreturn new BufferStream(self.buffer,offset,self.endPosition-offset,self.bigEndian);\n},\noffset:this.offset};\n\n},\noffsetFrom:function offsetFrom(marker){\nreturn this.offset-marker.offset;\n},\nskip:function skip(amount){\nthis.offset+=amount;\n},\nbranch:function branch(offset,length){\nlength=typeof length==='number'?length:this.endPosition-(this.offset+offset);\nreturn new BufferStream(this.buffer,this.offset+offset,length,this.bigEndian);\n}};\n\n\nmodule.exports=BufferStream;\n\n},{}],154:[function(require,module,exports){\nfunction parseNumber(s){\nreturn parseInt(s,10);\n}\n\n//in seconds\nvar hours=3600;\nvar minutes=60;\n\n//take date (year, month, day) and time (hour, minutes, seconds) digits in UTC\n//and return a timestamp in seconds\nfunction parseDateTimeParts(dateParts,timeParts){\ndateParts=dateParts.map(parseNumber);\ntimeParts=timeParts.map(parseNumber);\nvar year=dateParts[0];\nvar month=dateParts[1]-1;\nvar day=dateParts[2];\nvar hours=timeParts[0];\nvar minutes=timeParts[1];\nvar seconds=timeParts[2];\nvar date=Date.UTC(year,month,day,hours,minutes,seconds,0);\nvar timestamp=date/1000;\nreturn timestamp;\n}\n\n//parse date with \"2004-09-04T23:39:06-08:00\" format,\n//one of the formats supported by ISO 8601, and\n//convert to utc timestamp in seconds\nfunction parseDateWithTimezoneFormat(dateTimeStr){\n\nvar dateParts=dateTimeStr.substr(0,10).split('-');\nvar timeParts=dateTimeStr.substr(11,8).split(':');\nvar timezoneStr=dateTimeStr.substr(19,6);\nvar timezoneParts=timezoneStr.split(':').map(parseNumber);\nvar timezoneOffset=timezoneParts[0]*hours+\ntimezoneParts[1]*minutes;\n\nvar timestamp=parseDateTimeParts(dateParts,timeParts);\n//minus because the timezoneOffset describes\n//how much the described time is ahead of UTC\ntimestamp-=timezoneOffset;\n\nif(typeof timestamp==='number'&&!isNaN(timestamp)){\nreturn timestamp;\n}\n}\n\n//parse date with \"YYYY:MM:DD hh:mm:ss\" format, convert to utc timestamp in seconds\nfunction parseDateWithSpecFormat(dateTimeStr){\nvar parts=dateTimeStr.split(' '),\ndateParts=parts[0].split(':'),\ntimeParts=parts[1].split(':');\n\nvar timestamp=parseDateTimeParts(dateParts,timeParts);\n\nif(typeof timestamp==='number'&&!isNaN(timestamp)){\nreturn timestamp;\n}\n}\n\nfunction parseExifDate(dateTimeStr){\n//some easy checks to determine two common date formats\n\n//is the date in the standard \"YYYY:MM:DD hh:mm:ss\" format?\nvar isSpecFormat=dateTimeStr.length===19&&\ndateTimeStr.charAt(4)===':';\n//is the date in the non-standard format,\n//\"2004-09-04T23:39:06-08:00\" to include a timezone?\nvar isTimezoneFormat=dateTimeStr.length===25&&\ndateTimeStr.charAt(10)==='T';\nvar timestamp;\n\nif(isTimezoneFormat){\nreturn parseDateWithTimezoneFormat(dateTimeStr);\n}else\nif(isSpecFormat){\nreturn parseDateWithSpecFormat(dateTimeStr);\n}\n}\n\nmodule.exports={\nparseDateWithSpecFormat:parseDateWithSpecFormat,\nparseDateWithTimezoneFormat:parseDateWithTimezoneFormat,\nparseExifDate:parseExifDate};\n\n\n},{}],155:[function(require,module,exports){\n/*jslint browser: true, devel: true, bitwise: false, debug: true, eqeq: false, es5: true, evil: false, forin: false, newcap: false, nomen: true, plusplus: true, regexp: false, unparam: false, sloppy: true, stupid: false, sub: false, todo: true, vars: true, white: true */\n\nfunction DOMBufferStream(arrayBuffer,offset,length,bigEndian,global,parentOffset){\nthis.global=global;\noffset=offset||0;\nlength=length||arrayBuffer.byteLength-offset;\nthis.arrayBuffer=arrayBuffer.slice(offset,offset+length);\nthis.view=new global.DataView(this.arrayBuffer,0,this.arrayBuffer.byteLength);\nthis.setBigEndian(bigEndian);\nthis.offset=0;\nthis.parentOffset=(parentOffset||0)+offset;\n}\n\nDOMBufferStream.prototype={\nsetBigEndian:function setBigEndian(bigEndian){\nthis.littleEndian=!bigEndian;\n},\nnextUInt8:function nextUInt8(){\nvar value=this.view.getUint8(this.offset);\nthis.offset+=1;\nreturn value;\n},\nnextInt8:function nextInt8(){\nvar value=this.view.getInt8(this.offset);\nthis.offset+=1;\nreturn value;\n},\nnextUInt16:function nextUInt16(){\nvar value=this.view.getUint16(this.offset,this.littleEndian);\nthis.offset+=2;\nreturn value;\n},\nnextUInt32:function nextUInt32(){\nvar value=this.view.getUint32(this.offset,this.littleEndian);\nthis.offset+=4;\nreturn value;\n},\nnextInt16:function nextInt16(){\nvar value=this.view.getInt16(this.offset,this.littleEndian);\nthis.offset+=2;\nreturn value;\n},\nnextInt32:function nextInt32(){\nvar value=this.view.getInt32(this.offset,this.littleEndian);\nthis.offset+=4;\nreturn value;\n},\nnextFloat:function nextFloat(){\nvar value=this.view.getFloat32(this.offset,this.littleEndian);\nthis.offset+=4;\nreturn value;\n},\nnextDouble:function nextDouble(){\nvar value=this.view.getFloat64(this.offset,this.littleEndian);\nthis.offset+=8;\nreturn value;\n},\nnextBuffer:function nextBuffer(length){\n//this won't work in IE10\nvar value=this.arrayBuffer.slice(this.offset,this.offset+length);\nthis.offset+=length;\nreturn value;\n},\nremainingLength:function remainingLength(){\nreturn this.arrayBuffer.byteLength-this.offset;\n},\nnextString:function nextString(length){\nvar value=this.arrayBuffer.slice(this.offset,this.offset+length);\nvalue=String.fromCharCode.apply(null,new this.global.Uint8Array(value));\nthis.offset+=length;\nreturn value;\n},\nmark:function mark(){\nvar self=this;\nreturn{\nopenWithOffset:function openWithOffset(offset){\noffset=(offset||0)+this.offset;\nreturn new DOMBufferStream(self.arrayBuffer,offset,self.arrayBuffer.byteLength-offset,!self.littleEndian,self.global,self.parentOffset);\n},\noffset:this.offset,\ngetParentOffset:function getParentOffset(){\nreturn self.parentOffset;\n}};\n\n},\noffsetFrom:function offsetFrom(marker){\nreturn this.parentOffset+this.offset-(marker.offset+marker.getParentOffset());\n},\nskip:function skip(amount){\nthis.offset+=amount;\n},\nbranch:function branch(offset,length){\nlength=typeof length==='number'?length:this.arrayBuffer.byteLength-(this.offset+offset);\nreturn new DOMBufferStream(this.arrayBuffer,this.offset+offset,length,!this.littleEndian,this.global,this.parentOffset);\n}};\n\n\nmodule.exports=DOMBufferStream;\n\n},{}],156:[function(require,module,exports){\nmodule.exports={\nexif:{\n0x0001:\"InteropIndex\",\n0x0002:\"InteropVersion\",\n0x000B:\"ProcessingSoftware\",\n0x00FE:\"SubfileType\",\n0x00FF:\"OldSubfileType\",\n0x0100:\"ImageWidth\",\n0x0101:\"ImageHeight\",\n0x0102:\"BitsPerSample\",\n0x0103:\"Compression\",\n0x0106:\"PhotometricInterpretation\",\n0x0107:\"Thresholding\",\n0x0108:\"CellWidth\",\n0x0109:\"CellLength\",\n0x010A:\"FillOrder\",\n0x010D:\"DocumentName\",\n0x010E:\"ImageDescription\",\n0x010F:\"Make\",\n0x0110:\"Model\",\n0x0111:\"StripOffsets\",\n0x0112:\"Orientation\",\n0x0115:\"SamplesPerPixel\",\n0x0116:\"RowsPerStrip\",\n0x0117:\"StripByteCounts\",\n0x0118:\"MinSampleValue\",\n0x0119:\"MaxSampleValue\",\n0x011A:\"XResolution\",\n0x011B:\"YResolution\",\n0x011C:\"PlanarConfiguration\",\n0x011D:\"PageName\",\n0x011E:\"XPosition\",\n0x011F:\"YPosition\",\n0x0120:\"FreeOffsets\",\n0x0121:\"FreeByteCounts\",\n0x0122:\"GrayResponseUnit\",\n0x0123:\"GrayResponseCurve\",\n0x0124:\"T4Options\",\n0x0125:\"T6Options\",\n0x0128:\"ResolutionUnit\",\n0x0129:\"PageNumber\",\n0x012C:\"ColorResponseUnit\",\n0x012D:\"TransferFunction\",\n0x0131:\"Software\",\n0x0132:\"ModifyDate\",\n0x013B:\"Artist\",\n0x013C:\"HostComputer\",\n0x013D:\"Predictor\",\n0x013E:\"WhitePoint\",\n0x013F:\"PrimaryChromaticities\",\n0x0140:\"ColorMap\",\n0x0141:\"HalftoneHints\",\n0x0142:\"TileWidth\",\n0x0143:\"TileLength\",\n0x0144:\"TileOffsets\",\n0x0145:\"TileByteCounts\",\n0x0146:\"BadFaxLines\",\n0x0147:\"CleanFaxData\",\n0x0148:\"ConsecutiveBadFaxLines\",\n0x014A:\"SubIFD\",\n0x014C:\"InkSet\",\n0x014D:\"InkNames\",\n0x014E:\"NumberofInks\",\n0x0150:\"DotRange\",\n0x0151:\"TargetPrinter\",\n0x0152:\"ExtraSamples\",\n0x0153:\"SampleFormat\",\n0x0154:\"SMinSampleValue\",\n0x0155:\"SMaxSampleValue\",\n0x0156:\"TransferRange\",\n0x0157:\"ClipPath\",\n0x0158:\"XClipPathUnits\",\n0x0159:\"YClipPathUnits\",\n0x015A:\"Indexed\",\n0x015B:\"JPEGTables\",\n0x015F:\"OPIProxy\",\n0x0190:\"GlobalParametersIFD\",\n0x0191:\"ProfileType\",\n0x0192:\"FaxProfile\",\n0x0193:\"CodingMethods\",\n0x0194:\"VersionYear\",\n0x0195:\"ModeNumber\",\n0x01B1:\"Decode\",\n0x01B2:\"DefaultImageColor\",\n0x01B3:\"T82Options\",\n0x01B5:\"JPEGTables\",\n0x0200:\"JPEGProc\",\n0x0201:\"ThumbnailOffset\",\n0x0202:\"ThumbnailLength\",\n0x0203:\"JPEGRestartInterval\",\n0x0205:\"JPEGLosslessPredictors\",\n0x0206:\"JPEGPointTransforms\",\n0x0207:\"JPEGQTables\",\n0x0208:\"JPEGDCTables\",\n0x0209:\"JPEGACTables\",\n0x0211:\"YCbCrCoefficients\",\n0x0212:\"YCbCrSubSampling\",\n0x0213:\"YCbCrPositioning\",\n0x0214:\"ReferenceBlackWhite\",\n0x022F:\"StripRowCounts\",\n0x02BC:\"ApplicationNotes\",\n0x03E7:\"USPTOMiscellaneous\",\n0x1000:\"RelatedImageFileFormat\",\n0x1001:\"RelatedImageWidth\",\n0x1002:\"RelatedImageHeight\",\n0x4746:\"Rating\",\n0x4747:\"XP_DIP_XML\",\n0x4748:\"StitchInfo\",\n0x4749:\"RatingPercent\",\n0x800D:\"ImageID\",\n0x80A3:\"WangTag1\",\n0x80A4:\"WangAnnotation\",\n0x80A5:\"WangTag3\",\n0x80A6:\"WangTag4\",\n0x80E3:\"Matteing\",\n0x80E4:\"DataType\",\n0x80E5:\"ImageDepth\",\n0x80E6:\"TileDepth\",\n0x827D:\"Model2\",\n0x828D:\"CFARepeatPatternDim\",\n0x828E:\"CFAPattern2\",\n0x828F:\"BatteryLevel\",\n0x8290:\"KodakIFD\",\n0x8298:\"Copyright\",\n0x829A:\"ExposureTime\",\n0x829D:\"FNumber\",\n0x82A5:\"MDFileTag\",\n0x82A6:\"MDScalePixel\",\n0x82A7:\"MDColorTable\",\n0x82A8:\"MDLabName\",\n0x82A9:\"MDSampleInfo\",\n0x82AA:\"MDPrepDate\",\n0x82AB:\"MDPrepTime\",\n0x82AC:\"MDFileUnits\",\n0x830E:\"PixelScale\",\n0x8335:\"AdventScale\",\n0x8336:\"AdventRevision\",\n0x835C:\"UIC1Tag\",\n0x835D:\"UIC2Tag\",\n0x835E:\"UIC3Tag\",\n0x835F:\"UIC4Tag\",\n0x83BB:\"IPTC-NAA\",\n0x847E:\"IntergraphPacketData\",\n0x847F:\"IntergraphFlagRegisters\",\n0x8480:\"IntergraphMatrix\",\n0x8481:\"INGRReserved\",\n0x8482:\"ModelTiePoint\",\n0x84E0:\"Site\",\n0x84E1:\"ColorSequence\",\n0x84E2:\"IT8Header\",\n0x84E3:\"RasterPadding\",\n0x84E4:\"BitsPerRunLength\",\n0x84E5:\"BitsPerExtendedRunLength\",\n0x84E6:\"ColorTable\",\n0x84E7:\"ImageColorIndicator\",\n0x84E8:\"BackgroundColorIndicator\",\n0x84E9:\"ImageColorValue\",\n0x84EA:\"BackgroundColorValue\",\n0x84EB:\"PixelIntensityRange\",\n0x84EC:\"TransparencyIndicator\",\n0x84ED:\"ColorCharacterization\",\n0x84EE:\"HCUsage\",\n0x84EF:\"TrapIndicator\",\n0x84F0:\"CMYKEquivalent\",\n0x8546:\"SEMInfo\",\n0x8568:\"AFCP_IPTC\",\n0x85B8:\"PixelMagicJBIGOptions\",\n0x85D8:\"ModelTransform\",\n0x8602:\"WB_GRGBLevels\",\n0x8606:\"LeafData\",\n0x8649:\"PhotoshopSettings\",\n0x8769:\"ExifOffset\",\n0x8773:\"ICC_Profile\",\n0x877F:\"TIFF_FXExtensions\",\n0x8780:\"MultiProfiles\",\n0x8781:\"SharedData\",\n0x8782:\"T88Options\",\n0x87AC:\"ImageLayer\",\n0x87AF:\"GeoTiffDirectory\",\n0x87B0:\"GeoTiffDoubleParams\",\n0x87B1:\"GeoTiffAsciiParams\",\n0x8822:\"ExposureProgram\",\n0x8824:\"SpectralSensitivity\",\n0x8825:\"GPSInfo\",\n0x8827:\"ISO\",\n0x8828:\"Opto-ElectricConvFactor\",\n0x8829:\"Interlace\",\n0x882A:\"TimeZoneOffset\",\n0x882B:\"SelfTimerMode\",\n0x8830:\"SensitivityType\",\n0x8831:\"StandardOutputSensitivity\",\n0x8832:\"RecommendedExposureIndex\",\n0x8833:\"ISOSpeed\",\n0x8834:\"ISOSpeedLatitudeyyy\",\n0x8835:\"ISOSpeedLatitudezzz\",\n0x885C:\"FaxRecvParams\",\n0x885D:\"FaxSubAddress\",\n0x885E:\"FaxRecvTime\",\n0x888A:\"LeafSubIFD\",\n0x9000:\"ExifVersion\",\n0x9003:\"DateTimeOriginal\",\n0x9004:\"CreateDate\",\n0x9101:\"ComponentsConfiguration\",\n0x9102:\"CompressedBitsPerPixel\",\n0x9201:\"ShutterSpeedValue\",\n0x9202:\"ApertureValue\",\n0x9203:\"BrightnessValue\",\n0x9204:\"ExposureCompensation\",\n0x9205:\"MaxApertureValue\",\n0x9206:\"SubjectDistance\",\n0x9207:\"MeteringMode\",\n0x9208:\"LightSource\",\n0x9209:\"Flash\",\n0x920A:\"FocalLength\",\n0x920B:\"FlashEnergy\",\n0x920C:\"SpatialFrequencyResponse\",\n0x920D:\"Noise\",\n0x920E:\"FocalPlaneXResolution\",\n0x920F:\"FocalPlaneYResolution\",\n0x9210:\"FocalPlaneResolutionUnit\",\n0x9211:\"ImageNumber\",\n0x9212:\"SecurityClassification\",\n0x9213:\"ImageHistory\",\n0x9214:\"SubjectArea\",\n0x9215:\"ExposureIndex\",\n0x9216:\"TIFF-EPStandardID\",\n0x9217:\"SensingMethod\",\n0x923A:\"CIP3DataFile\",\n0x923B:\"CIP3Sheet\",\n0x923C:\"CIP3Side\",\n0x923F:\"StoNits\",\n0x927C:\"MakerNote\",\n0x9286:\"UserComment\",\n0x9290:\"SubSecTime\",\n0x9291:\"SubSecTimeOriginal\",\n0x9292:\"SubSecTimeDigitized\",\n0x932F:\"MSDocumentText\",\n0x9330:\"MSPropertySetStorage\",\n0x9331:\"MSDocumentTextPosition\",\n0x935C:\"ImageSourceData\",\n0x9C9B:\"XPTitle\",\n0x9C9C:\"XPComment\",\n0x9C9D:\"XPAuthor\",\n0x9C9E:\"XPKeywords\",\n0x9C9F:\"XPSubject\",\n0xA000:\"FlashpixVersion\",\n0xA001:\"ColorSpace\",\n0xA002:\"ExifImageWidth\",\n0xA003:\"ExifImageHeight\",\n0xA004:\"RelatedSoundFile\",\n0xA005:\"InteropOffset\",\n0xA20B:\"FlashEnergy\",\n0xA20C:\"SpatialFrequencyResponse\",\n0xA20D:\"Noise\",\n0xA20E:\"FocalPlaneXResolution\",\n0xA20F:\"FocalPlaneYResolution\",\n0xA210:\"FocalPlaneResolutionUnit\",\n0xA211:\"ImageNumber\",\n0xA212:\"SecurityClassification\",\n0xA213:\"ImageHistory\",\n0xA214:\"SubjectLocation\",\n0xA215:\"ExposureIndex\",\n0xA216:\"TIFF-EPStandardID\",\n0xA217:\"SensingMethod\",\n0xA300:\"FileSource\",\n0xA301:\"SceneType\",\n0xA302:\"CFAPattern\",\n0xA401:\"CustomRendered\",\n0xA402:\"ExposureMode\",\n0xA403:\"WhiteBalance\",\n0xA404:\"DigitalZoomRatio\",\n0xA405:\"FocalLengthIn35mmFormat\",\n0xA406:\"SceneCaptureType\",\n0xA407:\"GainControl\",\n0xA408:\"Contrast\",\n0xA409:\"Saturation\",\n0xA40A:\"Sharpness\",\n0xA40B:\"DeviceSettingDescription\",\n0xA40C:\"SubjectDistanceRange\",\n0xA420:\"ImageUniqueID\",\n0xA430:\"OwnerName\",\n0xA431:\"SerialNumber\",\n0xA432:\"LensInfo\",\n0xA433:\"LensMake\",\n0xA434:\"LensModel\",\n0xA435:\"LensSerialNumber\",\n0xA480:\"GDALMetadata\",\n0xA481:\"GDALNoData\",\n0xA500:\"Gamma\",\n0xAFC0:\"ExpandSoftware\",\n0xAFC1:\"ExpandLens\",\n0xAFC2:\"ExpandFilm\",\n0xAFC3:\"ExpandFilterLens\",\n0xAFC4:\"ExpandScanner\",\n0xAFC5:\"ExpandFlashLamp\",\n0xBC01:\"PixelFormat\",\n0xBC02:\"Transformation\",\n0xBC03:\"Uncompressed\",\n0xBC04:\"ImageType\",\n0xBC80:\"ImageWidth\",\n0xBC81:\"ImageHeight\",\n0xBC82:\"WidthResolution\",\n0xBC83:\"HeightResolution\",\n0xBCC0:\"ImageOffset\",\n0xBCC1:\"ImageByteCount\",\n0xBCC2:\"AlphaOffset\",\n0xBCC3:\"AlphaByteCount\",\n0xBCC4:\"ImageDataDiscard\",\n0xBCC5:\"AlphaDataDiscard\",\n0xC427:\"OceScanjobDesc\",\n0xC428:\"OceApplicationSelector\",\n0xC429:\"OceIDNumber\",\n0xC42A:\"OceImageLogic\",\n0xC44F:\"Annotations\",\n0xC4A5:\"PrintIM\",\n0xC580:\"USPTOOriginalContentType\",\n0xC612:\"DNGVersion\",\n0xC613:\"DNGBackwardVersion\",\n0xC614:\"UniqueCameraModel\",\n0xC615:\"LocalizedCameraModel\",\n0xC616:\"CFAPlaneColor\",\n0xC617:\"CFALayout\",\n0xC618:\"LinearizationTable\",\n0xC619:\"BlackLevelRepeatDim\",\n0xC61A:\"BlackLevel\",\n0xC61B:\"BlackLevelDeltaH\",\n0xC61C:\"BlackLevelDeltaV\",\n0xC61D:\"WhiteLevel\",\n0xC61E:\"DefaultScale\",\n0xC61F:\"DefaultCropOrigin\",\n0xC620:\"DefaultCropSize\",\n0xC621:\"ColorMatrix1\",\n0xC622:\"ColorMatrix2\",\n0xC623:\"CameraCalibration1\",\n0xC624:\"CameraCalibration2\",\n0xC625:\"ReductionMatrix1\",\n0xC626:\"ReductionMatrix2\",\n0xC627:\"AnalogBalance\",\n0xC628:\"AsShotNeutral\",\n0xC629:\"AsShotWhiteXY\",\n0xC62A:\"BaselineExposure\",\n0xC62B:\"BaselineNoise\",\n0xC62C:\"BaselineSharpness\",\n0xC62D:\"BayerGreenSplit\",\n0xC62E:\"LinearResponseLimit\",\n0xC62F:\"CameraSerialNumber\",\n0xC630:\"DNGLensInfo\",\n0xC631:\"ChromaBlurRadius\",\n0xC632:\"AntiAliasStrength\",\n0xC633:\"ShadowScale\",\n0xC634:\"DNGPrivateData\",\n0xC635:\"MakerNoteSafety\",\n0xC640:\"RawImageSegmentation\",\n0xC65A:\"CalibrationIlluminant1\",\n0xC65B:\"CalibrationIlluminant2\",\n0xC65C:\"BestQualityScale\",\n0xC65D:\"RawDataUniqueID\",\n0xC660:\"AliasLayerMetadata\",\n0xC68B:\"OriginalRawFileName\",\n0xC68C:\"OriginalRawFileData\",\n0xC68D:\"ActiveArea\",\n0xC68E:\"MaskedAreas\",\n0xC68F:\"AsShotICCProfile\",\n0xC690:\"AsShotPreProfileMatrix\",\n0xC691:\"CurrentICCProfile\",\n0xC692:\"CurrentPreProfileMatrix\",\n0xC6BF:\"ColorimetricReference\",\n0xC6D2:\"PanasonicTitle\",\n0xC6D3:\"PanasonicTitle2\",\n0xC6F3:\"CameraCalibrationSig\",\n0xC6F4:\"ProfileCalibrationSig\",\n0xC6F5:\"ProfileIFD\",\n0xC6F6:\"AsShotProfileName\",\n0xC6F7:\"NoiseReductionApplied\",\n0xC6F8:\"ProfileName\",\n0xC6F9:\"ProfileHueSatMapDims\",\n0xC6FA:\"ProfileHueSatMapData1\",\n0xC6FB:\"ProfileHueSatMapData2\",\n0xC6FC:\"ProfileToneCurve\",\n0xC6FD:\"ProfileEmbedPolicy\",\n0xC6FE:\"ProfileCopyright\",\n0xC714:\"ForwardMatrix1\",\n0xC715:\"ForwardMatrix2\",\n0xC716:\"PreviewApplicationName\",\n0xC717:\"PreviewApplicationVersion\",\n0xC718:\"PreviewSettingsName\",\n0xC719:\"PreviewSettingsDigest\",\n0xC71A:\"PreviewColorSpace\",\n0xC71B:\"PreviewDateTime\",\n0xC71C:\"RawImageDigest\",\n0xC71D:\"OriginalRawFileDigest\",\n0xC71E:\"SubTileBlockSize\",\n0xC71F:\"RowInterleaveFactor\",\n0xC725:\"ProfileLookTableDims\",\n0xC726:\"ProfileLookTableData\",\n0xC740:\"OpcodeList1\",\n0xC741:\"OpcodeList2\",\n0xC74E:\"OpcodeList3\",\n0xC761:\"NoiseProfile\",\n0xC763:\"TimeCodes\",\n0xC764:\"FrameRate\",\n0xC772:\"TStop\",\n0xC789:\"ReelName\",\n0xC791:\"OriginalDefaultFinalSize\",\n0xC792:\"OriginalBestQualitySize\",\n0xC793:\"OriginalDefaultCropSize\",\n0xC7A1:\"CameraLabel\",\n0xC7A3:\"ProfileHueSatMapEncoding\",\n0xC7A4:\"ProfileLookTableEncoding\",\n0xC7A5:\"BaselineExposureOffset\",\n0xC7A6:\"DefaultBlackRender\",\n0xC7A7:\"NewRawImageDigest\",\n0xC7A8:\"RawToPreviewGain\",\n0xC7B5:\"DefaultUserCrop\",\n0xEA1C:\"Padding\",\n0xEA1D:\"OffsetSchema\",\n0xFDE8:\"OwnerName\",\n0xFDE9:\"SerialNumber\",\n0xFDEA:\"Lens\",\n0xFE00:\"KDC_IFD\",\n0xFE4C:\"RawFile\",\n0xFE4D:\"Converter\",\n0xFE4E:\"WhiteBalance\",\n0xFE51:\"Exposure\",\n0xFE52:\"Shadows\",\n0xFE53:\"Brightness\",\n0xFE54:\"Contrast\",\n0xFE55:\"Saturation\",\n0xFE56:\"Sharpness\",\n0xFE57:\"Smoothness\",\n0xFE58:\"MoireFilter\"},\n\n\ngps:{\n0x0000:'GPSVersionID',\n0x0001:'GPSLatitudeRef',\n0x0002:'GPSLatitude',\n0x0003:'GPSLongitudeRef',\n0x0004:'GPSLongitude',\n0x0005:'GPSAltitudeRef',\n0x0006:'GPSAltitude',\n0x0007:'GPSTimeStamp',\n0x0008:'GPSSatellites',\n0x0009:'GPSStatus',\n0x000A:'GPSMeasureMode',\n0x000B:'GPSDOP',\n0x000C:'GPSSpeedRef',\n0x000D:'GPSSpeed',\n0x000E:'GPSTrackRef',\n0x000F:'GPSTrack',\n0x0010:'GPSImgDirectionRef',\n0x0011:'GPSImgDirection',\n0x0012:'GPSMapDatum',\n0x0013:'GPSDestLatitudeRef',\n0x0014:'GPSDestLatitude',\n0x0015:'GPSDestLongitudeRef',\n0x0016:'GPSDestLongitude',\n0x0017:'GPSDestBearingRef',\n0x0018:'GPSDestBearing',\n0x0019:'GPSDestDistanceRef',\n0x001A:'GPSDestDistance',\n0x001B:'GPSProcessingMethod',\n0x001C:'GPSAreaInformation',\n0x001D:'GPSDateStamp',\n0x001E:'GPSDifferential',\n0x001F:'GPSHPositioningError'}};\n\n\n},{}],157:[function(require,module,exports){\n/*jslint browser: true, devel: true, bitwise: false, debug: true, eqeq: false, es5: true, evil: false, forin: false, newcap: false, nomen: true, plusplus: true, regexp: false, unparam: false, sloppy: true, stupid: false, sub: false, todo: true, vars: true, white: true */\n\nfunction readExifValue(format,stream){\nswitch(format){\ncase 1:return stream.nextUInt8();\ncase 3:return stream.nextUInt16();\ncase 4:return stream.nextUInt32();\ncase 5:return[stream.nextUInt32(),stream.nextUInt32()];\ncase 6:return stream.nextInt8();\ncase 8:return stream.nextUInt16();\ncase 9:return stream.nextUInt32();\ncase 10:return[stream.nextInt32(),stream.nextInt32()];\ncase 11:return stream.nextFloat();\ncase 12:return stream.nextDouble();\ndefault:throw new Error('Invalid format while decoding: '+format);}\n\n}\n\nfunction getBytesPerComponent(format){\nswitch(format){\ncase 1:\ncase 2:\ncase 6:\ncase 7:\nreturn 1;\ncase 3:\ncase 8:\nreturn 2;\ncase 4:\ncase 9:\ncase 11:\nreturn 4;\ncase 5:\ncase 10:\ncase 12:\nreturn 8;\ndefault:\nreturn 0;}\n\n}\n\nfunction readExifTag(tiffMarker,stream){\nvar tagType=stream.nextUInt16(),\nformat=stream.nextUInt16(),\nbytesPerComponent=getBytesPerComponent(format),\ncomponents=stream.nextUInt32(),\nvalueBytes=bytesPerComponent*components,\nvalues,\nvalue,\nc;\n\n/* if the value is bigger then 4 bytes, the value is in the data section of the IFD\n\tand the value present in the tag is the offset starting from the tiff header. So we replace the stream\n\twith a stream that is located at the given offset in the data section. s*/\nif(valueBytes>4){\nstream=tiffMarker.openWithOffset(stream.nextUInt32());\n}\n//we don't want to read strings as arrays\nif(format===2){\nvalues=stream.nextString(components);\n//cut off \\0 characters\nvar lastNull=values.indexOf('\\0');\nif(lastNull!==-1){\nvalues=values.substr(0,lastNull);\n}\n}else\nif(format===7){\nvalues=stream.nextBuffer(components);\n}else\nif(format!==0){\nvalues=[];\nfor(c=0;c<components;++c){\nvalues.push(readExifValue(format,stream));\n}\n}\n//since our stream is a stateful object, we need to skip remaining bytes\n//so our offset stays correct\nif(valueBytes<4){\nstream.skip(4-valueBytes);\n}\n\nreturn[tagType,values,format];\n}\n\nfunction readIFDSection(tiffMarker,stream,iterator){\nvar numberOfEntries=stream.nextUInt16(),tag,i;\nfor(i=0;i<numberOfEntries;++i){\ntag=readExifTag(tiffMarker,stream);\niterator(tag[0],tag[1],tag[2]);\n}\n}\n\nfunction readHeader(stream){\nvar exifHeader=stream.nextString(6);\nif(exifHeader!=='Exif\\0\\0'){\nthrow new Error('Invalid EXIF header');\n}\n\nvar tiffMarker=stream.mark();\nvar tiffHeader=stream.nextUInt16();\nif(tiffHeader===0x4949){\nstream.setBigEndian(false);\n}else if(tiffHeader===0x4D4D){\nstream.setBigEndian(true);\n}else{\nthrow new Error('Invalid TIFF header');\n}\nif(stream.nextUInt16()!==0x002A){\nthrow new Error('Invalid TIFF data');\n}\nreturn tiffMarker;\n}\n\nmodule.exports={\nIFD0:1,\nIFD1:2,\nGPSIFD:3,\nSubIFD:4,\nInteropIFD:5,\nparseTags:function parseTags(stream,iterator){\nvar tiffMarker;\ntry{\ntiffMarker=readHeader(stream);\n}catch(e){\nreturn false;//ignore APP1 sections with invalid headers\n}\nvar subIfdOffset,gpsOffset,interopOffset;\nvar ifd0Stream=tiffMarker.openWithOffset(stream.nextUInt32()),\nIFD0=this.IFD0;\nreadIFDSection(tiffMarker,ifd0Stream,function(tagType,value,format){\nswitch(tagType){\ncase 0x8825:gpsOffset=value[0];break;\ncase 0x8769:subIfdOffset=value[0];break;\ndefault:iterator(IFD0,tagType,value,format);break;}\n\n});\nvar ifd1Offset=ifd0Stream.nextUInt32();\nif(ifd1Offset!==0){\nvar ifd1Stream=tiffMarker.openWithOffset(ifd1Offset);\nreadIFDSection(tiffMarker,ifd1Stream,iterator.bind(null,this.IFD1));\n}\n\nif(gpsOffset){\nvar gpsStream=tiffMarker.openWithOffset(gpsOffset);\nreadIFDSection(tiffMarker,gpsStream,iterator.bind(null,this.GPSIFD));\n}\n\nif(subIfdOffset){\nvar subIfdStream=tiffMarker.openWithOffset(subIfdOffset),InteropIFD=this.InteropIFD;\nreadIFDSection(tiffMarker,subIfdStream,function(tagType,value,format){\nif(tagType===0xA005){\ninteropOffset=value[0];\n}else{\niterator(InteropIFD,tagType,value,format);\n}\n});\n}\n\nif(interopOffset){\nvar interopStream=tiffMarker.openWithOffset(interopOffset);\nreadIFDSection(tiffMarker,interopStream,iterator.bind(null,this.InteropIFD));\n}\nreturn true;\n}};\n\n},{}],158:[function(require,module,exports){\n/*jslint browser: true, devel: true, bitwise: false, debug: true, eqeq: false, es5: true, evil: false, forin: false, newcap: false, nomen: true, plusplus: true, regexp: false, unparam: false, sloppy: true, stupid: false, sub: false, todo: true, vars: true, white: true */\n\nmodule.exports={\nparseSections:function parseSections(stream,iterator){\nvar len,markerType;\nstream.setBigEndian(true);\n//stop reading the stream at the SOS (Start of Stream) marker,\n//because its length is not stored in the header so we can't\n//know where to jump to. The only marker after that is just EOI (End Of Image) anyway\nwhile(stream.remainingLength()>0&&markerType!==0xDA){\nif(stream.nextUInt8()!==0xFF){\nthrow new Error('Invalid JPEG section offset');\n}\nmarkerType=stream.nextUInt8();\n//don't read size from markers that have no datas\nif(markerType>=0xD0&&markerType<=0xD9||markerType===0xDA){\nlen=0;\n}else{\nlen=stream.nextUInt16()-2;\n}\niterator(markerType,stream.branch(0,len));\nstream.skip(len);\n}\n},\n//stream should be located after SOF section size and in big endian mode, like passed to parseSections iterator\ngetSizeFromSOFSection:function getSizeFromSOFSection(stream){\nstream.skip(1);\nreturn{\nheight:stream.nextUInt16(),\nwidth:stream.nextUInt16()};\n\n},\ngetSectionName:function getSectionName(markerType){\nvar name,index;\nswitch(markerType){\ncase 0xD8:name='SOI';break;\ncase 0xC4:name='DHT';break;\ncase 0xDB:name='DQT';break;\ncase 0xDD:name='DRI';break;\ncase 0xDA:name='SOS';break;\ncase 0xFE:name='COM';break;\ncase 0xD9:name='EOI';break;\ndefault:\nif(markerType>=0xE0&&markerType<=0xEF){\nname='APP';\nindex=markerType-0xE0;\n}else\nif(markerType>=0xC0&&markerType<=0xCF&&markerType!==0xC4&&markerType!==0xC8&&markerType!==0xCC){\nname='SOF';\nindex=markerType-0xC0;\n}else\nif(markerType>=0xD0&&markerType<=0xD7){\nname='RST';\nindex=markerType-0xD0;\n}\nbreak;}\n\nvar nameStruct={\nname:name};\n\nif(typeof index==='number'){\nnameStruct.index=index;\n}\nreturn nameStruct;\n}};\n\n},{}],159:[function(require,module,exports){\n/*jslint browser: true, devel: true, bitwise: false, debug: true, eqeq: false, es5: true, evil: false, forin: false, newcap: false, nomen: true, plusplus: true, regexp: false, unparam: false, sloppy: true, stupid: false, sub: false, todo: true, vars: true, white: true */\n\nvar jpeg=require('./jpeg'),\nexif=require('./exif'),\nsimplify=require('./simplify');\n\nfunction ExifResult(startMarker,tags,imageSize,thumbnailOffset,thumbnailLength,thumbnailType,app1Offset){\nthis.startMarker=startMarker;\nthis.tags=tags;\nthis.imageSize=imageSize;\nthis.thumbnailOffset=thumbnailOffset;\nthis.thumbnailLength=thumbnailLength;\nthis.thumbnailType=thumbnailType;\nthis.app1Offset=app1Offset;\n}\n\nExifResult.prototype={\nhasThumbnail:function hasThumbnail(mime){\nif(!this.thumbnailOffset||!this.thumbnailLength){\nreturn false;\n}\nif(typeof mime!=='string'){\nreturn true;\n}\nif(mime.toLowerCase().trim()==='image/jpeg'){\nreturn this.thumbnailType===6;\n}\nif(mime.toLowerCase().trim()==='image/tiff'){\nreturn this.thumbnailType===1;\n}\nreturn false;\n},\ngetThumbnailOffset:function getThumbnailOffset(){\nreturn this.app1Offset+6+this.thumbnailOffset;\n},\ngetThumbnailLength:function getThumbnailLength(){\nreturn this.thumbnailLength;\n},\ngetThumbnailBuffer:function getThumbnailBuffer(){\nreturn this._getThumbnailStream().nextBuffer(this.thumbnailLength);\n},\n_getThumbnailStream:function _getThumbnailStream(){\nreturn this.startMarker.openWithOffset(this.getThumbnailOffset());\n},\ngetImageSize:function getImageSize(){\nreturn this.imageSize;\n},\ngetThumbnailSize:function getThumbnailSize(){\nvar stream=this._getThumbnailStream(),size;\njpeg.parseSections(stream,function(sectionType,sectionStream){\nif(jpeg.getSectionName(sectionType).name==='SOF'){\nsize=jpeg.getSizeFromSOFSection(sectionStream);\n}\n});\nreturn size;\n}};\n\n\nfunction Parser(stream){\nthis.stream=stream;\nthis.flags={\nreadBinaryTags:false,\nresolveTagNames:true,\nsimplifyValues:true,\nimageSize:true,\nhidePointers:true,\nreturnTags:true};\n\n}\n\nParser.prototype={\nenableBinaryFields:function enableBinaryFields(enable){\nthis.flags.readBinaryTags=!!enable;\nreturn this;\n},\nenablePointers:function enablePointers(enable){\nthis.flags.hidePointers=!enable;\nreturn this;\n},\nenableTagNames:function enableTagNames(enable){\nthis.flags.resolveTagNames=!!enable;\nreturn this;\n},\nenableImageSize:function enableImageSize(enable){\nthis.flags.imageSize=!!enable;\nreturn this;\n},\nenableReturnTags:function enableReturnTags(enable){\nthis.flags.returnTags=!!enable;\nreturn this;\n},\nenableSimpleValues:function enableSimpleValues(enable){\nthis.flags.simplifyValues=!!enable;\nreturn this;\n},\nparse:function parse(){\nvar start=this.stream.mark(),\nstream=start.openWithOffset(0),\nflags=this.flags,\ntags,\nimageSize,\nthumbnailOffset,\nthumbnailLength,\nthumbnailType,\napp1Offset,\ntagNames,\ngetTagValue,setTagValue;\nif(flags.resolveTagNames){\ntagNames=require('./exif-tags');\n}\nif(flags.resolveTagNames){\ntags={};\ngetTagValue=function getTagValue(t){\nreturn tags[t.name];\n};\nsetTagValue=function setTagValue(t,value){\ntags[t.name]=value;\n};\n}else{\ntags=[];\ngetTagValue=function getTagValue(t){\nvar i;\nfor(i=0;i<tags.length;++i){\nif(tags[i].type===t.type&&tags[i].section===t.section){\nreturn tags.value;\n}\n}\n};\nsetTagValue=function setTagValue(t,value){\nvar i;\nfor(i=0;i<tags.length;++i){\nif(tags[i].type===t.type&&tags[i].section===t.section){\ntags.value=value;\nreturn;\n}\n}\n};\n}\n\njpeg.parseSections(stream,function(sectionType,sectionStream){\nvar validExifHeaders,sectionOffset=sectionStream.offsetFrom(start);\nif(sectionType===0xE1){\nvalidExifHeaders=exif.parseTags(sectionStream,function(ifdSection,tagType,value,format){\n//ignore binary fields if disabled\nif(!flags.readBinaryTags&&format===7){\nreturn;\n}\n\nif(tagType===0x0201){\nthumbnailOffset=value[0];\nif(flags.hidePointers){return;}\n}else if(tagType===0x0202){\nthumbnailLength=value[0];\nif(flags.hidePointers){return;}\n}else if(tagType===0x0103){\nthumbnailType=value[0];\nif(flags.hidePointers){return;}\n}\n//if flag is set to not store tags, return here after storing pointers\nif(!flags.returnTags){\nreturn;\n}\n\nif(flags.simplifyValues){\nvalue=simplify.simplifyValue(value,format);\n}\nif(flags.resolveTagNames){\nvar sectionTagNames=ifdSection===exif.GPSIFD?tagNames.gps:tagNames.exif;\nvar name=sectionTagNames[tagType];\nif(!name){\nname=tagNames.exif[tagType];\n}\nif(!tags.hasOwnProperty(name)){\ntags[name]=value;\n}\n}else{\ntags.push({\nsection:ifdSection,\ntype:tagType,\nvalue:value});\n\n}\n});\nif(validExifHeaders){\napp1Offset=sectionOffset;\n}\n}else\nif(flags.imageSize&&jpeg.getSectionName(sectionType).name==='SOF'){\nimageSize=jpeg.getSizeFromSOFSection(sectionStream);\n}\n});\n\nif(flags.simplifyValues){\nsimplify.castDegreeValues(getTagValue,setTagValue);\nsimplify.castDateValues(getTagValue,setTagValue);\n}\n\nreturn new ExifResult(start,tags,imageSize,thumbnailOffset,thumbnailLength,thumbnailType,app1Offset);\n}};\n\n\n\n\nmodule.exports=Parser;\n\n},{\"./exif\":157,\"./exif-tags\":156,\"./jpeg\":158,\"./simplify\":160}],160:[function(require,module,exports){\nvar exif=require('./exif');\nvar date=require('./date');\n\nvar degreeTags=[{\nsection:exif.GPSIFD,\ntype:0x0002,\nname:'GPSLatitude',\nrefType:0x0001,\nrefName:'GPSLatitudeRef',\nposVal:'N'},\n\n{\nsection:exif.GPSIFD,\ntype:0x0004,\nname:'GPSLongitude',\nrefType:0x0003,\nrefName:'GPSLongitudeRef',\nposVal:'E'}];\n\nvar dateTags=[{\nsection:exif.SubIFD,\ntype:0x0132,\nname:'ModifyDate'},\n\n{\nsection:exif.SubIFD,\ntype:0x9003,\nname:'DateTimeOriginal'},\n\n{\nsection:exif.SubIFD,\ntype:0x9004,\nname:'CreateDate'},\n\n{\nsection:exif.SubIFD,\ntype:0x0132,\nname:'ModifyDate'}];\n\n\nmodule.exports={\ncastDegreeValues:function castDegreeValues(getTagValue,setTagValue){\ndegreeTags.forEach(function(t){\nvar degreeVal=getTagValue(t);\nif(degreeVal){\nvar degreeRef=getTagValue({section:t.section,type:t.refType,name:t.refName});\nvar degreeNumRef=degreeRef===t.posVal?1:-1;\nvar degree=(degreeVal[0]+degreeVal[1]/60+degreeVal[2]/3600)*degreeNumRef;\nsetTagValue(t,degree);\n}\n});\n},\ncastDateValues:function castDateValues(getTagValue,setTagValue){\ndateTags.forEach(function(t){\nvar dateStrVal=getTagValue(t);\nif(dateStrVal){\n//some easy checks to determine two common date formats\nvar timestamp=date.parseExifDate(dateStrVal);\nif(typeof timestamp!=='undefined'){\nsetTagValue(t,timestamp);\n}\n}\n});\n},\nsimplifyValue:function simplifyValue(values,format){\nif(Array.isArray(values)){\nvalues=values.map(function(value){\nif(format===10||format===5){\nreturn value[0]/value[1];\n}\nreturn value;\n});\nif(values.length===1){\nvalues=values[0];\n}\n}\nreturn values;\n}};\n\n\n},{\"./date\":154,\"./exif\":157}],161:[function(require,module,exports){\n'use strict';\n\nfunction _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_nonIterableSpread();}\n\nfunction _nonIterableSpread(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\");}\n\nfunction _iterableToArray(iter){if(Symbol.iterator in Object(iter)||Object.prototype.toString.call(iter)===\"[object Arguments]\")return Array.from(iter);}\n\nfunction _arrayWithoutHoles(arr){if(Array.isArray(arr)){for(var i=0,arr2=new Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}}\n\nvar toBytes=function toBytes(s){\nreturn _toConsumableArray(s).map(function(c){\nreturn c.charCodeAt(0);\n});\n};\n\nvar xpiZipFilename=toBytes('META-INF/mozilla.rsa');\nvar oxmlContentTypes=toBytes('[Content_Types].xml');\nvar oxmlRels=toBytes('_rels/.rels');\n\nmodule.exports=function(input){\nvar buf=input instanceof Uint8Array?input:new Uint8Array(input);\n\nif(!(buf&&buf.length>1)){\nreturn null;\n}\n\nvar check=function check(header,options){\noptions=Object.assign({\noffset:0},\noptions);\n\nfor(var i=0;i<header.length;i++){\n// If a bitmask is set\nif(options.mask){\n// If header doesn't equal `buf` with bits masked off\nif(header[i]!==(options.mask[i]&buf[i+options.offset])){\nreturn false;\n}\n}else if(header[i]!==buf[i+options.offset]){\nreturn false;\n}\n}\n\nreturn true;\n};\n\nvar checkString=function checkString(header,options){\nreturn check(toBytes(header),options);\n};\n\nif(check([0xFF,0xD8,0xFF])){\nreturn{\next:'jpg',\nmime:'image/jpeg'};\n\n}\n\nif(check([0x89,0x50,0x4E,0x47,0x0D,0x0A,0x1A,0x0A])){\nreturn{\next:'png',\nmime:'image/png'};\n\n}\n\nif(check([0x47,0x49,0x46])){\nreturn{\next:'gif',\nmime:'image/gif'};\n\n}\n\nif(check([0x57,0x45,0x42,0x50],{\noffset:8}))\n{\nreturn{\next:'webp',\nmime:'image/webp'};\n\n}\n\nif(check([0x46,0x4C,0x49,0x46])){\nreturn{\next:'flif',\nmime:'image/flif'};\n\n}// Needs to be before `tif` check\n\n\nif((check([0x49,0x49,0x2A,0x0])||check([0x4D,0x4D,0x0,0x2A]))&&check([0x43,0x52],{\noffset:8}))\n{\nreturn{\next:'cr2',\nmime:'image/x-canon-cr2'};\n\n}\n\nif(check([0x49,0x49,0x2A,0x0])||check([0x4D,0x4D,0x0,0x2A])){\nreturn{\next:'tif',\nmime:'image/tiff'};\n\n}\n\nif(check([0x42,0x4D])){\nreturn{\next:'bmp',\nmime:'image/bmp'};\n\n}\n\nif(check([0x49,0x49,0xBC])){\nreturn{\next:'jxr',\nmime:'image/vnd.ms-photo'};\n\n}\n\nif(check([0x38,0x42,0x50,0x53])){\nreturn{\next:'psd',\nmime:'image/vnd.adobe.photoshop'};\n\n}// Zip-based file formats\n// Need to be before the `zip` check\n\n\nif(check([0x50,0x4B,0x3,0x4])){\nif(check([0x6D,0x69,0x6D,0x65,0x74,0x79,0x70,0x65,0x61,0x70,0x70,0x6C,0x69,0x63,0x61,0x74,0x69,0x6F,0x6E,0x2F,0x65,0x70,0x75,0x62,0x2B,0x7A,0x69,0x70],{\noffset:30}))\n{\nreturn{\next:'epub',\nmime:'application/epub+zip'};\n\n}// Assumes signed `.xpi` from addons.mozilla.org\n\n\nif(check(xpiZipFilename,{\noffset:30}))\n{\nreturn{\next:'xpi',\nmime:'application/x-xpinstall'};\n\n}\n\nif(checkString('mimetypeapplication/vnd.oasis.opendocument.text',{\noffset:30}))\n{\nreturn{\next:'odt',\nmime:'application/vnd.oasis.opendocument.text'};\n\n}\n\nif(checkString('mimetypeapplication/vnd.oasis.opendocument.spreadsheet',{\noffset:30}))\n{\nreturn{\next:'ods',\nmime:'application/vnd.oasis.opendocument.spreadsheet'};\n\n}\n\nif(checkString('mimetypeapplication/vnd.oasis.opendocument.presentation',{\noffset:30}))\n{\nreturn{\next:'odp',\nmime:'application/vnd.oasis.opendocument.presentation'};\n\n}// The docx, xlsx and pptx file types extend the Office Open XML file format:\n// https://en.wikipedia.org/wiki/Office_Open_XML_file_formats\n// We look for:\n// - one entry named '[Content_Types].xml' or '_rels/.rels',\n// - one entry indicating specific type of file.\n// MS Office, OpenOffice and LibreOffice may put the parts in different order, so the check should not rely on it.\n\n\nvar findNextZipHeaderIndex=function findNextZipHeaderIndex(arr){\nvar startAt=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;\nreturn arr.findIndex(function(el,i,arr){\nreturn i>=startAt&&arr[i]===0x50&&arr[i+1]===0x4B&&arr[i+2]===0x3&&arr[i+3]===0x4;\n});\n};\n\nvar zipHeaderIndex=0;// The first zip header was already found at index 0\n\nvar oxmlFound=false;\nvar type=null;\n\ndo{\nvar offset=zipHeaderIndex+30;\n\nif(!oxmlFound){\noxmlFound=check(oxmlContentTypes,{\noffset:offset})||\ncheck(oxmlRels,{\noffset:offset});\n\n}\n\nif(!type){\nif(checkString('word/',{\noffset:offset}))\n{\ntype={\next:'docx',\nmime:'application/vnd.openxmlformats-officedocument.wordprocessingml.document'};\n\n}else if(checkString('ppt/',{\noffset:offset}))\n{\ntype={\next:'pptx',\nmime:'application/vnd.openxmlformats-officedocument.presentationml.presentation'};\n\n}else if(checkString('xl/',{\noffset:offset}))\n{\ntype={\next:'xlsx',\nmime:'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'};\n\n}\n}\n\nif(oxmlFound&&type){\nreturn type;\n}\n\nzipHeaderIndex=findNextZipHeaderIndex(buf,offset);\n}while(zipHeaderIndex>=0);// No more zip parts available in the buffer, but maybe we are almost certain about the type?\n\n\nif(type){\nreturn type;\n}\n}\n\nif(check([0x50,0x4B])&&(buf[2]===0x3||buf[2]===0x5||buf[2]===0x7)&&(buf[3]===0x4||buf[3]===0x6||buf[3]===0x8)){\nreturn{\next:'zip',\nmime:'application/zip'};\n\n}\n\nif(check([0x75,0x73,0x74,0x61,0x72],{\noffset:257}))\n{\nreturn{\next:'tar',\nmime:'application/x-tar'};\n\n}\n\nif(check([0x52,0x61,0x72,0x21,0x1A,0x7])&&(buf[6]===0x0||buf[6]===0x1)){\nreturn{\next:'rar',\nmime:'application/x-rar-compressed'};\n\n}\n\nif(check([0x1F,0x8B,0x8])){\nreturn{\next:'gz',\nmime:'application/gzip'};\n\n}\n\nif(check([0x42,0x5A,0x68])){\nreturn{\next:'bz2',\nmime:'application/x-bzip2'};\n\n}\n\nif(check([0x37,0x7A,0xBC,0xAF,0x27,0x1C])){\nreturn{\next:'7z',\nmime:'application/x-7z-compressed'};\n\n}\n\nif(check([0x78,0x01])){\nreturn{\next:'dmg',\nmime:'application/x-apple-diskimage'};\n\n}\n\nif(check([0x33,0x67,0x70,0x35])||// 3gp5\ncheck([0x0,0x0,0x0])&&check([0x66,0x74,0x79,0x70],{\noffset:4})&&(\ncheck([0x6D,0x70,0x34,0x31],{\noffset:8})||\n// MP41\ncheck([0x6D,0x70,0x34,0x32],{\noffset:8})||\n// MP42\ncheck([0x69,0x73,0x6F,0x6D],{\noffset:8})||\n// ISOM\ncheck([0x69,0x73,0x6F,0x32],{\noffset:8})||\n// ISO2\ncheck([0x6D,0x6D,0x70,0x34],{\noffset:8})||\n// MMP4\ncheck([0x4D,0x34,0x56],{\noffset:8})||\n// M4V\ncheck([0x64,0x61,0x73,0x68],{\noffset:8})\n// DASH\n)){\nreturn{\next:'mp4',\nmime:'video/mp4'};\n\n}\n\nif(check([0x4D,0x54,0x68,0x64])){\nreturn{\next:'mid',\nmime:'audio/midi'};\n\n}// https://github.com/threatstack/libmagic/blob/master/magic/Magdir/matroska\n\n\nif(check([0x1A,0x45,0xDF,0xA3])){\nvar sliced=buf.subarray(4,4+4096);\nvar idPos=sliced.findIndex(function(el,i,arr){\nreturn arr[i]===0x42&&arr[i+1]===0x82;\n});\n\nif(idPos!==-1){\nvar docTypePos=idPos+3;\n\nvar findDocType=function findDocType(type){\nreturn _toConsumableArray(type).every(function(c,i){\nreturn sliced[docTypePos+i]===c.charCodeAt(0);\n});\n};\n\nif(findDocType('matroska')){\nreturn{\next:'mkv',\nmime:'video/x-matroska'};\n\n}\n\nif(findDocType('webm')){\nreturn{\next:'webm',\nmime:'video/webm'};\n\n}\n}\n}\n\nif(check([0x0,0x0,0x0,0x14,0x66,0x74,0x79,0x70,0x71,0x74,0x20,0x20])||check([0x66,0x72,0x65,0x65],{\noffset:4})||\ncheck([0x66,0x74,0x79,0x70,0x71,0x74,0x20,0x20],{\noffset:4})||\ncheck([0x6D,0x64,0x61,0x74],{\noffset:4})||\n// MJPEG\ncheck([0x77,0x69,0x64,0x65],{\noffset:4}))\n{\nreturn{\next:'mov',\nmime:'video/quicktime'};\n\n}// RIFF file format which might be AVI, WAV, QCP, etc\n\n\nif(check([0x52,0x49,0x46,0x46])){\nif(check([0x41,0x56,0x49],{\noffset:8}))\n{\nreturn{\next:'avi',\nmime:'video/vnd.avi'};\n\n}\n\nif(check([0x57,0x41,0x56,0x45],{\noffset:8}))\n{\nreturn{\next:'wav',\nmime:'audio/vnd.wave'};\n\n}// QLCM, QCP file\n\n\nif(check([0x51,0x4C,0x43,0x4D],{\noffset:8}))\n{\nreturn{\next:'qcp',\nmime:'audio/qcelp'};\n\n}\n}\n\nif(check([0x30,0x26,0xB2,0x75,0x8E,0x66,0xCF,0x11,0xA6,0xD9])){\nreturn{\next:'wmv',\nmime:'video/x-ms-wmv'};\n\n}\n\nif(check([0x0,0x0,0x1,0xBA])||check([0x0,0x0,0x1,0xB3])){\nreturn{\next:'mpg',\nmime:'video/mpeg'};\n\n}\n\nif(check([0x66,0x74,0x79,0x70,0x33,0x67],{\noffset:4}))\n{\nreturn{\next:'3gp',\nmime:'video/3gpp'};\n\n}// Check for MPEG header at different starting offsets\n\n\nfor(var start=0;start<2&&start<buf.length-16;start++){\nif(check([0x49,0x44,0x33],{\noffset:start})||\n// ID3 header\ncheck([0xFF,0xE2],{\noffset:start,\nmask:[0xFF,0xE2]})\n// MPEG 1 or 2 Layer 3 header\n){\nreturn{\next:'mp3',\nmime:'audio/mpeg'};\n\n}\n\nif(check([0xFF,0xE4],{\noffset:start,\nmask:[0xFF,0xE4]})\n// MPEG 1 or 2 Layer 2 header\n){\nreturn{\next:'mp2',\nmime:'audio/mpeg'};\n\n}\n\nif(check([0xFF,0xF8],{\noffset:start,\nmask:[0xFF,0xFC]})\n// MPEG 2 layer 0 using ADTS\n){\nreturn{\next:'mp2',\nmime:'audio/mpeg'};\n\n}\n\nif(check([0xFF,0xF0],{\noffset:start,\nmask:[0xFF,0xFC]})\n// MPEG 4 layer 0 using ADTS\n){\nreturn{\next:'mp4',\nmime:'audio/mpeg'};\n\n}\n}\n\nif(check([0x66,0x74,0x79,0x70,0x4D,0x34,0x41],{\noffset:4})||\ncheck([0x4D,0x34,0x41,0x20])){\nreturn{\n// MPEG-4 layer 3 (audio)\next:'m4a',\nmime:'audio/mp4'// RFC 4337\n};\n\n}// Needs to be before `ogg` check\n\n\nif(check([0x4F,0x70,0x75,0x73,0x48,0x65,0x61,0x64],{\noffset:28}))\n{\nreturn{\next:'opus',\nmime:'audio/opus'};\n\n}// If 'OggS' in first  bytes, then OGG container\n\n\nif(check([0x4F,0x67,0x67,0x53])){\n// This is a OGG container\n// If ' theora' in header.\nif(check([0x80,0x74,0x68,0x65,0x6F,0x72,0x61],{\noffset:28}))\n{\nreturn{\next:'ogv',\nmime:'video/ogg'};\n\n}// If '\\x01video' in header.\n\n\nif(check([0x01,0x76,0x69,0x64,0x65,0x6F,0x00],{\noffset:28}))\n{\nreturn{\next:'ogm',\nmime:'video/ogg'};\n\n}// If ' FLAC' in header  https://xiph.org/flac/faq.html\n\n\nif(check([0x7F,0x46,0x4C,0x41,0x43],{\noffset:28}))\n{\nreturn{\next:'oga',\nmime:'audio/ogg'};\n\n}// 'Speex  ' in header https://en.wikipedia.org/wiki/Speex\n\n\nif(check([0x53,0x70,0x65,0x65,0x78,0x20,0x20],{\noffset:28}))\n{\nreturn{\next:'spx',\nmime:'audio/ogg'};\n\n}// If '\\x01vorbis' in header\n\n\nif(check([0x01,0x76,0x6F,0x72,0x62,0x69,0x73],{\noffset:28}))\n{\nreturn{\next:'ogg',\nmime:'audio/ogg'};\n\n}// Default OGG container https://www.iana.org/assignments/media-types/application/ogg\n\n\nreturn{\next:'ogx',\nmime:'application/ogg'};\n\n}\n\nif(check([0x66,0x4C,0x61,0x43])){\nreturn{\next:'flac',\nmime:'audio/x-flac'};\n\n}\n\nif(check([0x4D,0x41,0x43,0x20])){\n// 'MAC '\nreturn{\next:'ape',\nmime:'audio/ape'};\n\n}\n\nif(check([0x77,0x76,0x70,0x6B])){\n// 'wvpk'\nreturn{\next:'wv',\nmime:'audio/wavpack'};\n\n}\n\nif(check([0x23,0x21,0x41,0x4D,0x52,0x0A])){\nreturn{\next:'amr',\nmime:'audio/amr'};\n\n}\n\nif(check([0x25,0x50,0x44,0x46])){\nreturn{\next:'pdf',\nmime:'application/pdf'};\n\n}\n\nif(check([0x4D,0x5A])){\nreturn{\next:'exe',\nmime:'application/x-msdownload'};\n\n}\n\nif((buf[0]===0x43||buf[0]===0x46)&&check([0x57,0x53],{\noffset:1}))\n{\nreturn{\next:'swf',\nmime:'application/x-shockwave-flash'};\n\n}\n\nif(check([0x7B,0x5C,0x72,0x74,0x66])){\nreturn{\next:'rtf',\nmime:'application/rtf'};\n\n}\n\nif(check([0x00,0x61,0x73,0x6D])){\nreturn{\next:'wasm',\nmime:'application/wasm'};\n\n}\n\nif(check([0x77,0x4F,0x46,0x46])&&(check([0x00,0x01,0x00,0x00],{\noffset:4})||\ncheck([0x4F,0x54,0x54,0x4F],{\noffset:4})))\n{\nreturn{\next:'woff',\nmime:'font/woff'};\n\n}\n\nif(check([0x77,0x4F,0x46,0x32])&&(check([0x00,0x01,0x00,0x00],{\noffset:4})||\ncheck([0x4F,0x54,0x54,0x4F],{\noffset:4})))\n{\nreturn{\next:'woff2',\nmime:'font/woff2'};\n\n}\n\nif(check([0x4C,0x50],{\noffset:34})&&(\ncheck([0x00,0x00,0x01],{\noffset:8})||\ncheck([0x01,0x00,0x02],{\noffset:8})||\ncheck([0x02,0x00,0x02],{\noffset:8})))\n{\nreturn{\next:'eot',\nmime:'application/vnd.ms-fontobject'};\n\n}\n\nif(check([0x00,0x01,0x00,0x00,0x00])){\nreturn{\next:'ttf',\nmime:'font/ttf'};\n\n}\n\nif(check([0x4F,0x54,0x54,0x4F,0x00])){\nreturn{\next:'otf',\nmime:'font/otf'};\n\n}\n\nif(check([0x00,0x00,0x01,0x00])){\nreturn{\next:'ico',\nmime:'image/x-icon'};\n\n}\n\nif(check([0x00,0x00,0x02,0x00])){\nreturn{\next:'cur',\nmime:'image/x-icon'};\n\n}\n\nif(check([0x46,0x4C,0x56,0x01])){\nreturn{\next:'flv',\nmime:'video/x-flv'};\n\n}\n\nif(check([0x25,0x21])){\nreturn{\next:'ps',\nmime:'application/postscript'};\n\n}\n\nif(check([0xFD,0x37,0x7A,0x58,0x5A,0x00])){\nreturn{\next:'xz',\nmime:'application/x-xz'};\n\n}\n\nif(check([0x53,0x51,0x4C,0x69])){\nreturn{\next:'sqlite',\nmime:'application/x-sqlite3'};\n\n}\n\nif(check([0x4E,0x45,0x53,0x1A])){\nreturn{\next:'nes',\nmime:'application/x-nintendo-nes-rom'};\n\n}\n\nif(check([0x43,0x72,0x32,0x34])){\nreturn{\next:'crx',\nmime:'application/x-google-chrome-extension'};\n\n}\n\nif(check([0x4D,0x53,0x43,0x46])||check([0x49,0x53,0x63,0x28])){\nreturn{\next:'cab',\nmime:'application/vnd.ms-cab-compressed'};\n\n}// Needs to be before `ar` check\n\n\nif(check([0x21,0x3C,0x61,0x72,0x63,0x68,0x3E,0x0A,0x64,0x65,0x62,0x69,0x61,0x6E,0x2D,0x62,0x69,0x6E,0x61,0x72,0x79])){\nreturn{\next:'deb',\nmime:'application/x-deb'};\n\n}\n\nif(check([0x21,0x3C,0x61,0x72,0x63,0x68,0x3E])){\nreturn{\next:'ar',\nmime:'application/x-unix-archive'};\n\n}\n\nif(check([0xED,0xAB,0xEE,0xDB])){\nreturn{\next:'rpm',\nmime:'application/x-rpm'};\n\n}\n\nif(check([0x1F,0xA0])||check([0x1F,0x9D])){\nreturn{\next:'Z',\nmime:'application/x-compress'};\n\n}\n\nif(check([0x4C,0x5A,0x49,0x50])){\nreturn{\next:'lz',\nmime:'application/x-lzip'};\n\n}\n\nif(check([0xD0,0xCF,0x11,0xE0,0xA1,0xB1,0x1A,0xE1])){\nreturn{\next:'msi',\nmime:'application/x-msi'};\n\n}\n\nif(check([0x06,0x0E,0x2B,0x34,0x02,0x05,0x01,0x01,0x0D,0x01,0x02,0x01,0x01,0x02])){\nreturn{\next:'mxf',\nmime:'application/mxf'};\n\n}\n\nif(check([0x47],{\noffset:4})&&(\ncheck([0x47],{\noffset:192})||\ncheck([0x47],{\noffset:196})))\n{\nreturn{\next:'mts',\nmime:'video/mp2t'};\n\n}\n\nif(check([0x42,0x4C,0x45,0x4E,0x44,0x45,0x52])){\nreturn{\next:'blend',\nmime:'application/x-blender'};\n\n}\n\nif(check([0x42,0x50,0x47,0xFB])){\nreturn{\next:'bpg',\nmime:'image/bpg'};\n\n}\n\nif(check([0x00,0x00,0x00,0x0C,0x6A,0x50,0x20,0x20,0x0D,0x0A,0x87,0x0A])){\n// JPEG-2000 family\nif(check([0x6A,0x70,0x32,0x20],{\noffset:20}))\n{\nreturn{\next:'jp2',\nmime:'image/jp2'};\n\n}\n\nif(check([0x6A,0x70,0x78,0x20],{\noffset:20}))\n{\nreturn{\next:'jpx',\nmime:'image/jpx'};\n\n}\n\nif(check([0x6A,0x70,0x6D,0x20],{\noffset:20}))\n{\nreturn{\next:'jpm',\nmime:'image/jpm'};\n\n}\n\nif(check([0x6D,0x6A,0x70,0x32],{\noffset:20}))\n{\nreturn{\next:'mj2',\nmime:'image/mj2'};\n\n}\n}\n\nif(check([0x46,0x4F,0x52,0x4D,0x00])){\nreturn{\next:'aif',\nmime:'audio/aiff'};\n\n}\n\nif(checkString('<?xml ')){\nreturn{\next:'xml',\nmime:'application/xml'};\n\n}\n\nif(check([0x42,0x4F,0x4F,0x4B,0x4D,0x4F,0x42,0x49],{\noffset:60}))\n{\nreturn{\next:'mobi',\nmime:'application/x-mobipocket-ebook'};\n\n}// File Type Box (https://en.wikipedia.org/wiki/ISO_base_media_file_format)\n\n\nif(check([0x66,0x74,0x79,0x70],{\noffset:4}))\n{\nif(check([0x6D,0x69,0x66,0x31],{\noffset:8}))\n{\nreturn{\next:'heic',\nmime:'image/heif'};\n\n}\n\nif(check([0x6D,0x73,0x66,0x31],{\noffset:8}))\n{\nreturn{\next:'heic',\nmime:'image/heif-sequence'};\n\n}\n\nif(check([0x68,0x65,0x69,0x63],{\noffset:8})||\ncheck([0x68,0x65,0x69,0x78],{\noffset:8}))\n{\nreturn{\next:'heic',\nmime:'image/heic'};\n\n}\n\nif(check([0x68,0x65,0x76,0x63],{\noffset:8})||\ncheck([0x68,0x65,0x76,0x78],{\noffset:8}))\n{\nreturn{\next:'heic',\nmime:'image/heic-sequence'};\n\n}\n}\n\nif(check([0xAB,0x4B,0x54,0x58,0x20,0x31,0x31,0xBB,0x0D,0x0A,0x1A,0x0A])){\nreturn{\next:'ktx',\nmime:'image/ktx'};\n\n}\n\nreturn null;\n};\n\n},{}],162:[function(require,module,exports){\n'use strict';\n\nvar isCallable=require('is-callable');\n\nvar toStr=Object.prototype.toString;\nvar hasOwnProperty=Object.prototype.hasOwnProperty;\n\nvar forEachArray=function forEachArray(array,iterator,receiver){\nfor(var i=0,len=array.length;i<len;i++){\nif(hasOwnProperty.call(array,i)){\nif(receiver==null){\niterator(array[i],i,array);\n}else{\niterator.call(receiver,array[i],i,array);\n}\n}\n}\n};\n\nvar forEachString=function forEachString(string,iterator,receiver){\nfor(var i=0,len=string.length;i<len;i++){\n// no such thing as a sparse string.\nif(receiver==null){\niterator(string.charAt(i),i,string);\n}else{\niterator.call(receiver,string.charAt(i),i,string);\n}\n}\n};\n\nvar forEachObject=function forEachObject(object,iterator,receiver){\nfor(var k in object){\nif(hasOwnProperty.call(object,k)){\nif(receiver==null){\niterator(object[k],k,object);\n}else{\niterator.call(receiver,object[k],k,object);\n}\n}\n}\n};\n\nvar forEach=function forEach(list,iterator,thisArg){\nif(!isCallable(iterator)){\nthrow new TypeError('iterator must be a function');\n}\n\nvar receiver;\nif(arguments.length>=3){\nreceiver=thisArg;\n}\n\nif(toStr.call(list)==='[object Array]'){\nforEachArray(list,iterator,receiver);\n}else if(typeof list==='string'){\nforEachString(list,iterator,receiver);\n}else{\nforEachObject(list,iterator,receiver);\n}\n};\n\nmodule.exports=forEach;\n\n},{\"is-callable\":168}],163:[function(require,module,exports){\n(function(global){\nvar win;\n\nif(typeof window!==\"undefined\"){\nwin=window;\n}else if(typeof global!==\"undefined\"){\nwin=global;\n}else if(typeof self!==\"undefined\"){\nwin=self;\n}else{\nwin={};\n}\n\nmodule.exports=win;\n\n}).call(this,typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{});\n},{}],164:[function(require,module,exports){\nvar http=require('http');\nvar url=require('url');\n\nvar https=module.exports;\n\nfor(var key in http){\nif(http.hasOwnProperty(key))https[key]=http[key];\n}\n\nhttps.request=function(params,cb){\nparams=validateParams(params);\nreturn http.request.call(this,params,cb);\n};\n\nhttps.get=function(params,cb){\nparams=validateParams(params);\nreturn http.get.call(this,params,cb);\n};\n\nfunction validateParams(params){\nif(typeof params==='string'){\nparams=url.parse(params);\n}\nif(!params.protocol){\nparams.protocol='https:';\n}\nif(params.protocol!=='https:'){\nthrow new Error('Protocol \"'+params.protocol+'\" not supported. Expected \"https:\"');\n}\nreturn params;\n}\n\n},{\"http\":243,\"url\":253}],165:[function(require,module,exports){\nexports.read=function(buffer,offset,isLE,mLen,nBytes){\nvar e,m;\nvar eLen=nBytes*8-mLen-1;\nvar eMax=(1<<eLen)-1;\nvar eBias=eMax>>1;\nvar nBits=-7;\nvar i=isLE?nBytes-1:0;\nvar d=isLE?-1:1;\nvar s=buffer[offset+i];\n\ni+=d;\n\ne=s&(1<<-nBits)-1;\ns>>=-nBits;\nnBits+=eLen;\nfor(;nBits>0;e=e*256+buffer[offset+i],i+=d,nBits-=8){}\n\nm=e&(1<<-nBits)-1;\ne>>=-nBits;\nnBits+=mLen;\nfor(;nBits>0;m=m*256+buffer[offset+i],i+=d,nBits-=8){}\n\nif(e===0){\ne=1-eBias;\n}else if(e===eMax){\nreturn m?NaN:(s?-1:1)*Infinity;\n}else{\nm=m+Math.pow(2,mLen);\ne=e-eBias;\n}\nreturn(s?-1:1)*m*Math.pow(2,e-mLen);\n};\n\nexports.write=function(buffer,value,offset,isLE,mLen,nBytes){\nvar e,m,c;\nvar eLen=nBytes*8-mLen-1;\nvar eMax=(1<<eLen)-1;\nvar eBias=eMax>>1;\nvar rt=mLen===23?Math.pow(2,-24)-Math.pow(2,-77):0;\nvar i=isLE?0:nBytes-1;\nvar d=isLE?1:-1;\nvar s=value<0||value===0&&1/value<0?1:0;\n\nvalue=Math.abs(value);\n\nif(isNaN(value)||value===Infinity){\nm=isNaN(value)?1:0;\ne=eMax;\n}else{\ne=Math.floor(Math.log(value)/Math.LN2);\nif(value*(c=Math.pow(2,-e))<1){\ne--;\nc*=2;\n}\nif(e+eBias>=1){\nvalue+=rt/c;\n}else{\nvalue+=rt*Math.pow(2,1-eBias);\n}\nif(value*c>=2){\ne++;\nc/=2;\n}\n\nif(e+eBias>=eMax){\nm=0;\ne=eMax;\n}else if(e+eBias>=1){\nm=(value*c-1)*Math.pow(2,mLen);\ne=e+eBias;\n}else{\nm=value*Math.pow(2,eBias-1)*Math.pow(2,mLen);\ne=0;\n}\n}\n\nfor(;mLen>=8;buffer[offset+i]=m&0xff,i+=d,m/=256,mLen-=8){}\n\ne=e<<mLen|m;\neLen+=mLen;\nfor(;eLen>0;buffer[offset+i]=e&0xff,i+=d,e/=256,eLen-=8){}\n\nbuffer[offset+i-d]|=s*128;\n};\n\n},{}],166:[function(require,module,exports){\narguments[4][4][0].apply(exports,arguments);\n},{\"dup\":4}],167:[function(require,module,exports){\n/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports=function(obj){\nreturn obj!=null&&(isBuffer(obj)||isSlowBuffer(obj)||!!obj._isBuffer);\n};\n\nfunction isBuffer(obj){\nreturn!!obj.constructor&&typeof obj.constructor.isBuffer==='function'&&obj.constructor.isBuffer(obj);\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer(obj){\nreturn typeof obj.readFloatLE==='function'&&typeof obj.slice==='function'&&isBuffer(obj.slice(0,0));\n}\n\n},{}],168:[function(require,module,exports){\n'use strict';\n\nvar fnToStr=Function.prototype.toString;\n\nvar constructorRegex=/^\\s*class\\b/;\nvar isES6ClassFn=function isES6ClassFunction(value){\ntry{\nvar fnStr=fnToStr.call(value);\nreturn constructorRegex.test(fnStr);\n}catch(e){\nreturn false;// not a function\n}\n};\n\nvar tryFunctionObject=function tryFunctionToStr(value){\ntry{\nif(isES6ClassFn(value)){return false;}\nfnToStr.call(value);\nreturn true;\n}catch(e){\nreturn false;\n}\n};\nvar toStr=Object.prototype.toString;\nvar fnClass='[object Function]';\nvar genClass='[object GeneratorFunction]';\nvar hasToStringTag=typeof Symbol==='function'&&typeof Symbol.toStringTag==='symbol';\n\nmodule.exports=function isCallable(value){\nif(!value){return false;}\nif(typeof value!=='function'&&typeof value!=='object'){return false;}\nif(typeof value==='function'&&!value.prototype){return true;}\nif(hasToStringTag){return tryFunctionObject(value);}\nif(isES6ClassFn(value)){return false;}\nvar strClass=toStr.call(value);\nreturn strClass===fnClass||strClass===genClass;\n};\n\n},{}],169:[function(require,module,exports){\nmodule.exports=isFunction;\n\nvar toString=Object.prototype.toString;\n\nfunction isFunction(fn){\nvar string=toString.call(fn);\nreturn string==='[object Function]'||\ntypeof fn==='function'&&string!=='[object RegExp]'||\ntypeof window!=='undefined'&&(\n// IE8 and below\nfn===window.setTimeout||\nfn===window.alert||\nfn===window.confirm||\nfn===window.prompt);\n};\n\n},{}],170:[function(require,module,exports){\nvar toString={}.toString;\n\nmodule.exports=Array.isArray||function(arr){\nreturn toString.call(arr)=='[object Array]';\n};\n\n},{}],171:[function(require,module,exports){\nvar encode=require('./lib/encoder'),\ndecode=require('./lib/decoder');\n\nmodule.exports={\nencode:encode,\ndecode:decode};\n\n\n},{\"./lib/decoder\":172,\"./lib/encoder\":173}],172:[function(require,module,exports){\n(function(Buffer){\n/* -*- tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- /\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\n/*\n   Copyright 2011 notmasteryet\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\n// - The JPEG specification can be found in the ITU CCITT Recommendation T.81\n//   (www.w3.org/Graphics/JPEG/itu-t81.pdf)\n// - The JFIF specification can be found in the JPEG File Interchange Format\n//   (www.w3.org/Graphics/JPEG/jfif3.pdf)\n// - The Adobe Application-Specific JPEG markers in the Supporting the DCT Filters\n//   in PostScript Level 2, Technical Note #5116\n//   (partners.adobe.com/public/developer/en/ps/sdk/5116.DCT_Filter.pdf)\n\nvar JpegImage=function jpegImage(){\n\"use strict\";\nvar dctZigZag=new Int32Array([\n0,\n1,8,\n16,9,2,\n3,10,17,24,\n32,25,18,11,4,\n5,12,19,26,33,40,\n48,41,34,27,20,13,6,\n7,14,21,28,35,42,49,56,\n57,50,43,36,29,22,15,\n23,30,37,44,51,58,\n59,52,45,38,31,\n39,46,53,60,\n61,54,47,\n55,62,\n63]);\n\n\nvar dctCos1=4017;// cos(pi/16)\nvar dctSin1=799;// sin(pi/16)\nvar dctCos3=3406;// cos(3*pi/16)\nvar dctSin3=2276;// sin(3*pi/16)\nvar dctCos6=1567;// cos(6*pi/16)\nvar dctSin6=3784;// sin(6*pi/16)\nvar dctSqrt2=5793;// sqrt(2)\nvar dctSqrt1d2=2896;// sqrt(2) / 2\n\nfunction constructor(){\n}\n\nfunction buildHuffmanTable(codeLengths,values){\nvar k=0,code=[],i,j,length=16;\nwhile(length>0&&!codeLengths[length-1]){\nlength--;}\ncode.push({children:[],index:0});\nvar p=code[0],q;\nfor(i=0;i<length;i++){\nfor(j=0;j<codeLengths[i];j++){\np=code.pop();\np.children[p.index]=values[k];\nwhile(p.index>0){\np=code.pop();\n}\np.index++;\ncode.push(p);\nwhile(code.length<=i){\ncode.push(q={children:[],index:0});\np.children[p.index]=q.children;\np=q;\n}\nk++;\n}\nif(i+1<length){\n// p here points to last code\ncode.push(q={children:[],index:0});\np.children[p.index]=q.children;\np=q;\n}\n}\nreturn code[0].children;\n}\n\nfunction decodeScan(data,offset,\nframe,components,resetInterval,\nspectralStart,spectralEnd,\nsuccessivePrev,successive){\nvar precision=frame.precision;\nvar samplesPerLine=frame.samplesPerLine;\nvar scanLines=frame.scanLines;\nvar mcusPerLine=frame.mcusPerLine;\nvar progressive=frame.progressive;\nvar maxH=frame.maxH,maxV=frame.maxV;\n\nvar startOffset=offset,bitsData=0,bitsCount=0;\nfunction readBit(){\nif(bitsCount>0){\nbitsCount--;\nreturn bitsData>>bitsCount&1;\n}\nbitsData=data[offset++];\nif(bitsData==0xFF){\nvar nextByte=data[offset++];\nif(nextByte){\nthrow new Error(\"unexpected marker: \"+(bitsData<<8|nextByte).toString(16));\n}\n// unstuff 0\n}\nbitsCount=7;\nreturn bitsData>>>7;\n}\nfunction decodeHuffman(tree){\nvar node=tree,bit;\nwhile((bit=readBit())!==null){\nnode=node[bit];\nif(typeof node==='number')\nreturn node;\nif(typeof node!=='object')\nthrow new Error(\"invalid huffman sequence\");\n}\nreturn null;\n}\nfunction receive(length){\nvar n=0;\nwhile(length>0){\nvar bit=readBit();\nif(bit===null)return;\nn=n<<1|bit;\nlength--;\n}\nreturn n;\n}\nfunction receiveAndExtend(length){\nvar n=receive(length);\nif(n>=1<<length-1)\nreturn n;\nreturn n+(-1<<length)+1;\n}\nfunction decodeBaseline(component,zz){\nvar t=decodeHuffman(component.huffmanTableDC);\nvar diff=t===0?0:receiveAndExtend(t);\nzz[0]=component.pred+=diff;\nvar k=1;\nwhile(k<64){\nvar rs=decodeHuffman(component.huffmanTableAC);\nvar s=rs&15,r=rs>>4;\nif(s===0){\nif(r<15)\nbreak;\nk+=16;\ncontinue;\n}\nk+=r;\nvar z=dctZigZag[k];\nzz[z]=receiveAndExtend(s);\nk++;\n}\n}\nfunction decodeDCFirst(component,zz){\nvar t=decodeHuffman(component.huffmanTableDC);\nvar diff=t===0?0:receiveAndExtend(t)<<successive;\nzz[0]=component.pred+=diff;\n}\nfunction decodeDCSuccessive(component,zz){\nzz[0]|=readBit()<<successive;\n}\nvar eobrun=0;\nfunction decodeACFirst(component,zz){\nif(eobrun>0){\neobrun--;\nreturn;\n}\nvar k=spectralStart,e=spectralEnd;\nwhile(k<=e){\nvar rs=decodeHuffman(component.huffmanTableAC);\nvar s=rs&15,r=rs>>4;\nif(s===0){\nif(r<15){\neobrun=receive(r)+(1<<r)-1;\nbreak;\n}\nk+=16;\ncontinue;\n}\nk+=r;\nvar z=dctZigZag[k];\nzz[z]=receiveAndExtend(s)*(1<<successive);\nk++;\n}\n}\nvar successiveACState=0,successiveACNextValue;\nfunction decodeACSuccessive(component,zz){\nvar k=spectralStart,e=spectralEnd,r=0;\nwhile(k<=e){\nvar z=dctZigZag[k];\nvar direction=zz[z]<0?-1:1;\nswitch(successiveACState){\ncase 0:// initial state\nvar rs=decodeHuffman(component.huffmanTableAC);\nvar s=rs&15,r=rs>>4;\nif(s===0){\nif(r<15){\neobrun=receive(r)+(1<<r);\nsuccessiveACState=4;\n}else{\nr=16;\nsuccessiveACState=1;\n}\n}else{\nif(s!==1)\nthrow new Error(\"invalid ACn encoding\");\nsuccessiveACNextValue=receiveAndExtend(s);\nsuccessiveACState=r?2:3;\n}\ncontinue;\ncase 1:// skipping r zero items\ncase 2:\nif(zz[z])\nzz[z]+=(readBit()<<successive)*direction;else\n{\nr--;\nif(r===0)\nsuccessiveACState=successiveACState==2?3:0;\n}\nbreak;\ncase 3:// set value for a zero item\nif(zz[z])\nzz[z]+=(readBit()<<successive)*direction;else\n{\nzz[z]=successiveACNextValue<<successive;\nsuccessiveACState=0;\n}\nbreak;\ncase 4:// eob\nif(zz[z])\nzz[z]+=(readBit()<<successive)*direction;\nbreak;}\n\nk++;\n}\nif(successiveACState===4){\neobrun--;\nif(eobrun===0)\nsuccessiveACState=0;\n}\n}\nfunction decodeMcu(component,decode,mcu,row,col){\nvar mcuRow=mcu/mcusPerLine|0;\nvar mcuCol=mcu%mcusPerLine;\nvar blockRow=mcuRow*component.v+row;\nvar blockCol=mcuCol*component.h+col;\ndecode(component,component.blocks[blockRow][blockCol]);\n}\nfunction decodeBlock(component,decode,mcu){\nvar blockRow=mcu/component.blocksPerLine|0;\nvar blockCol=mcu%component.blocksPerLine;\ndecode(component,component.blocks[blockRow][blockCol]);\n}\n\nvar componentsLength=components.length;\nvar component,i,j,k,n;\nvar decodeFn;\nif(progressive){\nif(spectralStart===0)\ndecodeFn=successivePrev===0?decodeDCFirst:decodeDCSuccessive;else\n\ndecodeFn=successivePrev===0?decodeACFirst:decodeACSuccessive;\n}else{\ndecodeFn=decodeBaseline;\n}\n\nvar mcu=0,marker;\nvar mcuExpected;\nif(componentsLength==1){\nmcuExpected=components[0].blocksPerLine*components[0].blocksPerColumn;\n}else{\nmcuExpected=mcusPerLine*frame.mcusPerColumn;\n}\nif(!resetInterval)resetInterval=mcuExpected;\n\nvar h,v;\nwhile(mcu<mcuExpected){\n// reset interval stuff\nfor(i=0;i<componentsLength;i++){\ncomponents[i].pred=0;}\neobrun=0;\n\nif(componentsLength==1){\ncomponent=components[0];\nfor(n=0;n<resetInterval;n++){\ndecodeBlock(component,decodeFn,mcu);\nmcu++;\n}\n}else{\nfor(n=0;n<resetInterval;n++){\nfor(i=0;i<componentsLength;i++){\ncomponent=components[i];\nh=component.h;\nv=component.v;\nfor(j=0;j<v;j++){\nfor(k=0;k<h;k++){\ndecodeMcu(component,decodeFn,mcu,j,k);\n}\n}\n}\nmcu++;\n\n// If we've reached our expected MCU's, stop decoding\nif(mcu===mcuExpected)break;\n}\n}\n\n// find marker\nbitsCount=0;\nmarker=data[offset]<<8|data[offset+1];\nif(marker<0xFF00){\nthrow new Error(\"marker was not found\");\n}\n\nif(marker>=0xFFD0&&marker<=0xFFD7){// RSTx\noffset+=2;\n}else\n\nbreak;\n}\n\nreturn offset-startOffset;\n}\n\nfunction buildComponentData(frame,component){\nvar lines=[];\nvar blocksPerLine=component.blocksPerLine;\nvar blocksPerColumn=component.blocksPerColumn;\nvar samplesPerLine=blocksPerLine<<3;\nvar R=new Int32Array(64),r=new Uint8Array(64);\n\n// A port of poppler's IDCT method which in turn is taken from:\n//   Christoph Loeffler, Adriaan Ligtenberg, George S. Moschytz,\n//   \"Practical Fast 1-D DCT Algorithms with 11 Multiplications\",\n//   IEEE Intl. Conf. on Acoustics, Speech & Signal Processing, 1989,\n//   988-991.\nfunction quantizeAndInverse(zz,dataOut,dataIn){\nvar qt=component.quantizationTable;\nvar v0,v1,v2,v3,v4,v5,v6,v7,t;\nvar p=dataIn;\nvar i;\n\n// dequant\nfor(i=0;i<64;i++){\np[i]=zz[i]*qt[i];}\n\n// inverse DCT on rows\nfor(i=0;i<8;++i){\nvar row=8*i;\n\n// check for all-zero AC coefficients\nif(p[1+row]==0&&p[2+row]==0&&p[3+row]==0&&\np[4+row]==0&&p[5+row]==0&&p[6+row]==0&&\np[7+row]==0){\nt=dctSqrt2*p[0+row]+512>>10;\np[0+row]=t;\np[1+row]=t;\np[2+row]=t;\np[3+row]=t;\np[4+row]=t;\np[5+row]=t;\np[6+row]=t;\np[7+row]=t;\ncontinue;\n}\n\n// stage 4\nv0=dctSqrt2*p[0+row]+128>>8;\nv1=dctSqrt2*p[4+row]+128>>8;\nv2=p[2+row];\nv3=p[6+row];\nv4=dctSqrt1d2*(p[1+row]-p[7+row])+128>>8;\nv7=dctSqrt1d2*(p[1+row]+p[7+row])+128>>8;\nv5=p[3+row]<<4;\nv6=p[5+row]<<4;\n\n// stage 3\nt=v0-v1+1>>1;\nv0=v0+v1+1>>1;\nv1=t;\nt=v2*dctSin6+v3*dctCos6+128>>8;\nv2=v2*dctCos6-v3*dctSin6+128>>8;\nv3=t;\nt=v4-v6+1>>1;\nv4=v4+v6+1>>1;\nv6=t;\nt=v7+v5+1>>1;\nv5=v7-v5+1>>1;\nv7=t;\n\n// stage 2\nt=v0-v3+1>>1;\nv0=v0+v3+1>>1;\nv3=t;\nt=v1-v2+1>>1;\nv1=v1+v2+1>>1;\nv2=t;\nt=v4*dctSin3+v7*dctCos3+2048>>12;\nv4=v4*dctCos3-v7*dctSin3+2048>>12;\nv7=t;\nt=v5*dctSin1+v6*dctCos1+2048>>12;\nv5=v5*dctCos1-v6*dctSin1+2048>>12;\nv6=t;\n\n// stage 1\np[0+row]=v0+v7;\np[7+row]=v0-v7;\np[1+row]=v1+v6;\np[6+row]=v1-v6;\np[2+row]=v2+v5;\np[5+row]=v2-v5;\np[3+row]=v3+v4;\np[4+row]=v3-v4;\n}\n\n// inverse DCT on columns\nfor(i=0;i<8;++i){\nvar col=i;\n\n// check for all-zero AC coefficients\nif(p[1*8+col]==0&&p[2*8+col]==0&&p[3*8+col]==0&&\np[4*8+col]==0&&p[5*8+col]==0&&p[6*8+col]==0&&\np[7*8+col]==0){\nt=dctSqrt2*dataIn[i+0]+8192>>14;\np[0*8+col]=t;\np[1*8+col]=t;\np[2*8+col]=t;\np[3*8+col]=t;\np[4*8+col]=t;\np[5*8+col]=t;\np[6*8+col]=t;\np[7*8+col]=t;\ncontinue;\n}\n\n// stage 4\nv0=dctSqrt2*p[0*8+col]+2048>>12;\nv1=dctSqrt2*p[4*8+col]+2048>>12;\nv2=p[2*8+col];\nv3=p[6*8+col];\nv4=dctSqrt1d2*(p[1*8+col]-p[7*8+col])+2048>>12;\nv7=dctSqrt1d2*(p[1*8+col]+p[7*8+col])+2048>>12;\nv5=p[3*8+col];\nv6=p[5*8+col];\n\n// stage 3\nt=v0-v1+1>>1;\nv0=v0+v1+1>>1;\nv1=t;\nt=v2*dctSin6+v3*dctCos6+2048>>12;\nv2=v2*dctCos6-v3*dctSin6+2048>>12;\nv3=t;\nt=v4-v6+1>>1;\nv4=v4+v6+1>>1;\nv6=t;\nt=v7+v5+1>>1;\nv5=v7-v5+1>>1;\nv7=t;\n\n// stage 2\nt=v0-v3+1>>1;\nv0=v0+v3+1>>1;\nv3=t;\nt=v1-v2+1>>1;\nv1=v1+v2+1>>1;\nv2=t;\nt=v4*dctSin3+v7*dctCos3+2048>>12;\nv4=v4*dctCos3-v7*dctSin3+2048>>12;\nv7=t;\nt=v5*dctSin1+v6*dctCos1+2048>>12;\nv5=v5*dctCos1-v6*dctSin1+2048>>12;\nv6=t;\n\n// stage 1\np[0*8+col]=v0+v7;\np[7*8+col]=v0-v7;\np[1*8+col]=v1+v6;\np[6*8+col]=v1-v6;\np[2*8+col]=v2+v5;\np[5*8+col]=v2-v5;\np[3*8+col]=v3+v4;\np[4*8+col]=v3-v4;\n}\n\n// convert to 8-bit integers\nfor(i=0;i<64;++i){\nvar sample=128+(p[i]+8>>4);\ndataOut[i]=sample<0?0:sample>0xFF?0xFF:sample;\n}\n}\n\nvar i,j;\nfor(var blockRow=0;blockRow<blocksPerColumn;blockRow++){\nvar scanLine=blockRow<<3;\nfor(i=0;i<8;i++){\nlines.push(new Uint8Array(samplesPerLine));}\nfor(var blockCol=0;blockCol<blocksPerLine;blockCol++){\nquantizeAndInverse(component.blocks[blockRow][blockCol],r,R);\n\nvar offset=0,sample=blockCol<<3;\nfor(j=0;j<8;j++){\nvar line=lines[scanLine+j];\nfor(i=0;i<8;i++){\nline[sample+i]=r[offset++];}\n}\n}\n}\nreturn lines;\n}\n\nfunction clampTo8bit(a){\nreturn a<0?0:a>255?255:a;\n}\n\nconstructor.prototype={\nload:function load(path){\nvar xhr=new XMLHttpRequest();\nxhr.open(\"GET\",path,true);\nxhr.responseType=\"arraybuffer\";\nxhr.onload=function(){\n// TODO catch parse error\nvar data=new Uint8Array(xhr.response||xhr.mozResponseArrayBuffer);\nthis.parse(data);\nif(this.onload)\nthis.onload();\n}.bind(this);\nxhr.send(null);\n},\nparse:function parse(data){\nvar offset=0,length=data.length;\nfunction readUint16(){\nvar value=data[offset]<<8|data[offset+1];\noffset+=2;\nreturn value;\n}\nfunction readDataBlock(){\nvar length=readUint16();\nvar array=data.subarray(offset,offset+length-2);\noffset+=array.length;\nreturn array;\n}\nfunction prepareComponents(frame){\nvar maxH=0,maxV=0;\nvar component,componentId;\nfor(componentId in frame.components){\nif(frame.components.hasOwnProperty(componentId)){\ncomponent=frame.components[componentId];\nif(maxH<component.h)maxH=component.h;\nif(maxV<component.v)maxV=component.v;\n}\n}\nvar mcusPerLine=Math.ceil(frame.samplesPerLine/8/maxH);\nvar mcusPerColumn=Math.ceil(frame.scanLines/8/maxV);\nfor(componentId in frame.components){\nif(frame.components.hasOwnProperty(componentId)){\ncomponent=frame.components[componentId];\nvar blocksPerLine=Math.ceil(Math.ceil(frame.samplesPerLine/8)*component.h/maxH);\nvar blocksPerColumn=Math.ceil(Math.ceil(frame.scanLines/8)*component.v/maxV);\nvar blocksPerLineForMcu=mcusPerLine*component.h;\nvar blocksPerColumnForMcu=mcusPerColumn*component.v;\nvar blocks=[];\nfor(var i=0;i<blocksPerColumnForMcu;i++){\nvar row=[];\nfor(var j=0;j<blocksPerLineForMcu;j++){\nrow.push(new Int32Array(64));}\nblocks.push(row);\n}\ncomponent.blocksPerLine=blocksPerLine;\ncomponent.blocksPerColumn=blocksPerColumn;\ncomponent.blocks=blocks;\n}\n}\nframe.maxH=maxH;\nframe.maxV=maxV;\nframe.mcusPerLine=mcusPerLine;\nframe.mcusPerColumn=mcusPerColumn;\n}\nvar jfif=null;\nvar adobe=null;\nvar pixels=null;\nvar frame,resetInterval;\nvar quantizationTables=[],frames=[];\nvar huffmanTablesAC=[],huffmanTablesDC=[];\nvar fileMarker=readUint16();\nif(fileMarker!=0xFFD8){// SOI (Start of Image)\nthrow new Error(\"SOI not found\");\n}\n\nfileMarker=readUint16();\nwhile(fileMarker!=0xFFD9){// EOI (End of image)\nvar i,j,l;\nswitch(fileMarker){\ncase 0xFF00:break;\ncase 0xFFE0:// APP0 (Application Specific)\ncase 0xFFE1:// APP1\ncase 0xFFE2:// APP2\ncase 0xFFE3:// APP3\ncase 0xFFE4:// APP4\ncase 0xFFE5:// APP5\ncase 0xFFE6:// APP6\ncase 0xFFE7:// APP7\ncase 0xFFE8:// APP8\ncase 0xFFE9:// APP9\ncase 0xFFEA:// APP10\ncase 0xFFEB:// APP11\ncase 0xFFEC:// APP12\ncase 0xFFED:// APP13\ncase 0xFFEE:// APP14\ncase 0xFFEF:// APP15\ncase 0xFFFE:// COM (Comment)\nvar appData=readDataBlock();\n\nif(fileMarker===0xFFE0){\nif(appData[0]===0x4A&&appData[1]===0x46&&appData[2]===0x49&&\nappData[3]===0x46&&appData[4]===0){// 'JFIF\\x00'\njfif={\nversion:{major:appData[5],minor:appData[6]},\ndensityUnits:appData[7],\nxDensity:appData[8]<<8|appData[9],\nyDensity:appData[10]<<8|appData[11],\nthumbWidth:appData[12],\nthumbHeight:appData[13],\nthumbData:appData.subarray(14,14+3*appData[12]*appData[13])};\n\n}\n}\n// TODO APP1 - Exif\nif(fileMarker===0xFFEE){\nif(appData[0]===0x41&&appData[1]===0x64&&appData[2]===0x6F&&\nappData[3]===0x62&&appData[4]===0x65&&appData[5]===0){// 'Adobe\\x00'\nadobe={\nversion:appData[6],\nflags0:appData[7]<<8|appData[8],\nflags1:appData[9]<<8|appData[10],\ntransformCode:appData[11]};\n\n}\n}\nbreak;\n\ncase 0xFFDB:// DQT (Define Quantization Tables)\nvar quantizationTablesLength=readUint16();\nvar quantizationTablesEnd=quantizationTablesLength+offset-2;\nwhile(offset<quantizationTablesEnd){\nvar quantizationTableSpec=data[offset++];\nvar tableData=new Int32Array(64);\nif(quantizationTableSpec>>4===0){// 8 bit values\nfor(j=0;j<64;j++){\nvar z=dctZigZag[j];\ntableData[z]=data[offset++];\n}\n}else if(quantizationTableSpec>>4===1){//16 bit\nfor(j=0;j<64;j++){\nvar z=dctZigZag[j];\ntableData[z]=readUint16();\n}\n}else\nthrow new Error(\"DQT: invalid table spec\");\nquantizationTables[quantizationTableSpec&15]=tableData;\n}\nbreak;\n\ncase 0xFFC0:// SOF0 (Start of Frame, Baseline DCT)\ncase 0xFFC1:// SOF1 (Start of Frame, Extended DCT)\ncase 0xFFC2:// SOF2 (Start of Frame, Progressive DCT)\nreadUint16();// skip data length\nframe={};\nframe.extended=fileMarker===0xFFC1;\nframe.progressive=fileMarker===0xFFC2;\nframe.precision=data[offset++];\nframe.scanLines=readUint16();\nframe.samplesPerLine=readUint16();\nframe.components={};\nframe.componentsOrder=[];\nvar componentsCount=data[offset++],componentId;\nvar maxH=0,maxV=0;\nfor(i=0;i<componentsCount;i++){\ncomponentId=data[offset];\nvar h=data[offset+1]>>4;\nvar v=data[offset+1]&15;\nvar qId=data[offset+2];\nframe.componentsOrder.push(componentId);\nframe.components[componentId]={\nh:h,\nv:v,\nquantizationIdx:qId};\n\noffset+=3;\n}\nprepareComponents(frame);\nframes.push(frame);\nbreak;\n\ncase 0xFFC4:// DHT (Define Huffman Tables)\nvar huffmanLength=readUint16();\nfor(i=2;i<huffmanLength;){\nvar huffmanTableSpec=data[offset++];\nvar codeLengths=new Uint8Array(16);\nvar codeLengthSum=0;\nfor(j=0;j<16;j++,offset++){\ncodeLengthSum+=codeLengths[j]=data[offset];}\nvar huffmanValues=new Uint8Array(codeLengthSum);\nfor(j=0;j<codeLengthSum;j++,offset++){\nhuffmanValues[j]=data[offset];}\ni+=17+codeLengthSum;\n\n(huffmanTableSpec>>4===0?\nhuffmanTablesDC:huffmanTablesAC)[huffmanTableSpec&15]=\nbuildHuffmanTable(codeLengths,huffmanValues);\n}\nbreak;\n\ncase 0xFFDD:// DRI (Define Restart Interval)\nreadUint16();// skip data length\nresetInterval=readUint16();\nbreak;\n\ncase 0xFFDA:// SOS (Start of Scan)\nvar scanLength=readUint16();\nvar selectorsCount=data[offset++];\nvar components=[],component;\nfor(i=0;i<selectorsCount;i++){\ncomponent=frame.components[data[offset++]];\nvar tableSpec=data[offset++];\ncomponent.huffmanTableDC=huffmanTablesDC[tableSpec>>4];\ncomponent.huffmanTableAC=huffmanTablesAC[tableSpec&15];\ncomponents.push(component);\n}\nvar spectralStart=data[offset++];\nvar spectralEnd=data[offset++];\nvar successiveApproximation=data[offset++];\nvar processed=decodeScan(data,offset,\nframe,components,resetInterval,\nspectralStart,spectralEnd,\nsuccessiveApproximation>>4,successiveApproximation&15);\noffset+=processed;\nbreak;\n\ncase 0xFFFF:// Fill bytes\nif(data[offset]!==0xFF){// Avoid skipping a valid marker.\noffset--;\n}\nbreak;\n\ndefault:\nif(data[offset-3]==0xFF&&\ndata[offset-2]>=0xC0&&data[offset-2]<=0xFE){\n// could be incorrect encoding -- last 0xFF byte of the previous\n// block was eaten by the encoder\noffset-=3;\nbreak;\n}\nthrow new Error(\"unknown JPEG marker \"+fileMarker.toString(16));}\n\nfileMarker=readUint16();\n}\nif(frames.length!=1)\nthrow new Error(\"only single frame JPEGs supported\");\n\n// set each frame's components quantization table\nfor(var i=0;i<frames.length;i++){\nvar cp=frames[i].components;\nfor(var j in cp){\ncp[j].quantizationTable=quantizationTables[cp[j].quantizationIdx];\ndelete cp[j].quantizationIdx;\n}\n}\n\nthis.width=frame.samplesPerLine;\nthis.height=frame.scanLines;\nthis.jfif=jfif;\nthis.adobe=adobe;\nthis.components=[];\nfor(var i=0;i<frame.componentsOrder.length;i++){\nvar component=frame.components[frame.componentsOrder[i]];\nthis.components.push({\nlines:buildComponentData(frame,component),\nscaleX:component.h/frame.maxH,\nscaleY:component.v/frame.maxV});\n\n}\n},\ngetData:function getData(width,height){\nvar scaleX=this.width/width,scaleY=this.height/height;\n\nvar component1,component2,component3,component4;\nvar component1Line,component2Line,component3Line,component4Line;\nvar x,y;\nvar offset=0;\nvar Y,Cb,Cr,K,C,M,Ye,R,G,B;\nvar colorTransform;\nvar dataLength=width*height*this.components.length;\nvar data=new Uint8Array(dataLength);\nswitch(this.components.length){\ncase 1:\ncomponent1=this.components[0];\nfor(y=0;y<height;y++){\ncomponent1Line=component1.lines[0|y*component1.scaleY*scaleY];\nfor(x=0;x<width;x++){\nY=component1Line[0|x*component1.scaleX*scaleX];\n\ndata[offset++]=Y;\n}\n}\nbreak;\ncase 2:\n// PDF might compress two component data in custom colorspace\ncomponent1=this.components[0];\ncomponent2=this.components[1];\nfor(y=0;y<height;y++){\ncomponent1Line=component1.lines[0|y*component1.scaleY*scaleY];\ncomponent2Line=component2.lines[0|y*component2.scaleY*scaleY];\nfor(x=0;x<width;x++){\nY=component1Line[0|x*component1.scaleX*scaleX];\ndata[offset++]=Y;\nY=component2Line[0|x*component2.scaleX*scaleX];\ndata[offset++]=Y;\n}\n}\nbreak;\ncase 3:\n// The default transform for three components is true\ncolorTransform=true;\n// The adobe transform marker overrides any previous setting\nif(this.adobe&&this.adobe.transformCode)\ncolorTransform=true;else\nif(typeof this.colorTransform!=='undefined')\ncolorTransform=!!this.colorTransform;\n\ncomponent1=this.components[0];\ncomponent2=this.components[1];\ncomponent3=this.components[2];\nfor(y=0;y<height;y++){\ncomponent1Line=component1.lines[0|y*component1.scaleY*scaleY];\ncomponent2Line=component2.lines[0|y*component2.scaleY*scaleY];\ncomponent3Line=component3.lines[0|y*component3.scaleY*scaleY];\nfor(x=0;x<width;x++){\nif(!colorTransform){\nR=component1Line[0|x*component1.scaleX*scaleX];\nG=component2Line[0|x*component2.scaleX*scaleX];\nB=component3Line[0|x*component3.scaleX*scaleX];\n}else{\nY=component1Line[0|x*component1.scaleX*scaleX];\nCb=component2Line[0|x*component2.scaleX*scaleX];\nCr=component3Line[0|x*component3.scaleX*scaleX];\n\nR=clampTo8bit(Y+1.402*(Cr-128));\nG=clampTo8bit(Y-0.3441363*(Cb-128)-0.71413636*(Cr-128));\nB=clampTo8bit(Y+1.772*(Cb-128));\n}\n\ndata[offset++]=R;\ndata[offset++]=G;\ndata[offset++]=B;\n}\n}\nbreak;\ncase 4:\nif(!this.adobe)\nthrow'Unsupported color mode (4 components)';\n// The default transform for four components is false\ncolorTransform=false;\n// The adobe transform marker overrides any previous setting\nif(this.adobe&&this.adobe.transformCode)\ncolorTransform=true;else\nif(typeof this.colorTransform!=='undefined')\ncolorTransform=!!this.colorTransform;\n\ncomponent1=this.components[0];\ncomponent2=this.components[1];\ncomponent3=this.components[2];\ncomponent4=this.components[3];\nfor(y=0;y<height;y++){\ncomponent1Line=component1.lines[0|y*component1.scaleY*scaleY];\ncomponent2Line=component2.lines[0|y*component2.scaleY*scaleY];\ncomponent3Line=component3.lines[0|y*component3.scaleY*scaleY];\ncomponent4Line=component4.lines[0|y*component4.scaleY*scaleY];\nfor(x=0;x<width;x++){\nif(!colorTransform){\nC=component1Line[0|x*component1.scaleX*scaleX];\nM=component2Line[0|x*component2.scaleX*scaleX];\nYe=component3Line[0|x*component3.scaleX*scaleX];\nK=component4Line[0|x*component4.scaleX*scaleX];\n}else{\nY=component1Line[0|x*component1.scaleX*scaleX];\nCb=component2Line[0|x*component2.scaleX*scaleX];\nCr=component3Line[0|x*component3.scaleX*scaleX];\nK=component4Line[0|x*component4.scaleX*scaleX];\n\nC=255-clampTo8bit(Y+1.402*(Cr-128));\nM=255-clampTo8bit(Y-0.3441363*(Cb-128)-0.71413636*(Cr-128));\nYe=255-clampTo8bit(Y+1.772*(Cb-128));\n}\ndata[offset++]=255-C;\ndata[offset++]=255-M;\ndata[offset++]=255-Ye;\ndata[offset++]=255-K;\n}\n}\nbreak;\ndefault:\nthrow'Unsupported color mode';}\n\nreturn data;\n},\ncopyToImageData:function copyToImageData(imageData){\nvar width=imageData.width,height=imageData.height;\nvar imageDataArray=imageData.data;\nvar data=this.getData(width,height);\nvar i=0,j=0,x,y;\nvar Y,K,C,M,R,G,B;\nswitch(this.components.length){\ncase 1:\nfor(y=0;y<height;y++){\nfor(x=0;x<width;x++){\nY=data[i++];\n\nimageDataArray[j++]=Y;\nimageDataArray[j++]=Y;\nimageDataArray[j++]=Y;\nimageDataArray[j++]=255;\n}\n}\nbreak;\ncase 3:\nfor(y=0;y<height;y++){\nfor(x=0;x<width;x++){\nR=data[i++];\nG=data[i++];\nB=data[i++];\n\nimageDataArray[j++]=R;\nimageDataArray[j++]=G;\nimageDataArray[j++]=B;\nimageDataArray[j++]=255;\n}\n}\nbreak;\ncase 4:\nfor(y=0;y<height;y++){\nfor(x=0;x<width;x++){\nC=data[i++];\nM=data[i++];\nY=data[i++];\nK=data[i++];\n\nR=255-clampTo8bit(C*(1-K/255)+K);\nG=255-clampTo8bit(M*(1-K/255)+K);\nB=255-clampTo8bit(Y*(1-K/255)+K);\n\nimageDataArray[j++]=R;\nimageDataArray[j++]=G;\nimageDataArray[j++]=B;\nimageDataArray[j++]=255;\n}\n}\nbreak;\ndefault:\nthrow'Unsupported color mode';}\n\n}};\n\n\nreturn constructor;\n}();\nmodule.exports=decode;\n\nfunction decode(jpegData,useTArray){\nvar arr=new Uint8Array(jpegData);\nvar decoder=new JpegImage();\ndecoder.parse(arr);\n\nvar image={\nwidth:decoder.width,\nheight:decoder.height,\ndata:useTArray?\nnew Uint8Array(decoder.width*decoder.height*4):\nnew Buffer(decoder.width*decoder.height*4)};\n\n\ndecoder.copyToImageData(image);\n\nreturn image;\n}\n\n}).call(this,require(\"buffer\").Buffer);\n},{\"buffer\":16}],173:[function(require,module,exports){\n(function(Buffer){\n/*\n  Copyright (c) 2008, Adobe Systems Incorporated\n  All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without \n  modification, are permitted provided that the following conditions are\n  met:\n\n  * Redistributions of source code must retain the above copyright notice, \n    this list of conditions and the following disclaimer.\n  \n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the \n    documentation and/or other materials provided with the distribution.\n  \n  * Neither the name of Adobe Systems Incorporated nor the names of its \n    contributors may be used to endorse or promote products derived from \n    this software without specific prior written permission.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n  IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR \n  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/*\nJPEG encoder ported to JavaScript and optimized by Andreas Ritter, www.bytestrom.eu, 11/2009\n\nBasic GUI blocking jpeg encoder\n*/\n\nvar btoa=btoa||function(buf){\nreturn new Buffer(buf).toString('base64');\n};\n\nfunction JPEGEncoder(quality){\nvar self=this;\nvar fround=Math.round;\nvar ffloor=Math.floor;\nvar YTable=new Array(64);\nvar UVTable=new Array(64);\nvar fdtbl_Y=new Array(64);\nvar fdtbl_UV=new Array(64);\nvar YDC_HT;\nvar UVDC_HT;\nvar YAC_HT;\nvar UVAC_HT;\n\nvar bitcode=new Array(65535);\nvar category=new Array(65535);\nvar outputfDCTQuant=new Array(64);\nvar DU=new Array(64);\nvar byteout=[];\nvar bytenew=0;\nvar bytepos=7;\n\nvar YDU=new Array(64);\nvar UDU=new Array(64);\nvar VDU=new Array(64);\nvar clt=new Array(256);\nvar RGB_YUV_TABLE=new Array(2048);\nvar currentQuality;\n\nvar ZigZag=[\n0,1,5,6,14,15,27,28,\n2,4,7,13,16,26,29,42,\n3,8,12,17,25,30,41,43,\n9,11,18,24,31,40,44,53,\n10,19,23,32,39,45,52,54,\n20,22,33,38,46,51,55,60,\n21,34,37,47,50,56,59,61,\n35,36,48,49,57,58,62,63];\n\n\nvar std_dc_luminance_nrcodes=[0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0];\nvar std_dc_luminance_values=[0,1,2,3,4,5,6,7,8,9,10,11];\nvar std_ac_luminance_nrcodes=[0,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,0x7d];\nvar std_ac_luminance_values=[\n0x01,0x02,0x03,0x00,0x04,0x11,0x05,0x12,\n0x21,0x31,0x41,0x06,0x13,0x51,0x61,0x07,\n0x22,0x71,0x14,0x32,0x81,0x91,0xa1,0x08,\n0x23,0x42,0xb1,0xc1,0x15,0x52,0xd1,0xf0,\n0x24,0x33,0x62,0x72,0x82,0x09,0x0a,0x16,\n0x17,0x18,0x19,0x1a,0x25,0x26,0x27,0x28,\n0x29,0x2a,0x34,0x35,0x36,0x37,0x38,0x39,\n0x3a,0x43,0x44,0x45,0x46,0x47,0x48,0x49,\n0x4a,0x53,0x54,0x55,0x56,0x57,0x58,0x59,\n0x5a,0x63,0x64,0x65,0x66,0x67,0x68,0x69,\n0x6a,0x73,0x74,0x75,0x76,0x77,0x78,0x79,\n0x7a,0x83,0x84,0x85,0x86,0x87,0x88,0x89,\n0x8a,0x92,0x93,0x94,0x95,0x96,0x97,0x98,\n0x99,0x9a,0xa2,0xa3,0xa4,0xa5,0xa6,0xa7,\n0xa8,0xa9,0xaa,0xb2,0xb3,0xb4,0xb5,0xb6,\n0xb7,0xb8,0xb9,0xba,0xc2,0xc3,0xc4,0xc5,\n0xc6,0xc7,0xc8,0xc9,0xca,0xd2,0xd3,0xd4,\n0xd5,0xd6,0xd7,0xd8,0xd9,0xda,0xe1,0xe2,\n0xe3,0xe4,0xe5,0xe6,0xe7,0xe8,0xe9,0xea,\n0xf1,0xf2,0xf3,0xf4,0xf5,0xf6,0xf7,0xf8,\n0xf9,0xfa];\n\n\nvar std_dc_chrominance_nrcodes=[0,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0];\nvar std_dc_chrominance_values=[0,1,2,3,4,5,6,7,8,9,10,11];\nvar std_ac_chrominance_nrcodes=[0,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,0x77];\nvar std_ac_chrominance_values=[\n0x00,0x01,0x02,0x03,0x11,0x04,0x05,0x21,\n0x31,0x06,0x12,0x41,0x51,0x07,0x61,0x71,\n0x13,0x22,0x32,0x81,0x08,0x14,0x42,0x91,\n0xa1,0xb1,0xc1,0x09,0x23,0x33,0x52,0xf0,\n0x15,0x62,0x72,0xd1,0x0a,0x16,0x24,0x34,\n0xe1,0x25,0xf1,0x17,0x18,0x19,0x1a,0x26,\n0x27,0x28,0x29,0x2a,0x35,0x36,0x37,0x38,\n0x39,0x3a,0x43,0x44,0x45,0x46,0x47,0x48,\n0x49,0x4a,0x53,0x54,0x55,0x56,0x57,0x58,\n0x59,0x5a,0x63,0x64,0x65,0x66,0x67,0x68,\n0x69,0x6a,0x73,0x74,0x75,0x76,0x77,0x78,\n0x79,0x7a,0x82,0x83,0x84,0x85,0x86,0x87,\n0x88,0x89,0x8a,0x92,0x93,0x94,0x95,0x96,\n0x97,0x98,0x99,0x9a,0xa2,0xa3,0xa4,0xa5,\n0xa6,0xa7,0xa8,0xa9,0xaa,0xb2,0xb3,0xb4,\n0xb5,0xb6,0xb7,0xb8,0xb9,0xba,0xc2,0xc3,\n0xc4,0xc5,0xc6,0xc7,0xc8,0xc9,0xca,0xd2,\n0xd3,0xd4,0xd5,0xd6,0xd7,0xd8,0xd9,0xda,\n0xe2,0xe3,0xe4,0xe5,0xe6,0xe7,0xe8,0xe9,\n0xea,0xf2,0xf3,0xf4,0xf5,0xf6,0xf7,0xf8,\n0xf9,0xfa];\n\n\nfunction initQuantTables(sf){\nvar YQT=[\n16,11,10,16,24,40,51,61,\n12,12,14,19,26,58,60,55,\n14,13,16,24,40,57,69,56,\n14,17,22,29,51,87,80,62,\n18,22,37,56,68,109,103,77,\n24,35,55,64,81,104,113,92,\n49,64,78,87,103,121,120,101,\n72,92,95,98,112,100,103,99];\n\n\nfor(var i=0;i<64;i++){\nvar t=ffloor((YQT[i]*sf+50)/100);\nif(t<1){\nt=1;\n}else if(t>255){\nt=255;\n}\nYTable[ZigZag[i]]=t;\n}\nvar UVQT=[\n17,18,24,47,99,99,99,99,\n18,21,26,66,99,99,99,99,\n24,26,56,99,99,99,99,99,\n47,66,99,99,99,99,99,99,\n99,99,99,99,99,99,99,99,\n99,99,99,99,99,99,99,99,\n99,99,99,99,99,99,99,99,\n99,99,99,99,99,99,99,99];\n\nfor(var j=0;j<64;j++){\nvar u=ffloor((UVQT[j]*sf+50)/100);\nif(u<1){\nu=1;\n}else if(u>255){\nu=255;\n}\nUVTable[ZigZag[j]]=u;\n}\nvar aasf=[\n1.0,1.387039845,1.306562965,1.175875602,\n1.0,0.785694958,0.541196100,0.275899379];\n\nvar k=0;\nfor(var row=0;row<8;row++)\n{\nfor(var col=0;col<8;col++)\n{\nfdtbl_Y[k]=1.0/(YTable[ZigZag[k]]*aasf[row]*aasf[col]*8.0);\nfdtbl_UV[k]=1.0/(UVTable[ZigZag[k]]*aasf[row]*aasf[col]*8.0);\nk++;\n}\n}\n}\n\nfunction computeHuffmanTbl(nrcodes,std_table){\nvar codevalue=0;\nvar pos_in_table=0;\nvar HT=new Array();\nfor(var k=1;k<=16;k++){\nfor(var j=1;j<=nrcodes[k];j++){\nHT[std_table[pos_in_table]]=[];\nHT[std_table[pos_in_table]][0]=codevalue;\nHT[std_table[pos_in_table]][1]=k;\npos_in_table++;\ncodevalue++;\n}\ncodevalue*=2;\n}\nreturn HT;\n}\n\nfunction initHuffmanTbl()\n{\nYDC_HT=computeHuffmanTbl(std_dc_luminance_nrcodes,std_dc_luminance_values);\nUVDC_HT=computeHuffmanTbl(std_dc_chrominance_nrcodes,std_dc_chrominance_values);\nYAC_HT=computeHuffmanTbl(std_ac_luminance_nrcodes,std_ac_luminance_values);\nUVAC_HT=computeHuffmanTbl(std_ac_chrominance_nrcodes,std_ac_chrominance_values);\n}\n\nfunction initCategoryNumber()\n{\nvar nrlower=1;\nvar nrupper=2;\nfor(var cat=1;cat<=15;cat++){\n//Positive numbers\nfor(var nr=nrlower;nr<nrupper;nr++){\ncategory[32767+nr]=cat;\nbitcode[32767+nr]=[];\nbitcode[32767+nr][1]=cat;\nbitcode[32767+nr][0]=nr;\n}\n//Negative numbers\nfor(var nrneg=-(nrupper-1);nrneg<=-nrlower;nrneg++){\ncategory[32767+nrneg]=cat;\nbitcode[32767+nrneg]=[];\nbitcode[32767+nrneg][1]=cat;\nbitcode[32767+nrneg][0]=nrupper-1+nrneg;\n}\nnrlower<<=1;\nnrupper<<=1;\n}\n}\n\nfunction initRGBYUVTable(){\nfor(var i=0;i<256;i++){\nRGB_YUV_TABLE[i]=19595*i;\nRGB_YUV_TABLE[i+256>>0]=38470*i;\nRGB_YUV_TABLE[i+512>>0]=7471*i+0x8000;\nRGB_YUV_TABLE[i+768>>0]=-11059*i;\nRGB_YUV_TABLE[i+1024>>0]=-21709*i;\nRGB_YUV_TABLE[i+1280>>0]=32768*i+0x807FFF;\nRGB_YUV_TABLE[i+1536>>0]=-27439*i;\nRGB_YUV_TABLE[i+1792>>0]=-5329*i;\n}\n}\n\n// IO functions\nfunction writeBits(bs)\n{\nvar value=bs[0];\nvar posval=bs[1]-1;\nwhile(posval>=0){\nif(value&1<<posval){\nbytenew|=1<<bytepos;\n}\nposval--;\nbytepos--;\nif(bytepos<0){\nif(bytenew==0xFF){\nwriteByte(0xFF);\nwriteByte(0);\n}else\n{\nwriteByte(bytenew);\n}\nbytepos=7;\nbytenew=0;\n}\n}\n}\n\nfunction writeByte(value)\n{\n//byteout.push(clt[value]); // write char directly instead of converting later\nbyteout.push(value);\n}\n\nfunction writeWord(value)\n{\nwriteByte(value>>8&0xFF);\nwriteByte(value&0xFF);\n}\n\n// DCT & quantization core\nfunction fDCTQuant(data,fdtbl)\n{\nvar d0,d1,d2,d3,d4,d5,d6,d7;\n/* Pass 1: process rows. */\nvar dataOff=0;\nvar i;\nvar I8=8;\nvar I64=64;\nfor(i=0;i<I8;++i)\n{\nd0=data[dataOff];\nd1=data[dataOff+1];\nd2=data[dataOff+2];\nd3=data[dataOff+3];\nd4=data[dataOff+4];\nd5=data[dataOff+5];\nd6=data[dataOff+6];\nd7=data[dataOff+7];\n\nvar tmp0=d0+d7;\nvar tmp7=d0-d7;\nvar tmp1=d1+d6;\nvar tmp6=d1-d6;\nvar tmp2=d2+d5;\nvar tmp5=d2-d5;\nvar tmp3=d3+d4;\nvar tmp4=d3-d4;\n\n/* Even part */\nvar tmp10=tmp0+tmp3;/* phase 2 */\nvar tmp13=tmp0-tmp3;\nvar tmp11=tmp1+tmp2;\nvar tmp12=tmp1-tmp2;\n\ndata[dataOff]=tmp10+tmp11;/* phase 3 */\ndata[dataOff+4]=tmp10-tmp11;\n\nvar z1=(tmp12+tmp13)*0.707106781;/* c4 */\ndata[dataOff+2]=tmp13+z1;/* phase 5 */\ndata[dataOff+6]=tmp13-z1;\n\n/* Odd part */\ntmp10=tmp4+tmp5;/* phase 2 */\ntmp11=tmp5+tmp6;\ntmp12=tmp6+tmp7;\n\n/* The rotator is modified from fig 4-8 to avoid extra negations. */\nvar z5=(tmp10-tmp12)*0.382683433;/* c6 */\nvar z2=0.541196100*tmp10+z5;/* c2-c6 */\nvar z4=1.306562965*tmp12+z5;/* c2+c6 */\nvar z3=tmp11*0.707106781;/* c4 */\n\nvar z11=tmp7+z3;/* phase 5 */\nvar z13=tmp7-z3;\n\ndata[dataOff+5]=z13+z2;/* phase 6 */\ndata[dataOff+3]=z13-z2;\ndata[dataOff+1]=z11+z4;\ndata[dataOff+7]=z11-z4;\n\ndataOff+=8;/* advance pointer to next row */\n}\n\n/* Pass 2: process columns. */\ndataOff=0;\nfor(i=0;i<I8;++i)\n{\nd0=data[dataOff];\nd1=data[dataOff+8];\nd2=data[dataOff+16];\nd3=data[dataOff+24];\nd4=data[dataOff+32];\nd5=data[dataOff+40];\nd6=data[dataOff+48];\nd7=data[dataOff+56];\n\nvar tmp0p2=d0+d7;\nvar tmp7p2=d0-d7;\nvar tmp1p2=d1+d6;\nvar tmp6p2=d1-d6;\nvar tmp2p2=d2+d5;\nvar tmp5p2=d2-d5;\nvar tmp3p2=d3+d4;\nvar tmp4p2=d3-d4;\n\n/* Even part */\nvar tmp10p2=tmp0p2+tmp3p2;/* phase 2 */\nvar tmp13p2=tmp0p2-tmp3p2;\nvar tmp11p2=tmp1p2+tmp2p2;\nvar tmp12p2=tmp1p2-tmp2p2;\n\ndata[dataOff]=tmp10p2+tmp11p2;/* phase 3 */\ndata[dataOff+32]=tmp10p2-tmp11p2;\n\nvar z1p2=(tmp12p2+tmp13p2)*0.707106781;/* c4 */\ndata[dataOff+16]=tmp13p2+z1p2;/* phase 5 */\ndata[dataOff+48]=tmp13p2-z1p2;\n\n/* Odd part */\ntmp10p2=tmp4p2+tmp5p2;/* phase 2 */\ntmp11p2=tmp5p2+tmp6p2;\ntmp12p2=tmp6p2+tmp7p2;\n\n/* The rotator is modified from fig 4-8 to avoid extra negations. */\nvar z5p2=(tmp10p2-tmp12p2)*0.382683433;/* c6 */\nvar z2p2=0.541196100*tmp10p2+z5p2;/* c2-c6 */\nvar z4p2=1.306562965*tmp12p2+z5p2;/* c2+c6 */\nvar z3p2=tmp11p2*0.707106781;/* c4 */\n\nvar z11p2=tmp7p2+z3p2;/* phase 5 */\nvar z13p2=tmp7p2-z3p2;\n\ndata[dataOff+40]=z13p2+z2p2;/* phase 6 */\ndata[dataOff+24]=z13p2-z2p2;\ndata[dataOff+8]=z11p2+z4p2;\ndata[dataOff+56]=z11p2-z4p2;\n\ndataOff++;/* advance pointer to next column */\n}\n\n// Quantize/descale the coefficients\nvar fDCTQuant;\nfor(i=0;i<I64;++i)\n{\n// Apply the quantization and scaling factor & Round to nearest integer\nfDCTQuant=data[i]*fdtbl[i];\noutputfDCTQuant[i]=fDCTQuant>0.0?fDCTQuant+0.5|0:fDCTQuant-0.5|0;\n//outputfDCTQuant[i] = fround(fDCTQuant);\n\n}\nreturn outputfDCTQuant;\n}\n\nfunction writeAPP0()\n{\nwriteWord(0xFFE0);// marker\nwriteWord(16);// length\nwriteByte(0x4A);// J\nwriteByte(0x46);// F\nwriteByte(0x49);// I\nwriteByte(0x46);// F\nwriteByte(0);// = \"JFIF\",'\\0'\nwriteByte(1);// versionhi\nwriteByte(1);// versionlo\nwriteByte(0);// xyunits\nwriteWord(1);// xdensity\nwriteWord(1);// ydensity\nwriteByte(0);// thumbnwidth\nwriteByte(0);// thumbnheight\n}\n\nfunction writeSOF0(width,height)\n{\nwriteWord(0xFFC0);// marker\nwriteWord(17);// length, truecolor YUV JPG\nwriteByte(8);// precision\nwriteWord(height);\nwriteWord(width);\nwriteByte(3);// nrofcomponents\nwriteByte(1);// IdY\nwriteByte(0x11);// HVY\nwriteByte(0);// QTY\nwriteByte(2);// IdU\nwriteByte(0x11);// HVU\nwriteByte(1);// QTU\nwriteByte(3);// IdV\nwriteByte(0x11);// HVV\nwriteByte(1);// QTV\n}\n\nfunction writeDQT()\n{\nwriteWord(0xFFDB);// marker\nwriteWord(132);// length\nwriteByte(0);\nfor(var i=0;i<64;i++){\nwriteByte(YTable[i]);\n}\nwriteByte(1);\nfor(var j=0;j<64;j++){\nwriteByte(UVTable[j]);\n}\n}\n\nfunction writeDHT()\n{\nwriteWord(0xFFC4);// marker\nwriteWord(0x01A2);// length\n\nwriteByte(0);// HTYDCinfo\nfor(var i=0;i<16;i++){\nwriteByte(std_dc_luminance_nrcodes[i+1]);\n}\nfor(var j=0;j<=11;j++){\nwriteByte(std_dc_luminance_values[j]);\n}\n\nwriteByte(0x10);// HTYACinfo\nfor(var k=0;k<16;k++){\nwriteByte(std_ac_luminance_nrcodes[k+1]);\n}\nfor(var l=0;l<=161;l++){\nwriteByte(std_ac_luminance_values[l]);\n}\n\nwriteByte(1);// HTUDCinfo\nfor(var m=0;m<16;m++){\nwriteByte(std_dc_chrominance_nrcodes[m+1]);\n}\nfor(var n=0;n<=11;n++){\nwriteByte(std_dc_chrominance_values[n]);\n}\n\nwriteByte(0x11);// HTUACinfo\nfor(var o=0;o<16;o++){\nwriteByte(std_ac_chrominance_nrcodes[o+1]);\n}\nfor(var p=0;p<=161;p++){\nwriteByte(std_ac_chrominance_values[p]);\n}\n}\n\nfunction writeSOS()\n{\nwriteWord(0xFFDA);// marker\nwriteWord(12);// length\nwriteByte(3);// nrofcomponents\nwriteByte(1);// IdY\nwriteByte(0);// HTY\nwriteByte(2);// IdU\nwriteByte(0x11);// HTU\nwriteByte(3);// IdV\nwriteByte(0x11);// HTV\nwriteByte(0);// Ss\nwriteByte(0x3f);// Se\nwriteByte(0);// Bf\n}\n\nfunction processDU(CDU,fdtbl,DC,HTDC,HTAC){\nvar EOB=HTAC[0x00];\nvar M16zeroes=HTAC[0xF0];\nvar pos;\nvar I16=16;\nvar I63=63;\nvar I64=64;\nvar DU_DCT=fDCTQuant(CDU,fdtbl);\n//ZigZag reorder\nfor(var j=0;j<I64;++j){\nDU[ZigZag[j]]=DU_DCT[j];\n}\nvar Diff=DU[0]-DC;DC=DU[0];\n//Encode DC\nif(Diff==0){\nwriteBits(HTDC[0]);// Diff might be 0\n}else{\npos=32767+Diff;\nwriteBits(HTDC[category[pos]]);\nwriteBits(bitcode[pos]);\n}\n//Encode ACs\nvar end0pos=63;// was const... which is crazy\nfor(;end0pos>0&&DU[end0pos]==0;end0pos--){};\n//end0pos = first element in reverse order !=0\nif(end0pos==0){\nwriteBits(EOB);\nreturn DC;\n}\nvar i=1;\nvar lng;\nwhile(i<=end0pos){\nvar startpos=i;\nfor(;DU[i]==0&&i<=end0pos;++i){}\nvar nrzeroes=i-startpos;\nif(nrzeroes>=I16){\nlng=nrzeroes>>4;\nfor(var nrmarker=1;nrmarker<=lng;++nrmarker){\nwriteBits(M16zeroes);}\nnrzeroes=nrzeroes&0xF;\n}\npos=32767+DU[i];\nwriteBits(HTAC[(nrzeroes<<4)+category[pos]]);\nwriteBits(bitcode[pos]);\ni++;\n}\nif(end0pos!=I63){\nwriteBits(EOB);\n}\nreturn DC;\n}\n\nfunction initCharLookupTable(){\nvar sfcc=String.fromCharCode;\nfor(var i=0;i<256;i++){///// ACHTUNG // 255\nclt[i]=sfcc(i);\n}\n}\n\nthis.encode=function(image,quality)// image data object\n{\nvar time_start=new Date().getTime();\n\nif(quality)setQuality(quality);\n\n// Initialize bit writer\nbyteout=new Array();\nbytenew=0;\nbytepos=7;\n\n// Add JPEG headers\nwriteWord(0xFFD8);// SOI\nwriteAPP0();\nwriteDQT();\nwriteSOF0(image.width,image.height);\nwriteDHT();\nwriteSOS();\n\n\n// Encode 8x8 macroblocks\nvar DCY=0;\nvar DCU=0;\nvar DCV=0;\n\nbytenew=0;\nbytepos=7;\n\n\nthis.encode.displayName=\"_encode_\";\n\nvar imageData=image.data;\nvar width=image.width;\nvar height=image.height;\n\nvar quadWidth=width*4;\nvar tripleWidth=width*3;\n\nvar x,y=0;\nvar r,g,b;\nvar start,p,col,row,pos;\nwhile(y<height){\nx=0;\nwhile(x<quadWidth){\nstart=quadWidth*y+x;\np=start;\ncol=-1;\nrow=0;\n\nfor(pos=0;pos<64;pos++){\nrow=pos>>3;// /8\ncol=(pos&7)*4;// %8\np=start+row*quadWidth+col;\n\nif(y+row>=height){// padding bottom\np-=quadWidth*(y+1+row-height);\n}\n\nif(x+col>=quadWidth){// padding right\t\np-=x+col-quadWidth+4;\n}\n\nr=imageData[p++];\ng=imageData[p++];\nb=imageData[p++];\n\n\n/* // calculate YUV values dynamically\n\t\t\t\t\tYDU[pos]=((( 0.29900)*r+( 0.58700)*g+( 0.11400)*b))-128; //-0x80\n\t\t\t\t\tUDU[pos]=(((-0.16874)*r+(-0.33126)*g+( 0.50000)*b));\n\t\t\t\t\tVDU[pos]=((( 0.50000)*r+(-0.41869)*g+(-0.08131)*b));\n\t\t\t\t\t*/\n\n// use lookup table (slightly faster)\nYDU[pos]=(RGB_YUV_TABLE[r]+RGB_YUV_TABLE[g+256>>0]+RGB_YUV_TABLE[b+512>>0]>>16)-128;\nUDU[pos]=(RGB_YUV_TABLE[r+768>>0]+RGB_YUV_TABLE[g+1024>>0]+RGB_YUV_TABLE[b+1280>>0]>>16)-128;\nVDU[pos]=(RGB_YUV_TABLE[r+1280>>0]+RGB_YUV_TABLE[g+1536>>0]+RGB_YUV_TABLE[b+1792>>0]>>16)-128;\n\n}\n\nDCY=processDU(YDU,fdtbl_Y,DCY,YDC_HT,YAC_HT);\nDCU=processDU(UDU,fdtbl_UV,DCU,UVDC_HT,UVAC_HT);\nDCV=processDU(VDU,fdtbl_UV,DCV,UVDC_HT,UVAC_HT);\nx+=32;\n}\ny+=8;\n}\n\n\n////////////////////////////////////////////////////////////////\n\n// Do the bit alignment of the EOI marker\nif(bytepos>=0){\nvar fillbits=[];\nfillbits[1]=bytepos+1;\nfillbits[0]=(1<<bytepos+1)-1;\nwriteBits(fillbits);\n}\n\nwriteWord(0xFFD9);//EOI\n\n//return new Uint8Array(byteout);\nreturn new Buffer(byteout);\n\nvar jpegDataUri='data:image/jpeg;base64,'+btoa(byteout.join(''));\n\nbyteout=[];\n\n// benchmarking\nvar duration=new Date().getTime()-time_start;\n//console.log('Encoding time: '+ duration + 'ms');\n//\n\nreturn jpegDataUri;\n};\n\nfunction setQuality(quality){\nif(quality<=0){\nquality=1;\n}\nif(quality>100){\nquality=100;\n}\n\nif(currentQuality==quality)return;// don't recalc if unchanged\n\nvar sf=0;\nif(quality<50){\nsf=Math.floor(5000/quality);\n}else{\nsf=Math.floor(200-quality*2);\n}\n\ninitQuantTables(sf);\ncurrentQuality=quality;\n//console.log('Quality set to: '+quality +'%');\n}\n\nfunction init(){\nvar time_start=new Date().getTime();\nif(!quality)quality=50;\n// Create tables\ninitCharLookupTable();\ninitHuffmanTbl();\ninitCategoryNumber();\ninitRGBYUVTable();\n\nsetQuality(quality);\nvar duration=new Date().getTime()-time_start;\n//console.log('Initialization '+ duration + 'ms');\n}\n\ninit();\n\n};\nmodule.exports=encode;\n\nfunction encode(imgData,qu){\nif(typeof qu==='undefined')qu=50;\nvar encoder=new JPEGEncoder(qu);\nvar data=encoder.encode(imgData,qu);\nreturn{\ndata:data,\nwidth:imgData.width,\nheight:imgData.height};\n\n}\n\n// helper function to get the imageData of an existing image on the current page.\nfunction getImageDataFromImage(idOrElement){\nvar theImg=typeof idOrElement=='string'?document.getElementById(idOrElement):idOrElement;\nvar cvs=document.createElement('canvas');\ncvs.width=theImg.width;\ncvs.height=theImg.height;\nvar ctx=cvs.getContext(\"2d\");\nctx.drawImage(theImg,0,0);\n\nreturn ctx.getImageData(0,0,cvs.width,cvs.height);\n}\n\n}).call(this,require(\"buffer\").Buffer);\n},{\"buffer\":16}],174:[function(require,module,exports){\n(function(process){\nvar path=require('path');\nvar fs=require('fs');\nvar _0777=parseInt('0777',8);\n\nmodule.exports=mkdirP.mkdirp=mkdirP.mkdirP=mkdirP;\n\nfunction mkdirP(p,opts,f,made){\nif(typeof opts==='function'){\nf=opts;\nopts={};\n}else\nif(!opts||typeof opts!=='object'){\nopts={mode:opts};\n}\n\nvar mode=opts.mode;\nvar xfs=opts.fs||fs;\n\nif(mode===undefined){\nmode=_0777&~process.umask();\n}\nif(!made)made=null;\n\nvar cb=f||function(){};\np=path.resolve(p);\n\nxfs.mkdir(p,mode,function(er){\nif(!er){\nmade=made||p;\nreturn cb(null,made);\n}\nswitch(er.code){\ncase'ENOENT':\nmkdirP(path.dirname(p),opts,function(er,made){\nif(er)cb(er,made);else\nmkdirP(p,opts,cb,made);\n});\nbreak;\n\n// In the case of any other error, just see if there's a dir\n// there already.  If so, then hooray!  If not, then something\n// is borked.\ndefault:\nxfs.stat(p,function(er2,stat){\n// if the stat fails, then that's super weird.\n// let the original error be the failure reason.\nif(er2||!stat.isDirectory())cb(er,made);else\ncb(null,made);\n});\nbreak;}\n\n});\n}\n\nmkdirP.sync=function sync(p,opts,made){\nif(!opts||typeof opts!=='object'){\nopts={mode:opts};\n}\n\nvar mode=opts.mode;\nvar xfs=opts.fs||fs;\n\nif(mode===undefined){\nmode=_0777&~process.umask();\n}\nif(!made)made=null;\n\np=path.resolve(p);\n\ntry{\nxfs.mkdirSync(p,mode);\nmade=made||p;\n}\ncatch(err0){\nswitch(err0.code){\ncase'ENOENT':\nmade=sync(path.dirname(p),opts,made);\nsync(p,opts,made);\nbreak;\n\n// In the case of any other error, just see if there's a dir\n// there already.  If so, then hooray!  If not, then something\n// is borked.\ndefault:\nvar stat;\ntry{\nstat=xfs.statSync(p);\n}\ncatch(err1){\nthrow err0;\n}\nif(!stat.isDirectory())throw err0;\nbreak;}\n\n}\n\nreturn made;\n};\n\n}).call(this,require('_process'));\n},{\"_process\":223,\"fs\":14,\"path\":197}],175:[function(require,module,exports){\n// (c) Dean McNamee <dean@gmail.com>, 2013.\n//\n// https://github.com/deanm/omggif\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n//\n// omggif is a JavaScript implementation of a GIF 89a encoder and decoder,\n// including animation and compression.  It does not rely on any specific\n// underlying system, so should run in the browser, Node, or Plask.\n\n\"use strict\";\n\nfunction GifWriter(buf,width,height,gopts){\nvar p=0;\n\nvar gopts=gopts===undefined?{}:gopts;\nvar loop_count=gopts.loop===undefined?null:gopts.loop;\nvar global_palette=gopts.palette===undefined?null:gopts.palette;\n\nif(width<=0||height<=0||width>65535||height>65535)\nthrow new Error(\"Width/Height invalid.\");\n\nfunction check_palette_and_num_colors(palette){\nvar num_colors=palette.length;\nif(num_colors<2||num_colors>256||num_colors&num_colors-1){\nthrow new Error(\n\"Invalid code/color length, must be power of 2 and 2 .. 256.\");\n}\nreturn num_colors;\n}\n\n// - Header.\nbuf[p++]=0x47;buf[p++]=0x49;buf[p++]=0x46;// GIF\nbuf[p++]=0x38;buf[p++]=0x39;buf[p++]=0x61;// 89a\n\n// Handling of Global Color Table (palette) and background index.\nvar gp_num_colors_pow2=0;\nvar background=0;\nif(global_palette!==null){\nvar gp_num_colors=check_palette_and_num_colors(global_palette);\nwhile(gp_num_colors>>=1){++gp_num_colors_pow2;}\ngp_num_colors=1<<gp_num_colors_pow2;\n--gp_num_colors_pow2;\nif(gopts.background!==undefined){\nbackground=gopts.background;\nif(background>=gp_num_colors)\nthrow new Error(\"Background index out of range.\");\n// The GIF spec states that a background index of 0 should be ignored, so\n// this is probably a mistake and you really want to set it to another\n// slot in the palette.  But actually in the end most browsers, etc end\n// up ignoring this almost completely (including for dispose background).\nif(background===0)\nthrow new Error(\"Background index explicitly passed as 0.\");\n}\n}\n\n// - Logical Screen Descriptor.\n// NOTE(deanm): w/h apparently ignored by implementations, but set anyway.\nbuf[p++]=width&0xff;buf[p++]=width>>8&0xff;\nbuf[p++]=height&0xff;buf[p++]=height>>8&0xff;\n// NOTE: Indicates 0-bpp original color resolution (unused?).\nbuf[p++]=(global_palette!==null?0x80:0)|// Global Color Table Flag.\ngp_num_colors_pow2;// NOTE: No sort flag (unused?).\nbuf[p++]=background;// Background Color Index.\nbuf[p++]=0;// Pixel aspect ratio (unused?).\n\n// - Global Color Table\nif(global_palette!==null){\nfor(var i=0,il=global_palette.length;i<il;++i){\nvar rgb=global_palette[i];\nbuf[p++]=rgb>>16&0xff;\nbuf[p++]=rgb>>8&0xff;\nbuf[p++]=rgb&0xff;\n}\n}\n\nif(loop_count!==null){// Netscape block for looping.\nif(loop_count<0||loop_count>65535)\nthrow new Error(\"Loop count invalid.\");\n// Extension code, label, and length.\nbuf[p++]=0x21;buf[p++]=0xff;buf[p++]=0x0b;\n// NETSCAPE2.0\nbuf[p++]=0x4e;buf[p++]=0x45;buf[p++]=0x54;buf[p++]=0x53;\nbuf[p++]=0x43;buf[p++]=0x41;buf[p++]=0x50;buf[p++]=0x45;\nbuf[p++]=0x32;buf[p++]=0x2e;buf[p++]=0x30;\n// Sub-block\nbuf[p++]=0x03;buf[p++]=0x01;\nbuf[p++]=loop_count&0xff;buf[p++]=loop_count>>8&0xff;\nbuf[p++]=0x00;// Terminator.\n}\n\n\nvar ended=false;\n\nthis.addFrame=function(x,y,w,h,indexed_pixels,opts){\nif(ended===true){--p;ended=false;}// Un-end.\n\nopts=opts===undefined?{}:opts;\n\n// TODO(deanm): Bounds check x, y.  Do they need to be within the virtual\n// canvas width/height, I imagine?\nif(x<0||y<0||x>65535||y>65535)\nthrow new Error(\"x/y invalid.\");\n\nif(w<=0||h<=0||w>65535||h>65535)\nthrow new Error(\"Width/Height invalid.\");\n\nif(indexed_pixels.length<w*h)\nthrow new Error(\"Not enough pixels for the frame size.\");\n\nvar using_local_palette=true;\nvar palette=opts.palette;\nif(palette===undefined||palette===null){\nusing_local_palette=false;\npalette=global_palette;\n}\n\nif(palette===undefined||palette===null)\nthrow new Error(\"Must supply either a local or global palette.\");\n\nvar num_colors=check_palette_and_num_colors(palette);\n\n// Compute the min_code_size (power of 2), destroying num_colors.\nvar min_code_size=0;\nwhile(num_colors>>=1){++min_code_size;}\nnum_colors=1<<min_code_size;// Now we can easily get it back.\n\nvar delay=opts.delay===undefined?0:opts.delay;\n\n// From the spec:\n//     0 -   No disposal specified. The decoder is\n//           not required to take any action.\n//     1 -   Do not dispose. The graphic is to be left\n//           in place.\n//     2 -   Restore to background color. The area used by the\n//           graphic must be restored to the background color.\n//     3 -   Restore to previous. The decoder is required to\n//           restore the area overwritten by the graphic with\n//           what was there prior to rendering the graphic.\n//  4-7 -    To be defined.\n// NOTE(deanm): Dispose background doesn't really work, apparently most\n// browsers ignore the background palette index and clear to transparency.\nvar disposal=opts.disposal===undefined?0:opts.disposal;\nif(disposal<0||disposal>3)// 4-7 is reserved.\nthrow new Error(\"Disposal out of range.\");\n\nvar use_transparency=false;\nvar transparent_index=0;\nif(opts.transparent!==undefined&&opts.transparent!==null){\nuse_transparency=true;\ntransparent_index=opts.transparent;\nif(transparent_index<0||transparent_index>=num_colors)\nthrow new Error(\"Transparent color index.\");\n}\n\nif(disposal!==0||use_transparency||delay!==0){\n// - Graphics Control Extension\nbuf[p++]=0x21;buf[p++]=0xf9;// Extension / Label.\nbuf[p++]=4;// Byte size.\n\nbuf[p++]=disposal<<2|(use_transparency===true?1:0);\nbuf[p++]=delay&0xff;buf[p++]=delay>>8&0xff;\nbuf[p++]=transparent_index;// Transparent color index.\nbuf[p++]=0;// Block Terminator.\n}\n\n// - Image Descriptor\nbuf[p++]=0x2c;// Image Seperator.\nbuf[p++]=x&0xff;buf[p++]=x>>8&0xff;// Left.\nbuf[p++]=y&0xff;buf[p++]=y>>8&0xff;// Top.\nbuf[p++]=w&0xff;buf[p++]=w>>8&0xff;\nbuf[p++]=h&0xff;buf[p++]=h>>8&0xff;\n// NOTE: No sort flag (unused?).\n// TODO(deanm): Support interlace.\nbuf[p++]=using_local_palette===true?0x80|min_code_size-1:0;\n\n// - Local Color Table\nif(using_local_palette===true){\nfor(var i=0,il=palette.length;i<il;++i){\nvar rgb=palette[i];\nbuf[p++]=rgb>>16&0xff;\nbuf[p++]=rgb>>8&0xff;\nbuf[p++]=rgb&0xff;\n}\n}\n\np=GifWriterOutputLZWCodeStream(\nbuf,p,min_code_size<2?2:min_code_size,indexed_pixels);\n\nreturn p;\n};\n\nthis.end=function(){\nif(ended===false){\nbuf[p++]=0x3b;// Trailer.\nended=true;\n}\nreturn p;\n};\n\nthis.getOutputBuffer=function(){return buf;};\nthis.setOutputBuffer=function(v){buf=v;};\nthis.getOutputBufferPosition=function(){return p;};\nthis.setOutputBufferPosition=function(v){p=v;};\n}\n\n// Main compression routine, palette indexes -> LZW code stream.\n// |index_stream| must have at least one entry.\nfunction GifWriterOutputLZWCodeStream(buf,p,min_code_size,index_stream){\nbuf[p++]=min_code_size;\nvar cur_subblock=p++;// Pointing at the length field.\n\nvar clear_code=1<<min_code_size;\nvar code_mask=clear_code-1;\nvar eoi_code=clear_code+1;\nvar next_code=eoi_code+1;\n\nvar cur_code_size=min_code_size+1;// Number of bits per code.\nvar cur_shift=0;\n// We have at most 12-bit codes, so we should have to hold a max of 19\n// bits here (and then we would write out).\nvar cur=0;\n\nfunction emit_bytes_to_buffer(bit_block_size){\nwhile(cur_shift>=bit_block_size){\nbuf[p++]=cur&0xff;\ncur>>=8;cur_shift-=8;\nif(p===cur_subblock+256){// Finished a subblock.\nbuf[cur_subblock]=255;\ncur_subblock=p++;\n}\n}\n}\n\nfunction emit_code(c){\ncur|=c<<cur_shift;\ncur_shift+=cur_code_size;\nemit_bytes_to_buffer(8);\n}\n\n// I am not an expert on the topic, and I don't want to write a thesis.\n// However, it is good to outline here the basic algorithm and the few data\n// structures and optimizations here that make this implementation fast.\n// The basic idea behind LZW is to build a table of previously seen runs\n// addressed by a short id (herein called output code).  All data is\n// referenced by a code, which represents one or more values from the\n// original input stream.  All input bytes can be referenced as the same\n// value as an output code.  So if you didn't want any compression, you\n// could more or less just output the original bytes as codes (there are\n// some details to this, but it is the idea).  In order to achieve\n// compression, values greater then the input range (codes can be up to\n// 12-bit while input only 8-bit) represent a sequence of previously seen\n// inputs.  The decompressor is able to build the same mapping while\n// decoding, so there is always a shared common knowledge between the\n// encoding and decoder, which is also important for \"timing\" aspects like\n// how to handle variable bit width code encoding.\n//\n// One obvious but very important consequence of the table system is there\n// is always a unique id (at most 12-bits) to map the runs.  'A' might be\n// 4, then 'AA' might be 10, 'AAA' 11, 'AAAA' 12, etc.  This relationship\n// can be used for an effecient lookup strategy for the code mapping.  We\n// need to know if a run has been seen before, and be able to map that run\n// to the output code.  Since we start with known unique ids (input bytes),\n// and then from those build more unique ids (table entries), we can\n// continue this chain (almost like a linked list) to always have small\n// integer values that represent the current byte chains in the encoder.\n// This means instead of tracking the input bytes (AAAABCD) to know our\n// current state, we can track the table entry for AAAABC (it is guaranteed\n// to exist by the nature of the algorithm) and the next character D.\n// Therefor the tuple of (table_entry, byte) is guaranteed to also be\n// unique.  This allows us to create a simple lookup key for mapping input\n// sequences to codes (table indices) without having to store or search\n// any of the code sequences.  So if 'AAAA' has a table entry of 12, the\n// tuple of ('AAAA', K) for any input byte K will be unique, and can be our\n// key.  This leads to a integer value at most 20-bits, which can always\n// fit in an SMI value and be used as a fast sparse array / object key.\n\n// Output code for the current contents of the index buffer.\nvar ib_code=index_stream[0]&code_mask;// Load first input index.\nvar code_table={};// Key'd on our 20-bit \"tuple\".\n\nemit_code(clear_code);// Spec says first code should be a clear code.\n\n// First index already loaded, process the rest of the stream.\nfor(var i=1,il=index_stream.length;i<il;++i){\nvar k=index_stream[i]&code_mask;\nvar cur_key=ib_code<<8|k;// (prev, k) unique tuple.\nvar cur_code=code_table[cur_key];// buffer + k.\n\n// Check if we have to create a new code table entry.\nif(cur_code===undefined){// We don't have buffer + k.\n// Emit index buffer (without k).\n// This is an inline version of emit_code, because this is the core\n// writing routine of the compressor (and V8 cannot inline emit_code\n// because it is a closure here in a different context).  Additionally\n// we can call emit_byte_to_buffer less often, because we can have\n// 30-bits (from our 31-bit signed SMI), and we know our codes will only\n// be 12-bits, so can safely have 18-bits there without overflow.\n// emit_code(ib_code);\ncur|=ib_code<<cur_shift;\ncur_shift+=cur_code_size;\nwhile(cur_shift>=8){\nbuf[p++]=cur&0xff;\ncur>>=8;cur_shift-=8;\nif(p===cur_subblock+256){// Finished a subblock.\nbuf[cur_subblock]=255;\ncur_subblock=p++;\n}\n}\n\nif(next_code===4096){// Table full, need a clear.\nemit_code(clear_code);\nnext_code=eoi_code+1;\ncur_code_size=min_code_size+1;\ncode_table={};\n}else{// Table not full, insert a new entry.\n// Increase our variable bit code sizes if necessary.  This is a bit\n// tricky as it is based on \"timing\" between the encoding and\n// decoder.  From the encoders perspective this should happen after\n// we've already emitted the index buffer and are about to create the\n// first table entry that would overflow our current code bit size.\nif(next_code>=1<<cur_code_size)++cur_code_size;\ncode_table[cur_key]=next_code++;// Insert into code table.\n}\n\nib_code=k;// Index buffer to single input k.\n}else{\nib_code=cur_code;// Index buffer to sequence in code table.\n}\n}\n\nemit_code(ib_code);// There will still be something in the index buffer.\nemit_code(eoi_code);// End Of Information.\n\n// Flush / finalize the sub-blocks stream to the buffer.\nemit_bytes_to_buffer(1);\n\n// Finish the sub-blocks, writing out any unfinished lengths and\n// terminating with a sub-block of length 0.  If we have already started\n// but not yet used a sub-block it can just become the terminator.\nif(cur_subblock+1===p){// Started but unused.\nbuf[cur_subblock]=0;\n}else{// Started and used, write length and additional terminator block.\nbuf[cur_subblock]=p-cur_subblock-1;\nbuf[p++]=0;\n}\nreturn p;\n}\n\nfunction GifReader(buf){\nvar p=0;\n\n// - Header (GIF87a or GIF89a).\nif(buf[p++]!==0x47||buf[p++]!==0x49||buf[p++]!==0x46||\nbuf[p++]!==0x38||(buf[p++]+1&0xfd)!==0x38||buf[p++]!==0x61){\nthrow new Error(\"Invalid GIF 87a/89a header.\");\n}\n\n// - Logical Screen Descriptor.\nvar width=buf[p++]|buf[p++]<<8;\nvar height=buf[p++]|buf[p++]<<8;\nvar pf0=buf[p++];// <Packed Fields>.\nvar global_palette_flag=pf0>>7;\nvar num_global_colors_pow2=pf0&0x7;\nvar num_global_colors=1<<num_global_colors_pow2+1;\nvar background=buf[p++];\nbuf[p++];// Pixel aspect ratio (unused?).\n\nvar global_palette_offset=null;\nvar global_palette_size=null;\n\nif(global_palette_flag){\nglobal_palette_offset=p;\nglobal_palette_size=num_global_colors;\np+=num_global_colors*3;// Seek past palette.\n}\n\nvar no_eof=true;\n\nvar frames=[];\n\nvar delay=0;\nvar transparent_index=null;\nvar disposal=0;// 0 - No disposal specified.\nvar loop_count=null;\n\nthis.width=width;\nthis.height=height;\n\nwhile(no_eof&&p<buf.length){\nswitch(buf[p++]){\ncase 0x21:// Graphics Control Extension Block\nswitch(buf[p++]){\ncase 0xff:// Application specific block\n// Try if it's a Netscape block (with animation loop counter).\nif(buf[p]!==0x0b||// 21 FF already read, check block size.\n// NETSCAPE2.0\nbuf[p+1]==0x4e&&buf[p+2]==0x45&&buf[p+3]==0x54&&\nbuf[p+4]==0x53&&buf[p+5]==0x43&&buf[p+6]==0x41&&\nbuf[p+7]==0x50&&buf[p+8]==0x45&&buf[p+9]==0x32&&\nbuf[p+10]==0x2e&&buf[p+11]==0x30&&\n// Sub-block\nbuf[p+12]==0x03&&buf[p+13]==0x01&&buf[p+16]==0){\np+=14;\nloop_count=buf[p++]|buf[p++]<<8;\np++;// Skip terminator.\n}else{// We don't know what it is, just try to get past it.\np+=12;\nwhile(true){// Seek through subblocks.\nvar block_size=buf[p++];\n// Bad block size (ex: undefined from an out of bounds read).\nif(!(block_size>=0))throw Error(\"Invalid block size\");\nif(block_size===0)break;// 0 size is terminator\np+=block_size;\n}\n}\nbreak;\n\ncase 0xf9:// Graphics Control Extension\nif(buf[p++]!==0x4||buf[p+4]!==0)\nthrow new Error(\"Invalid graphics extension block.\");\nvar pf1=buf[p++];\ndelay=buf[p++]|buf[p++]<<8;\ntransparent_index=buf[p++];\nif((pf1&1)===0)transparent_index=null;\ndisposal=pf1>>2&0x7;\np++;// Skip terminator.\nbreak;\n\ncase 0xfe:// Comment Extension.\nwhile(true){// Seek through subblocks.\nvar block_size=buf[p++];\n// Bad block size (ex: undefined from an out of bounds read).\nif(!(block_size>=0))throw Error(\"Invalid block size\");\nif(block_size===0)break;// 0 size is terminator\n// console.log(buf.slice(p, p+block_size).toString('ascii'));\np+=block_size;\n}\nbreak;\n\ndefault:\nthrow new Error(\n\"Unknown graphic control label: 0x\"+buf[p-1].toString(16));}\n\nbreak;\n\ncase 0x2c:// Image Descriptor.\nvar x=buf[p++]|buf[p++]<<8;\nvar y=buf[p++]|buf[p++]<<8;\nvar w=buf[p++]|buf[p++]<<8;\nvar h=buf[p++]|buf[p++]<<8;\nvar pf2=buf[p++];\nvar local_palette_flag=pf2>>7;\nvar interlace_flag=pf2>>6&1;\nvar num_local_colors_pow2=pf2&0x7;\nvar num_local_colors=1<<num_local_colors_pow2+1;\nvar palette_offset=global_palette_offset;\nvar palette_size=global_palette_size;\nvar has_local_palette=false;\nif(local_palette_flag){\nvar has_local_palette=true;\npalette_offset=p;// Override with local palette.\npalette_size=num_local_colors;\np+=num_local_colors*3;// Seek past palette.\n}\n\nvar data_offset=p;\n\np++;// codesize\nwhile(true){\nvar block_size=buf[p++];\n// Bad block size (ex: undefined from an out of bounds read).\nif(!(block_size>=0))throw Error(\"Invalid block size\");\nif(block_size===0)break;// 0 size is terminator\np+=block_size;\n}\n\nframes.push({x:x,y:y,width:w,height:h,\nhas_local_palette:has_local_palette,\npalette_offset:palette_offset,\npalette_size:palette_size,\ndata_offset:data_offset,\ndata_length:p-data_offset,\ntransparent_index:transparent_index,\ninterlaced:!!interlace_flag,\ndelay:delay,\ndisposal:disposal});\nbreak;\n\ncase 0x3b:// Trailer Marker (end of file).\nno_eof=false;\nbreak;\n\ndefault:\nthrow new Error(\"Unknown gif block: 0x\"+buf[p-1].toString(16));\nbreak;}\n\n}\n\nthis.numFrames=function(){\nreturn frames.length;\n};\n\nthis.loopCount=function(){\nreturn loop_count;\n};\n\nthis.frameInfo=function(frame_num){\nif(frame_num<0||frame_num>=frames.length)\nthrow new Error(\"Frame index out of range.\");\nreturn frames[frame_num];\n};\n\nthis.decodeAndBlitFrameBGRA=function(frame_num,pixels){\nvar frame=this.frameInfo(frame_num);\nvar num_pixels=frame.width*frame.height;\nvar index_stream=new Uint8Array(num_pixels);// At most 8-bit indices.\nGifReaderLZWOutputIndexStream(\nbuf,frame.data_offset,index_stream,num_pixels);\nvar palette_offset=frame.palette_offset;\n\n// NOTE(deanm): It seems to be much faster to compare index to 256 than\n// to === null.  Not sure why, but CompareStub_EQ_STRICT shows up high in\n// the profile, not sure if it's related to using a Uint8Array.\nvar trans=frame.transparent_index;\nif(trans===null)trans=256;\n\n// We are possibly just blitting to a portion of the entire frame.\n// That is a subrect within the framerect, so the additional pixels\n// must be skipped over after we finished a scanline.\nvar framewidth=frame.width;\nvar framestride=width-framewidth;\nvar xleft=framewidth;// Number of subrect pixels left in scanline.\n\n// Output indicies of the top left and bottom right corners of the subrect.\nvar opbeg=(frame.y*width+frame.x)*4;\nvar opend=((frame.y+frame.height)*width+frame.x)*4;\nvar op=opbeg;\n\nvar scanstride=framestride*4;\n\n// Use scanstride to skip past the rows when interlacing.  This is skipping\n// 7 rows for the first two passes, then 3 then 1.\nif(frame.interlaced===true){\nscanstride+=width*4*7;// Pass 1.\n}\n\nvar interlaceskip=8;// Tracking the row interval in the current pass.\n\nfor(var i=0,il=index_stream.length;i<il;++i){\nvar index=index_stream[i];\n\nif(xleft===0){// Beginning of new scan line\nop+=scanstride;\nxleft=framewidth;\nif(op>=opend){// Catch the wrap to switch passes when interlacing.\nscanstride=framestride*4+width*4*(interlaceskip-1);\n// interlaceskip / 2 * 4 is interlaceskip << 1.\nop=opbeg+(framewidth+framestride)*(interlaceskip<<1);\ninterlaceskip>>=1;\n}\n}\n\nif(index===trans){\nop+=4;\n}else{\nvar r=buf[palette_offset+index*3];\nvar g=buf[palette_offset+index*3+1];\nvar b=buf[palette_offset+index*3+2];\npixels[op++]=b;\npixels[op++]=g;\npixels[op++]=r;\npixels[op++]=255;\n}\n--xleft;\n}\n};\n\n// I will go to copy and paste hell one day...\nthis.decodeAndBlitFrameRGBA=function(frame_num,pixels){\nvar frame=this.frameInfo(frame_num);\nvar num_pixels=frame.width*frame.height;\nvar index_stream=new Uint8Array(num_pixels);// At most 8-bit indices.\nGifReaderLZWOutputIndexStream(\nbuf,frame.data_offset,index_stream,num_pixels);\nvar palette_offset=frame.palette_offset;\n\n// NOTE(deanm): It seems to be much faster to compare index to 256 than\n// to === null.  Not sure why, but CompareStub_EQ_STRICT shows up high in\n// the profile, not sure if it's related to using a Uint8Array.\nvar trans=frame.transparent_index;\nif(trans===null)trans=256;\n\n// We are possibly just blitting to a portion of the entire frame.\n// That is a subrect within the framerect, so the additional pixels\n// must be skipped over after we finished a scanline.\nvar framewidth=frame.width;\nvar framestride=width-framewidth;\nvar xleft=framewidth;// Number of subrect pixels left in scanline.\n\n// Output indicies of the top left and bottom right corners of the subrect.\nvar opbeg=(frame.y*width+frame.x)*4;\nvar opend=((frame.y+frame.height)*width+frame.x)*4;\nvar op=opbeg;\n\nvar scanstride=framestride*4;\n\n// Use scanstride to skip past the rows when interlacing.  This is skipping\n// 7 rows for the first two passes, then 3 then 1.\nif(frame.interlaced===true){\nscanstride+=width*4*7;// Pass 1.\n}\n\nvar interlaceskip=8;// Tracking the row interval in the current pass.\n\nfor(var i=0,il=index_stream.length;i<il;++i){\nvar index=index_stream[i];\n\nif(xleft===0){// Beginning of new scan line\nop+=scanstride;\nxleft=framewidth;\nif(op>=opend){// Catch the wrap to switch passes when interlacing.\nscanstride=framestride*4+width*4*(interlaceskip-1);\n// interlaceskip / 2 * 4 is interlaceskip << 1.\nop=opbeg+(framewidth+framestride)*(interlaceskip<<1);\ninterlaceskip>>=1;\n}\n}\n\nif(index===trans){\nop+=4;\n}else{\nvar r=buf[palette_offset+index*3];\nvar g=buf[palette_offset+index*3+1];\nvar b=buf[palette_offset+index*3+2];\npixels[op++]=r;\npixels[op++]=g;\npixels[op++]=b;\npixels[op++]=255;\n}\n--xleft;\n}\n};\n}\n\nfunction GifReaderLZWOutputIndexStream(code_stream,p,output,output_length){\nvar min_code_size=code_stream[p++];\n\nvar clear_code=1<<min_code_size;\nvar eoi_code=clear_code+1;\nvar next_code=eoi_code+1;\n\nvar cur_code_size=min_code_size+1;// Number of bits per code.\n// NOTE: This shares the same name as the encoder, but has a different\n// meaning here.  Here this masks each code coming from the code stream.\nvar code_mask=(1<<cur_code_size)-1;\nvar cur_shift=0;\nvar cur=0;\n\nvar op=0;// Output pointer.\n\nvar subblock_size=code_stream[p++];\n\n// TODO(deanm): Would using a TypedArray be any faster?  At least it would\n// solve the fast mode / backing store uncertainty.\n// var code_table = Array(4096);\nvar code_table=new Int32Array(4096);// Can be signed, we only use 20 bits.\n\nvar prev_code=null;// Track code-1.\n\nwhile(true){\n// Read up to two bytes, making sure we always 12-bits for max sized code.\nwhile(cur_shift<16){\nif(subblock_size===0)break;// No more data to be read.\n\ncur|=code_stream[p++]<<cur_shift;\ncur_shift+=8;\n\nif(subblock_size===1){// Never let it get to 0 to hold logic above.\nsubblock_size=code_stream[p++];// Next subblock.\n}else{\n--subblock_size;\n}\n}\n\n// TODO(deanm): We should never really get here, we should have received\n// and EOI.\nif(cur_shift<cur_code_size)\nbreak;\n\nvar code=cur&code_mask;\ncur>>=cur_code_size;\ncur_shift-=cur_code_size;\n\n// TODO(deanm): Maybe should check that the first code was a clear code,\n// at least this is what you're supposed to do.  But actually our encoder\n// now doesn't emit a clear code first anyway.\nif(code===clear_code){\n// We don't actually have to clear the table.  This could be a good idea\n// for greater error checking, but we don't really do any anyway.  We\n// will just track it with next_code and overwrite old entries.\n\nnext_code=eoi_code+1;\ncur_code_size=min_code_size+1;\ncode_mask=(1<<cur_code_size)-1;\n\n// Don't update prev_code ?\nprev_code=null;\ncontinue;\n}else if(code===eoi_code){\nbreak;\n}\n\n// We have a similar situation as the decoder, where we want to store\n// variable length entries (code table entries), but we want to do in a\n// faster manner than an array of arrays.  The code below stores sort of a\n// linked list within the code table, and then \"chases\" through it to\n// construct the dictionary entries.  When a new entry is created, just the\n// last byte is stored, and the rest (prefix) of the entry is only\n// referenced by its table entry.  Then the code chases through the\n// prefixes until it reaches a single byte code.  We have to chase twice,\n// first to compute the length, and then to actually copy the data to the\n// output (backwards, since we know the length).  The alternative would be\n// storing something in an intermediate stack, but that doesn't make any\n// more sense.  I implemented an approach where it also stored the length\n// in the code table, although it's a bit tricky because you run out of\n// bits (12 + 12 + 8), but I didn't measure much improvements (the table\n// entries are generally not the long).  Even when I created benchmarks for\n// very long table entries the complexity did not seem worth it.\n// The code table stores the prefix entry in 12 bits and then the suffix\n// byte in 8 bits, so each entry is 20 bits.\n\nvar chase_code=code<next_code?code:prev_code;\n\n// Chase what we will output, either {CODE} or {CODE-1}.\nvar chase_length=0;\nvar chase=chase_code;\nwhile(chase>clear_code){\nchase=code_table[chase]>>8;\n++chase_length;\n}\n\nvar k=chase;\n\nvar op_end=op+chase_length+(chase_code!==code?1:0);\nif(op_end>output_length){\nconsole.log(\"Warning, gif stream longer than expected.\");\nreturn;\n}\n\n// Already have the first byte from the chase, might as well write it fast.\noutput[op++]=k;\n\nop+=chase_length;\nvar b=op;// Track pointer, writing backwards.\n\nif(chase_code!==code)// The case of emitting {CODE-1} + k.\noutput[op++]=k;\n\nchase=chase_code;\nwhile(chase_length--){\nchase=code_table[chase];\noutput[--b]=chase&0xff;// Write backwards.\nchase>>=8;// Pull down to the prefix code.\n}\n\nif(prev_code!==null&&next_code<4096){\ncode_table[next_code++]=prev_code<<8|k;\n// TODO(deanm): Figure out this clearing vs code growth logic better.  I\n// have an feeling that it should just happen somewhere else, for now it\n// is awkward between when we grow past the max and then hit a clear code.\n// For now just check if we hit the max 12-bits (then a clear code should\n// follow, also of course encoded in 12-bits).\nif(next_code>=code_mask+1&&cur_code_size<12){\n++cur_code_size;\ncode_mask=code_mask<<1|1;\n}\n}\n\nprev_code=code;\n}\n\nif(op!==output_length){\nconsole.log(\"Warning, gif stream shorter than expected.\");\n}\n\nreturn output;\n}\n\n// CommonJS.\ntry{exports.GifWriter=GifWriter;exports.GifReader=GifReader;}catch(e){}\n\n},{}],176:[function(require,module,exports){\n// Top level file is just a mixin of submodules & constants\n'use strict';\n\nvar assign=require('./lib/utils/common').assign;\n\nvar deflate=require('./lib/deflate');\nvar inflate=require('./lib/inflate');\nvar constants=require('./lib/zlib/constants');\n\nvar pako={};\n\nassign(pako,deflate,inflate,constants);\n\nmodule.exports=pako;\n\n},{\"./lib/deflate\":177,\"./lib/inflate\":178,\"./lib/utils/common\":179,\"./lib/zlib/constants\":182}],177:[function(require,module,exports){\n'use strict';\n\n\nvar zlib_deflate=require('./zlib/deflate');\nvar utils=require('./utils/common');\nvar strings=require('./utils/strings');\nvar msg=require('./zlib/messages');\nvar ZStream=require('./zlib/zstream');\n\nvar toString=Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nvar Z_NO_FLUSH=0;\nvar Z_FINISH=4;\n\nvar Z_OK=0;\nvar Z_STREAM_END=1;\nvar Z_SYNC_FLUSH=2;\n\nvar Z_DEFAULT_COMPRESSION=-1;\n\nvar Z_DEFAULT_STRATEGY=0;\n\nvar Z_DEFLATED=8;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array|Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you\n * push a chunk with explicit flush (call [[Deflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options){\nif(!(this instanceof Deflate))return new Deflate(options);\n\nthis.options=utils.assign({\nlevel:Z_DEFAULT_COMPRESSION,\nmethod:Z_DEFLATED,\nchunkSize:16384,\nwindowBits:15,\nmemLevel:8,\nstrategy:Z_DEFAULT_STRATEGY,\nto:''},\noptions||{});\n\nvar opt=this.options;\n\nif(opt.raw&&opt.windowBits>0){\nopt.windowBits=-opt.windowBits;\n}else\n\nif(opt.gzip&&opt.windowBits>0&&opt.windowBits<16){\nopt.windowBits+=16;\n}\n\nthis.err=0;// error code, if happens (0 = Z_OK)\nthis.msg='';// error message\nthis.ended=false;// used to avoid multiple onEnd() calls\nthis.chunks=[];// chunks of compressed data\n\nthis.strm=new ZStream();\nthis.strm.avail_out=0;\n\nvar status=zlib_deflate.deflateInit2(\nthis.strm,\nopt.level,\nopt.method,\nopt.windowBits,\nopt.memLevel,\nopt.strategy);\n\n\nif(status!==Z_OK){\nthrow new Error(msg[status]);\n}\n\nif(opt.header){\nzlib_deflate.deflateSetHeader(this.strm,opt.header);\n}\n\nif(opt.dictionary){\nvar dict;\n// Convert data if needed\nif(typeof opt.dictionary==='string'){\n// If we need to compress text, change encoding to utf8.\ndict=strings.string2buf(opt.dictionary);\n}else if(toString.call(opt.dictionary)==='[object ArrayBuffer]'){\ndict=new Uint8Array(opt.dictionary);\n}else{\ndict=opt.dictionary;\n}\n\nstatus=zlib_deflate.deflateSetDictionary(this.strm,dict);\n\nif(status!==Z_OK){\nthrow new Error(msg[status]);\n}\n\nthis._dict_set=true;\n}\n}\n\n/**\n * Deflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the compression context.\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * array format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push=function(data,mode){\nvar strm=this.strm;\nvar chunkSize=this.options.chunkSize;\nvar status,_mode;\n\nif(this.ended){return false;}\n\n_mode=mode===~~mode?mode:mode===true?Z_FINISH:Z_NO_FLUSH;\n\n// Convert data if needed\nif(typeof data==='string'){\n// If we need to compress text, change encoding to utf8.\nstrm.input=strings.string2buf(data);\n}else if(toString.call(data)==='[object ArrayBuffer]'){\nstrm.input=new Uint8Array(data);\n}else{\nstrm.input=data;\n}\n\nstrm.next_in=0;\nstrm.avail_in=strm.input.length;\n\ndo{\nif(strm.avail_out===0){\nstrm.output=new utils.Buf8(chunkSize);\nstrm.next_out=0;\nstrm.avail_out=chunkSize;\n}\nstatus=zlib_deflate.deflate(strm,_mode);/* no bad return value */\n\nif(status!==Z_STREAM_END&&status!==Z_OK){\nthis.onEnd(status);\nthis.ended=true;\nreturn false;\n}\nif(strm.avail_out===0||strm.avail_in===0&&(_mode===Z_FINISH||_mode===Z_SYNC_FLUSH)){\nif(this.options.to==='string'){\nthis.onData(strings.buf2binstring(utils.shrinkBuf(strm.output,strm.next_out)));\n}else{\nthis.onData(utils.shrinkBuf(strm.output,strm.next_out));\n}\n}\n}while((strm.avail_in>0||strm.avail_out===0)&&status!==Z_STREAM_END);\n\n// Finalize on the last chunk.\nif(_mode===Z_FINISH){\nstatus=zlib_deflate.deflateEnd(this.strm);\nthis.onEnd(status);\nthis.ended=true;\nreturn status===Z_OK;\n}\n\n// callback interim results if Z_SYNC_FLUSH.\nif(_mode===Z_SYNC_FLUSH){\nthis.onEnd(Z_OK);\nstrm.avail_out=0;\nreturn true;\n}\n\nreturn true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData=function(chunk){\nthis.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd=function(status){\n// On success - join\nif(status===Z_OK){\nif(this.options.to==='string'){\nthis.result=this.chunks.join('');\n}else{\nthis.result=utils.flattenChunks(this.chunks);\n}\n}\nthis.chunks=[];\nthis.err=status;\nthis.msg=this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input,options){\nvar deflator=new Deflate(options);\n\ndeflator.push(input,true);\n\n// That will never happens, if you don't cheat with options :)\nif(deflator.err){throw deflator.msg||msg[deflator.err];}\n\nreturn deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input,options){\noptions=options||{};\noptions.raw=true;\nreturn deflate(input,options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input,options){\noptions=options||{};\noptions.gzip=true;\nreturn deflate(input,options);\n}\n\n\nexports.Deflate=Deflate;\nexports.deflate=deflate;\nexports.deflateRaw=deflateRaw;\nexports.gzip=gzip;\n\n},{\"./utils/common\":179,\"./utils/strings\":180,\"./zlib/deflate\":184,\"./zlib/messages\":189,\"./zlib/zstream\":191}],178:[function(require,module,exports){\n'use strict';\n\n\nvar zlib_inflate=require('./zlib/inflate');\nvar utils=require('./utils/common');\nvar strings=require('./utils/strings');\nvar c=require('./zlib/constants');\nvar msg=require('./zlib/messages');\nvar ZStream=require('./zlib/zstream');\nvar GZheader=require('./zlib/gzheader');\n\nvar toString=Object.prototype.toString;\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n * push a chunk with explicit flush (call [[Inflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options){\nif(!(this instanceof Inflate))return new Inflate(options);\n\nthis.options=utils.assign({\nchunkSize:16384,\nwindowBits:0,\nto:''},\noptions||{});\n\nvar opt=this.options;\n\n// Force window size for `raw` data, if not set directly,\n// because we have no header for autodetect.\nif(opt.raw&&opt.windowBits>=0&&opt.windowBits<16){\nopt.windowBits=-opt.windowBits;\nif(opt.windowBits===0){opt.windowBits=-15;}\n}\n\n// If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\nif(opt.windowBits>=0&&opt.windowBits<16&&\n!(options&&options.windowBits)){\nopt.windowBits+=32;\n}\n\n// Gzip header has no info about windows size, we can do autodetect only\n// for deflate. So, if window size not set, force it to max when gzip possible\nif(opt.windowBits>15&&opt.windowBits<48){\n// bit 3 (16) -> gzipped data\n// bit 4 (32) -> autodetect gzip/deflate\nif((opt.windowBits&15)===0){\nopt.windowBits|=15;\n}\n}\n\nthis.err=0;// error code, if happens (0 = Z_OK)\nthis.msg='';// error message\nthis.ended=false;// used to avoid multiple onEnd() calls\nthis.chunks=[];// chunks of compressed data\n\nthis.strm=new ZStream();\nthis.strm.avail_out=0;\n\nvar status=zlib_inflate.inflateInit2(\nthis.strm,\nopt.windowBits);\n\n\nif(status!==c.Z_OK){\nthrow new Error(msg[status]);\n}\n\nthis.header=new GZheader();\n\nzlib_inflate.inflateGetHeader(this.strm,this.header);\n}\n\n/**\n * Inflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the decompression context.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push=function(data,mode){\nvar strm=this.strm;\nvar chunkSize=this.options.chunkSize;\nvar dictionary=this.options.dictionary;\nvar status,_mode;\nvar next_out_utf8,tail,utf8str;\nvar dict;\n\n// Flag to properly process Z_BUF_ERROR on testing inflate call\n// when we check that all output data was flushed.\nvar allowBufError=false;\n\nif(this.ended){return false;}\n_mode=mode===~~mode?mode:mode===true?c.Z_FINISH:c.Z_NO_FLUSH;\n\n// Convert data if needed\nif(typeof data==='string'){\n// Only binary strings can be decompressed on practice\nstrm.input=strings.binstring2buf(data);\n}else if(toString.call(data)==='[object ArrayBuffer]'){\nstrm.input=new Uint8Array(data);\n}else{\nstrm.input=data;\n}\n\nstrm.next_in=0;\nstrm.avail_in=strm.input.length;\n\ndo{\nif(strm.avail_out===0){\nstrm.output=new utils.Buf8(chunkSize);\nstrm.next_out=0;\nstrm.avail_out=chunkSize;\n}\n\nstatus=zlib_inflate.inflate(strm,c.Z_NO_FLUSH);/* no bad return value */\n\nif(status===c.Z_NEED_DICT&&dictionary){\n// Convert data if needed\nif(typeof dictionary==='string'){\ndict=strings.string2buf(dictionary);\n}else if(toString.call(dictionary)==='[object ArrayBuffer]'){\ndict=new Uint8Array(dictionary);\n}else{\ndict=dictionary;\n}\n\nstatus=zlib_inflate.inflateSetDictionary(this.strm,dict);\n\n}\n\nif(status===c.Z_BUF_ERROR&&allowBufError===true){\nstatus=c.Z_OK;\nallowBufError=false;\n}\n\nif(status!==c.Z_STREAM_END&&status!==c.Z_OK){\nthis.onEnd(status);\nthis.ended=true;\nreturn false;\n}\n\nif(strm.next_out){\nif(strm.avail_out===0||status===c.Z_STREAM_END||strm.avail_in===0&&(_mode===c.Z_FINISH||_mode===c.Z_SYNC_FLUSH)){\n\nif(this.options.to==='string'){\n\nnext_out_utf8=strings.utf8border(strm.output,strm.next_out);\n\ntail=strm.next_out-next_out_utf8;\nutf8str=strings.buf2string(strm.output,next_out_utf8);\n\n// move tail\nstrm.next_out=tail;\nstrm.avail_out=chunkSize-tail;\nif(tail){utils.arraySet(strm.output,strm.output,next_out_utf8,tail,0);}\n\nthis.onData(utf8str);\n\n}else{\nthis.onData(utils.shrinkBuf(strm.output,strm.next_out));\n}\n}\n}\n\n// When no more input data, we should check that internal inflate buffers\n// are flushed. The only way to do it when avail_out = 0 - run one more\n// inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.\n// Here we set flag to process this error properly.\n//\n// NOTE. Deflate does not return error in this case and does not needs such\n// logic.\nif(strm.avail_in===0&&strm.avail_out===0){\nallowBufError=true;\n}\n\n}while((strm.avail_in>0||strm.avail_out===0)&&status!==c.Z_STREAM_END);\n\nif(status===c.Z_STREAM_END){\n_mode=c.Z_FINISH;\n}\n\n// Finalize on the last chunk.\nif(_mode===c.Z_FINISH){\nstatus=zlib_inflate.inflateEnd(this.strm);\nthis.onEnd(status);\nthis.ended=true;\nreturn status===c.Z_OK;\n}\n\n// callback interim results if Z_SYNC_FLUSH.\nif(_mode===c.Z_SYNC_FLUSH){\nthis.onEnd(c.Z_OK);\nstrm.avail_out=0;\nreturn true;\n}\n\nreturn true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData=function(chunk){\nthis.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd=function(status){\n// On success - join\nif(status===c.Z_OK){\nif(this.options.to==='string'){\n// Glue & convert here, until we teach pako to send\n// utf8 aligned strings to onData\nthis.result=this.chunks.join('');\n}else{\nthis.result=utils.flattenChunks(this.chunks);\n}\n}\nthis.chunks=[];\nthis.err=status;\nthis.msg=this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n *   , output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input,options){\nvar inflator=new Inflate(options);\n\ninflator.push(input,true);\n\n// That will never happens, if you don't cheat with options :)\nif(inflator.err){throw inflator.msg||msg[inflator.err];}\n\nreturn inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input,options){\noptions=options||{};\noptions.raw=true;\nreturn inflate(input,options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nexports.Inflate=Inflate;\nexports.inflate=inflate;\nexports.inflateRaw=inflateRaw;\nexports.ungzip=inflate;\n\n},{\"./utils/common\":179,\"./utils/strings\":180,\"./zlib/constants\":182,\"./zlib/gzheader\":185,\"./zlib/inflate\":187,\"./zlib/messages\":189,\"./zlib/zstream\":191}],179:[function(require,module,exports){\n'use strict';\n\n\nvar TYPED_OK=typeof Uint8Array!=='undefined'&&\ntypeof Uint16Array!=='undefined'&&\ntypeof Int32Array!=='undefined';\n\nfunction _has(obj,key){\nreturn Object.prototype.hasOwnProperty.call(obj,key);\n}\n\nexports.assign=function(obj/*from1, from2, from3, ...*/){\nvar sources=Array.prototype.slice.call(arguments,1);\nwhile(sources.length){\nvar source=sources.shift();\nif(!source){continue;}\n\nif(typeof source!=='object'){\nthrow new TypeError(source+'must be non-object');\n}\n\nfor(var p in source){\nif(_has(source,p)){\nobj[p]=source[p];\n}\n}\n}\n\nreturn obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf=function(buf,size){\nif(buf.length===size){return buf;}\nif(buf.subarray){return buf.subarray(0,size);}\nbuf.length=size;\nreturn buf;\n};\n\n\nvar fnTyped={\narraySet:function arraySet(dest,src,src_offs,len,dest_offs){\nif(src.subarray&&dest.subarray){\ndest.set(src.subarray(src_offs,src_offs+len),dest_offs);\nreturn;\n}\n// Fallback to ordinary array\nfor(var i=0;i<len;i++){\ndest[dest_offs+i]=src[src_offs+i];\n}\n},\n// Join array of chunks to single array.\nflattenChunks:function flattenChunks(chunks){\nvar i,l,len,pos,chunk,result;\n\n// calculate data length\nlen=0;\nfor(i=0,l=chunks.length;i<l;i++){\nlen+=chunks[i].length;\n}\n\n// join chunks\nresult=new Uint8Array(len);\npos=0;\nfor(i=0,l=chunks.length;i<l;i++){\nchunk=chunks[i];\nresult.set(chunk,pos);\npos+=chunk.length;\n}\n\nreturn result;\n}};\n\n\nvar fnUntyped={\narraySet:function arraySet(dest,src,src_offs,len,dest_offs){\nfor(var i=0;i<len;i++){\ndest[dest_offs+i]=src[src_offs+i];\n}\n},\n// Join array of chunks to single array.\nflattenChunks:function flattenChunks(chunks){\nreturn[].concat.apply([],chunks);\n}};\n\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped=function(on){\nif(on){\nexports.Buf8=Uint8Array;\nexports.Buf16=Uint16Array;\nexports.Buf32=Int32Array;\nexports.assign(exports,fnTyped);\n}else{\nexports.Buf8=Array;\nexports.Buf16=Array;\nexports.Buf32=Array;\nexports.assign(exports,fnUntyped);\n}\n};\n\nexports.setTyped(TYPED_OK);\n\n},{}],180:[function(require,module,exports){\n// String encode/decode helpers\n'use strict';\n\n\nvar utils=require('./common');\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nvar STR_APPLY_OK=true;\nvar STR_APPLY_UIA_OK=true;\n\ntry{String.fromCharCode.apply(null,[0]);}catch(__){STR_APPLY_OK=false;}\ntry{String.fromCharCode.apply(null,new Uint8Array(1));}catch(__){STR_APPLY_UIA_OK=false;}\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nvar _utf8len=new utils.Buf8(256);\nfor(var q=0;q<256;q++){\n_utf8len[q]=q>=252?6:q>=248?5:q>=240?4:q>=224?3:q>=192?2:1;\n}\n_utf8len[254]=_utf8len[254]=1;// Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nexports.string2buf=function(str){\nvar buf,c,c2,m_pos,i,str_len=str.length,buf_len=0;\n\n// count binary size\nfor(m_pos=0;m_pos<str_len;m_pos++){\nc=str.charCodeAt(m_pos);\nif((c&0xfc00)===0xd800&&m_pos+1<str_len){\nc2=str.charCodeAt(m_pos+1);\nif((c2&0xfc00)===0xdc00){\nc=0x10000+(c-0xd800<<10)+(c2-0xdc00);\nm_pos++;\n}\n}\nbuf_len+=c<0x80?1:c<0x800?2:c<0x10000?3:4;\n}\n\n// allocate buffer\nbuf=new utils.Buf8(buf_len);\n\n// convert\nfor(i=0,m_pos=0;i<buf_len;m_pos++){\nc=str.charCodeAt(m_pos);\nif((c&0xfc00)===0xd800&&m_pos+1<str_len){\nc2=str.charCodeAt(m_pos+1);\nif((c2&0xfc00)===0xdc00){\nc=0x10000+(c-0xd800<<10)+(c2-0xdc00);\nm_pos++;\n}\n}\nif(c<0x80){\n/* one byte */\nbuf[i++]=c;\n}else if(c<0x800){\n/* two bytes */\nbuf[i++]=0xC0|c>>>6;\nbuf[i++]=0x80|c&0x3f;\n}else if(c<0x10000){\n/* three bytes */\nbuf[i++]=0xE0|c>>>12;\nbuf[i++]=0x80|c>>>6&0x3f;\nbuf[i++]=0x80|c&0x3f;\n}else{\n/* four bytes */\nbuf[i++]=0xf0|c>>>18;\nbuf[i++]=0x80|c>>>12&0x3f;\nbuf[i++]=0x80|c>>>6&0x3f;\nbuf[i++]=0x80|c&0x3f;\n}\n}\n\nreturn buf;\n};\n\n// Helper (used in 2 places)\nfunction buf2binstring(buf,len){\n// use fallback for big arrays to avoid stack overflow\nif(len<65537){\nif(buf.subarray&&STR_APPLY_UIA_OK||!buf.subarray&&STR_APPLY_OK){\nreturn String.fromCharCode.apply(null,utils.shrinkBuf(buf,len));\n}\n}\n\nvar result='';\nfor(var i=0;i<len;i++){\nresult+=String.fromCharCode(buf[i]);\n}\nreturn result;\n}\n\n\n// Convert byte array to binary string\nexports.buf2binstring=function(buf){\nreturn buf2binstring(buf,buf.length);\n};\n\n\n// Convert binary string (typed, when possible)\nexports.binstring2buf=function(str){\nvar buf=new utils.Buf8(str.length);\nfor(var i=0,len=buf.length;i<len;i++){\nbuf[i]=str.charCodeAt(i);\n}\nreturn buf;\n};\n\n\n// convert array to string\nexports.buf2string=function(buf,max){\nvar i,out,c,c_len;\nvar len=max||buf.length;\n\n// Reserve max possible length (2 words per char)\n// NB: by unknown reasons, Array is significantly faster for\n//     String.fromCharCode.apply than Uint16Array.\nvar utf16buf=new Array(len*2);\n\nfor(out=0,i=0;i<len;){\nc=buf[i++];\n// quick process ascii\nif(c<0x80){utf16buf[out++]=c;continue;}\n\nc_len=_utf8len[c];\n// skip 5 & 6 byte codes\nif(c_len>4){utf16buf[out++]=0xfffd;i+=c_len-1;continue;}\n\n// apply mask on first byte\nc&=c_len===2?0x1f:c_len===3?0x0f:0x07;\n// join the rest\nwhile(c_len>1&&i<len){\nc=c<<6|buf[i++]&0x3f;\nc_len--;\n}\n\n// terminated by end of string?\nif(c_len>1){utf16buf[out++]=0xfffd;continue;}\n\nif(c<0x10000){\nutf16buf[out++]=c;\n}else{\nc-=0x10000;\nutf16buf[out++]=0xd800|c>>10&0x3ff;\nutf16buf[out++]=0xdc00|c&0x3ff;\n}\n}\n\nreturn buf2binstring(utf16buf,out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nexports.utf8border=function(buf,max){\nvar pos;\n\nmax=max||buf.length;\nif(max>buf.length){max=buf.length;}\n\n// go back from last position, until start of sequence found\npos=max-1;\nwhile(pos>=0&&(buf[pos]&0xC0)===0x80){pos--;}\n\n// Very small and broken sequence,\n// return max, because we should return something anyway.\nif(pos<0){return max;}\n\n// If we came to start of buffer - that means buffer is too small,\n// return max too.\nif(pos===0){return max;}\n\nreturn pos+_utf8len[buf[pos]]>max?pos:max;\n};\n\n},{\"./common\":179}],181:[function(require,module,exports){\n'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction adler32(adler,buf,len,pos){\nvar s1=adler&0xffff|0,\ns2=adler>>>16&0xffff|0,\nn=0;\n\nwhile(len!==0){\n// Set limit ~ twice less than 5552, to keep\n// s2 in 31-bits, because we force signed ints.\n// in other case %= will fail.\nn=len>2000?2000:len;\nlen-=n;\n\ndo{\ns1=s1+buf[pos++]|0;\ns2=s2+s1|0;\n}while(--n);\n\ns1%=65521;\ns2%=65521;\n}\n\nreturn s1|s2<<16|0;\n}\n\n\nmodule.exports=adler32;\n\n},{}],182:[function(require,module,exports){\n'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports={\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nZ_NO_FLUSH:0,\nZ_PARTIAL_FLUSH:1,\nZ_SYNC_FLUSH:2,\nZ_FULL_FLUSH:3,\nZ_FINISH:4,\nZ_BLOCK:5,\nZ_TREES:6,\n\n/* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\nZ_OK:0,\nZ_STREAM_END:1,\nZ_NEED_DICT:2,\nZ_ERRNO:-1,\nZ_STREAM_ERROR:-2,\nZ_DATA_ERROR:-3,\n//Z_MEM_ERROR:     -4,\nZ_BUF_ERROR:-5,\n//Z_VERSION_ERROR: -6,\n\n/* compression levels */\nZ_NO_COMPRESSION:0,\nZ_BEST_SPEED:1,\nZ_BEST_COMPRESSION:9,\nZ_DEFAULT_COMPRESSION:-1,\n\n\nZ_FILTERED:1,\nZ_HUFFMAN_ONLY:2,\nZ_RLE:3,\nZ_FIXED:4,\nZ_DEFAULT_STRATEGY:0,\n\n/* Possible values of the data_type field (though see inflate()) */\nZ_BINARY:0,\nZ_TEXT:1,\n//Z_ASCII:                1, // = Z_TEXT (deprecated)\nZ_UNKNOWN:2,\n\n/* The deflate compression method */\nZ_DEFLATED:8\n//Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n},{}],183:[function(require,module,exports){\n'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable(){\nvar c,table=[];\n\nfor(var n=0;n<256;n++){\nc=n;\nfor(var k=0;k<8;k++){\nc=c&1?0xEDB88320^c>>>1:c>>>1;\n}\ntable[n]=c;\n}\n\nreturn table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable=makeTable();\n\n\nfunction crc32(crc,buf,len,pos){\nvar t=crcTable,\nend=pos+len;\n\ncrc^=-1;\n\nfor(var i=pos;i<end;i++){\ncrc=crc>>>8^t[(crc^buf[i])&0xFF];\n}\n\nreturn crc^-1;// >>> 0;\n}\n\n\nmodule.exports=crc32;\n\n},{}],184:[function(require,module,exports){\n'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils=require('../utils/common');\nvar trees=require('./trees');\nvar adler32=require('./adler32');\nvar crc32=require('./crc32');\nvar msg=require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH=0;\nvar Z_PARTIAL_FLUSH=1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH=3;\nvar Z_FINISH=4;\nvar Z_BLOCK=5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK=0;\nvar Z_STREAM_END=1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR=-2;\nvar Z_DATA_ERROR=-3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR=-5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION=-1;\n\n\nvar Z_FILTERED=1;\nvar Z_HUFFMAN_ONLY=2;\nvar Z_RLE=3;\nvar Z_FIXED=4;\nvar Z_DEFAULT_STRATEGY=0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN=2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED=8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL=9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS=15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL=8;\n\n\nvar LENGTH_CODES=29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS=256;\n/* number of literal bytes 0..255 */\nvar L_CODES=LITERALS+1+LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES=30;\n/* number of distance codes */\nvar BL_CODES=19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE=2*L_CODES+1;\n/* maximum heap size */\nvar MAX_BITS=15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH=3;\nvar MAX_MATCH=258;\nvar MIN_LOOKAHEAD=MAX_MATCH+MIN_MATCH+1;\n\nvar PRESET_DICT=0x20;\n\nvar INIT_STATE=42;\nvar EXTRA_STATE=69;\nvar NAME_STATE=73;\nvar COMMENT_STATE=91;\nvar HCRC_STATE=103;\nvar BUSY_STATE=113;\nvar FINISH_STATE=666;\n\nvar BS_NEED_MORE=1;/* block not completed, need more input or more output */\nvar BS_BLOCK_DONE=2;/* block flush performed */\nvar BS_FINISH_STARTED=3;/* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE=4;/* finish done, accept no more input or output */\n\nvar OS_CODE=0x03;// Unix :) . Don't detect, use this default.\n\nfunction err(strm,errorCode){\nstrm.msg=msg[errorCode];\nreturn errorCode;\n}\n\nfunction rank(f){\nreturn(f<<1)-(f>4?9:0);\n}\n\nfunction zero(buf){var len=buf.length;while(--len>=0){buf[len]=0;}}\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm){\nvar s=strm.state;\n\n//_tr_flush_bits(s);\nvar len=s.pending;\nif(len>strm.avail_out){\nlen=strm.avail_out;\n}\nif(len===0){return;}\n\nutils.arraySet(strm.output,s.pending_buf,s.pending_out,len,strm.next_out);\nstrm.next_out+=len;\ns.pending_out+=len;\nstrm.total_out+=len;\nstrm.avail_out-=len;\ns.pending-=len;\nif(s.pending===0){\ns.pending_out=0;\n}\n}\n\n\nfunction flush_block_only(s,last){\ntrees._tr_flush_block(s,s.block_start>=0?s.block_start:-1,s.strstart-s.block_start,last);\ns.block_start=s.strstart;\nflush_pending(s.strm);\n}\n\n\nfunction put_byte(s,b){\ns.pending_buf[s.pending++]=b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s,b){\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\ns.pending_buf[s.pending++]=b>>>8&0xff;\ns.pending_buf[s.pending++]=b&0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm,buf,start,size){\nvar len=strm.avail_in;\n\nif(len>size){len=size;}\nif(len===0){return 0;}\n\nstrm.avail_in-=len;\n\n// zmemcpy(buf, strm->next_in, len);\nutils.arraySet(buf,strm.input,strm.next_in,len,start);\nif(strm.state.wrap===1){\nstrm.adler=adler32(strm.adler,buf,len,start);\n}else\n\nif(strm.state.wrap===2){\nstrm.adler=crc32(strm.adler,buf,len,start);\n}\n\nstrm.next_in+=len;\nstrm.total_in+=len;\n\nreturn len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s,cur_match){\nvar chain_length=s.max_chain_length;/* max hash chain length */\nvar scan=s.strstart;/* current string */\nvar match;/* matched string */\nvar len;/* length of current match */\nvar best_len=s.prev_length;/* best match length so far */\nvar nice_match=s.nice_match;/* stop if match long enough */\nvar limit=s.strstart>s.w_size-MIN_LOOKAHEAD?\ns.strstart-(s.w_size-MIN_LOOKAHEAD):0/*NIL*/;\n\nvar _win=s.window;// shortcut\n\nvar wmask=s.w_mask;\nvar prev=s.prev;\n\n/* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\nvar strend=s.strstart+MAX_MATCH;\nvar scan_end1=_win[scan+best_len-1];\nvar scan_end=_win[scan+best_len];\n\n/* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n// Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n/* Do not waste too much time if we already have a good match: */\nif(s.prev_length>=s.good_match){\nchain_length>>=2;\n}\n/* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\nif(nice_match>s.lookahead){nice_match=s.lookahead;}\n\n// Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\ndo{\n// Assert(cur_match < s->strstart, \"no future\");\nmatch=cur_match;\n\n/* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\nif(_win[match+best_len]!==scan_end||\n_win[match+best_len-1]!==scan_end1||\n_win[match]!==_win[scan]||\n_win[++match]!==_win[scan+1]){\ncontinue;\n}\n\n/* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\nscan+=2;\nmatch++;\n// Assert(*scan == *match, \"match[2]?\");\n\n/* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\ndo{\n/*jshint noempty:false*/\n}while(_win[++scan]===_win[++match]&&_win[++scan]===_win[++match]&&\n_win[++scan]===_win[++match]&&_win[++scan]===_win[++match]&&\n_win[++scan]===_win[++match]&&_win[++scan]===_win[++match]&&\n_win[++scan]===_win[++match]&&_win[++scan]===_win[++match]&&\nscan<strend);\n\n// Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\nlen=MAX_MATCH-(strend-scan);\nscan=strend-MAX_MATCH;\n\nif(len>best_len){\ns.match_start=cur_match;\nbest_len=len;\nif(len>=nice_match){\nbreak;\n}\nscan_end1=_win[scan+best_len-1];\nscan_end=_win[scan+best_len];\n}\n}while((cur_match=prev[cur_match&wmask])>limit&&--chain_length!==0);\n\nif(best_len<=s.lookahead){\nreturn best_len;\n}\nreturn s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s){\nvar _w_size=s.w_size;\nvar p,n,m,more,str;\n\n//Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\ndo{\nmore=s.window_size-s.lookahead-s.strstart;\n\n// JS ints have 32 bit, block below not needed\n/* Deal with !@#$% 64K limit: */\n//if (sizeof(int) <= 2) {\n//    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n//        more = wsize;\n//\n//  } else if (more == (unsigned)(-1)) {\n//        /* Very unlikely, but possible on 16 bit machine if\n//         * strstart == 0 && lookahead == 1 (input done a byte at time)\n//         */\n//        more--;\n//    }\n//}\n\n\n/* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\nif(s.strstart>=_w_size+(_w_size-MIN_LOOKAHEAD)){\n\nutils.arraySet(s.window,s.window,_w_size,_w_size,0);\ns.match_start-=_w_size;\ns.strstart-=_w_size;\n/* we now have strstart >= MAX_DIST */\ns.block_start-=_w_size;\n\n/* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\nn=s.hash_size;\np=n;\ndo{\nm=s.head[--p];\ns.head[p]=m>=_w_size?m-_w_size:0;\n}while(--n);\n\nn=_w_size;\np=n;\ndo{\nm=s.prev[--p];\ns.prev[p]=m>=_w_size?m-_w_size:0;\n/* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n}while(--n);\n\nmore+=_w_size;\n}\nif(s.strm.avail_in===0){\nbreak;\n}\n\n/* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n//Assert(more >= 2, \"more < 2\");\nn=read_buf(s.strm,s.window,s.strstart+s.lookahead,more);\ns.lookahead+=n;\n\n/* Initialize the hash value now that we have some input: */\nif(s.lookahead+s.insert>=MIN_MATCH){\nstr=s.strstart-s.insert;\ns.ins_h=s.window[str];\n\n/* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\ns.ins_h=(s.ins_h<<s.hash_shift^s.window[str+1])&s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\nwhile(s.insert){\n/* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\ns.ins_h=(s.ins_h<<s.hash_shift^s.window[str+MIN_MATCH-1])&s.hash_mask;\n\ns.prev[str&s.w_mask]=s.head[s.ins_h];\ns.head[s.ins_h]=str;\nstr++;\ns.insert--;\nif(s.lookahead+s.insert<MIN_MATCH){\nbreak;\n}\n}\n}\n/* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n}while(s.lookahead<MIN_LOOKAHEAD&&s.strm.avail_in!==0);\n\n/* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s,flush){\n/* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\nvar max_block_size=0xffff;\n\nif(max_block_size>s.pending_buf_size-5){\nmax_block_size=s.pending_buf_size-5;\n}\n\n/* Copy as much as possible from input to output: */\nfor(;;){\n/* Fill the window as much as possible: */\nif(s.lookahead<=1){\n\n//Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n//  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\nfill_window(s);\nif(s.lookahead===0&&flush===Z_NO_FLUSH){\nreturn BS_NEED_MORE;\n}\n\nif(s.lookahead===0){\nbreak;\n}\n/* flush the current block */\n}\n//Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\ns.strstart+=s.lookahead;\ns.lookahead=0;\n\n/* Emit a stored block if pending_buf will be full: */\nvar max_start=s.block_start+max_block_size;\n\nif(s.strstart===0||s.strstart>=max_start){\n/* strstart == 0 is possible when wraparound on 16-bit machine */\ns.lookahead=s.strstart-max_start;\ns.strstart=max_start;\n/*** FLUSH_BLOCK(s, 0); ***/\nflush_block_only(s,false);\nif(s.strm.avail_out===0){\nreturn BS_NEED_MORE;\n}\n/***/\n\n\n}\n/* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\nif(s.strstart-s.block_start>=s.w_size-MIN_LOOKAHEAD){\n/*** FLUSH_BLOCK(s, 0); ***/\nflush_block_only(s,false);\nif(s.strm.avail_out===0){\nreturn BS_NEED_MORE;\n}\n/***/\n}\n}\n\ns.insert=0;\n\nif(flush===Z_FINISH){\n/*** FLUSH_BLOCK(s, 1); ***/\nflush_block_only(s,true);\nif(s.strm.avail_out===0){\nreturn BS_FINISH_STARTED;\n}\n/***/\nreturn BS_FINISH_DONE;\n}\n\nif(s.strstart>s.block_start){\n/*** FLUSH_BLOCK(s, 0); ***/\nflush_block_only(s,false);\nif(s.strm.avail_out===0){\nreturn BS_NEED_MORE;\n}\n/***/\n}\n\nreturn BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s,flush){\nvar hash_head;/* head of the hash chain */\nvar bflush;/* set if current block must be flushed */\n\nfor(;;){\n/* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\nif(s.lookahead<MIN_LOOKAHEAD){\nfill_window(s);\nif(s.lookahead<MIN_LOOKAHEAD&&flush===Z_NO_FLUSH){\nreturn BS_NEED_MORE;\n}\nif(s.lookahead===0){\nbreak;/* flush the current block */\n}\n}\n\n/* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\nhash_head=0/*NIL*/;\nif(s.lookahead>=MIN_MATCH){\n/*** INSERT_STRING(s, s.strstart, hash_head); ***/\ns.ins_h=(s.ins_h<<s.hash_shift^s.window[s.strstart+MIN_MATCH-1])&s.hash_mask;\nhash_head=s.prev[s.strstart&s.w_mask]=s.head[s.ins_h];\ns.head[s.ins_h]=s.strstart;\n/***/\n}\n\n/* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\nif(hash_head!==0/*NIL*/&&s.strstart-hash_head<=s.w_size-MIN_LOOKAHEAD){\n/* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\ns.match_length=longest_match(s,hash_head);\n/* longest_match() sets match_start */\n}\nif(s.match_length>=MIN_MATCH){\n// check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n/*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\nbflush=trees._tr_tally(s,s.strstart-s.match_start,s.match_length-MIN_MATCH);\n\ns.lookahead-=s.match_length;\n\n/* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\nif(s.match_length<=s.max_lazy_match/*max_insert_length*/&&s.lookahead>=MIN_MATCH){\ns.match_length--;/* string at strstart already in table */\ndo{\ns.strstart++;\n/*** INSERT_STRING(s, s.strstart, hash_head); ***/\ns.ins_h=(s.ins_h<<s.hash_shift^s.window[s.strstart+MIN_MATCH-1])&s.hash_mask;\nhash_head=s.prev[s.strstart&s.w_mask]=s.head[s.ins_h];\ns.head[s.ins_h]=s.strstart;\n/***/\n/* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n}while(--s.match_length!==0);\ns.strstart++;\n}else\n{\ns.strstart+=s.match_length;\ns.match_length=0;\ns.ins_h=s.window[s.strstart];\n/* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\ns.ins_h=(s.ins_h<<s.hash_shift^s.window[s.strstart+1])&s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n/* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n}\n}else{\n/* No match, output a literal byte */\n//Tracevv((stderr,\"%c\", s.window[s.strstart]));\n/*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\nbflush=trees._tr_tally(s,0,s.window[s.strstart]);\n\ns.lookahead--;\ns.strstart++;\n}\nif(bflush){\n/*** FLUSH_BLOCK(s, 0); ***/\nflush_block_only(s,false);\nif(s.strm.avail_out===0){\nreturn BS_NEED_MORE;\n}\n/***/\n}\n}\ns.insert=s.strstart<MIN_MATCH-1?s.strstart:MIN_MATCH-1;\nif(flush===Z_FINISH){\n/*** FLUSH_BLOCK(s, 1); ***/\nflush_block_only(s,true);\nif(s.strm.avail_out===0){\nreturn BS_FINISH_STARTED;\n}\n/***/\nreturn BS_FINISH_DONE;\n}\nif(s.last_lit){\n/*** FLUSH_BLOCK(s, 0); ***/\nflush_block_only(s,false);\nif(s.strm.avail_out===0){\nreturn BS_NEED_MORE;\n}\n/***/\n}\nreturn BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s,flush){\nvar hash_head;/* head of hash chain */\nvar bflush;/* set if current block must be flushed */\n\nvar max_insert;\n\n/* Process the input block. */\nfor(;;){\n/* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\nif(s.lookahead<MIN_LOOKAHEAD){\nfill_window(s);\nif(s.lookahead<MIN_LOOKAHEAD&&flush===Z_NO_FLUSH){\nreturn BS_NEED_MORE;\n}\nif(s.lookahead===0){break;}/* flush the current block */\n}\n\n/* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\nhash_head=0/*NIL*/;\nif(s.lookahead>=MIN_MATCH){\n/*** INSERT_STRING(s, s.strstart, hash_head); ***/\ns.ins_h=(s.ins_h<<s.hash_shift^s.window[s.strstart+MIN_MATCH-1])&s.hash_mask;\nhash_head=s.prev[s.strstart&s.w_mask]=s.head[s.ins_h];\ns.head[s.ins_h]=s.strstart;\n/***/\n}\n\n/* Find the longest match, discarding those <= prev_length.\n     */\ns.prev_length=s.match_length;\ns.prev_match=s.match_start;\ns.match_length=MIN_MATCH-1;\n\nif(hash_head!==0/*NIL*/&&s.prev_length<s.max_lazy_match&&\ns.strstart-hash_head<=s.w_size-MIN_LOOKAHEAD/*MAX_DIST(s)*/){\n/* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\ns.match_length=longest_match(s,hash_head);\n/* longest_match() sets match_start */\n\nif(s.match_length<=5&&(\ns.strategy===Z_FILTERED||s.match_length===MIN_MATCH&&s.strstart-s.match_start>4096/*TOO_FAR*/)){\n\n/* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\ns.match_length=MIN_MATCH-1;\n}\n}\n/* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\nif(s.prev_length>=MIN_MATCH&&s.match_length<=s.prev_length){\nmax_insert=s.strstart+s.lookahead-MIN_MATCH;\n/* Do not insert strings in hash table beyond this. */\n\n//check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n/***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\nbflush=trees._tr_tally(s,s.strstart-1-s.prev_match,s.prev_length-MIN_MATCH);\n/* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\ns.lookahead-=s.prev_length-1;\ns.prev_length-=2;\ndo{\nif(++s.strstart<=max_insert){\n/*** INSERT_STRING(s, s.strstart, hash_head); ***/\ns.ins_h=(s.ins_h<<s.hash_shift^s.window[s.strstart+MIN_MATCH-1])&s.hash_mask;\nhash_head=s.prev[s.strstart&s.w_mask]=s.head[s.ins_h];\ns.head[s.ins_h]=s.strstart;\n/***/\n}\n}while(--s.prev_length!==0);\ns.match_available=0;\ns.match_length=MIN_MATCH-1;\ns.strstart++;\n\nif(bflush){\n/*** FLUSH_BLOCK(s, 0); ***/\nflush_block_only(s,false);\nif(s.strm.avail_out===0){\nreturn BS_NEED_MORE;\n}\n/***/\n}\n\n}else if(s.match_available){\n/* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n//Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n/*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\nbflush=trees._tr_tally(s,0,s.window[s.strstart-1]);\n\nif(bflush){\n/*** FLUSH_BLOCK_ONLY(s, 0) ***/\nflush_block_only(s,false);\n/***/\n}\ns.strstart++;\ns.lookahead--;\nif(s.strm.avail_out===0){\nreturn BS_NEED_MORE;\n}\n}else{\n/* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\ns.match_available=1;\ns.strstart++;\ns.lookahead--;\n}\n}\n//Assert (flush != Z_NO_FLUSH, \"no flush?\");\nif(s.match_available){\n//Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n/*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\nbflush=trees._tr_tally(s,0,s.window[s.strstart-1]);\n\ns.match_available=0;\n}\ns.insert=s.strstart<MIN_MATCH-1?s.strstart:MIN_MATCH-1;\nif(flush===Z_FINISH){\n/*** FLUSH_BLOCK(s, 1); ***/\nflush_block_only(s,true);\nif(s.strm.avail_out===0){\nreturn BS_FINISH_STARTED;\n}\n/***/\nreturn BS_FINISH_DONE;\n}\nif(s.last_lit){\n/*** FLUSH_BLOCK(s, 0); ***/\nflush_block_only(s,false);\nif(s.strm.avail_out===0){\nreturn BS_NEED_MORE;\n}\n/***/\n}\n\nreturn BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s,flush){\nvar bflush;/* set if current block must be flushed */\nvar prev;/* byte at distance one to match */\nvar scan,strend;/* scan goes up to strend for length of run */\n\nvar _win=s.window;\n\nfor(;;){\n/* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\nif(s.lookahead<=MAX_MATCH){\nfill_window(s);\nif(s.lookahead<=MAX_MATCH&&flush===Z_NO_FLUSH){\nreturn BS_NEED_MORE;\n}\nif(s.lookahead===0){break;}/* flush the current block */\n}\n\n/* See how many times the previous byte repeats */\ns.match_length=0;\nif(s.lookahead>=MIN_MATCH&&s.strstart>0){\nscan=s.strstart-1;\nprev=_win[scan];\nif(prev===_win[++scan]&&prev===_win[++scan]&&prev===_win[++scan]){\nstrend=s.strstart+MAX_MATCH;\ndo{\n/*jshint noempty:false*/\n}while(prev===_win[++scan]&&prev===_win[++scan]&&\nprev===_win[++scan]&&prev===_win[++scan]&&\nprev===_win[++scan]&&prev===_win[++scan]&&\nprev===_win[++scan]&&prev===_win[++scan]&&\nscan<strend);\ns.match_length=MAX_MATCH-(strend-scan);\nif(s.match_length>s.lookahead){\ns.match_length=s.lookahead;\n}\n}\n//Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n}\n\n/* Emit match if have run of MIN_MATCH or longer, else emit literal */\nif(s.match_length>=MIN_MATCH){\n//check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n/*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\nbflush=trees._tr_tally(s,1,s.match_length-MIN_MATCH);\n\ns.lookahead-=s.match_length;\ns.strstart+=s.match_length;\ns.match_length=0;\n}else{\n/* No match, output a literal byte */\n//Tracevv((stderr,\"%c\", s->window[s->strstart]));\n/*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\nbflush=trees._tr_tally(s,0,s.window[s.strstart]);\n\ns.lookahead--;\ns.strstart++;\n}\nif(bflush){\n/*** FLUSH_BLOCK(s, 0); ***/\nflush_block_only(s,false);\nif(s.strm.avail_out===0){\nreturn BS_NEED_MORE;\n}\n/***/\n}\n}\ns.insert=0;\nif(flush===Z_FINISH){\n/*** FLUSH_BLOCK(s, 1); ***/\nflush_block_only(s,true);\nif(s.strm.avail_out===0){\nreturn BS_FINISH_STARTED;\n}\n/***/\nreturn BS_FINISH_DONE;\n}\nif(s.last_lit){\n/*** FLUSH_BLOCK(s, 0); ***/\nflush_block_only(s,false);\nif(s.strm.avail_out===0){\nreturn BS_NEED_MORE;\n}\n/***/\n}\nreturn BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s,flush){\nvar bflush;/* set if current block must be flushed */\n\nfor(;;){\n/* Make sure that we have a literal to write. */\nif(s.lookahead===0){\nfill_window(s);\nif(s.lookahead===0){\nif(flush===Z_NO_FLUSH){\nreturn BS_NEED_MORE;\n}\nbreak;/* flush the current block */\n}\n}\n\n/* Output a literal byte */\ns.match_length=0;\n//Tracevv((stderr,\"%c\", s->window[s->strstart]));\n/*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\nbflush=trees._tr_tally(s,0,s.window[s.strstart]);\ns.lookahead--;\ns.strstart++;\nif(bflush){\n/*** FLUSH_BLOCK(s, 0); ***/\nflush_block_only(s,false);\nif(s.strm.avail_out===0){\nreturn BS_NEED_MORE;\n}\n/***/\n}\n}\ns.insert=0;\nif(flush===Z_FINISH){\n/*** FLUSH_BLOCK(s, 1); ***/\nflush_block_only(s,true);\nif(s.strm.avail_out===0){\nreturn BS_FINISH_STARTED;\n}\n/***/\nreturn BS_FINISH_DONE;\n}\nif(s.last_lit){\n/*** FLUSH_BLOCK(s, 0); ***/\nflush_block_only(s,false);\nif(s.strm.avail_out===0){\nreturn BS_NEED_MORE;\n}\n/***/\n}\nreturn BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length,max_lazy,nice_length,max_chain,func){\nthis.good_length=good_length;\nthis.max_lazy=max_lazy;\nthis.nice_length=nice_length;\nthis.max_chain=max_chain;\nthis.func=func;\n}\n\nvar configuration_table;\n\nconfiguration_table=[\n/*      good lazy nice chain */\nnew Config(0,0,0,0,deflate_stored),/* 0 store only */\nnew Config(4,4,8,4,deflate_fast),/* 1 max speed, no lazy matches */\nnew Config(4,5,16,8,deflate_fast),/* 2 */\nnew Config(4,6,32,32,deflate_fast),/* 3 */\n\nnew Config(4,4,16,16,deflate_slow),/* 4 lazy matches */\nnew Config(8,16,32,32,deflate_slow),/* 5 */\nnew Config(8,16,128,128,deflate_slow),/* 6 */\nnew Config(8,32,128,256,deflate_slow),/* 7 */\nnew Config(32,128,258,1024,deflate_slow),/* 8 */\nnew Config(32,258,258,4096,deflate_slow)/* 9 max compression */];\n\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s){\ns.window_size=2*s.w_size;\n\n/*** CLEAR_HASH(s); ***/\nzero(s.head);// Fill with NIL (= 0);\n\n/* Set the default configuration parameters:\n   */\ns.max_lazy_match=configuration_table[s.level].max_lazy;\ns.good_match=configuration_table[s.level].good_length;\ns.nice_match=configuration_table[s.level].nice_length;\ns.max_chain_length=configuration_table[s.level].max_chain;\n\ns.strstart=0;\ns.block_start=0;\ns.lookahead=0;\ns.insert=0;\ns.match_length=s.prev_length=MIN_MATCH-1;\ns.match_available=0;\ns.ins_h=0;\n}\n\n\nfunction DeflateState(){\nthis.strm=null;/* pointer back to this zlib stream */\nthis.status=0;/* as the name implies */\nthis.pending_buf=null;/* output still pending */\nthis.pending_buf_size=0;/* size of pending_buf */\nthis.pending_out=0;/* next pending byte to output to the stream */\nthis.pending=0;/* nb of bytes in the pending buffer */\nthis.wrap=0;/* bit 0 true for zlib, bit 1 true for gzip */\nthis.gzhead=null;/* gzip header information to write */\nthis.gzindex=0;/* where in extra, name, or comment */\nthis.method=Z_DEFLATED;/* can only be DEFLATED */\nthis.last_flush=-1;/* value of flush param for previous deflate call */\n\nthis.w_size=0;/* LZ77 window size (32K by default) */\nthis.w_bits=0;/* log2(w_size)  (8..16) */\nthis.w_mask=0;/* w_size - 1 */\n\nthis.window=null;\n/* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\nthis.window_size=0;\n/* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\nthis.prev=null;\n/* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\nthis.head=null;/* Heads of the hash chains or NIL. */\n\nthis.ins_h=0;/* hash index of string to be inserted */\nthis.hash_size=0;/* number of elements in hash table */\nthis.hash_bits=0;/* log2(hash_size) */\nthis.hash_mask=0;/* hash_size-1 */\n\nthis.hash_shift=0;\n/* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\nthis.block_start=0;\n/* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\nthis.match_length=0;/* length of best match */\nthis.prev_match=0;/* previous match */\nthis.match_available=0;/* set if previous match exists */\nthis.strstart=0;/* start of string to insert */\nthis.match_start=0;/* start of matching string */\nthis.lookahead=0;/* number of valid bytes ahead in window */\n\nthis.prev_length=0;\n/* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\nthis.max_chain_length=0;\n/* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\nthis.max_lazy_match=0;\n/* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n// That's alias to max_lazy_match, don't use directly\n//this.max_insert_length = 0;\n/* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\nthis.level=0;/* compression level (1..9) */\nthis.strategy=0;/* favor or force Huffman coding*/\n\nthis.good_match=0;\n/* Use a faster search when the previous match is longer than this */\n\nthis.nice_match=0;/* Stop searching when current match exceeds this */\n\n/* used by trees.c: */\n\n/* Didn't use ct_data typedef below to suppress compiler warning */\n\n// struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n// struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n// struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n// Use flat array of DOUBLE size, with interleaved fata,\n// because JS does not support effective\nthis.dyn_ltree=new utils.Buf16(HEAP_SIZE*2);\nthis.dyn_dtree=new utils.Buf16((2*D_CODES+1)*2);\nthis.bl_tree=new utils.Buf16((2*BL_CODES+1)*2);\nzero(this.dyn_ltree);\nzero(this.dyn_dtree);\nzero(this.bl_tree);\n\nthis.l_desc=null;/* desc. for literal tree */\nthis.d_desc=null;/* desc. for distance tree */\nthis.bl_desc=null;/* desc. for bit length tree */\n\n//ush bl_count[MAX_BITS+1];\nthis.bl_count=new utils.Buf16(MAX_BITS+1);\n/* number of codes at each bit length for an optimal tree */\n\n//int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\nthis.heap=new utils.Buf16(2*L_CODES+1);/* heap used to build the Huffman trees */\nzero(this.heap);\n\nthis.heap_len=0;/* number of elements in the heap */\nthis.heap_max=0;/* element of largest frequency */\n/* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\nthis.depth=new utils.Buf16(2*L_CODES+1);//uch depth[2*L_CODES+1];\nzero(this.depth);\n/* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\nthis.l_buf=0;/* buffer index for literals or lengths */\n\nthis.lit_bufsize=0;\n/* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\nthis.last_lit=0;/* running index in l_buf */\n\nthis.d_buf=0;\n/* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\nthis.opt_len=0;/* bit length of current block with optimal trees */\nthis.static_len=0;/* bit length of current block with static trees */\nthis.matches=0;/* number of string matches in current block */\nthis.insert=0;/* bytes at end of window left to insert */\n\n\nthis.bi_buf=0;\n/* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\nthis.bi_valid=0;\n/* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n// Used for window memory init. We safely ignore it for JS. That makes\n// sense only for pointers and memory check tools.\n//this.high_water = 0;\n/* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm){\nvar s;\n\nif(!strm||!strm.state){\nreturn err(strm,Z_STREAM_ERROR);\n}\n\nstrm.total_in=strm.total_out=0;\nstrm.data_type=Z_UNKNOWN;\n\ns=strm.state;\ns.pending=0;\ns.pending_out=0;\n\nif(s.wrap<0){\ns.wrap=-s.wrap;\n/* was made negative by deflate(..., Z_FINISH); */\n}\ns.status=s.wrap?INIT_STATE:BUSY_STATE;\nstrm.adler=s.wrap===2?\n0// crc32(0, Z_NULL, 0)\n:\n1;// adler32(0, Z_NULL, 0)\ns.last_flush=Z_NO_FLUSH;\ntrees._tr_init(s);\nreturn Z_OK;\n}\n\n\nfunction deflateReset(strm){\nvar ret=deflateResetKeep(strm);\nif(ret===Z_OK){\nlm_init(strm.state);\n}\nreturn ret;\n}\n\n\nfunction deflateSetHeader(strm,head){\nif(!strm||!strm.state){return Z_STREAM_ERROR;}\nif(strm.state.wrap!==2){return Z_STREAM_ERROR;}\nstrm.state.gzhead=head;\nreturn Z_OK;\n}\n\n\nfunction deflateInit2(strm,level,method,windowBits,memLevel,strategy){\nif(!strm){// === Z_NULL\nreturn Z_STREAM_ERROR;\n}\nvar wrap=1;\n\nif(level===Z_DEFAULT_COMPRESSION){\nlevel=6;\n}\n\nif(windowBits<0){/* suppress zlib wrapper */\nwrap=0;\nwindowBits=-windowBits;\n}else\n\nif(windowBits>15){\nwrap=2;/* write gzip wrapper instead */\nwindowBits-=16;\n}\n\n\nif(memLevel<1||memLevel>MAX_MEM_LEVEL||method!==Z_DEFLATED||\nwindowBits<8||windowBits>15||level<0||level>9||\nstrategy<0||strategy>Z_FIXED){\nreturn err(strm,Z_STREAM_ERROR);\n}\n\n\nif(windowBits===8){\nwindowBits=9;\n}\n/* until 256-byte window bug fixed */\n\nvar s=new DeflateState();\n\nstrm.state=s;\ns.strm=strm;\n\ns.wrap=wrap;\ns.gzhead=null;\ns.w_bits=windowBits;\ns.w_size=1<<s.w_bits;\ns.w_mask=s.w_size-1;\n\ns.hash_bits=memLevel+7;\ns.hash_size=1<<s.hash_bits;\ns.hash_mask=s.hash_size-1;\ns.hash_shift=~~((s.hash_bits+MIN_MATCH-1)/MIN_MATCH);\n\ns.window=new utils.Buf8(s.w_size*2);\ns.head=new utils.Buf16(s.hash_size);\ns.prev=new utils.Buf16(s.w_size);\n\n// Don't need mem init magic for JS.\n//s.high_water = 0;  /* nothing written to s->window yet */\n\ns.lit_bufsize=1<<memLevel+6;/* 16K elements by default */\n\ns.pending_buf_size=s.lit_bufsize*4;\n\n//overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n//s->pending_buf = (uchf *) overlay;\ns.pending_buf=new utils.Buf8(s.pending_buf_size);\n\n// It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n//s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\ns.d_buf=1*s.lit_bufsize;\n\n//s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\ns.l_buf=(1+2)*s.lit_bufsize;\n\ns.level=level;\ns.strategy=strategy;\ns.method=method;\n\nreturn deflateReset(strm);\n}\n\nfunction deflateInit(strm,level){\nreturn deflateInit2(strm,level,Z_DEFLATED,MAX_WBITS,DEF_MEM_LEVEL,Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm,flush){\nvar old_flush,s;\nvar beg,val;// for gzip header write only\n\nif(!strm||!strm.state||\nflush>Z_BLOCK||flush<0){\nreturn strm?err(strm,Z_STREAM_ERROR):Z_STREAM_ERROR;\n}\n\ns=strm.state;\n\nif(!strm.output||\n!strm.input&&strm.avail_in!==0||\ns.status===FINISH_STATE&&flush!==Z_FINISH){\nreturn err(strm,strm.avail_out===0?Z_BUF_ERROR:Z_STREAM_ERROR);\n}\n\ns.strm=strm;/* just in case */\nold_flush=s.last_flush;\ns.last_flush=flush;\n\n/* Write the header */\nif(s.status===INIT_STATE){\n\nif(s.wrap===2){// GZIP header\nstrm.adler=0;//crc32(0L, Z_NULL, 0);\nput_byte(s,31);\nput_byte(s,139);\nput_byte(s,8);\nif(!s.gzhead){// s->gzhead == Z_NULL\nput_byte(s,0);\nput_byte(s,0);\nput_byte(s,0);\nput_byte(s,0);\nput_byte(s,0);\nput_byte(s,s.level===9?2:\ns.strategy>=Z_HUFFMAN_ONLY||s.level<2?\n4:0);\nput_byte(s,OS_CODE);\ns.status=BUSY_STATE;\n}else\n{\nput_byte(s,(s.gzhead.text?1:0)+(\ns.gzhead.hcrc?2:0)+(\n!s.gzhead.extra?0:4)+(\n!s.gzhead.name?0:8)+(\n!s.gzhead.comment?0:16));\n\nput_byte(s,s.gzhead.time&0xff);\nput_byte(s,s.gzhead.time>>8&0xff);\nput_byte(s,s.gzhead.time>>16&0xff);\nput_byte(s,s.gzhead.time>>24&0xff);\nput_byte(s,s.level===9?2:\ns.strategy>=Z_HUFFMAN_ONLY||s.level<2?\n4:0);\nput_byte(s,s.gzhead.os&0xff);\nif(s.gzhead.extra&&s.gzhead.extra.length){\nput_byte(s,s.gzhead.extra.length&0xff);\nput_byte(s,s.gzhead.extra.length>>8&0xff);\n}\nif(s.gzhead.hcrc){\nstrm.adler=crc32(strm.adler,s.pending_buf,s.pending,0);\n}\ns.gzindex=0;\ns.status=EXTRA_STATE;\n}\n}else\n// DEFLATE header\n{\nvar header=Z_DEFLATED+(s.w_bits-8<<4)<<8;\nvar level_flags=-1;\n\nif(s.strategy>=Z_HUFFMAN_ONLY||s.level<2){\nlevel_flags=0;\n}else if(s.level<6){\nlevel_flags=1;\n}else if(s.level===6){\nlevel_flags=2;\n}else{\nlevel_flags=3;\n}\nheader|=level_flags<<6;\nif(s.strstart!==0){header|=PRESET_DICT;}\nheader+=31-header%31;\n\ns.status=BUSY_STATE;\nputShortMSB(s,header);\n\n/* Save the adler32 of the preset dictionary: */\nif(s.strstart!==0){\nputShortMSB(s,strm.adler>>>16);\nputShortMSB(s,strm.adler&0xffff);\n}\nstrm.adler=1;// adler32(0L, Z_NULL, 0);\n}\n}\n\n//#ifdef GZIP\nif(s.status===EXTRA_STATE){\nif(s.gzhead.extra/* != Z_NULL*/){\nbeg=s.pending;/* start of bytes to update crc */\n\nwhile(s.gzindex<(s.gzhead.extra.length&0xffff)){\nif(s.pending===s.pending_buf_size){\nif(s.gzhead.hcrc&&s.pending>beg){\nstrm.adler=crc32(strm.adler,s.pending_buf,s.pending-beg,beg);\n}\nflush_pending(strm);\nbeg=s.pending;\nif(s.pending===s.pending_buf_size){\nbreak;\n}\n}\nput_byte(s,s.gzhead.extra[s.gzindex]&0xff);\ns.gzindex++;\n}\nif(s.gzhead.hcrc&&s.pending>beg){\nstrm.adler=crc32(strm.adler,s.pending_buf,s.pending-beg,beg);\n}\nif(s.gzindex===s.gzhead.extra.length){\ns.gzindex=0;\ns.status=NAME_STATE;\n}\n}else\n{\ns.status=NAME_STATE;\n}\n}\nif(s.status===NAME_STATE){\nif(s.gzhead.name/* != Z_NULL*/){\nbeg=s.pending;/* start of bytes to update crc */\n//int val;\n\ndo{\nif(s.pending===s.pending_buf_size){\nif(s.gzhead.hcrc&&s.pending>beg){\nstrm.adler=crc32(strm.adler,s.pending_buf,s.pending-beg,beg);\n}\nflush_pending(strm);\nbeg=s.pending;\nif(s.pending===s.pending_buf_size){\nval=1;\nbreak;\n}\n}\n// JS specific: little magic to add zero terminator to end of string\nif(s.gzindex<s.gzhead.name.length){\nval=s.gzhead.name.charCodeAt(s.gzindex++)&0xff;\n}else{\nval=0;\n}\nput_byte(s,val);\n}while(val!==0);\n\nif(s.gzhead.hcrc&&s.pending>beg){\nstrm.adler=crc32(strm.adler,s.pending_buf,s.pending-beg,beg);\n}\nif(val===0){\ns.gzindex=0;\ns.status=COMMENT_STATE;\n}\n}else\n{\ns.status=COMMENT_STATE;\n}\n}\nif(s.status===COMMENT_STATE){\nif(s.gzhead.comment/* != Z_NULL*/){\nbeg=s.pending;/* start of bytes to update crc */\n//int val;\n\ndo{\nif(s.pending===s.pending_buf_size){\nif(s.gzhead.hcrc&&s.pending>beg){\nstrm.adler=crc32(strm.adler,s.pending_buf,s.pending-beg,beg);\n}\nflush_pending(strm);\nbeg=s.pending;\nif(s.pending===s.pending_buf_size){\nval=1;\nbreak;\n}\n}\n// JS specific: little magic to add zero terminator to end of string\nif(s.gzindex<s.gzhead.comment.length){\nval=s.gzhead.comment.charCodeAt(s.gzindex++)&0xff;\n}else{\nval=0;\n}\nput_byte(s,val);\n}while(val!==0);\n\nif(s.gzhead.hcrc&&s.pending>beg){\nstrm.adler=crc32(strm.adler,s.pending_buf,s.pending-beg,beg);\n}\nif(val===0){\ns.status=HCRC_STATE;\n}\n}else\n{\ns.status=HCRC_STATE;\n}\n}\nif(s.status===HCRC_STATE){\nif(s.gzhead.hcrc){\nif(s.pending+2>s.pending_buf_size){\nflush_pending(strm);\n}\nif(s.pending+2<=s.pending_buf_size){\nput_byte(s,strm.adler&0xff);\nput_byte(s,strm.adler>>8&0xff);\nstrm.adler=0;//crc32(0L, Z_NULL, 0);\ns.status=BUSY_STATE;\n}\n}else\n{\ns.status=BUSY_STATE;\n}\n}\n//#endif\n\n/* Flush as much pending output as possible */\nif(s.pending!==0){\nflush_pending(strm);\nif(strm.avail_out===0){\n/* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\ns.last_flush=-1;\nreturn Z_OK;\n}\n\n/* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n}else if(strm.avail_in===0&&rank(flush)<=rank(old_flush)&&\nflush!==Z_FINISH){\nreturn err(strm,Z_BUF_ERROR);\n}\n\n/* User must not provide more input after the first FINISH: */\nif(s.status===FINISH_STATE&&strm.avail_in!==0){\nreturn err(strm,Z_BUF_ERROR);\n}\n\n/* Start a new block or continue the current one.\n   */\nif(strm.avail_in!==0||s.lookahead!==0||\nflush!==Z_NO_FLUSH&&s.status!==FINISH_STATE){\nvar bstate=s.strategy===Z_HUFFMAN_ONLY?deflate_huff(s,flush):\ns.strategy===Z_RLE?deflate_rle(s,flush):\nconfiguration_table[s.level].func(s,flush);\n\nif(bstate===BS_FINISH_STARTED||bstate===BS_FINISH_DONE){\ns.status=FINISH_STATE;\n}\nif(bstate===BS_NEED_MORE||bstate===BS_FINISH_STARTED){\nif(strm.avail_out===0){\ns.last_flush=-1;\n/* avoid BUF_ERROR next call, see above */\n}\nreturn Z_OK;\n/* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n}\nif(bstate===BS_BLOCK_DONE){\nif(flush===Z_PARTIAL_FLUSH){\ntrees._tr_align(s);\n}else\nif(flush!==Z_BLOCK){/* FULL_FLUSH or SYNC_FLUSH */\n\ntrees._tr_stored_block(s,0,0,false);\n/* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\nif(flush===Z_FULL_FLUSH){\n/*** CLEAR_HASH(s); ***/ /* forget history */\nzero(s.head);// Fill with NIL (= 0);\n\nif(s.lookahead===0){\ns.strstart=0;\ns.block_start=0;\ns.insert=0;\n}\n}\n}\nflush_pending(strm);\nif(strm.avail_out===0){\ns.last_flush=-1;/* avoid BUF_ERROR at next call, see above */\nreturn Z_OK;\n}\n}\n}\n//Assert(strm->avail_out > 0, \"bug2\");\n//if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\nif(flush!==Z_FINISH){return Z_OK;}\nif(s.wrap<=0){return Z_STREAM_END;}\n\n/* Write the trailer */\nif(s.wrap===2){\nput_byte(s,strm.adler&0xff);\nput_byte(s,strm.adler>>8&0xff);\nput_byte(s,strm.adler>>16&0xff);\nput_byte(s,strm.adler>>24&0xff);\nput_byte(s,strm.total_in&0xff);\nput_byte(s,strm.total_in>>8&0xff);\nput_byte(s,strm.total_in>>16&0xff);\nput_byte(s,strm.total_in>>24&0xff);\n}else\n\n{\nputShortMSB(s,strm.adler>>>16);\nputShortMSB(s,strm.adler&0xffff);\n}\n\nflush_pending(strm);\n/* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\nif(s.wrap>0){s.wrap=-s.wrap;}\n/* write the trailer only once! */\nreturn s.pending!==0?Z_OK:Z_STREAM_END;\n}\n\nfunction deflateEnd(strm){\nvar status;\n\nif(!strm/*== Z_NULL*/||!strm.state/*== Z_NULL*/){\nreturn Z_STREAM_ERROR;\n}\n\nstatus=strm.state.status;\nif(status!==INIT_STATE&&\nstatus!==EXTRA_STATE&&\nstatus!==NAME_STATE&&\nstatus!==COMMENT_STATE&&\nstatus!==HCRC_STATE&&\nstatus!==BUSY_STATE&&\nstatus!==FINISH_STATE)\n{\nreturn err(strm,Z_STREAM_ERROR);\n}\n\nstrm.state=null;\n\nreturn status===BUSY_STATE?err(strm,Z_DATA_ERROR):Z_OK;\n}\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nfunction deflateSetDictionary(strm,dictionary){\nvar dictLength=dictionary.length;\n\nvar s;\nvar str,n;\nvar wrap;\nvar avail;\nvar next;\nvar input;\nvar tmpDict;\n\nif(!strm/*== Z_NULL*/||!strm.state/*== Z_NULL*/){\nreturn Z_STREAM_ERROR;\n}\n\ns=strm.state;\nwrap=s.wrap;\n\nif(wrap===2||wrap===1&&s.status!==INIT_STATE||s.lookahead){\nreturn Z_STREAM_ERROR;\n}\n\n/* when using zlib wrappers, compute Adler-32 for provided dictionary */\nif(wrap===1){\n/* adler32(strm->adler, dictionary, dictLength); */\nstrm.adler=adler32(strm.adler,dictionary,dictLength,0);\n}\n\ns.wrap=0;/* avoid computing Adler-32 in read_buf */\n\n/* if dictionary would fill window, just replace the history */\nif(dictLength>=s.w_size){\nif(wrap===0){/* already empty otherwise */\n/*** CLEAR_HASH(s); ***/\nzero(s.head);// Fill with NIL (= 0);\ns.strstart=0;\ns.block_start=0;\ns.insert=0;\n}\n/* use the tail */\n// dictionary = dictionary.slice(dictLength - s.w_size);\ntmpDict=new utils.Buf8(s.w_size);\nutils.arraySet(tmpDict,dictionary,dictLength-s.w_size,s.w_size,0);\ndictionary=tmpDict;\ndictLength=s.w_size;\n}\n/* insert dictionary into window and hash */\navail=strm.avail_in;\nnext=strm.next_in;\ninput=strm.input;\nstrm.avail_in=dictLength;\nstrm.next_in=0;\nstrm.input=dictionary;\nfill_window(s);\nwhile(s.lookahead>=MIN_MATCH){\nstr=s.strstart;\nn=s.lookahead-(MIN_MATCH-1);\ndo{\n/* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\ns.ins_h=(s.ins_h<<s.hash_shift^s.window[str+MIN_MATCH-1])&s.hash_mask;\n\ns.prev[str&s.w_mask]=s.head[s.ins_h];\n\ns.head[s.ins_h]=str;\nstr++;\n}while(--n);\ns.strstart=str;\ns.lookahead=MIN_MATCH-1;\nfill_window(s);\n}\ns.strstart+=s.lookahead;\ns.block_start=s.strstart;\ns.insert=s.lookahead;\ns.lookahead=0;\ns.match_length=s.prev_length=MIN_MATCH-1;\ns.match_available=0;\nstrm.next_in=next;\nstrm.input=input;\nstrm.avail_in=avail;\ns.wrap=wrap;\nreturn Z_OK;\n}\n\n\nexports.deflateInit=deflateInit;\nexports.deflateInit2=deflateInit2;\nexports.deflateReset=deflateReset;\nexports.deflateResetKeep=deflateResetKeep;\nexports.deflateSetHeader=deflateSetHeader;\nexports.deflate=deflate;\nexports.deflateEnd=deflateEnd;\nexports.deflateSetDictionary=deflateSetDictionary;\nexports.deflateInfo='pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n\n},{\"../utils/common\":179,\"./adler32\":181,\"./crc32\":183,\"./messages\":189,\"./trees\":190}],185:[function(require,module,exports){\n'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader(){\n/* true if compressed data believed to be text */\nthis.text=0;\n/* modification time */\nthis.time=0;\n/* extra flags (not used when writing a gzip file) */\nthis.xflags=0;\n/* operating system */\nthis.os=0;\n/* pointer to extra field or Z_NULL if none */\nthis.extra=null;\n/* extra field length (valid if extra != Z_NULL) */\nthis.extra_len=0;// Actually, we don't need it in JS,\n// but leave for few code modifications\n\n//\n// Setup limits is not necessary because in js we should not preallocate memory\n// for inflate use constant limit in 65536 bytes\n//\n\n/* space at extra (only when reading header) */\n// this.extra_max  = 0;\n/* pointer to zero-terminated file name or Z_NULL */\nthis.name='';\n/* space at name (only when reading header) */\n// this.name_max   = 0;\n/* pointer to zero-terminated comment or Z_NULL */\nthis.comment='';\n/* space at comment (only when reading header) */\n// this.comm_max   = 0;\n/* true if there was or will be a header crc */\nthis.hcrc=0;\n/* true when done reading gzip header (not used when writing a gzip file) */\nthis.done=false;\n}\n\nmodule.exports=GZheader;\n\n},{}],186:[function(require,module,exports){\n'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nvar BAD=30;/* got a data error -- remain here until reset */\nvar TYPE=12;/* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports=function inflate_fast(strm,start){\nvar state;\nvar _in;/* local strm.input */\nvar last;/* have enough input while in < last */\nvar _out;/* local strm.output */\nvar beg;/* inflate()'s initial strm.output */\nvar end;/* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\nvar dmax;/* maximum distance from zlib header */\n//#endif\nvar wsize;/* window size or zero if not using window */\nvar whave;/* valid bytes in the window */\nvar wnext;/* window write index */\n// Use `s_window` instead `window`, avoid conflict with instrumentation tools\nvar s_window;/* allocated sliding window, if wsize != 0 */\nvar hold;/* local strm.hold */\nvar bits;/* local strm.bits */\nvar lcode;/* local strm.lencode */\nvar dcode;/* local strm.distcode */\nvar lmask;/* mask for first level of length codes */\nvar dmask;/* mask for first level of distance codes */\nvar here;/* retrieved table entry */\nvar op;/* code bits, operation, extra bits, or */\n/*  window position, window bytes to copy */\nvar len;/* match length, unused bytes */\nvar dist;/* match distance */\nvar from;/* where to copy match from */\nvar from_source;\n\n\nvar input,output;// JS specific, because we have no pointers\n\n/* copy state to local variables */\nstate=strm.state;\n//here = state.here;\n_in=strm.next_in;\ninput=strm.input;\nlast=_in+(strm.avail_in-5);\n_out=strm.next_out;\noutput=strm.output;\nbeg=_out-(start-strm.avail_out);\nend=_out+(strm.avail_out-257);\n//#ifdef INFLATE_STRICT\ndmax=state.dmax;\n//#endif\nwsize=state.wsize;\nwhave=state.whave;\nwnext=state.wnext;\ns_window=state.window;\nhold=state.hold;\nbits=state.bits;\nlcode=state.lencode;\ndcode=state.distcode;\nlmask=(1<<state.lenbits)-1;\ndmask=(1<<state.distbits)-1;\n\n\n/* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\ntop:\ndo{\nif(bits<15){\nhold+=input[_in++]<<bits;\nbits+=8;\nhold+=input[_in++]<<bits;\nbits+=8;\n}\n\nhere=lcode[hold&lmask];\n\ndolen:\nfor(;;){// Goto emulation\nop=here>>>24/*here.bits*/;\nhold>>>=op;\nbits-=op;\nop=here>>>16&0xff/*here.op*/;\nif(op===0){/* literal */\n//Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n//        \"inflate:         literal '%c'\\n\" :\n//        \"inflate:         literal 0x%02x\\n\", here.val));\noutput[_out++]=here&0xffff/*here.val*/;\n}else\nif(op&16){/* length base */\nlen=here&0xffff/*here.val*/;\nop&=15;/* number of extra bits */\nif(op){\nif(bits<op){\nhold+=input[_in++]<<bits;\nbits+=8;\n}\nlen+=hold&(1<<op)-1;\nhold>>>=op;\nbits-=op;\n}\n//Tracevv((stderr, \"inflate:         length %u\\n\", len));\nif(bits<15){\nhold+=input[_in++]<<bits;\nbits+=8;\nhold+=input[_in++]<<bits;\nbits+=8;\n}\nhere=dcode[hold&dmask];\n\ndodist:\nfor(;;){// goto emulation\nop=here>>>24/*here.bits*/;\nhold>>>=op;\nbits-=op;\nop=here>>>16&0xff/*here.op*/;\n\nif(op&16){/* distance base */\ndist=here&0xffff/*here.val*/;\nop&=15;/* number of extra bits */\nif(bits<op){\nhold+=input[_in++]<<bits;\nbits+=8;\nif(bits<op){\nhold+=input[_in++]<<bits;\nbits+=8;\n}\n}\ndist+=hold&(1<<op)-1;\n//#ifdef INFLATE_STRICT\nif(dist>dmax){\nstrm.msg='invalid distance too far back';\nstate.mode=BAD;\nbreak top;\n}\n//#endif\nhold>>>=op;\nbits-=op;\n//Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\nop=_out-beg;/* max distance in output */\nif(dist>op){/* see if copy from window */\nop=dist-op;/* distance back in window */\nif(op>whave){\nif(state.sane){\nstrm.msg='invalid distance too far back';\nstate.mode=BAD;\nbreak top;\n}\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n}\nfrom=0;// window index\nfrom_source=s_window;\nif(wnext===0){/* very common case */\nfrom+=wsize-op;\nif(op<len){/* some from window */\nlen-=op;\ndo{\noutput[_out++]=s_window[from++];\n}while(--op);\nfrom=_out-dist;/* rest from output */\nfrom_source=output;\n}\n}else\nif(wnext<op){/* wrap around window */\nfrom+=wsize+wnext-op;\nop-=wnext;\nif(op<len){/* some from end of window */\nlen-=op;\ndo{\noutput[_out++]=s_window[from++];\n}while(--op);\nfrom=0;\nif(wnext<len){/* some from start of window */\nop=wnext;\nlen-=op;\ndo{\noutput[_out++]=s_window[from++];\n}while(--op);\nfrom=_out-dist;/* rest from output */\nfrom_source=output;\n}\n}\n}else\n{/* contiguous in window */\nfrom+=wnext-op;\nif(op<len){/* some from window */\nlen-=op;\ndo{\noutput[_out++]=s_window[from++];\n}while(--op);\nfrom=_out-dist;/* rest from output */\nfrom_source=output;\n}\n}\nwhile(len>2){\noutput[_out++]=from_source[from++];\noutput[_out++]=from_source[from++];\noutput[_out++]=from_source[from++];\nlen-=3;\n}\nif(len){\noutput[_out++]=from_source[from++];\nif(len>1){\noutput[_out++]=from_source[from++];\n}\n}\n}else\n{\nfrom=_out-dist;/* copy direct from output */\ndo{/* minimum length is three */\noutput[_out++]=output[from++];\noutput[_out++]=output[from++];\noutput[_out++]=output[from++];\nlen-=3;\n}while(len>2);\nif(len){\noutput[_out++]=output[from++];\nif(len>1){\noutput[_out++]=output[from++];\n}\n}\n}\n}else\nif((op&64)===0){/* 2nd level distance code */\nhere=dcode[(here&0xffff)+(/*here.val*/hold&(1<<op)-1)];\ncontinue dodist;\n}else\n{\nstrm.msg='invalid distance code';\nstate.mode=BAD;\nbreak top;\n}\n\nbreak;// need to emulate goto via \"continue\"\n}\n}else\nif((op&64)===0){/* 2nd level length code */\nhere=lcode[(here&0xffff)+(/*here.val*/hold&(1<<op)-1)];\ncontinue dolen;\n}else\nif(op&32){/* end-of-block */\n//Tracevv((stderr, \"inflate:         end of block\\n\"));\nstate.mode=TYPE;\nbreak top;\n}else\n{\nstrm.msg='invalid literal/length code';\nstate.mode=BAD;\nbreak top;\n}\n\nbreak;// need to emulate goto via \"continue\"\n}\n}while(_in<last&&_out<end);\n\n/* return unused bytes (on entry, bits < 8, so in won't go too far back) */\nlen=bits>>3;\n_in-=len;\nbits-=len<<3;\nhold&=(1<<bits)-1;\n\n/* update state and return */\nstrm.next_in=_in;\nstrm.next_out=_out;\nstrm.avail_in=_in<last?5+(last-_in):5-(_in-last);\nstrm.avail_out=_out<end?257+(end-_out):257-(_out-end);\nstate.hold=hold;\nstate.bits=bits;\nreturn;\n};\n\n},{}],187:[function(require,module,exports){\n'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils=require('../utils/common');\nvar adler32=require('./adler32');\nvar crc32=require('./crc32');\nvar inflate_fast=require('./inffast');\nvar inflate_table=require('./inftrees');\n\nvar CODES=0;\nvar LENS=1;\nvar DISTS=2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH=4;\nvar Z_BLOCK=5;\nvar Z_TREES=6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK=0;\nvar Z_STREAM_END=1;\nvar Z_NEED_DICT=2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR=-2;\nvar Z_DATA_ERROR=-3;\nvar Z_MEM_ERROR=-4;\nvar Z_BUF_ERROR=-5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED=8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar HEAD=1;/* i: waiting for magic header */\nvar FLAGS=2;/* i: waiting for method and flags (gzip) */\nvar TIME=3;/* i: waiting for modification time (gzip) */\nvar OS=4;/* i: waiting for extra flags and operating system (gzip) */\nvar EXLEN=5;/* i: waiting for extra length (gzip) */\nvar EXTRA=6;/* i: waiting for extra bytes (gzip) */\nvar NAME=7;/* i: waiting for end of file name (gzip) */\nvar COMMENT=8;/* i: waiting for end of comment (gzip) */\nvar HCRC=9;/* i: waiting for header crc (gzip) */\nvar DICTID=10;/* i: waiting for dictionary check value */\nvar DICT=11;/* waiting for inflateSetDictionary() call */\nvar TYPE=12;/* i: waiting for type bits, including last-flag bit */\nvar TYPEDO=13;/* i: same, but skip check to exit inflate on new block */\nvar STORED=14;/* i: waiting for stored size (length and complement) */\nvar COPY_=15;/* i/o: same as COPY below, but only first time in */\nvar COPY=16;/* i/o: waiting for input or output to copy stored block */\nvar TABLE=17;/* i: waiting for dynamic block table lengths */\nvar LENLENS=18;/* i: waiting for code length code lengths */\nvar CODELENS=19;/* i: waiting for length/lit and distance code lengths */\nvar LEN_=20;/* i: same as LEN below, but only first time in */\nvar LEN=21;/* i: waiting for length/lit/eob code */\nvar LENEXT=22;/* i: waiting for length extra bits */\nvar DIST=23;/* i: waiting for distance code */\nvar DISTEXT=24;/* i: waiting for distance extra bits */\nvar MATCH=25;/* o: waiting for output space to copy string */\nvar LIT=26;/* o: waiting for output space to write literal */\nvar CHECK=27;/* i: waiting for 32-bit check value */\nvar LENGTH=28;/* i: waiting for 32-bit length (gzip) */\nvar DONE=29;/* finished check, done -- remain here until reset */\nvar BAD=30;/* got a data error -- remain here until reset */\nvar MEM=31;/* got an inflate() memory error -- remain here until reset */\nvar SYNC=32;/* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS=852;\nvar ENOUGH_DISTS=592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS=15;\n/* 32K LZ77 window */\nvar DEF_WBITS=MAX_WBITS;\n\n\nfunction zswap32(q){\nreturn(q>>>24&0xff)+(\nq>>>8&0xff00)+(\n(q&0xff00)<<8)+(\n(q&0xff)<<24);\n}\n\n\nfunction InflateState(){\nthis.mode=0;/* current inflate mode */\nthis.last=false;/* true if processing last block */\nthis.wrap=0;/* bit 0 true for zlib, bit 1 true for gzip */\nthis.havedict=false;/* true if dictionary provided */\nthis.flags=0;/* gzip header method and flags (0 if zlib) */\nthis.dmax=0;/* zlib header max distance (INFLATE_STRICT) */\nthis.check=0;/* protected copy of check value */\nthis.total=0;/* protected copy of output count */\n// TODO: may be {}\nthis.head=null;/* where to save gzip header information */\n\n/* sliding window */\nthis.wbits=0;/* log base 2 of requested window size */\nthis.wsize=0;/* window size or zero if not using window */\nthis.whave=0;/* valid bytes in the window */\nthis.wnext=0;/* window write index */\nthis.window=null;/* allocated sliding window, if needed */\n\n/* bit accumulator */\nthis.hold=0;/* input bit accumulator */\nthis.bits=0;/* number of bits in \"in\" */\n\n/* for string and stored block copying */\nthis.length=0;/* literal or length of data to copy */\nthis.offset=0;/* distance back to copy string from */\n\n/* for table and code decoding */\nthis.extra=0;/* extra bits needed */\n\n/* fixed and dynamic code tables */\nthis.lencode=null;/* starting table for length/literal codes */\nthis.distcode=null;/* starting table for distance codes */\nthis.lenbits=0;/* index bits for lencode */\nthis.distbits=0;/* index bits for distcode */\n\n/* dynamic table building */\nthis.ncode=0;/* number of code length code lengths */\nthis.nlen=0;/* number of length code lengths */\nthis.ndist=0;/* number of distance code lengths */\nthis.have=0;/* number of code lengths in lens[] */\nthis.next=null;/* next available space in codes[] */\n\nthis.lens=new utils.Buf16(320);/* temporary storage for code lengths */\nthis.work=new utils.Buf16(288);/* work area for code table building */\n\n/*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n//this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\nthis.lendyn=null;/* dynamic table for length/literal codes (JS specific) */\nthis.distdyn=null;/* dynamic table for distance codes (JS specific) */\nthis.sane=0;/* if false, allow invalid distance too far */\nthis.back=0;/* bits back of last unprocessed length/lit */\nthis.was=0;/* initial length of match */\n}\n\nfunction inflateResetKeep(strm){\nvar state;\n\nif(!strm||!strm.state){return Z_STREAM_ERROR;}\nstate=strm.state;\nstrm.total_in=strm.total_out=state.total=0;\nstrm.msg='';/*Z_NULL*/\nif(state.wrap){/* to support ill-conceived Java test suite */\nstrm.adler=state.wrap&1;\n}\nstate.mode=HEAD;\nstate.last=0;\nstate.havedict=0;\nstate.dmax=32768;\nstate.head=null/*Z_NULL*/;\nstate.hold=0;\nstate.bits=0;\n//state.lencode = state.distcode = state.next = state.codes;\nstate.lencode=state.lendyn=new utils.Buf32(ENOUGH_LENS);\nstate.distcode=state.distdyn=new utils.Buf32(ENOUGH_DISTS);\n\nstate.sane=1;\nstate.back=-1;\n//Tracev((stderr, \"inflate: reset\\n\"));\nreturn Z_OK;\n}\n\nfunction inflateReset(strm){\nvar state;\n\nif(!strm||!strm.state){return Z_STREAM_ERROR;}\nstate=strm.state;\nstate.wsize=0;\nstate.whave=0;\nstate.wnext=0;\nreturn inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm,windowBits){\nvar wrap;\nvar state;\n\n/* get the state */\nif(!strm||!strm.state){return Z_STREAM_ERROR;}\nstate=strm.state;\n\n/* extract wrap request from windowBits parameter */\nif(windowBits<0){\nwrap=0;\nwindowBits=-windowBits;\n}else\n{\nwrap=(windowBits>>4)+1;\nif(windowBits<48){\nwindowBits&=15;\n}\n}\n\n/* set number of window bits, free window if different */\nif(windowBits&&(windowBits<8||windowBits>15)){\nreturn Z_STREAM_ERROR;\n}\nif(state.window!==null&&state.wbits!==windowBits){\nstate.window=null;\n}\n\n/* update state and reset the rest of it */\nstate.wrap=wrap;\nstate.wbits=windowBits;\nreturn inflateReset(strm);\n}\n\nfunction inflateInit2(strm,windowBits){\nvar ret;\nvar state;\n\nif(!strm){return Z_STREAM_ERROR;}\n//strm.msg = Z_NULL;                 /* in case we return an error */\n\nstate=new InflateState();\n\n//if (state === Z_NULL) return Z_MEM_ERROR;\n//Tracev((stderr, \"inflate: allocated\\n\"));\nstrm.state=state;\nstate.window=null/*Z_NULL*/;\nret=inflateReset2(strm,windowBits);\nif(ret!==Z_OK){\nstrm.state=null/*Z_NULL*/;\n}\nreturn ret;\n}\n\nfunction inflateInit(strm){\nreturn inflateInit2(strm,DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin=true;\n\nvar lenfix,distfix;// We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state){\n/* build fixed huffman tables if first call (may not be thread safe) */\nif(virgin){\nvar sym;\n\nlenfix=new utils.Buf32(512);\ndistfix=new utils.Buf32(32);\n\n/* literal/length table */\nsym=0;\nwhile(sym<144){state.lens[sym++]=8;}\nwhile(sym<256){state.lens[sym++]=9;}\nwhile(sym<280){state.lens[sym++]=7;}\nwhile(sym<288){state.lens[sym++]=8;}\n\ninflate_table(LENS,state.lens,0,288,lenfix,0,state.work,{bits:9});\n\n/* distance table */\nsym=0;\nwhile(sym<32){state.lens[sym++]=5;}\n\ninflate_table(DISTS,state.lens,0,32,distfix,0,state.work,{bits:5});\n\n/* do this just once */\nvirgin=false;\n}\n\nstate.lencode=lenfix;\nstate.lenbits=9;\nstate.distcode=distfix;\nstate.distbits=5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm,src,end,copy){\nvar dist;\nvar state=strm.state;\n\n/* if it hasn't been done already, allocate space for the window */\nif(state.window===null){\nstate.wsize=1<<state.wbits;\nstate.wnext=0;\nstate.whave=0;\n\nstate.window=new utils.Buf8(state.wsize);\n}\n\n/* copy state->wsize or less output bytes into the circular window */\nif(copy>=state.wsize){\nutils.arraySet(state.window,src,end-state.wsize,state.wsize,0);\nstate.wnext=0;\nstate.whave=state.wsize;\n}else\n{\ndist=state.wsize-state.wnext;\nif(dist>copy){\ndist=copy;\n}\n//zmemcpy(state->window + state->wnext, end - copy, dist);\nutils.arraySet(state.window,src,end-copy,dist,state.wnext);\ncopy-=dist;\nif(copy){\n//zmemcpy(state->window, end - copy, copy);\nutils.arraySet(state.window,src,end-copy,copy,0);\nstate.wnext=copy;\nstate.whave=state.wsize;\n}else\n{\nstate.wnext+=dist;\nif(state.wnext===state.wsize){state.wnext=0;}\nif(state.whave<state.wsize){state.whave+=dist;}\n}\n}\nreturn 0;\n}\n\nfunction inflate(strm,flush){\nvar state;\nvar input,output;// input/output buffers\nvar next;/* next input INDEX */\nvar put;/* next output INDEX */\nvar have,left;/* available input and output */\nvar hold;/* bit buffer */\nvar bits;/* bits in bit buffer */\nvar _in,_out;/* save starting available input and output */\nvar copy;/* number of stored or match bytes to copy */\nvar from;/* where to copy match bytes from */\nvar from_source;\nvar here=0;/* current decoding table entry */\nvar here_bits,here_op,here_val;// paked \"here\" denormalized (JS specific)\n//var last;                   /* parent table entry */\nvar last_bits,last_op,last_val;// paked \"last\" denormalized (JS specific)\nvar len;/* length to copy for repeats, bits to drop */\nvar ret;/* return code */\nvar hbuf=new utils.Buf8(4);/* buffer for gzip header crc calculation */\nvar opts;\n\nvar n;// temporary var for NEED_BITS\n\nvar order=/* permutation of code lengths */\n[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n\n\nif(!strm||!strm.state||!strm.output||\n!strm.input&&strm.avail_in!==0){\nreturn Z_STREAM_ERROR;\n}\n\nstate=strm.state;\nif(state.mode===TYPE){state.mode=TYPEDO;}/* skip check */\n\n\n//--- LOAD() ---\nput=strm.next_out;\noutput=strm.output;\nleft=strm.avail_out;\nnext=strm.next_in;\ninput=strm.input;\nhave=strm.avail_in;\nhold=state.hold;\nbits=state.bits;\n//---\n\n_in=have;\n_out=left;\nret=Z_OK;\n\ninf_leave:// goto emulation\nfor(;;){\nswitch(state.mode){\ncase HEAD:\nif(state.wrap===0){\nstate.mode=TYPEDO;\nbreak;\n}\n//=== NEEDBITS(16);\nwhile(bits<16){\nif(have===0){break inf_leave;}\nhave--;\nhold+=input[next++]<<bits;\nbits+=8;\n}\n//===//\nif(state.wrap&2&&hold===0x8b1f){/* gzip header */\nstate.check=0/*crc32(0L, Z_NULL, 0)*/;\n//=== CRC2(state.check, hold);\nhbuf[0]=hold&0xff;\nhbuf[1]=hold>>>8&0xff;\nstate.check=crc32(state.check,hbuf,2,0);\n//===//\n\n//=== INITBITS();\nhold=0;\nbits=0;\n//===//\nstate.mode=FLAGS;\nbreak;\n}\nstate.flags=0;/* expect zlib header */\nif(state.head){\nstate.head.done=false;\n}\nif(!(state.wrap&1)||/* check if zlib header allowed */\n(((hold&0xff)<</*BITS(8)*/8)+(hold>>8))%31){\nstrm.msg='incorrect header check';\nstate.mode=BAD;\nbreak;\n}\nif((hold&0x0f)!==/*BITS(4)*/Z_DEFLATED){\nstrm.msg='unknown compression method';\nstate.mode=BAD;\nbreak;\n}\n//--- DROPBITS(4) ---//\nhold>>>=4;\nbits-=4;\n//---//\nlen=(hold&0x0f)+/*BITS(4)*/8;\nif(state.wbits===0){\nstate.wbits=len;\n}else\nif(len>state.wbits){\nstrm.msg='invalid window size';\nstate.mode=BAD;\nbreak;\n}\nstate.dmax=1<<len;\n//Tracev((stderr, \"inflate:   zlib header ok\\n\"));\nstrm.adler=state.check=1/*adler32(0L, Z_NULL, 0)*/;\nstate.mode=hold&0x200?DICTID:TYPE;\n//=== INITBITS();\nhold=0;\nbits=0;\n//===//\nbreak;\ncase FLAGS:\n//=== NEEDBITS(16); */\nwhile(bits<16){\nif(have===0){break inf_leave;}\nhave--;\nhold+=input[next++]<<bits;\nbits+=8;\n}\n//===//\nstate.flags=hold;\nif((state.flags&0xff)!==Z_DEFLATED){\nstrm.msg='unknown compression method';\nstate.mode=BAD;\nbreak;\n}\nif(state.flags&0xe000){\nstrm.msg='unknown header flags set';\nstate.mode=BAD;\nbreak;\n}\nif(state.head){\nstate.head.text=hold>>8&1;\n}\nif(state.flags&0x0200){\n//=== CRC2(state.check, hold);\nhbuf[0]=hold&0xff;\nhbuf[1]=hold>>>8&0xff;\nstate.check=crc32(state.check,hbuf,2,0);\n//===//\n}\n//=== INITBITS();\nhold=0;\nbits=0;\n//===//\nstate.mode=TIME;\n/* falls through */\ncase TIME:\n//=== NEEDBITS(32); */\nwhile(bits<32){\nif(have===0){break inf_leave;}\nhave--;\nhold+=input[next++]<<bits;\nbits+=8;\n}\n//===//\nif(state.head){\nstate.head.time=hold;\n}\nif(state.flags&0x0200){\n//=== CRC4(state.check, hold)\nhbuf[0]=hold&0xff;\nhbuf[1]=hold>>>8&0xff;\nhbuf[2]=hold>>>16&0xff;\nhbuf[3]=hold>>>24&0xff;\nstate.check=crc32(state.check,hbuf,4,0);\n//===\n}\n//=== INITBITS();\nhold=0;\nbits=0;\n//===//\nstate.mode=OS;\n/* falls through */\ncase OS:\n//=== NEEDBITS(16); */\nwhile(bits<16){\nif(have===0){break inf_leave;}\nhave--;\nhold+=input[next++]<<bits;\nbits+=8;\n}\n//===//\nif(state.head){\nstate.head.xflags=hold&0xff;\nstate.head.os=hold>>8;\n}\nif(state.flags&0x0200){\n//=== CRC2(state.check, hold);\nhbuf[0]=hold&0xff;\nhbuf[1]=hold>>>8&0xff;\nstate.check=crc32(state.check,hbuf,2,0);\n//===//\n}\n//=== INITBITS();\nhold=0;\nbits=0;\n//===//\nstate.mode=EXLEN;\n/* falls through */\ncase EXLEN:\nif(state.flags&0x0400){\n//=== NEEDBITS(16); */\nwhile(bits<16){\nif(have===0){break inf_leave;}\nhave--;\nhold+=input[next++]<<bits;\nbits+=8;\n}\n//===//\nstate.length=hold;\nif(state.head){\nstate.head.extra_len=hold;\n}\nif(state.flags&0x0200){\n//=== CRC2(state.check, hold);\nhbuf[0]=hold&0xff;\nhbuf[1]=hold>>>8&0xff;\nstate.check=crc32(state.check,hbuf,2,0);\n//===//\n}\n//=== INITBITS();\nhold=0;\nbits=0;\n//===//\n}else\nif(state.head){\nstate.head.extra=null/*Z_NULL*/;\n}\nstate.mode=EXTRA;\n/* falls through */\ncase EXTRA:\nif(state.flags&0x0400){\ncopy=state.length;\nif(copy>have){copy=have;}\nif(copy){\nif(state.head){\nlen=state.head.extra_len-state.length;\nif(!state.head.extra){\n// Use untyped array for more convenient processing later\nstate.head.extra=new Array(state.head.extra_len);\n}\nutils.arraySet(\nstate.head.extra,\ninput,\nnext,\n// extra field is limited to 65536 bytes\n// - no need for additional size check\ncopy,\n/*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\nlen);\n\n//zmemcpy(state.head.extra + len, next,\n//        len + copy > state.head.extra_max ?\n//        state.head.extra_max - len : copy);\n}\nif(state.flags&0x0200){\nstate.check=crc32(state.check,input,copy,next);\n}\nhave-=copy;\nnext+=copy;\nstate.length-=copy;\n}\nif(state.length){break inf_leave;}\n}\nstate.length=0;\nstate.mode=NAME;\n/* falls through */\ncase NAME:\nif(state.flags&0x0800){\nif(have===0){break inf_leave;}\ncopy=0;\ndo{\n// TODO: 2 or 1 bytes?\nlen=input[next+copy++];\n/* use constant limit because in js we should not preallocate memory */\nif(state.head&&len&&\nstate.length<65536/*state.head.name_max*/){\nstate.head.name+=String.fromCharCode(len);\n}\n}while(len&&copy<have);\n\nif(state.flags&0x0200){\nstate.check=crc32(state.check,input,copy,next);\n}\nhave-=copy;\nnext+=copy;\nif(len){break inf_leave;}\n}else\nif(state.head){\nstate.head.name=null;\n}\nstate.length=0;\nstate.mode=COMMENT;\n/* falls through */\ncase COMMENT:\nif(state.flags&0x1000){\nif(have===0){break inf_leave;}\ncopy=0;\ndo{\nlen=input[next+copy++];\n/* use constant limit because in js we should not preallocate memory */\nif(state.head&&len&&\nstate.length<65536/*state.head.comm_max*/){\nstate.head.comment+=String.fromCharCode(len);\n}\n}while(len&&copy<have);\nif(state.flags&0x0200){\nstate.check=crc32(state.check,input,copy,next);\n}\nhave-=copy;\nnext+=copy;\nif(len){break inf_leave;}\n}else\nif(state.head){\nstate.head.comment=null;\n}\nstate.mode=HCRC;\n/* falls through */\ncase HCRC:\nif(state.flags&0x0200){\n//=== NEEDBITS(16); */\nwhile(bits<16){\nif(have===0){break inf_leave;}\nhave--;\nhold+=input[next++]<<bits;\nbits+=8;\n}\n//===//\nif(hold!==(state.check&0xffff)){\nstrm.msg='header crc mismatch';\nstate.mode=BAD;\nbreak;\n}\n//=== INITBITS();\nhold=0;\nbits=0;\n//===//\n}\nif(state.head){\nstate.head.hcrc=state.flags>>9&1;\nstate.head.done=true;\n}\nstrm.adler=state.check=0;\nstate.mode=TYPE;\nbreak;\ncase DICTID:\n//=== NEEDBITS(32); */\nwhile(bits<32){\nif(have===0){break inf_leave;}\nhave--;\nhold+=input[next++]<<bits;\nbits+=8;\n}\n//===//\nstrm.adler=state.check=zswap32(hold);\n//=== INITBITS();\nhold=0;\nbits=0;\n//===//\nstate.mode=DICT;\n/* falls through */\ncase DICT:\nif(state.havedict===0){\n//--- RESTORE() ---\nstrm.next_out=put;\nstrm.avail_out=left;\nstrm.next_in=next;\nstrm.avail_in=have;\nstate.hold=hold;\nstate.bits=bits;\n//---\nreturn Z_NEED_DICT;\n}\nstrm.adler=state.check=1/*adler32(0L, Z_NULL, 0)*/;\nstate.mode=TYPE;\n/* falls through */\ncase TYPE:\nif(flush===Z_BLOCK||flush===Z_TREES){break inf_leave;}\n/* falls through */\ncase TYPEDO:\nif(state.last){\n//--- BYTEBITS() ---//\nhold>>>=bits&7;\nbits-=bits&7;\n//---//\nstate.mode=CHECK;\nbreak;\n}\n//=== NEEDBITS(3); */\nwhile(bits<3){\nif(have===0){break inf_leave;}\nhave--;\nhold+=input[next++]<<bits;\nbits+=8;\n}\n//===//\nstate.last=hold&0x01/*BITS(1)*/;\n//--- DROPBITS(1) ---//\nhold>>>=1;\nbits-=1;\n//---//\n\nswitch(hold&0x03){/*BITS(2)*/\ncase 0:/* stored block */\n//Tracev((stderr, \"inflate:     stored block%s\\n\",\n//        state.last ? \" (last)\" : \"\"));\nstate.mode=STORED;\nbreak;\ncase 1:/* fixed block */\nfixedtables(state);\n//Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n//        state.last ? \" (last)\" : \"\"));\nstate.mode=LEN_;/* decode codes */\nif(flush===Z_TREES){\n//--- DROPBITS(2) ---//\nhold>>>=2;\nbits-=2;\n//---//\nbreak inf_leave;\n}\nbreak;\ncase 2:/* dynamic block */\n//Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n//        state.last ? \" (last)\" : \"\"));\nstate.mode=TABLE;\nbreak;\ncase 3:\nstrm.msg='invalid block type';\nstate.mode=BAD;}\n\n//--- DROPBITS(2) ---//\nhold>>>=2;\nbits-=2;\n//---//\nbreak;\ncase STORED:\n//--- BYTEBITS() ---// /* go to byte boundary */\nhold>>>=bits&7;\nbits-=bits&7;\n//---//\n//=== NEEDBITS(32); */\nwhile(bits<32){\nif(have===0){break inf_leave;}\nhave--;\nhold+=input[next++]<<bits;\nbits+=8;\n}\n//===//\nif((hold&0xffff)!==(hold>>>16^0xffff)){\nstrm.msg='invalid stored block lengths';\nstate.mode=BAD;\nbreak;\n}\nstate.length=hold&0xffff;\n//Tracev((stderr, \"inflate:       stored length %u\\n\",\n//        state.length));\n//=== INITBITS();\nhold=0;\nbits=0;\n//===//\nstate.mode=COPY_;\nif(flush===Z_TREES){break inf_leave;}\n/* falls through */\ncase COPY_:\nstate.mode=COPY;\n/* falls through */\ncase COPY:\ncopy=state.length;\nif(copy){\nif(copy>have){copy=have;}\nif(copy>left){copy=left;}\nif(copy===0){break inf_leave;}\n//--- zmemcpy(put, next, copy); ---\nutils.arraySet(output,input,next,copy,put);\n//---//\nhave-=copy;\nnext+=copy;\nleft-=copy;\nput+=copy;\nstate.length-=copy;\nbreak;\n}\n//Tracev((stderr, \"inflate:       stored end\\n\"));\nstate.mode=TYPE;\nbreak;\ncase TABLE:\n//=== NEEDBITS(14); */\nwhile(bits<14){\nif(have===0){break inf_leave;}\nhave--;\nhold+=input[next++]<<bits;\nbits+=8;\n}\n//===//\nstate.nlen=(hold&0x1f)+/*BITS(5)*/257;\n//--- DROPBITS(5) ---//\nhold>>>=5;\nbits-=5;\n//---//\nstate.ndist=(hold&0x1f)+/*BITS(5)*/1;\n//--- DROPBITS(5) ---//\nhold>>>=5;\nbits-=5;\n//---//\nstate.ncode=(hold&0x0f)+/*BITS(4)*/4;\n//--- DROPBITS(4) ---//\nhold>>>=4;\nbits-=4;\n//---//\n//#ifndef PKZIP_BUG_WORKAROUND\nif(state.nlen>286||state.ndist>30){\nstrm.msg='too many length or distance symbols';\nstate.mode=BAD;\nbreak;\n}\n//#endif\n//Tracev((stderr, \"inflate:       table sizes ok\\n\"));\nstate.have=0;\nstate.mode=LENLENS;\n/* falls through */\ncase LENLENS:\nwhile(state.have<state.ncode){\n//=== NEEDBITS(3);\nwhile(bits<3){\nif(have===0){break inf_leave;}\nhave--;\nhold+=input[next++]<<bits;\nbits+=8;\n}\n//===//\nstate.lens[order[state.have++]]=hold&0x07;//BITS(3);\n//--- DROPBITS(3) ---//\nhold>>>=3;\nbits-=3;\n//---//\n}\nwhile(state.have<19){\nstate.lens[order[state.have++]]=0;\n}\n// We have separate tables & no pointers. 2 commented lines below not needed.\n//state.next = state.codes;\n//state.lencode = state.next;\n// Switch to use dynamic table\nstate.lencode=state.lendyn;\nstate.lenbits=7;\n\nopts={bits:state.lenbits};\nret=inflate_table(CODES,state.lens,0,19,state.lencode,0,state.work,opts);\nstate.lenbits=opts.bits;\n\nif(ret){\nstrm.msg='invalid code lengths set';\nstate.mode=BAD;\nbreak;\n}\n//Tracev((stderr, \"inflate:       code lengths ok\\n\"));\nstate.have=0;\nstate.mode=CODELENS;\n/* falls through */\ncase CODELENS:\nwhile(state.have<state.nlen+state.ndist){\nfor(;;){\nhere=state.lencode[hold&(1<<state.lenbits)-1];/*BITS(state.lenbits)*/\nhere_bits=here>>>24;\nhere_op=here>>>16&0xff;\nhere_val=here&0xffff;\n\nif(here_bits<=bits){break;}\n//--- PULLBYTE() ---//\nif(have===0){break inf_leave;}\nhave--;\nhold+=input[next++]<<bits;\nbits+=8;\n//---//\n}\nif(here_val<16){\n//--- DROPBITS(here.bits) ---//\nhold>>>=here_bits;\nbits-=here_bits;\n//---//\nstate.lens[state.have++]=here_val;\n}else\n{\nif(here_val===16){\n//=== NEEDBITS(here.bits + 2);\nn=here_bits+2;\nwhile(bits<n){\nif(have===0){break inf_leave;}\nhave--;\nhold+=input[next++]<<bits;\nbits+=8;\n}\n//===//\n//--- DROPBITS(here.bits) ---//\nhold>>>=here_bits;\nbits-=here_bits;\n//---//\nif(state.have===0){\nstrm.msg='invalid bit length repeat';\nstate.mode=BAD;\nbreak;\n}\nlen=state.lens[state.have-1];\ncopy=3+(hold&0x03);//BITS(2);\n//--- DROPBITS(2) ---//\nhold>>>=2;\nbits-=2;\n//---//\n}else\nif(here_val===17){\n//=== NEEDBITS(here.bits + 3);\nn=here_bits+3;\nwhile(bits<n){\nif(have===0){break inf_leave;}\nhave--;\nhold+=input[next++]<<bits;\nbits+=8;\n}\n//===//\n//--- DROPBITS(here.bits) ---//\nhold>>>=here_bits;\nbits-=here_bits;\n//---//\nlen=0;\ncopy=3+(hold&0x07);//BITS(3);\n//--- DROPBITS(3) ---//\nhold>>>=3;\nbits-=3;\n//---//\n}else\n{\n//=== NEEDBITS(here.bits + 7);\nn=here_bits+7;\nwhile(bits<n){\nif(have===0){break inf_leave;}\nhave--;\nhold+=input[next++]<<bits;\nbits+=8;\n}\n//===//\n//--- DROPBITS(here.bits) ---//\nhold>>>=here_bits;\nbits-=here_bits;\n//---//\nlen=0;\ncopy=11+(hold&0x7f);//BITS(7);\n//--- DROPBITS(7) ---//\nhold>>>=7;\nbits-=7;\n//---//\n}\nif(state.have+copy>state.nlen+state.ndist){\nstrm.msg='invalid bit length repeat';\nstate.mode=BAD;\nbreak;\n}\nwhile(copy--){\nstate.lens[state.have++]=len;\n}\n}\n}\n\n/* handle error breaks in while */\nif(state.mode===BAD){break;}\n\n/* check for end-of-block code (better have one) */\nif(state.lens[256]===0){\nstrm.msg='invalid code -- missing end-of-block';\nstate.mode=BAD;\nbreak;\n}\n\n/* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\nstate.lenbits=9;\n\nopts={bits:state.lenbits};\nret=inflate_table(LENS,state.lens,0,state.nlen,state.lencode,0,state.work,opts);\n// We have separate tables & no pointers. 2 commented lines below not needed.\n// state.next_index = opts.table_index;\nstate.lenbits=opts.bits;\n// state.lencode = state.next;\n\nif(ret){\nstrm.msg='invalid literal/lengths set';\nstate.mode=BAD;\nbreak;\n}\n\nstate.distbits=6;\n//state.distcode.copy(state.codes);\n// Switch to use dynamic table\nstate.distcode=state.distdyn;\nopts={bits:state.distbits};\nret=inflate_table(DISTS,state.lens,state.nlen,state.ndist,state.distcode,0,state.work,opts);\n// We have separate tables & no pointers. 2 commented lines below not needed.\n// state.next_index = opts.table_index;\nstate.distbits=opts.bits;\n// state.distcode = state.next;\n\nif(ret){\nstrm.msg='invalid distances set';\nstate.mode=BAD;\nbreak;\n}\n//Tracev((stderr, 'inflate:       codes ok\\n'));\nstate.mode=LEN_;\nif(flush===Z_TREES){break inf_leave;}\n/* falls through */\ncase LEN_:\nstate.mode=LEN;\n/* falls through */\ncase LEN:\nif(have>=6&&left>=258){\n//--- RESTORE() ---\nstrm.next_out=put;\nstrm.avail_out=left;\nstrm.next_in=next;\nstrm.avail_in=have;\nstate.hold=hold;\nstate.bits=bits;\n//---\ninflate_fast(strm,_out);\n//--- LOAD() ---\nput=strm.next_out;\noutput=strm.output;\nleft=strm.avail_out;\nnext=strm.next_in;\ninput=strm.input;\nhave=strm.avail_in;\nhold=state.hold;\nbits=state.bits;\n//---\n\nif(state.mode===TYPE){\nstate.back=-1;\n}\nbreak;\n}\nstate.back=0;\nfor(;;){\nhere=state.lencode[hold&(1<<state.lenbits)-1];/*BITS(state.lenbits)*/\nhere_bits=here>>>24;\nhere_op=here>>>16&0xff;\nhere_val=here&0xffff;\n\nif(here_bits<=bits){break;}\n//--- PULLBYTE() ---//\nif(have===0){break inf_leave;}\nhave--;\nhold+=input[next++]<<bits;\nbits+=8;\n//---//\n}\nif(here_op&&(here_op&0xf0)===0){\nlast_bits=here_bits;\nlast_op=here_op;\nlast_val=here_val;\nfor(;;){\nhere=state.lencode[last_val+(\n(hold&(1<<last_bits+last_op)-1)>>/*BITS(last.bits + last.op)*/last_bits)];\nhere_bits=here>>>24;\nhere_op=here>>>16&0xff;\nhere_val=here&0xffff;\n\nif(last_bits+here_bits<=bits){break;}\n//--- PULLBYTE() ---//\nif(have===0){break inf_leave;}\nhave--;\nhold+=input[next++]<<bits;\nbits+=8;\n//---//\n}\n//--- DROPBITS(last.bits) ---//\nhold>>>=last_bits;\nbits-=last_bits;\n//---//\nstate.back+=last_bits;\n}\n//--- DROPBITS(here.bits) ---//\nhold>>>=here_bits;\nbits-=here_bits;\n//---//\nstate.back+=here_bits;\nstate.length=here_val;\nif(here_op===0){\n//Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n//        \"inflate:         literal '%c'\\n\" :\n//        \"inflate:         literal 0x%02x\\n\", here.val));\nstate.mode=LIT;\nbreak;\n}\nif(here_op&32){\n//Tracevv((stderr, \"inflate:         end of block\\n\"));\nstate.back=-1;\nstate.mode=TYPE;\nbreak;\n}\nif(here_op&64){\nstrm.msg='invalid literal/length code';\nstate.mode=BAD;\nbreak;\n}\nstate.extra=here_op&15;\nstate.mode=LENEXT;\n/* falls through */\ncase LENEXT:\nif(state.extra){\n//=== NEEDBITS(state.extra);\nn=state.extra;\nwhile(bits<n){\nif(have===0){break inf_leave;}\nhave--;\nhold+=input[next++]<<bits;\nbits+=8;\n}\n//===//\nstate.length+=hold&(1<<state.extra)-1/*BITS(state.extra)*/;\n//--- DROPBITS(state.extra) ---//\nhold>>>=state.extra;\nbits-=state.extra;\n//---//\nstate.back+=state.extra;\n}\n//Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\nstate.was=state.length;\nstate.mode=DIST;\n/* falls through */\ncase DIST:\nfor(;;){\nhere=state.distcode[hold&(1<<state.distbits)-1];/*BITS(state.distbits)*/\nhere_bits=here>>>24;\nhere_op=here>>>16&0xff;\nhere_val=here&0xffff;\n\nif(here_bits<=bits){break;}\n//--- PULLBYTE() ---//\nif(have===0){break inf_leave;}\nhave--;\nhold+=input[next++]<<bits;\nbits+=8;\n//---//\n}\nif((here_op&0xf0)===0){\nlast_bits=here_bits;\nlast_op=here_op;\nlast_val=here_val;\nfor(;;){\nhere=state.distcode[last_val+(\n(hold&(1<<last_bits+last_op)-1)>>/*BITS(last.bits + last.op)*/last_bits)];\nhere_bits=here>>>24;\nhere_op=here>>>16&0xff;\nhere_val=here&0xffff;\n\nif(last_bits+here_bits<=bits){break;}\n//--- PULLBYTE() ---//\nif(have===0){break inf_leave;}\nhave--;\nhold+=input[next++]<<bits;\nbits+=8;\n//---//\n}\n//--- DROPBITS(last.bits) ---//\nhold>>>=last_bits;\nbits-=last_bits;\n//---//\nstate.back+=last_bits;\n}\n//--- DROPBITS(here.bits) ---//\nhold>>>=here_bits;\nbits-=here_bits;\n//---//\nstate.back+=here_bits;\nif(here_op&64){\nstrm.msg='invalid distance code';\nstate.mode=BAD;\nbreak;\n}\nstate.offset=here_val;\nstate.extra=here_op&15;\nstate.mode=DISTEXT;\n/* falls through */\ncase DISTEXT:\nif(state.extra){\n//=== NEEDBITS(state.extra);\nn=state.extra;\nwhile(bits<n){\nif(have===0){break inf_leave;}\nhave--;\nhold+=input[next++]<<bits;\nbits+=8;\n}\n//===//\nstate.offset+=hold&(1<<state.extra)-1/*BITS(state.extra)*/;\n//--- DROPBITS(state.extra) ---//\nhold>>>=state.extra;\nbits-=state.extra;\n//---//\nstate.back+=state.extra;\n}\n//#ifdef INFLATE_STRICT\nif(state.offset>state.dmax){\nstrm.msg='invalid distance too far back';\nstate.mode=BAD;\nbreak;\n}\n//#endif\n//Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\nstate.mode=MATCH;\n/* falls through */\ncase MATCH:\nif(left===0){break inf_leave;}\ncopy=_out-left;\nif(state.offset>copy){/* copy from window */\ncopy=state.offset-copy;\nif(copy>state.whave){\nif(state.sane){\nstrm.msg='invalid distance too far back';\nstate.mode=BAD;\nbreak;\n}\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n}\nif(copy>state.wnext){\ncopy-=state.wnext;\nfrom=state.wsize-copy;\n}else\n{\nfrom=state.wnext-copy;\n}\nif(copy>state.length){copy=state.length;}\nfrom_source=state.window;\n}else\n{/* copy from output */\nfrom_source=output;\nfrom=put-state.offset;\ncopy=state.length;\n}\nif(copy>left){copy=left;}\nleft-=copy;\nstate.length-=copy;\ndo{\noutput[put++]=from_source[from++];\n}while(--copy);\nif(state.length===0){state.mode=LEN;}\nbreak;\ncase LIT:\nif(left===0){break inf_leave;}\noutput[put++]=state.length;\nleft--;\nstate.mode=LEN;\nbreak;\ncase CHECK:\nif(state.wrap){\n//=== NEEDBITS(32);\nwhile(bits<32){\nif(have===0){break inf_leave;}\nhave--;\n// Use '|' instead of '+' to make sure that result is signed\nhold|=input[next++]<<bits;\nbits+=8;\n}\n//===//\n_out-=left;\nstrm.total_out+=_out;\nstate.total+=_out;\nif(_out){\nstrm.adler=state.check=\n/*UPDATE(state.check, put - _out, _out);*/\nstate.flags?crc32(state.check,output,_out,put-_out):adler32(state.check,output,_out,put-_out);\n\n}\n_out=left;\n// NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\nif((state.flags?hold:zswap32(hold))!==state.check){\nstrm.msg='incorrect data check';\nstate.mode=BAD;\nbreak;\n}\n//=== INITBITS();\nhold=0;\nbits=0;\n//===//\n//Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n}\nstate.mode=LENGTH;\n/* falls through */\ncase LENGTH:\nif(state.wrap&&state.flags){\n//=== NEEDBITS(32);\nwhile(bits<32){\nif(have===0){break inf_leave;}\nhave--;\nhold+=input[next++]<<bits;\nbits+=8;\n}\n//===//\nif(hold!==(state.total&0xffffffff)){\nstrm.msg='incorrect length check';\nstate.mode=BAD;\nbreak;\n}\n//=== INITBITS();\nhold=0;\nbits=0;\n//===//\n//Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n}\nstate.mode=DONE;\n/* falls through */\ncase DONE:\nret=Z_STREAM_END;\nbreak inf_leave;\ncase BAD:\nret=Z_DATA_ERROR;\nbreak inf_leave;\ncase MEM:\nreturn Z_MEM_ERROR;\ncase SYNC:\n/* falls through */\ndefault:\nreturn Z_STREAM_ERROR;}\n\n}\n\n// inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n/*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n//--- RESTORE() ---\nstrm.next_out=put;\nstrm.avail_out=left;\nstrm.next_in=next;\nstrm.avail_in=have;\nstate.hold=hold;\nstate.bits=bits;\n//---\n\nif(state.wsize||_out!==strm.avail_out&&state.mode<BAD&&(\nstate.mode<CHECK||flush!==Z_FINISH)){\nif(updatewindow(strm,strm.output,strm.next_out,_out-strm.avail_out)){\nstate.mode=MEM;\nreturn Z_MEM_ERROR;\n}\n}\n_in-=strm.avail_in;\n_out-=strm.avail_out;\nstrm.total_in+=_in;\nstrm.total_out+=_out;\nstate.total+=_out;\nif(state.wrap&&_out){\nstrm.adler=state.check=/*UPDATE(state.check, strm.next_out - _out, _out);*/\nstate.flags?crc32(state.check,output,_out,strm.next_out-_out):adler32(state.check,output,_out,strm.next_out-_out);\n}\nstrm.data_type=state.bits+(state.last?64:0)+(\nstate.mode===TYPE?128:0)+(\nstate.mode===LEN_||state.mode===COPY_?256:0);\nif((_in===0&&_out===0||flush===Z_FINISH)&&ret===Z_OK){\nret=Z_BUF_ERROR;\n}\nreturn ret;\n}\n\nfunction inflateEnd(strm){\n\nif(!strm||!strm.state/*|| strm->zfree == (free_func)0*/){\nreturn Z_STREAM_ERROR;\n}\n\nvar state=strm.state;\nif(state.window){\nstate.window=null;\n}\nstrm.state=null;\nreturn Z_OK;\n}\n\nfunction inflateGetHeader(strm,head){\nvar state;\n\n/* check state */\nif(!strm||!strm.state){return Z_STREAM_ERROR;}\nstate=strm.state;\nif((state.wrap&2)===0){return Z_STREAM_ERROR;}\n\n/* save header structure */\nstate.head=head;\nhead.done=false;\nreturn Z_OK;\n}\n\nfunction inflateSetDictionary(strm,dictionary){\nvar dictLength=dictionary.length;\n\nvar state;\nvar dictid;\nvar ret;\n\n/* check state */\nif(!strm/* == Z_NULL */||!strm.state/* == Z_NULL */){return Z_STREAM_ERROR;}\nstate=strm.state;\n\nif(state.wrap!==0&&state.mode!==DICT){\nreturn Z_STREAM_ERROR;\n}\n\n/* check for correct dictionary identifier */\nif(state.mode===DICT){\ndictid=1;/* adler32(0, null, 0)*/\n/* dictid = adler32(dictid, dictionary, dictLength); */\ndictid=adler32(dictid,dictionary,dictLength,0);\nif(dictid!==state.check){\nreturn Z_DATA_ERROR;\n}\n}\n/* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\nret=updatewindow(strm,dictionary,dictLength,dictLength);\nif(ret){\nstate.mode=MEM;\nreturn Z_MEM_ERROR;\n}\nstate.havedict=1;\n// Tracev((stderr, \"inflate:   dictionary set\\n\"));\nreturn Z_OK;\n}\n\nexports.inflateReset=inflateReset;\nexports.inflateReset2=inflateReset2;\nexports.inflateResetKeep=inflateResetKeep;\nexports.inflateInit=inflateInit;\nexports.inflateInit2=inflateInit2;\nexports.inflate=inflate;\nexports.inflateEnd=inflateEnd;\nexports.inflateGetHeader=inflateGetHeader;\nexports.inflateSetDictionary=inflateSetDictionary;\nexports.inflateInfo='pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n\n},{\"../utils/common\":179,\"./adler32\":181,\"./crc32\":183,\"./inffast\":186,\"./inftrees\":188}],188:[function(require,module,exports){\n'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils=require('../utils/common');\n\nvar MAXBITS=15;\nvar ENOUGH_LENS=852;\nvar ENOUGH_DISTS=592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES=0;\nvar LENS=1;\nvar DISTS=2;\n\nvar lbase=[/* Length codes 257..285 base */\n3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,\n35,43,51,59,67,83,99,115,131,163,195,227,258,0,0];\n\n\nvar lext=[/* Length codes 257..285 extra */\n16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,\n19,19,19,19,20,20,20,20,21,21,21,21,16,72,78];\n\n\nvar dbase=[/* Distance codes 0..29 base */\n1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,\n257,385,513,769,1025,1537,2049,3073,4097,6145,\n8193,12289,16385,24577,0,0];\n\n\nvar dext=[/* Distance codes 0..29 extra */\n16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,\n23,23,24,24,25,25,26,26,27,27,\n28,28,29,29,64,64];\n\n\nmodule.exports=function inflate_table(type,lens,lens_index,codes,table,table_index,work,opts)\n{\nvar bits=opts.bits;\n//here = opts.here; /* table entry for duplication */\n\nvar len=0;/* a code's length in bits */\nvar sym=0;/* index of code symbols */\nvar min=0,max=0;/* minimum and maximum code lengths */\nvar root=0;/* number of index bits for root table */\nvar curr=0;/* number of index bits for current table */\nvar drop=0;/* code bits to drop for sub-table */\nvar left=0;/* number of prefix codes available */\nvar used=0;/* code entries in table used */\nvar huff=0;/* Huffman code */\nvar incr;/* for incrementing code, index */\nvar fill;/* index for replicating entries */\nvar low;/* low bits for current root entry */\nvar mask;/* mask for low root bits */\nvar next;/* next available space in table */\nvar base=null;/* base value table to use */\nvar base_index=0;\n//  var shoextra;    /* extra bits table to use */\nvar end;/* use base and extra for symbol > end */\nvar count=new utils.Buf16(MAXBITS+1);//[MAXBITS+1];    /* number of codes of each length */\nvar offs=new utils.Buf16(MAXBITS+1);//[MAXBITS+1];     /* offsets in table for each length */\nvar extra=null;\nvar extra_index=0;\n\nvar here_bits,here_op,here_val;\n\n/*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n/* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\nfor(len=0;len<=MAXBITS;len++){\ncount[len]=0;\n}\nfor(sym=0;sym<codes;sym++){\ncount[lens[lens_index+sym]]++;\n}\n\n/* bound code lengths, force root to be within code lengths */\nroot=bits;\nfor(max=MAXBITS;max>=1;max--){\nif(count[max]!==0){break;}\n}\nif(root>max){\nroot=max;\n}\nif(max===0){/* no symbols to code at all */\n//table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n//table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n//table.val[opts.table_index++] = 0;   //here.val = (var short)0;\ntable[table_index++]=1<<24|64<<16|0;\n\n\n//table.op[opts.table_index] = 64;\n//table.bits[opts.table_index] = 1;\n//table.val[opts.table_index++] = 0;\ntable[table_index++]=1<<24|64<<16|0;\n\nopts.bits=1;\nreturn 0;/* no symbols, but wait for decoding to report error */\n}\nfor(min=1;min<max;min++){\nif(count[min]!==0){break;}\n}\nif(root<min){\nroot=min;\n}\n\n/* check for an over-subscribed or incomplete set of lengths */\nleft=1;\nfor(len=1;len<=MAXBITS;len++){\nleft<<=1;\nleft-=count[len];\nif(left<0){\nreturn-1;\n}/* over-subscribed */\n}\nif(left>0&&(type===CODES||max!==1)){\nreturn-1;/* incomplete set */\n}\n\n/* generate offsets into symbol table for each length for sorting */\noffs[1]=0;\nfor(len=1;len<MAXBITS;len++){\noffs[len+1]=offs[len]+count[len];\n}\n\n/* sort symbols by length, by symbol order within each length */\nfor(sym=0;sym<codes;sym++){\nif(lens[lens_index+sym]!==0){\nwork[offs[lens[lens_index+sym]]++]=sym;\n}\n}\n\n/*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n/* set up for code type */\n// poor man optimization - use if-else instead of switch,\n// to avoid deopts in old v8\nif(type===CODES){\nbase=extra=work;/* dummy value--not used */\nend=19;\n\n}else if(type===LENS){\nbase=lbase;\nbase_index-=257;\nextra=lext;\nextra_index-=257;\nend=256;\n\n}else{/* DISTS */\nbase=dbase;\nextra=dext;\nend=-1;\n}\n\n/* initialize opts for loop */\nhuff=0;/* starting code */\nsym=0;/* starting code symbol */\nlen=min;/* starting code length */\nnext=table_index;/* current table to fill in */\ncurr=root;/* current table index bits */\ndrop=0;/* current bits to drop from code for index */\nlow=-1;/* trigger new sub-table when len > root */\nused=1<<root;/* use root table entries */\nmask=used-1;/* mask for comparing low */\n\n/* check available table space */\nif(type===LENS&&used>ENOUGH_LENS||\ntype===DISTS&&used>ENOUGH_DISTS){\nreturn 1;\n}\n\n/* process all codes and make table entries */\nfor(;;){\n/* create table entry */\nhere_bits=len-drop;\nif(work[sym]<end){\nhere_op=0;\nhere_val=work[sym];\n}else\nif(work[sym]>end){\nhere_op=extra[extra_index+work[sym]];\nhere_val=base[base_index+work[sym]];\n}else\n{\nhere_op=32+64;/* end of block */\nhere_val=0;\n}\n\n/* replicate for those indices with low len bits equal to huff */\nincr=1<<len-drop;\nfill=1<<curr;\nmin=fill;/* save offset to next table */\ndo{\nfill-=incr;\ntable[next+(huff>>drop)+fill]=here_bits<<24|here_op<<16|here_val|0;\n}while(fill!==0);\n\n/* backwards increment the len-bit code huff */\nincr=1<<len-1;\nwhile(huff&incr){\nincr>>=1;\n}\nif(incr!==0){\nhuff&=incr-1;\nhuff+=incr;\n}else{\nhuff=0;\n}\n\n/* go to next symbol, update count, len */\nsym++;\nif(--count[len]===0){\nif(len===max){break;}\nlen=lens[lens_index+work[sym]];\n}\n\n/* create new sub-table if needed */\nif(len>root&&(huff&mask)!==low){\n/* if first time, transition to sub-tables */\nif(drop===0){\ndrop=root;\n}\n\n/* increment past last table */\nnext+=min;/* here min is 1 << curr */\n\n/* determine length of next table */\ncurr=len-drop;\nleft=1<<curr;\nwhile(curr+drop<max){\nleft-=count[curr+drop];\nif(left<=0){break;}\ncurr++;\nleft<<=1;\n}\n\n/* check for enough space */\nused+=1<<curr;\nif(type===LENS&&used>ENOUGH_LENS||\ntype===DISTS&&used>ENOUGH_DISTS){\nreturn 1;\n}\n\n/* point entry in root table to sub-table */\nlow=huff&mask;\n/*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\ntable[low]=root<<24|curr<<16|next-table_index|0;\n}\n}\n\n/* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\nif(huff!==0){\n//table.op[next + huff] = 64;            /* invalid code marker */\n//table.bits[next + huff] = len - drop;\n//table.val[next + huff] = 0;\ntable[next+huff]=len-drop<<24|64<<16|0;\n}\n\n/* set return parameters */\n//opts.table_index += used;\nopts.bits=root;\nreturn 0;\n};\n\n},{\"../utils/common\":179}],189:[function(require,module,exports){\n'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports={\n2:'need dictionary',/* Z_NEED_DICT       2  */\n1:'stream end',/* Z_STREAM_END      1  */\n0:'',/* Z_OK              0  */\n'-1':'file error',/* Z_ERRNO         (-1) */\n'-2':'stream error',/* Z_STREAM_ERROR  (-2) */\n'-3':'data error',/* Z_DATA_ERROR    (-3) */\n'-4':'insufficient memory',/* Z_MEM_ERROR     (-4) */\n'-5':'buffer error',/* Z_BUF_ERROR     (-5) */\n'-6':'incompatible version'/* Z_VERSION_ERROR (-6) */};\n\n\n},{}],190:[function(require,module,exports){\n'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils=require('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED=4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY=0;\nvar Z_TEXT=1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN=2;\n\n/*============================================================================*/\n\n\nfunction zero(buf){var len=buf.length;while(--len>=0){buf[len]=0;}}\n\n// From zutil.h\n\nvar STORED_BLOCK=0;\nvar STATIC_TREES=1;\nvar DYN_TREES=2;\n/* The three kinds of block type */\n\nvar MIN_MATCH=3;\nvar MAX_MATCH=258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES=29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS=256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES=LITERALS+1+LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES=30;\n/* number of distance codes */\n\nvar BL_CODES=19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE=2*L_CODES+1;\n/* maximum heap size */\n\nvar MAX_BITS=15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size=16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS=7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK=256;\n/* end of block literal code */\n\nvar REP_3_6=16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10=17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138=18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nvar extra_lbits=/* extra bits for each length code */\n[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits=/* extra bits for each distance code */\n[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits=/* extra bits for each bit length code */\n[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order=\n[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN=512;/* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree=new Array((L_CODES+2)*2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree=new Array(D_CODES*2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code=new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code=new Array(MAX_MATCH-MIN_MATCH+1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length=new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist=new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree,extra_bits,extra_base,elems,max_length){\n\nthis.static_tree=static_tree;/* static tree or NULL */\nthis.extra_bits=extra_bits;/* extra bits for each code or NULL */\nthis.extra_base=extra_base;/* base index for extra_bits */\nthis.elems=elems;/* max number of elements in the tree */\nthis.max_length=max_length;/* max bit length for the codes */\n\n// show if `static_tree` has data or dummy - needed for monomorphic objects\nthis.has_stree=static_tree&&static_tree.length;\n}\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree,stat_desc){\nthis.dyn_tree=dyn_tree;/* the dynamic tree */\nthis.max_code=0;/* largest code with non zero frequency */\nthis.stat_desc=stat_desc;/* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist){\nreturn dist<256?_dist_code[dist]:_dist_code[256+(dist>>>7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s,w){\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\ns.pending_buf[s.pending++]=w&0xff;\ns.pending_buf[s.pending++]=w>>>8&0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s,value,length){\nif(s.bi_valid>Buf_size-length){\ns.bi_buf|=value<<s.bi_valid&0xffff;\nput_short(s,s.bi_buf);\ns.bi_buf=value>>Buf_size-s.bi_valid;\ns.bi_valid+=length-Buf_size;\n}else{\ns.bi_buf|=value<<s.bi_valid&0xffff;\ns.bi_valid+=length;\n}\n}\n\n\nfunction send_code(s,c,tree){\nsend_bits(s,tree[c*2]/*.Code*/,tree[c*2+1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code,len){\nvar res=0;\ndo{\nres|=code&1;\ncode>>>=1;\nres<<=1;\n}while(--len>0);\nreturn res>>>1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s){\nif(s.bi_valid===16){\nput_short(s,s.bi_buf);\ns.bi_buf=0;\ns.bi_valid=0;\n\n}else if(s.bi_valid>=8){\ns.pending_buf[s.pending++]=s.bi_buf&0xff;\ns.bi_buf>>=8;\ns.bi_valid-=8;\n}\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s,desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\nvar tree=desc.dyn_tree;\nvar max_code=desc.max_code;\nvar stree=desc.stat_desc.static_tree;\nvar has_stree=desc.stat_desc.has_stree;\nvar extra=desc.stat_desc.extra_bits;\nvar base=desc.stat_desc.extra_base;\nvar max_length=desc.stat_desc.max_length;\nvar h;/* heap index */\nvar n,m;/* iterate over the tree elements */\nvar bits;/* bit length */\nvar xbits;/* extra bits */\nvar f;/* frequency */\nvar overflow=0;/* number of elements with bit length too large */\n\nfor(bits=0;bits<=MAX_BITS;bits++){\ns.bl_count[bits]=0;\n}\n\n/* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\ntree[s.heap[s.heap_max]*2+1]/*.Len*/=0;/* root of the heap */\n\nfor(h=s.heap_max+1;h<HEAP_SIZE;h++){\nn=s.heap[h];\nbits=tree[tree[n*2+1]/*.Dad*/*2+1]/*.Len*/+1;\nif(bits>max_length){\nbits=max_length;\noverflow++;\n}\ntree[n*2+1]/*.Len*/=bits;\n/* We overwrite tree[n].Dad which is no longer needed */\n\nif(n>max_code){continue;}/* not a leaf node */\n\ns.bl_count[bits]++;\nxbits=0;\nif(n>=base){\nxbits=extra[n-base];\n}\nf=tree[n*2]/*.Freq*/;\ns.opt_len+=f*(bits+xbits);\nif(has_stree){\ns.static_len+=f*(stree[n*2+1]/*.Len*/+xbits);\n}\n}\nif(overflow===0){return;}\n\n// Trace((stderr,\"\\nbit length overflow\\n\"));\n/* This happens for example on obj2 and pic of the Calgary corpus */\n\n/* Find the first bit length which could increase: */\ndo{\nbits=max_length-1;\nwhile(s.bl_count[bits]===0){bits--;}\ns.bl_count[bits]--;/* move one leaf down the tree */\ns.bl_count[bits+1]+=2;/* move one overflow item as its brother */\ns.bl_count[max_length]--;\n/* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\noverflow-=2;\n}while(overflow>0);\n\n/* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\nfor(bits=max_length;bits!==0;bits--){\nn=s.bl_count[bits];\nwhile(n!==0){\nm=s.heap[--h];\nif(m>max_code){continue;}\nif(tree[m*2+1]/*.Len*/!==bits){\n// Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\ns.opt_len+=(bits-tree[m*2+1]/*.Len*/)*tree[m*2]/*.Freq*/;\ntree[m*2+1]/*.Len*/=bits;\n}\nn--;\n}\n}\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree,max_code,bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\nvar next_code=new Array(MAX_BITS+1);/* next code value for each bit length */\nvar code=0;/* running code value */\nvar bits;/* bit index */\nvar n;/* code index */\n\n/* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\nfor(bits=1;bits<=MAX_BITS;bits++){\nnext_code[bits]=code=code+bl_count[bits-1]<<1;\n}\n/* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n//Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n//        \"inconsistent bit counts\");\n//Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\nfor(n=0;n<=max_code;n++){\nvar len=tree[n*2+1]/*.Len*/;\nif(len===0){continue;}\n/* Now reverse the bits */\ntree[n*2]/*.Code*/=bi_reverse(next_code[len]++,len);\n\n//Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n//     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n}\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init(){\nvar n;/* iterates over tree elements */\nvar bits;/* bit counter */\nvar length;/* length value */\nvar code;/* code value */\nvar dist;/* distance index */\nvar bl_count=new Array(MAX_BITS+1);\n/* number of codes at each bit length for an optimal tree */\n\n// do check in _tr_init()\n//if (static_init_done) return;\n\n/* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n/* Initialize the mapping length (0..255) -> length code (0..28) */\nlength=0;\nfor(code=0;code<LENGTH_CODES-1;code++){\nbase_length[code]=length;\nfor(n=0;n<1<<extra_lbits[code];n++){\n_length_code[length++]=code;\n}\n}\n//Assert (length == 256, \"tr_static_init: length != 256\");\n/* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n_length_code[length-1]=code;\n\n/* Initialize the mapping dist (0..32K) -> dist code (0..29) */\ndist=0;\nfor(code=0;code<16;code++){\nbase_dist[code]=dist;\nfor(n=0;n<1<<extra_dbits[code];n++){\n_dist_code[dist++]=code;\n}\n}\n//Assert (dist == 256, \"tr_static_init: dist != 256\");\ndist>>=7;/* from now on, all distances are divided by 128 */\nfor(;code<D_CODES;code++){\nbase_dist[code]=dist<<7;\nfor(n=0;n<1<<extra_dbits[code]-7;n++){\n_dist_code[256+dist++]=code;\n}\n}\n//Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n/* Construct the codes of the static literal tree */\nfor(bits=0;bits<=MAX_BITS;bits++){\nbl_count[bits]=0;\n}\n\nn=0;\nwhile(n<=143){\nstatic_ltree[n*2+1]/*.Len*/=8;\nn++;\nbl_count[8]++;\n}\nwhile(n<=255){\nstatic_ltree[n*2+1]/*.Len*/=9;\nn++;\nbl_count[9]++;\n}\nwhile(n<=279){\nstatic_ltree[n*2+1]/*.Len*/=7;\nn++;\nbl_count[7]++;\n}\nwhile(n<=287){\nstatic_ltree[n*2+1]/*.Len*/=8;\nn++;\nbl_count[8]++;\n}\n/* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\ngen_codes(static_ltree,L_CODES+1,bl_count);\n\n/* The static distance tree is trivial: */\nfor(n=0;n<D_CODES;n++){\nstatic_dtree[n*2+1]/*.Len*/=5;\nstatic_dtree[n*2]/*.Code*/=bi_reverse(n,5);\n}\n\n// Now data ready and we can init static trees\nstatic_l_desc=new StaticTreeDesc(static_ltree,extra_lbits,LITERALS+1,L_CODES,MAX_BITS);\nstatic_d_desc=new StaticTreeDesc(static_dtree,extra_dbits,0,D_CODES,MAX_BITS);\nstatic_bl_desc=new StaticTreeDesc(new Array(0),extra_blbits,0,BL_CODES,MAX_BL_BITS);\n\n//static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s){\nvar n;/* iterates over tree elements */\n\n/* Initialize the trees. */\nfor(n=0;n<L_CODES;n++){s.dyn_ltree[n*2]/*.Freq*/=0;}\nfor(n=0;n<D_CODES;n++){s.dyn_dtree[n*2]/*.Freq*/=0;}\nfor(n=0;n<BL_CODES;n++){s.bl_tree[n*2]/*.Freq*/=0;}\n\ns.dyn_ltree[END_BLOCK*2]/*.Freq*/=1;\ns.opt_len=s.static_len=0;\ns.last_lit=s.matches=0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\nif(s.bi_valid>8){\nput_short(s,s.bi_buf);\n}else if(s.bi_valid>0){\n//put_byte(s, (Byte)s->bi_buf);\ns.pending_buf[s.pending++]=s.bi_buf;\n}\ns.bi_buf=0;\ns.bi_valid=0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s,buf,len,header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\nbi_windup(s);/* align on byte boundary */\n\nif(header){\nput_short(s,len);\nput_short(s,~len);\n}\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\nutils.arraySet(s.pending_buf,s.window,buf,len,s.pending);\ns.pending+=len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree,n,m,depth){\nvar _n2=n*2;\nvar _m2=m*2;\nreturn tree[_n2]/*.Freq*/<tree[_m2]/*.Freq*/||\ntree[_n2]/*.Freq*/===tree[_m2]/*.Freq*/&&depth[n]<=depth[m];\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s,tree,k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\nvar v=s.heap[k];\nvar j=k<<1;/* left son of k */\nwhile(j<=s.heap_len){\n/* Set j to the smallest of the two sons: */\nif(j<s.heap_len&&\nsmaller(tree,s.heap[j+1],s.heap[j],s.depth)){\nj++;\n}\n/* Exit if v is smaller than both sons */\nif(smaller(tree,v,s.heap[j],s.depth)){break;}\n\n/* Exchange v with the smallest son */\ns.heap[k]=s.heap[j];\nk=j;\n\n/* And continue down the tree, setting j to the left son of k */\nj<<=1;\n}\ns.heap[k]=v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s,ltree,dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\nvar dist;/* distance of matched string */\nvar lc;/* match length or unmatched char (if dist == 0) */\nvar lx=0;/* running index in l_buf */\nvar code;/* the code to send */\nvar extra;/* number of extra bits to send */\n\nif(s.last_lit!==0){\ndo{\ndist=s.pending_buf[s.d_buf+lx*2]<<8|s.pending_buf[s.d_buf+lx*2+1];\nlc=s.pending_buf[s.l_buf+lx];\nlx++;\n\nif(dist===0){\nsend_code(s,lc,ltree);/* send a literal byte */\n//Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n}else{\n/* Here, lc is the match length - MIN_MATCH */\ncode=_length_code[lc];\nsend_code(s,code+LITERALS+1,ltree);/* send the length code */\nextra=extra_lbits[code];\nif(extra!==0){\nlc-=base_length[code];\nsend_bits(s,lc,extra);/* send the extra length bits */\n}\ndist--;/* dist is now the match distance - 1 */\ncode=d_code(dist);\n//Assert (code < D_CODES, \"bad d_code\");\n\nsend_code(s,code,dtree);/* send the distance code */\nextra=extra_dbits[code];\nif(extra!==0){\ndist-=base_dist[code];\nsend_bits(s,dist,extra);/* send the extra distance bits */\n}\n}/* literal or match pair ? */\n\n/* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n//Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n//       \"pendingBuf overflow\");\n\n}while(lx<s.last_lit);\n}\n\nsend_code(s,END_BLOCK,ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s,desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\nvar tree=desc.dyn_tree;\nvar stree=desc.stat_desc.static_tree;\nvar has_stree=desc.stat_desc.has_stree;\nvar elems=desc.stat_desc.elems;\nvar n,m;/* iterate over heap elements */\nvar max_code=-1;/* largest code with non zero frequency */\nvar node;/* new node being created */\n\n/* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\ns.heap_len=0;\ns.heap_max=HEAP_SIZE;\n\nfor(n=0;n<elems;n++){\nif(tree[n*2]/*.Freq*/!==0){\ns.heap[++s.heap_len]=max_code=n;\ns.depth[n]=0;\n\n}else{\ntree[n*2+1]/*.Len*/=0;\n}\n}\n\n/* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\nwhile(s.heap_len<2){\nnode=s.heap[++s.heap_len]=max_code<2?++max_code:0;\ntree[node*2]/*.Freq*/=1;\ns.depth[node]=0;\ns.opt_len--;\n\nif(has_stree){\ns.static_len-=stree[node*2+1]/*.Len*/;\n}\n/* node is 0 or 1 so it does not have extra bits */\n}\ndesc.max_code=max_code;\n\n/* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\nfor(n=s.heap_len>>1/*int /2*/;n>=1;n--){pqdownheap(s,tree,n);}\n\n/* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\nnode=elems;/* next internal node of the tree */\ndo{\n//pqremove(s, tree, n);  /* n = node of least frequency */\n/*** pqremove ***/\nn=s.heap[1/*SMALLEST*/];\ns.heap[1/*SMALLEST*/]=s.heap[s.heap_len--];\npqdownheap(s,tree,1/*SMALLEST*/);\n/***/\n\nm=s.heap[1/*SMALLEST*/];/* m = node of next least frequency */\n\ns.heap[--s.heap_max]=n;/* keep the nodes sorted by frequency */\ns.heap[--s.heap_max]=m;\n\n/* Create a new node father of n and m */\ntree[node*2]/*.Freq*/=tree[n*2]/*.Freq*/+tree[m*2]/*.Freq*/;\ns.depth[node]=(s.depth[n]>=s.depth[m]?s.depth[n]:s.depth[m])+1;\ntree[n*2+1]/*.Dad*/=tree[m*2+1]/*.Dad*/=node;\n\n/* and insert the new node in the heap */\ns.heap[1/*SMALLEST*/]=node++;\npqdownheap(s,tree,1/*SMALLEST*/);\n\n}while(s.heap_len>=2);\n\ns.heap[--s.heap_max]=s.heap[1/*SMALLEST*/];\n\n/* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\ngen_bitlen(s,desc);\n\n/* The field len is now set, we can generate the bit codes */\ngen_codes(tree,max_code,s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s,tree,max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\nvar n;/* iterates over all tree elements */\nvar prevlen=-1;/* last emitted length */\nvar curlen;/* length of current code */\n\nvar nextlen=tree[0*2+1]/*.Len*/;/* length of next code */\n\nvar count=0;/* repeat count of the current code */\nvar max_count=7;/* max repeat count */\nvar min_count=4;/* min repeat count */\n\nif(nextlen===0){\nmax_count=138;\nmin_count=3;\n}\ntree[(max_code+1)*2+1]/*.Len*/=0xffff;/* guard */\n\nfor(n=0;n<=max_code;n++){\ncurlen=nextlen;\nnextlen=tree[(n+1)*2+1]/*.Len*/;\n\nif(++count<max_count&&curlen===nextlen){\ncontinue;\n\n}else if(count<min_count){\ns.bl_tree[curlen*2]/*.Freq*/+=count;\n\n}else if(curlen!==0){\n\nif(curlen!==prevlen){s.bl_tree[curlen*2]/*.Freq*/++;}\ns.bl_tree[REP_3_6*2]/*.Freq*/++;\n\n}else if(count<=10){\ns.bl_tree[REPZ_3_10*2]/*.Freq*/++;\n\n}else{\ns.bl_tree[REPZ_11_138*2]/*.Freq*/++;\n}\n\ncount=0;\nprevlen=curlen;\n\nif(nextlen===0){\nmax_count=138;\nmin_count=3;\n\n}else if(curlen===nextlen){\nmax_count=6;\nmin_count=3;\n\n}else{\nmax_count=7;\nmin_count=4;\n}\n}\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s,tree,max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\nvar n;/* iterates over all tree elements */\nvar prevlen=-1;/* last emitted length */\nvar curlen;/* length of current code */\n\nvar nextlen=tree[0*2+1]/*.Len*/;/* length of next code */\n\nvar count=0;/* repeat count of the current code */\nvar max_count=7;/* max repeat count */\nvar min_count=4;/* min repeat count */\n\n/* tree[max_code+1].Len = -1; */ /* guard already set */\nif(nextlen===0){\nmax_count=138;\nmin_count=3;\n}\n\nfor(n=0;n<=max_code;n++){\ncurlen=nextlen;\nnextlen=tree[(n+1)*2+1]/*.Len*/;\n\nif(++count<max_count&&curlen===nextlen){\ncontinue;\n\n}else if(count<min_count){\ndo{send_code(s,curlen,s.bl_tree);}while(--count!==0);\n\n}else if(curlen!==0){\nif(curlen!==prevlen){\nsend_code(s,curlen,s.bl_tree);\ncount--;\n}\n//Assert(count >= 3 && count <= 6, \" 3_6?\");\nsend_code(s,REP_3_6,s.bl_tree);\nsend_bits(s,count-3,2);\n\n}else if(count<=10){\nsend_code(s,REPZ_3_10,s.bl_tree);\nsend_bits(s,count-3,3);\n\n}else{\nsend_code(s,REPZ_11_138,s.bl_tree);\nsend_bits(s,count-11,7);\n}\n\ncount=0;\nprevlen=curlen;\nif(nextlen===0){\nmax_count=138;\nmin_count=3;\n\n}else if(curlen===nextlen){\nmax_count=6;\nmin_count=3;\n\n}else{\nmax_count=7;\nmin_count=4;\n}\n}\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s){\nvar max_blindex;/* index of last bit length code of non zero freq */\n\n/* Determine the bit length frequencies for literal and distance trees */\nscan_tree(s,s.dyn_ltree,s.l_desc.max_code);\nscan_tree(s,s.dyn_dtree,s.d_desc.max_code);\n\n/* Build the bit length tree: */\nbuild_tree(s,s.bl_desc);\n/* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n/* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\nfor(max_blindex=BL_CODES-1;max_blindex>=3;max_blindex--){\nif(s.bl_tree[bl_order[max_blindex]*2+1]/*.Len*/!==0){\nbreak;\n}\n}\n/* Update opt_len to include the bit length tree and counts */\ns.opt_len+=3*(max_blindex+1)+5+5+4;\n//Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n//        s->opt_len, s->static_len));\n\nreturn max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s,lcodes,dcodes,blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\nvar rank;/* index in bl_order */\n\n//Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n//Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n//        \"too many codes\");\n//Tracev((stderr, \"\\nbl counts: \"));\nsend_bits(s,lcodes-257,5);/* not +255 as stated in appnote.txt */\nsend_bits(s,dcodes-1,5);\nsend_bits(s,blcodes-4,4);/* not -3 as stated in appnote.txt */\nfor(rank=0;rank<blcodes;rank++){\n//Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\nsend_bits(s,s.bl_tree[bl_order[rank]*2+1]/*.Len*/,3);\n}\n//Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\nsend_tree(s,s.dyn_ltree,lcodes-1);/* literal tree */\n//Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\nsend_tree(s,s.dyn_dtree,dcodes-1);/* distance tree */\n//Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s){\n/* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\nvar black_mask=0xf3ffc07f;\nvar n;\n\n/* Check for non-textual (\"black-listed\") bytes. */\nfor(n=0;n<=31;n++,black_mask>>>=1){\nif(black_mask&1&&s.dyn_ltree[n*2]/*.Freq*/!==0){\nreturn Z_BINARY;\n}\n}\n\n/* Check for textual (\"white-listed\") bytes. */\nif(s.dyn_ltree[9*2]/*.Freq*/!==0||s.dyn_ltree[10*2]/*.Freq*/!==0||\ns.dyn_ltree[13*2]/*.Freq*/!==0){\nreturn Z_TEXT;\n}\nfor(n=32;n<LITERALS;n++){\nif(s.dyn_ltree[n*2]/*.Freq*/!==0){\nreturn Z_TEXT;\n}\n}\n\n/* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\nreturn Z_BINARY;\n}\n\n\nvar static_init_done=false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\nif(!static_init_done){\ntr_static_init();\nstatic_init_done=true;\n}\n\ns.l_desc=new TreeDesc(s.dyn_ltree,static_l_desc);\ns.d_desc=new TreeDesc(s.dyn_dtree,static_d_desc);\ns.bl_desc=new TreeDesc(s.bl_tree,static_bl_desc);\n\ns.bi_buf=0;\ns.bi_valid=0;\n\n/* Initialize the first block of the first file: */\ninit_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s,buf,stored_len,last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\nsend_bits(s,(STORED_BLOCK<<1)+(last?1:0),3);/* send block type */\ncopy_block(s,buf,stored_len,true);/* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s){\nsend_bits(s,STATIC_TREES<<1,3);\nsend_code(s,END_BLOCK,static_ltree);\nbi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s,buf,stored_len,last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\nvar opt_lenb,static_lenb;/* opt_len and static_len in bytes */\nvar max_blindex=0;/* index of last bit length code of non zero freq */\n\n/* Build the Huffman trees unless a stored block is forced */\nif(s.level>0){\n\n/* Check if the file is binary or text */\nif(s.strm.data_type===Z_UNKNOWN){\ns.strm.data_type=detect_data_type(s);\n}\n\n/* Construct the literal and distance trees */\nbuild_tree(s,s.l_desc);\n// Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n//        s->static_len));\n\nbuild_tree(s,s.d_desc);\n// Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n//        s->static_len));\n/* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n/* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\nmax_blindex=build_bl_tree(s);\n\n/* Determine the best encoding. Compute the block lengths in bytes. */\nopt_lenb=s.opt_len+3+7>>>3;\nstatic_lenb=s.static_len+3+7>>>3;\n\n// Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n//        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n//        s->last_lit));\n\nif(static_lenb<=opt_lenb){opt_lenb=static_lenb;}\n\n}else{\n// Assert(buf != (char*)0, \"lost buf\");\nopt_lenb=static_lenb=stored_len+5;/* force a stored block */\n}\n\nif(stored_len+4<=opt_lenb&&buf!==-1){\n/* 4: two words for the lengths */\n\n/* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n_tr_stored_block(s,buf,stored_len,last);\n\n}else if(s.strategy===Z_FIXED||static_lenb===opt_lenb){\n\nsend_bits(s,(STATIC_TREES<<1)+(last?1:0),3);\ncompress_block(s,static_ltree,static_dtree);\n\n}else{\nsend_bits(s,(DYN_TREES<<1)+(last?1:0),3);\nsend_all_trees(s,s.l_desc.max_code+1,s.d_desc.max_code+1,max_blindex+1);\ncompress_block(s,s.dyn_ltree,s.dyn_dtree);\n}\n// Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n/* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\ninit_block(s);\n\nif(last){\nbi_windup(s);\n}\n// Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n//       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s,dist,lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n//var out_length, in_length, dcode;\n\ns.pending_buf[s.d_buf+s.last_lit*2]=dist>>>8&0xff;\ns.pending_buf[s.d_buf+s.last_lit*2+1]=dist&0xff;\n\ns.pending_buf[s.l_buf+s.last_lit]=lc&0xff;\ns.last_lit++;\n\nif(dist===0){\n/* lc is the unmatched char */\ns.dyn_ltree[lc*2]/*.Freq*/++;\n}else{\ns.matches++;\n/* Here, lc is the match length - MIN_MATCH */\ndist--;/* dist = match distance - 1 */\n//Assert((ush)dist < (ush)MAX_DIST(s) &&\n//       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n//       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\ns.dyn_ltree[(_length_code[lc]+LITERALS+1)*2]/*.Freq*/++;\ns.dyn_dtree[d_code(dist)*2]/*.Freq*/++;\n}\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\nreturn s.last_lit===s.lit_bufsize-1;\n/* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init=_tr_init;\nexports._tr_stored_block=_tr_stored_block;\nexports._tr_flush_block=_tr_flush_block;\nexports._tr_tally=_tr_tally;\nexports._tr_align=_tr_align;\n\n},{\"../utils/common\":179}],191:[function(require,module,exports){\n'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream(){\n/* next input byte */\nthis.input=null;// JS specific, because we have no pointers\nthis.next_in=0;\n/* number of bytes available at input */\nthis.avail_in=0;\n/* total number of input bytes read so far */\nthis.total_in=0;\n/* next output byte should be put there */\nthis.output=null;// JS specific, because we have no pointers\nthis.next_out=0;\n/* remaining free space at output */\nthis.avail_out=0;\n/* total number of bytes output so far */\nthis.total_out=0;\n/* last error message, NULL if no error */\nthis.msg=''/*Z_NULL*/;\n/* not visible by applications */\nthis.state=null;\n/* best guess about the data type: binary or text */\nthis.data_type=2/*Z_UNKNOWN*/;\n/* adler32 value of the uncompressed data */\nthis.adler=0;\n}\n\nmodule.exports=ZStream;\n\n},{}],192:[function(require,module,exports){\nmodule.exports=function parseBMFontAscii(data){\nif(!data)\nthrow new Error('no data provided');\ndata=data.toString().trim();\n\nvar output={\npages:[],\nchars:[],\nkernings:[]};\n\n\nvar lines=data.split(/\\r\\n?|\\n/g);\n\nif(lines.length===0)\nthrow new Error('no data in BMFont file');\n\nfor(var i=0;i<lines.length;i++){\nvar lineData=splitLine(lines[i],i);\nif(!lineData)//skip empty lines\ncontinue;\n\nif(lineData.key==='page'){\nif(typeof lineData.data.id!=='number')\nthrow new Error('malformed file at line '+i+' -- needs page id=N');\nif(typeof lineData.data.file!=='string')\nthrow new Error('malformed file at line '+i+' -- needs page file=\"path\"');\noutput.pages[lineData.data.id]=lineData.data.file;\n}else if(lineData.key==='chars'||lineData.key==='kernings'){\n//... do nothing for these two ...\n}else if(lineData.key==='char'){\noutput.chars.push(lineData.data);\n}else if(lineData.key==='kerning'){\noutput.kernings.push(lineData.data);\n}else{\noutput[lineData.key]=lineData.data;\n}\n}\n\nreturn output;\n};\n\nfunction splitLine(line,idx){\nline=line.replace(/\\t+/g,' ').trim();\nif(!line)\nreturn null;\n\nvar space=line.indexOf(' ');\nif(space===-1)\nthrow new Error(\"no named row at line \"+idx);\n\nvar key=line.substring(0,space);\n\nline=line.substring(space+1);\n//clear \"letter\" field as it is non-standard and\n//requires additional complexity to parse \" / = symbols\nline=line.replace(/letter=[\\'\\\"]\\S+[\\'\\\"]/gi,'');\nline=line.split(\"=\");\nline=line.map(function(str){\nreturn str.trim().match(/(\".*?\"|[^\"\\s]+)+(?=\\s*|\\s*$)/g);\n});\n\nvar data=[];\nfor(var i=0;i<line.length;i++){\nvar dt=line[i];\nif(i===0){\ndata.push({\nkey:dt[0],\ndata:\"\"});\n\n}else if(i===line.length-1){\ndata[data.length-1].data=parseData(dt[0]);\n}else{\ndata[data.length-1].data=parseData(dt[0]);\ndata.push({\nkey:dt[1],\ndata:\"\"});\n\n}\n}\n\nvar out={\nkey:key,\ndata:{}};\n\n\ndata.forEach(function(v){\nout.data[v.key]=v.data;\n});\n\nreturn out;\n}\n\nfunction parseData(data){\nif(!data||data.length===0)\nreturn\"\";\n\nif(data.indexOf('\"')===0||data.indexOf(\"'\")===0)\nreturn data.substring(1,data.length-1);\nif(data.indexOf(',')!==-1)\nreturn parseIntList(data);\nreturn parseInt(data,10);\n}\n\nfunction parseIntList(data){\nreturn data.split(',').map(function(val){\nreturn parseInt(val,10);\n});\n}\n},{}],193:[function(require,module,exports){\nvar HEADER=[66,77,70];\n\nmodule.exports=function readBMFontBinary(buf){\nif(buf.length<6)\nthrow new Error('invalid buffer length for BMFont');\n\nvar header=HEADER.every(function(byte,i){\nreturn buf.readUInt8(i)===byte;\n});\n\nif(!header)\nthrow new Error('BMFont missing BMF byte header');\n\nvar i=3;\nvar vers=buf.readUInt8(i++);\nif(vers>3)\nthrow new Error('Only supports BMFont Binary v3 (BMFont App v1.10)');\n\nvar target={kernings:[],chars:[]};\nfor(var b=0;b<5;b++){\ni+=readBlock(target,buf,i);}\nreturn target;\n};\n\nfunction readBlock(target,buf,i){\nif(i>buf.length-1)\nreturn 0;\n\nvar blockID=buf.readUInt8(i++);\nvar blockSize=buf.readInt32LE(i);\ni+=4;\n\nswitch(blockID){\ncase 1:\ntarget.info=readInfo(buf,i);\nbreak;\ncase 2:\ntarget.common=readCommon(buf,i);\nbreak;\ncase 3:\ntarget.pages=readPages(buf,i,blockSize);\nbreak;\ncase 4:\ntarget.chars=readChars(buf,i,blockSize);\nbreak;\ncase 5:\ntarget.kernings=readKernings(buf,i,blockSize);\nbreak;}\n\nreturn 5+blockSize;\n}\n\nfunction readInfo(buf,i){\nvar info={};\ninfo.size=buf.readInt16LE(i);\n\nvar bitField=buf.readUInt8(i+2);\ninfo.smooth=bitField>>7&1;\ninfo.unicode=bitField>>6&1;\ninfo.italic=bitField>>5&1;\ninfo.bold=bitField>>4&1;\n\n//fixedHeight is only mentioned in binary spec \nif(bitField>>3&1)\ninfo.fixedHeight=1;\n\ninfo.charset=buf.readUInt8(i+3)||'';\ninfo.stretchH=buf.readUInt16LE(i+4);\ninfo.aa=buf.readUInt8(i+6);\ninfo.padding=[\nbuf.readInt8(i+7),\nbuf.readInt8(i+8),\nbuf.readInt8(i+9),\nbuf.readInt8(i+10)];\n\ninfo.spacing=[\nbuf.readInt8(i+11),\nbuf.readInt8(i+12)];\n\ninfo.outline=buf.readUInt8(i+13);\ninfo.face=readStringNT(buf,i+14);\nreturn info;\n}\n\nfunction readCommon(buf,i){\nvar common={};\ncommon.lineHeight=buf.readUInt16LE(i);\ncommon.base=buf.readUInt16LE(i+2);\ncommon.scaleW=buf.readUInt16LE(i+4);\ncommon.scaleH=buf.readUInt16LE(i+6);\ncommon.pages=buf.readUInt16LE(i+8);\nvar bitField=buf.readUInt8(i+10);\ncommon.packed=0;\ncommon.alphaChnl=buf.readUInt8(i+11);\ncommon.redChnl=buf.readUInt8(i+12);\ncommon.greenChnl=buf.readUInt8(i+13);\ncommon.blueChnl=buf.readUInt8(i+14);\nreturn common;\n}\n\nfunction readPages(buf,i,size){\nvar pages=[];\nvar text=readNameNT(buf,i);\nvar len=text.length+1;\nvar count=size/len;\nfor(var c=0;c<count;c++){\npages[c]=buf.slice(i,i+text.length).toString('utf8');\ni+=len;\n}\nreturn pages;\n}\n\nfunction readChars(buf,i,blockSize){\nvar chars=[];\n\nvar count=blockSize/20;\nfor(var c=0;c<count;c++){\nvar char={};\nvar off=c*20;\nchar.id=buf.readUInt32LE(i+0+off);\nchar.x=buf.readUInt16LE(i+4+off);\nchar.y=buf.readUInt16LE(i+6+off);\nchar.width=buf.readUInt16LE(i+8+off);\nchar.height=buf.readUInt16LE(i+10+off);\nchar.xoffset=buf.readInt16LE(i+12+off);\nchar.yoffset=buf.readInt16LE(i+14+off);\nchar.xadvance=buf.readInt16LE(i+16+off);\nchar.page=buf.readUInt8(i+18+off);\nchar.chnl=buf.readUInt8(i+19+off);\nchars[c]=char;\n}\nreturn chars;\n}\n\nfunction readKernings(buf,i,blockSize){\nvar kernings=[];\nvar count=blockSize/10;\nfor(var c=0;c<count;c++){\nvar kern={};\nvar off=c*10;\nkern.first=buf.readUInt32LE(i+0+off);\nkern.second=buf.readUInt32LE(i+4+off);\nkern.amount=buf.readInt16LE(i+8+off);\nkernings[c]=kern;\n}\nreturn kernings;\n}\n\nfunction readNameNT(buf,offset){\nvar pos=offset;\nfor(;pos<buf.length;pos++){\nif(buf[pos]===0x00)\nbreak;\n}\nreturn buf.slice(offset,pos);\n}\n\nfunction readStringNT(buf,offset){\nreturn readNameNT(buf,offset).toString('utf8');\n}\n},{}],194:[function(require,module,exports){\nvar parseAttributes=require('./parse-attribs');\nvar parseFromString=require('xml-parse-from-string');\n\n//In some cases element.attribute.nodeName can return\n//all lowercase values.. so we need to map them to the correct \n//case\nvar NAME_MAP={\nscaleh:'scaleH',\nscalew:'scaleW',\nstretchh:'stretchH',\nlineheight:'lineHeight',\nalphachnl:'alphaChnl',\nredchnl:'redChnl',\ngreenchnl:'greenChnl',\nbluechnl:'blueChnl'};\n\n\nmodule.exports=function parse(data){\ndata=data.toString();\n\nvar xmlRoot=parseFromString(data);\nvar output={\npages:[],\nchars:[],\nkernings:[]\n\n\n//get config settings\n};['info','common'].forEach(function(key){\nvar element=xmlRoot.getElementsByTagName(key)[0];\nif(element)\noutput[key]=parseAttributes(getAttribs(element));\n});\n\n//get page info\nvar pageRoot=xmlRoot.getElementsByTagName('pages')[0];\nif(!pageRoot)\nthrow new Error('malformed file -- no <pages> element');\nvar pages=pageRoot.getElementsByTagName('page');\nfor(var i=0;i<pages.length;i++){\nvar p=pages[i];\nvar id=parseInt(p.getAttribute('id'),10);\nvar file=p.getAttribute('file');\nif(isNaN(id))\nthrow new Error('malformed file -- page \"id\" attribute is NaN');\nif(!file)\nthrow new Error('malformed file -- needs page \"file\" attribute');\noutput.pages[parseInt(id,10)]=file;\n}\n\n//get kernings / chars\n;['chars','kernings'].forEach(function(key){\nvar element=xmlRoot.getElementsByTagName(key)[0];\nif(!element)\nreturn;\nvar childTag=key.substring(0,key.length-1);\nvar children=element.getElementsByTagName(childTag);\nfor(var i=0;i<children.length;i++){\nvar child=children[i];\noutput[key].push(parseAttributes(getAttribs(child)));\n}\n});\nreturn output;\n};\n\nfunction getAttribs(element){\nvar attribs=getAttribList(element);\nreturn attribs.reduce(function(dict,attrib){\nvar key=mapName(attrib.nodeName);\ndict[key]=attrib.nodeValue;\nreturn dict;\n},{});\n}\n\nfunction getAttribList(element){\n//IE8+ and modern browsers\nvar attribs=[];\nfor(var i=0;i<element.attributes.length;i++){\nattribs.push(element.attributes[i]);}\nreturn attribs;\n}\n\nfunction mapName(nodeName){\nreturn NAME_MAP[nodeName.toLowerCase()]||nodeName;\n}\n},{\"./parse-attribs\":195,\"xml-parse-from-string\":260}],195:[function(require,module,exports){\n//Some versions of GlyphDesigner have a typo\n//that causes some bugs with parsing. \n//Need to confirm with recent version of the software\n//to see whether this is still an issue or not.\nvar GLYPH_DESIGNER_ERROR='chasrset';\n\nmodule.exports=function parseAttributes(obj){\nif(GLYPH_DESIGNER_ERROR in obj){\nobj['charset']=obj[GLYPH_DESIGNER_ERROR];\ndelete obj[GLYPH_DESIGNER_ERROR];\n}\n\nfor(var k in obj){\nif(k==='face'||k==='charset')\ncontinue;else\nif(k==='padding'||k==='spacing')\nobj[k]=parseIntList(obj[k]);else\n\nobj[k]=parseInt(obj[k],10);\n}\nreturn obj;\n};\n\nfunction parseIntList(data){\nreturn data.split(',').map(function(val){\nreturn parseInt(val,10);\n});\n}\n},{}],196:[function(require,module,exports){\nvar trim=require('trim'),\nforEach=require('for-each'),\nisArray=function isArray(arg){\nreturn Object.prototype.toString.call(arg)==='[object Array]';\n};\n\nmodule.exports=function(headers){\nif(!headers)\nreturn{};\n\nvar result={};\n\nforEach(\ntrim(headers).split('\\n'),\nfunction(row){\nvar index=row.indexOf(':'),\nkey=trim(row.slice(0,index)).toLowerCase(),\nvalue=trim(row.slice(index+1));\n\nif(typeof result[key]==='undefined'){\nresult[key]=value;\n}else if(isArray(result[key])){\nresult[key].push(value);\n}else{\nresult[key]=[result[key],value];\n}\n});\n\n\nreturn result;\n};\n},{\"for-each\":162,\"trim\":252}],197:[function(require,module,exports){\n(function(process){\n// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts,allowAboveRoot){\n// if the path tries to go above the root, `up` ends up > 0\nvar up=0;\nfor(var i=parts.length-1;i>=0;i--){\nvar last=parts[i];\nif(last==='.'){\nparts.splice(i,1);\n}else if(last==='..'){\nparts.splice(i,1);\nup++;\n}else if(up){\nparts.splice(i,1);\nup--;\n}\n}\n\n// if the path is allowed to go above the root, restore leading ..s\nif(allowAboveRoot){\nfor(;up--;up){\nparts.unshift('..');\n}\n}\n\nreturn parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve=function(){\nvar resolvedPath='',\nresolvedAbsolute=false;\n\nfor(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){\nvar path=i>=0?arguments[i]:process.cwd();\n\n// Skip empty and invalid entries\nif(typeof path!=='string'){\nthrow new TypeError('Arguments to path.resolve must be strings');\n}else if(!path){\ncontinue;\n}\n\nresolvedPath=path+'/'+resolvedPath;\nresolvedAbsolute=path.charAt(0)==='/';\n}\n\n// At this point the path should be resolved to a full absolute path, but\n// handle relative paths to be safe (might happen when process.cwd() fails)\n\n// Normalize the path\nresolvedPath=normalizeArray(filter(resolvedPath.split('/'),function(p){\nreturn!!p;\n}),!resolvedAbsolute).join('/');\n\nreturn(resolvedAbsolute?'/':'')+resolvedPath||'.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize=function(path){\nvar isAbsolute=exports.isAbsolute(path),\ntrailingSlash=substr(path,-1)==='/';\n\n// Normalize the path\npath=normalizeArray(filter(path.split('/'),function(p){\nreturn!!p;\n}),!isAbsolute).join('/');\n\nif(!path&&!isAbsolute){\npath='.';\n}\nif(path&&trailingSlash){\npath+='/';\n}\n\nreturn(isAbsolute?'/':'')+path;\n};\n\n// posix version\nexports.isAbsolute=function(path){\nreturn path.charAt(0)==='/';\n};\n\n// posix version\nexports.join=function(){\nvar paths=Array.prototype.slice.call(arguments,0);\nreturn exports.normalize(filter(paths,function(p,index){\nif(typeof p!=='string'){\nthrow new TypeError('Arguments to path.join must be strings');\n}\nreturn p;\n}).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative=function(from,to){\nfrom=exports.resolve(from).substr(1);\nto=exports.resolve(to).substr(1);\n\nfunction trim(arr){\nvar start=0;\nfor(;start<arr.length;start++){\nif(arr[start]!=='')break;\n}\n\nvar end=arr.length-1;\nfor(;end>=0;end--){\nif(arr[end]!=='')break;\n}\n\nif(start>end)return[];\nreturn arr.slice(start,end-start+1);\n}\n\nvar fromParts=trim(from.split('/'));\nvar toParts=trim(to.split('/'));\n\nvar length=Math.min(fromParts.length,toParts.length);\nvar samePartsLength=length;\nfor(var i=0;i<length;i++){\nif(fromParts[i]!==toParts[i]){\nsamePartsLength=i;\nbreak;\n}\n}\n\nvar outputParts=[];\nfor(var i=samePartsLength;i<fromParts.length;i++){\noutputParts.push('..');\n}\n\noutputParts=outputParts.concat(toParts.slice(samePartsLength));\n\nreturn outputParts.join('/');\n};\n\nexports.sep='/';\nexports.delimiter=':';\n\nexports.dirname=function(path){\nif(typeof path!=='string')path=path+'';\nif(path.length===0)return'.';\nvar code=path.charCodeAt(0);\nvar hasRoot=code===47/*/*/;\nvar end=-1;\nvar matchedSlash=true;\nfor(var i=path.length-1;i>=1;--i){\ncode=path.charCodeAt(i);\nif(code===47/*/*/){\nif(!matchedSlash){\nend=i;\nbreak;\n}\n}else{\n// We saw the first non-path separator\nmatchedSlash=false;\n}\n}\n\nif(end===-1)return hasRoot?'/':'.';\nif(hasRoot&&end===1){\n// return '//';\n// Backwards-compat fix:\nreturn'/';\n}\nreturn path.slice(0,end);\n};\n\nfunction basename(path){\nif(typeof path!=='string')path=path+'';\n\nvar start=0;\nvar end=-1;\nvar matchedSlash=true;\nvar i;\n\nfor(i=path.length-1;i>=0;--i){\nif(path.charCodeAt(i)===47/*/*/){\n// If we reached a path separator that was not part of a set of path\n// separators at the end of the string, stop now\nif(!matchedSlash){\nstart=i+1;\nbreak;\n}\n}else if(end===-1){\n// We saw the first non-path separator, mark this as the end of our\n// path component\nmatchedSlash=false;\nend=i+1;\n}\n}\n\nif(end===-1)return'';\nreturn path.slice(start,end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename=function(path,ext){\nvar f=basename(path);\nif(ext&&f.substr(-1*ext.length)===ext){\nf=f.substr(0,f.length-ext.length);\n}\nreturn f;\n};\n\nexports.extname=function(path){\nif(typeof path!=='string')path=path+'';\nvar startDot=-1;\nvar startPart=0;\nvar end=-1;\nvar matchedSlash=true;\n// Track the state of characters (if any) we see before our first dot and\n// after any path separator we find\nvar preDotState=0;\nfor(var i=path.length-1;i>=0;--i){\nvar code=path.charCodeAt(i);\nif(code===47/*/*/){\n// If we reached a path separator that was not part of a set of path\n// separators at the end of the string, stop now\nif(!matchedSlash){\nstartPart=i+1;\nbreak;\n}\ncontinue;\n}\nif(end===-1){\n// We saw the first non-path separator, mark this as the end of our\n// extension\nmatchedSlash=false;\nend=i+1;\n}\nif(code===46/*.*/){\n// If this is our first dot, mark it as the start of our extension\nif(startDot===-1)\nstartDot=i;else\nif(preDotState!==1)\npreDotState=1;\n}else if(startDot!==-1){\n// We saw a non-dot and non-path separator before our dot, so we should\n// have a good chance at having a non-empty extension\npreDotState=-1;\n}\n}\n\nif(startDot===-1||end===-1||\n// We saw a non-dot character immediately before the dot\npreDotState===0||\n// The (right-most) trimmed path component is exactly '..'\npreDotState===1&&startDot===end-1&&startDot===startPart+1){\nreturn'';\n}\nreturn path.slice(startDot,end);\n};\n\nfunction filter(xs,f){\nif(xs.filter)return xs.filter(f);\nvar res=[];\nfor(var i=0;i<xs.length;i++){\nif(f(xs[i],i,xs))res.push(xs[i]);\n}\nreturn res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr='ab'.substr(-1)==='b'?\nfunction(str,start,len){return str.substr(start,len);}:\nfunction(str,start,len){\nif(start<0)start=str.length+start;\nreturn str.substr(start,len);\n};\n\n\n}).call(this,require('_process'));\n},{\"_process\":223}],198:[function(require,module,exports){\n(function(Buffer){\n'use strict';var _typeof=typeof Symbol==='function'&&typeof Symbol.iterator==='symbol'?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==='function'&&obj.constructor===Symbol&&obj!==Symbol.prototype?'symbol':typeof obj;};var http=require('http');var https=require('https');var url=require('url');var qs=require('querystring');var zlib=require('zlib');var util=require('util');var phin=function phin(opts,cb){if(typeof opts!=='string'){if(!opts.hasOwnProperty('url')){throw new Error('Missing url option from options for request method.');}}var addr=(typeof opts==='undefined'?'undefined':_typeof(opts))==='object'?url.parse(opts.url):url.parse(opts);var options={'hostname':addr.hostname,'port':addr.port||(addr.protocol.toLowerCase()==='http:'?80:443),'path':addr.path,'method':'GET','headers':{},'auth':addr.auth||null,'parse':'none','stream':false};if((typeof opts==='undefined'?'undefined':_typeof(opts))==='object'){options=Object.assign(options,opts);}options.port=Number(options.port);if(options.hasOwnProperty('timeout'))delete options.timeout;if(options.compressed===true){options.headers['accept-encoding']='gzip, deflate';}if(opts.hasOwnProperty('form')){if(_typeof(opts.form)!=='object'){throw new Error('phin \\'form\\' option must be of type Object if present.');}var formDataString=qs.stringify(opts.form);options.headers['Content-Type']='application/x-www-form-urlencoded';options.headers['Content-Length']=Buffer.byteLength(formDataString);opts.data=formDataString;}var req=void 0;var resHandler=function resHandler(res){var stream=res;if(options.compressed===true){if(res.headers['content-encoding']==='gzip'){stream=res.pipe(zlib.createGunzip());}else if(res.headers['content-encoding']==='deflate'){stream=res.pipe(zlib.createInflate());}}if(options.stream===true){res.stream=stream;cb(null,res);}else{res.body=new Buffer([]);stream.on('data',function(chunk){res.body=Buffer.concat([res.body,chunk]);});stream.on('end',function(){if(cb){if(options.parse==='json'){try{res.body=JSON.parse(res.body.toString());}catch(err){cb('Invalid JSON received.',res);return;}}cb(null,res);}});}};switch(addr.protocol.toLowerCase()){case'http:':req=http.request(options,resHandler);break;case'https:':req=https.request(options,resHandler);break;default:if(cb){cb(new Error('Invalid / unknown URL protocol. Expected HTTP or HTTPS.'),null);}return;}if(typeof opts.timeout==='number'){req.setTimeout(opts.timeout,function(){req.abort();cb(new Error('Timeout has been reached.'),null);cb=null;});}req.on('error',function(err){if(cb){cb(err,null);}});if(opts.hasOwnProperty('data')){var postData=opts.data;if(!(opts.data instanceof Buffer)&&_typeof(opts.data)==='object'){var contentType=options.headers['content-type']||options.headers['Content-Type'];if(contentType==='application/x-www-form-urlencoded'){postData=qs.stringify(opts.data);}else{try{postData=JSON.stringify(opts.data);}catch(err){cb(new Error('Couldn\\'t stringify object. (Likely due to a circular reference.)'),null);}}}req.write(postData);}req.end();};phin.promisified=function(opts,http){return new Promise(function(resolve,reject){phin(opts,function(err,res){if(err){reject(err);}else{resolve(res);}},http);});};if(util.promisify){phin[util.promisify.custom]=phin.promisified;}module.exports=phin;\n\n}).call(this,require(\"buffer\").Buffer);\n},{\"buffer\":16,\"http\":243,\"https\":164,\"querystring\":227,\"url\":253,\"util\":258,\"zlib\":13}],199:[function(require,module,exports){\n'use strict';\n\nmodule.exports=pixelmatch;\n\nfunction pixelmatch(img1,img2,output,width,height,options){\n\nif(!options)options={};\n\nvar threshold=options.threshold===undefined?0.1:options.threshold;\n\n// maximum acceptable square distance between two colors;\n// 35215 is the maximum possible value for the YIQ difference metric\nvar maxDelta=35215*threshold*threshold,\ndiff=0;\n\n// compare each pixel of one image against the other one\nfor(var y=0;y<height;y++){\nfor(var x=0;x<width;x++){\n\nvar pos=(y*width+x)*4;\n\n// squared YUV distance between colors at this pixel position\nvar delta=colorDelta(img1,img2,pos,pos);\n\n// the color difference is above the threshold\nif(delta>maxDelta){\n// check it's a real rendering difference or just anti-aliasing\nif(!options.includeAA&&(antialiased(img1,x,y,width,height,img2)||\nantialiased(img2,x,y,width,height,img1))){\n// one of the pixels is anti-aliasing; draw as yellow and do not count as difference\nif(output)drawPixel(output,pos,255,255,0);\n\n}else{\n// found substantial difference not caused by anti-aliasing; draw it as red\nif(output)drawPixel(output,pos,255,0,0);\ndiff++;\n}\n\n}else if(output){\n// pixels are similar; draw background as grayscale image blended with white\nvar val=blend(grayPixel(img1,pos),0.1);\ndrawPixel(output,pos,val,val,val);\n}\n}\n}\n\n// return the number of different pixels\nreturn diff;\n}\n\n// check if a pixel is likely a part of anti-aliasing;\n// based on \"Anti-aliased Pixel and Intensity Slope Detector\" paper by V. Vysniauskas, 2009\n\nfunction antialiased(img,x1,y1,width,height,img2){\nvar x0=Math.max(x1-1,0),\ny0=Math.max(y1-1,0),\nx2=Math.min(x1+1,width-1),\ny2=Math.min(y1+1,height-1),\npos=(y1*width+x1)*4,\nzeroes=0,\npositives=0,\nnegatives=0,\nmin=0,\nmax=0,\nminX,minY,maxX,maxY;\n\n// go through 8 adjacent pixels\nfor(var x=x0;x<=x2;x++){\nfor(var y=y0;y<=y2;y++){\nif(x===x1&&y===y1)continue;\n\n// brightness delta between the center pixel and adjacent one\nvar delta=colorDelta(img,img,pos,(y*width+x)*4,true);\n\n// count the number of equal, darker and brighter adjacent pixels\nif(delta===0)zeroes++;else\nif(delta<0)negatives++;else\nif(delta>0)positives++;\n\n// if found more than 2 equal siblings, it's definitely not anti-aliasing\nif(zeroes>2)return false;\n\nif(!img2)continue;\n\n// remember the darkest pixel\nif(delta<min){\nmin=delta;\nminX=x;\nminY=y;\n}\n// remember the brightest pixel\nif(delta>max){\nmax=delta;\nmaxX=x;\nmaxY=y;\n}\n}\n}\n\nif(!img2)return true;\n\n// if there are no both darker and brighter pixels among siblings, it's not anti-aliasing\nif(negatives===0||positives===0)return false;\n\n// if either the darkest or the brightest pixel has more than 2 equal siblings in both images\n// (definitely not anti-aliased), this pixel is anti-aliased\nreturn!antialiased(img,minX,minY,width,height)&&!antialiased(img2,minX,minY,width,height)||\n!antialiased(img,maxX,maxY,width,height)&&!antialiased(img2,maxX,maxY,width,height);\n}\n\n// calculate color difference according to the paper \"Measuring perceived color difference\n// using YIQ NTSC transmission color space in mobile applications\" by Y. Kotsarenko and F. Ramos\n\nfunction colorDelta(img1,img2,k,m,yOnly){\nvar a1=img1[k+3]/255,\na2=img2[m+3]/255,\n\nr1=blend(img1[k+0],a1),\ng1=blend(img1[k+1],a1),\nb1=blend(img1[k+2],a1),\n\nr2=blend(img2[m+0],a2),\ng2=blend(img2[m+1],a2),\nb2=blend(img2[m+2],a2),\n\ny=rgb2y(r1,g1,b1)-rgb2y(r2,g2,b2);\n\nif(yOnly)return y;// brightness difference only\n\nvar i=rgb2i(r1,g1,b1)-rgb2i(r2,g2,b2),\nq=rgb2q(r1,g1,b1)-rgb2q(r2,g2,b2);\n\nreturn 0.5053*y*y+0.299*i*i+0.1957*q*q;\n}\n\nfunction rgb2y(r,g,b){return r*0.29889531+g*0.58662247+b*0.11448223;}\nfunction rgb2i(r,g,b){return r*0.59597799-g*0.27417610-b*0.32180189;}\nfunction rgb2q(r,g,b){return r*0.21147017-g*0.52261711+b*0.31114694;}\n\n// blend semi-transparent color with white\nfunction blend(c,a){\nreturn 255+(c-255)*a;\n}\n\nfunction drawPixel(output,pos,r,g,b){\noutput[pos+0]=r;\noutput[pos+1]=g;\noutput[pos+2]=b;\noutput[pos+3]=255;\n}\n\nfunction grayPixel(img,i){\nvar a=img[i+3]/255,\nr=blend(img[i+0],a),\ng=blend(img[i+1],a),\nb=blend(img[i+2],a);\nreturn rgb2y(r,g,b);\n}\n\n},{}],200:[function(require,module,exports){\n(function(Buffer){\n'use strict';\n\nvar interlaceUtils=require('./interlace');\n\nvar pixelBppMap={\n1:{// L\n0:0,\n1:0,\n2:0,\n3:0xff},\n\n2:{// LA\n0:0,\n1:0,\n2:0,\n3:1},\n\n3:{// RGB\n0:0,\n1:1,\n2:2,\n3:0xff},\n\n4:{// RGBA\n0:0,\n1:1,\n2:2,\n3:3}};\n\n\n\nfunction bitRetriever(data,depth){\n\nvar leftOver=[];\nvar i=0;\n\nfunction split(){\nif(i===data.length){\nthrow new Error('Ran out of data');\n}\nvar byte=data[i];\ni++;\nvar byte8,byte7,byte6,byte5,byte4,byte3,byte2,byte1;\nswitch(depth){\ndefault:\nthrow new Error('unrecognised depth');\ncase 16:\nbyte2=data[i];\ni++;\nleftOver.push((byte<<8)+byte2);\nbreak;\ncase 4:\nbyte2=byte&0x0f;\nbyte1=byte>>4;\nleftOver.push(byte1,byte2);\nbreak;\ncase 2:\nbyte4=byte&3;\nbyte3=byte>>2&3;\nbyte2=byte>>4&3;\nbyte1=byte>>6&3;\nleftOver.push(byte1,byte2,byte3,byte4);\nbreak;\ncase 1:\nbyte8=byte&1;\nbyte7=byte>>1&1;\nbyte6=byte>>2&1;\nbyte5=byte>>3&1;\nbyte4=byte>>4&1;\nbyte3=byte>>5&1;\nbyte2=byte>>6&1;\nbyte1=byte>>7&1;\nleftOver.push(byte1,byte2,byte3,byte4,byte5,byte6,byte7,byte8);\nbreak;}\n\n}\n\nreturn{\nget:function get(count){\nwhile(leftOver.length<count){\nsplit();\n}\nvar returner=leftOver.slice(0,count);\nleftOver=leftOver.slice(count);\nreturn returner;\n},\nresetAfterLine:function resetAfterLine(){\nleftOver.length=0;\n},\nend:function end(){\nif(i!==data.length){\nthrow new Error('extra data found');\n}\n}};\n\n}\n\nfunction mapImage8Bit(image,pxData,getPxPos,bpp,data,rawPos){// eslint-disable-line max-params\nvar imageWidth=image.width;\nvar imageHeight=image.height;\nvar imagePass=image.index;\nfor(var y=0;y<imageHeight;y++){\nfor(var x=0;x<imageWidth;x++){\nvar pxPos=getPxPos(x,y,imagePass);\n\nfor(var i=0;i<4;i++){\nvar idx=pixelBppMap[bpp][i];\nif(idx===0xff){\npxData[pxPos+i]=0xff;\n}else{\nvar dataPos=idx+rawPos;\nif(dataPos===data.length){\nthrow new Error('Ran out of data');\n}\npxData[pxPos+i]=data[dataPos];\n}\n}\nrawPos+=bpp;//eslint-disable-line no-param-reassign\n}\n}\nreturn rawPos;\n}\n\nfunction mapImageCustomBit(image,pxData,getPxPos,bpp,bits,maxBit){// eslint-disable-line max-params\nvar imageWidth=image.width;\nvar imageHeight=image.height;\nvar imagePass=image.index;\nfor(var y=0;y<imageHeight;y++){\nfor(var x=0;x<imageWidth;x++){\nvar pixelData=bits.get(bpp);\nvar pxPos=getPxPos(x,y,imagePass);\n\nfor(var i=0;i<4;i++){\nvar idx=pixelBppMap[bpp][i];\npxData[pxPos+i]=idx!==0xff?pixelData[idx]:maxBit;\n}\n}\nbits.resetAfterLine();\n}\n}\n\nexports.dataToBitMap=function(data,bitmapInfo){\n\nvar width=bitmapInfo.width;\nvar height=bitmapInfo.height;\nvar depth=bitmapInfo.depth;\nvar bpp=bitmapInfo.bpp;\nvar interlace=bitmapInfo.interlace;\n\nif(depth!==8){\nvar bits=bitRetriever(data,depth);\n}\nvar pxData;\nif(depth<=8){\npxData=new Buffer(width*height*4);\n}else\n{\npxData=new Uint16Array(width*height*4);\n}\nvar maxBit=Math.pow(2,depth)-1;\nvar rawPos=0;\nvar images;\nvar getPxPos;\n\nif(interlace){\nimages=interlaceUtils.getImagePasses(width,height);\ngetPxPos=interlaceUtils.getInterlaceIterator(width,height);\n}else\n{\nvar nonInterlacedPxPos=0;\ngetPxPos=function getPxPos(){\nvar returner=nonInterlacedPxPos;\nnonInterlacedPxPos+=4;\nreturn returner;\n};\nimages=[{width:width,height:height}];\n}\n\nfor(var imageIndex=0;imageIndex<images.length;imageIndex++){\nif(depth===8){\nrawPos=mapImage8Bit(images[imageIndex],pxData,getPxPos,bpp,data,rawPos);\n}else\n{\nmapImageCustomBit(images[imageIndex],pxData,getPxPos,bpp,bits,maxBit);\n}\n}\nif(depth===8){\nif(rawPos!==data.length){\nthrow new Error('extra data found');\n}\n}else\n{\nbits.end();\n}\n\nreturn pxData;\n};\n\n}).call(this,require(\"buffer\").Buffer);\n},{\"./interlace\":210,\"buffer\":16}],201:[function(require,module,exports){\n(function(Buffer){\n'use strict';\n\nvar constants=require('./constants');\n\nmodule.exports=function(dataIn,width,height,options){\nvar outHasAlpha=[constants.COLORTYPE_COLOR_ALPHA,constants.COLORTYPE_ALPHA].indexOf(options.colorType)!==-1;\nif(options.colorType===options.inputColorType){\nvar bigEndian=function(){\nvar buffer=new ArrayBuffer(2);\nnew DataView(buffer).setInt16(0,256,true/* littleEndian */);\n// Int16Array uses the platform's endianness.\nreturn new Int16Array(buffer)[0]!==256;\n}();\n// If no need to convert to grayscale and alpha is present/absent in both, take a fast route\nif(options.bitDepth===8||options.bitDepth===16&&bigEndian){\nreturn dataIn;\n}\n}\n\n// map to a UInt16 array if data is 16bit, fix endianness below\nvar data=options.bitDepth!==16?dataIn:new Uint16Array(dataIn.buffer);\n\nvar maxValue=255;\nvar inBpp=constants.COLORTYPE_TO_BPP_MAP[options.inputColorType];\nif(inBpp==4&&!options.inputHasAlpha)inBpp=3;\nvar outBpp=constants.COLORTYPE_TO_BPP_MAP[options.colorType];\nif(options.bitDepth===16){\nmaxValue=65535;\noutBpp*=2;\n}\nvar outData=new Buffer(width*height*outBpp);\n\nvar inIndex=0;\nvar outIndex=0;\n\nvar bgColor=options.bgColor||{};\nif(bgColor.red===undefined){\nbgColor.red=maxValue;\n}\nif(bgColor.green===undefined){\nbgColor.green=maxValue;\n}\nif(bgColor.blue===undefined){\nbgColor.blue=maxValue;\n}\n\nfunction getRGBA(data,inIndex){\nvar red,green,blue,alpha=maxValue;\nswitch(options.inputColorType){\ncase constants.COLORTYPE_COLOR_ALPHA:\nalpha=data[inIndex+3];\nred=data[inIndex];\ngreen=data[inIndex+1];\nblue=data[inIndex+2];\nbreak;\ncase constants.COLORTYPE_COLOR:\nred=data[inIndex];\ngreen=data[inIndex+1];\nblue=data[inIndex+2];\nbreak;\ncase constants.COLORTYPE_ALPHA:\nalpha=data[inIndex+1];\nred=data[inIndex];\ngreen=red;\nblue=red;\nbreak;\ncase constants.COLORTYPE_GRAYSCALE:\nred=data[inIndex];\ngreen=red;\nblue=red;\nbreak;\ndefault:\nthrow new Error('input color type:'+options.inputColorType+' is not supported at present');}\n\n\nif(options.inputHasAlpha){\nif(!outHasAlpha){\nalpha/=maxValue;\nred=Math.min(Math.max(Math.round((1-alpha)*bgColor.red+alpha*red),0),maxValue);\ngreen=Math.min(Math.max(Math.round((1-alpha)*bgColor.green+alpha*green),0),maxValue);\nblue=Math.min(Math.max(Math.round((1-alpha)*bgColor.blue+alpha*blue),0),maxValue);\n}\n}\nreturn{red:red,green:green,blue:blue,alpha:alpha};\n}\n\nfor(var y=0;y<height;y++){\nfor(var x=0;x<width;x++){\nvar rgba=getRGBA(data,inIndex);\n\nswitch(options.colorType){\ncase constants.COLORTYPE_COLOR_ALPHA:\ncase constants.COLORTYPE_COLOR:\nif(options.bitDepth===8){\noutData[outIndex]=rgba.red;\noutData[outIndex+1]=rgba.green;\noutData[outIndex+2]=rgba.blue;\nif(outHasAlpha){\noutData[outIndex+3]=rgba.alpha;\n}\n}else{\noutData.writeUInt16BE(rgba.red,outIndex);\noutData.writeUInt16BE(rgba.green,outIndex+2);\noutData.writeUInt16BE(rgba.blue,outIndex+4);\nif(outHasAlpha){\noutData.writeUInt16BE(rgba.alpha,outIndex+6);\n}\n}\nbreak;\ncase constants.COLORTYPE_ALPHA:\ncase constants.COLORTYPE_GRAYSCALE:\n// Convert to grayscale and alpha\nvar grayscale=(rgba.red+rgba.green+rgba.blue)/3;\nif(options.bitDepth===8){\noutData[outIndex]=grayscale;\nif(outHasAlpha){\noutData[outIndex+1]=rgba.alpha;\n}\n}else{\noutData.writeUInt16BE(grayscale,outIndex);\nif(outHasAlpha){\noutData.writeUInt16BE(rgba.alpha,outIndex+2);\n}\n}\nbreak;}\n\n\ninIndex+=inBpp;\noutIndex+=outBpp;\n}\n}\n\nreturn outData;\n};\n\n}).call(this,require(\"buffer\").Buffer);\n},{\"./constants\":203,\"buffer\":16}],202:[function(require,module,exports){\n(function(process,Buffer){\n'use strict';\n\n\nvar util=require('util');\nvar Stream=require('stream');\n\n\nvar ChunkStream=module.exports=function(){\nStream.call(this);\n\nthis._buffers=[];\nthis._buffered=0;\n\nthis._reads=[];\nthis._paused=false;\n\nthis._encoding='utf8';\nthis.writable=true;\n};\nutil.inherits(ChunkStream,Stream);\n\n\nChunkStream.prototype.read=function(length,callback){\n\nthis._reads.push({\nlength:Math.abs(length),// if length < 0 then at most this length\nallowLess:length<0,\nfunc:callback});\n\n\nprocess.nextTick(function(){\nthis._process();\n\n// its paused and there is not enought data then ask for more\nif(this._paused&&this._reads.length>0){\nthis._paused=false;\n\nthis.emit('drain');\n}\n}.bind(this));\n};\n\nChunkStream.prototype.write=function(data,encoding){\n\nif(!this.writable){\nthis.emit('error',new Error('Stream not writable'));\nreturn false;\n}\n\nvar dataBuffer;\nif(Buffer.isBuffer(data)){\ndataBuffer=data;\n}else\n{\ndataBuffer=new Buffer(data,encoding||this._encoding);\n}\n\nthis._buffers.push(dataBuffer);\nthis._buffered+=dataBuffer.length;\n\nthis._process();\n\n// ok if there are no more read requests\nif(this._reads&&this._reads.length===0){\nthis._paused=true;\n}\n\nreturn this.writable&&!this._paused;\n};\n\nChunkStream.prototype.end=function(data,encoding){\n\nif(data){\nthis.write(data,encoding);\n}\n\nthis.writable=false;\n\n// already destroyed\nif(!this._buffers){\nreturn;\n}\n\n// enqueue or handle end\nif(this._buffers.length===0){\nthis._end();\n}else\n{\nthis._buffers.push(null);\nthis._process();\n}\n};\n\nChunkStream.prototype.destroySoon=ChunkStream.prototype.end;\n\nChunkStream.prototype._end=function(){\n\nif(this._reads.length>0){\nthis.emit('error',\nnew Error('There are some read requests waiting on finished stream'));\n\n}\n\nthis.destroy();\n};\n\nChunkStream.prototype.destroy=function(){\n\nif(!this._buffers){\nreturn;\n}\n\nthis.writable=false;\nthis._reads=null;\nthis._buffers=null;\n\nthis.emit('close');\n};\n\nChunkStream.prototype._processReadAllowingLess=function(read){\n// ok there is any data so that we can satisfy this request\nthis._reads.shift();// == read\n\n// first we need to peek into first buffer\nvar smallerBuf=this._buffers[0];\n\n// ok there is more data than we need\nif(smallerBuf.length>read.length){\n\nthis._buffered-=read.length;\nthis._buffers[0]=smallerBuf.slice(read.length);\n\nread.func.call(this,smallerBuf.slice(0,read.length));\n\n}else\n{\n// ok this is less than maximum length so use it all\nthis._buffered-=smallerBuf.length;\nthis._buffers.shift();// == smallerBuf\n\nread.func.call(this,smallerBuf);\n}\n};\n\nChunkStream.prototype._processRead=function(read){\nthis._reads.shift();// == read\n\nvar pos=0;\nvar count=0;\nvar data=new Buffer(read.length);\n\n// create buffer for all data\nwhile(pos<read.length){\n\nvar buf=this._buffers[count++];\nvar len=Math.min(buf.length,read.length-pos);\n\nbuf.copy(data,pos,0,len);\npos+=len;\n\n// last buffer wasn't used all so just slice it and leave\nif(len!==buf.length){\nthis._buffers[--count]=buf.slice(len);\n}\n}\n\n// remove all used buffers\nif(count>0){\nthis._buffers.splice(0,count);\n}\n\nthis._buffered-=read.length;\n\nread.func.call(this,data);\n};\n\nChunkStream.prototype._process=function(){\n\ntry{\n// as long as there is any data and read requests\nwhile(this._buffered>0&&this._reads&&this._reads.length>0){\n\nvar read=this._reads[0];\n\n// read any data (but no more than length)\nif(read.allowLess){\nthis._processReadAllowingLess(read);\n\n}else\nif(this._buffered>=read.length){\n// ok we can meet some expectations\n\nthis._processRead(read);\n}else\n{\n// not enought data to satisfy first request in queue\n// so we need to wait for more\nbreak;\n}\n}\n\nif(this._buffers&&this._buffers.length>0&&this._buffers[0]===null){\nthis._end();\n}\n}\ncatch(ex){\nthis.emit('error',ex);\n}\n};\n\n}).call(this,require('_process'),require(\"buffer\").Buffer);\n},{\"_process\":223,\"buffer\":16,\"stream\":242,\"util\":258}],203:[function(require,module,exports){\n'use strict';\n\n\nmodule.exports={\n\nPNG_SIGNATURE:[0x89,0x50,0x4e,0x47,0x0d,0x0a,0x1a,0x0a],\n\nTYPE_IHDR:0x49484452,\nTYPE_IEND:0x49454e44,\nTYPE_IDAT:0x49444154,\nTYPE_PLTE:0x504c5445,\nTYPE_tRNS:0x74524e53,// eslint-disable-line camelcase\nTYPE_gAMA:0x67414d41,// eslint-disable-line camelcase\n\n// color-type bits\nCOLORTYPE_GRAYSCALE:0,\nCOLORTYPE_PALETTE:1,\nCOLORTYPE_COLOR:2,\nCOLORTYPE_ALPHA:4,// e.g. grayscale and alpha\n\n// color-type combinations\nCOLORTYPE_PALETTE_COLOR:3,\nCOLORTYPE_COLOR_ALPHA:6,\n\nCOLORTYPE_TO_BPP_MAP:{\n0:1,\n2:3,\n3:1,\n4:2,\n6:4},\n\n\nGAMMA_DIVISION:100000};\n\n\n},{}],204:[function(require,module,exports){\n'use strict';\n\nvar crcTable=[];\n\n(function(){\nfor(var i=0;i<256;i++){\nvar currentCrc=i;\nfor(var j=0;j<8;j++){\nif(currentCrc&1){\ncurrentCrc=0xedb88320^currentCrc>>>1;\n}else\n{\ncurrentCrc=currentCrc>>>1;\n}\n}\ncrcTable[i]=currentCrc;\n}\n})();\n\nvar CrcCalculator=module.exports=function(){\nthis._crc=-1;\n};\n\nCrcCalculator.prototype.write=function(data){\n\nfor(var i=0;i<data.length;i++){\nthis._crc=crcTable[(this._crc^data[i])&0xff]^this._crc>>>8;\n}\nreturn true;\n};\n\nCrcCalculator.prototype.crc32=function(){\nreturn this._crc^-1;\n};\n\n\nCrcCalculator.crc32=function(buf){\n\nvar crc=-1;\nfor(var i=0;i<buf.length;i++){\ncrc=crcTable[(crc^buf[i])&0xff]^crc>>>8;\n}\nreturn crc^-1;\n};\n\n},{}],205:[function(require,module,exports){\n(function(Buffer){\n'use strict';\n\nvar paethPredictor=require('./paeth-predictor');\n\nfunction filterNone(pxData,pxPos,byteWidth,rawData,rawPos){\n\nfor(var x=0;x<byteWidth;x++){\nrawData[rawPos+x]=pxData[pxPos+x];\n}\n}\n\nfunction filterSumNone(pxData,pxPos,byteWidth){\n\nvar sum=0;\nvar length=pxPos+byteWidth;\n\nfor(var i=pxPos;i<length;i++){\nsum+=Math.abs(pxData[i]);\n}\nreturn sum;\n}\n\nfunction filterSub(pxData,pxPos,byteWidth,rawData,rawPos,bpp){\n\nfor(var x=0;x<byteWidth;x++){\n\nvar left=x>=bpp?pxData[pxPos+x-bpp]:0;\nvar val=pxData[pxPos+x]-left;\n\nrawData[rawPos+x]=val;\n}\n}\n\nfunction filterSumSub(pxData,pxPos,byteWidth,bpp){\n\nvar sum=0;\nfor(var x=0;x<byteWidth;x++){\n\nvar left=x>=bpp?pxData[pxPos+x-bpp]:0;\nvar val=pxData[pxPos+x]-left;\n\nsum+=Math.abs(val);\n}\n\nreturn sum;\n}\n\nfunction filterUp(pxData,pxPos,byteWidth,rawData,rawPos){\n\nfor(var x=0;x<byteWidth;x++){\n\nvar up=pxPos>0?pxData[pxPos+x-byteWidth]:0;\nvar val=pxData[pxPos+x]-up;\n\nrawData[rawPos+x]=val;\n}\n}\n\nfunction filterSumUp(pxData,pxPos,byteWidth){\n\nvar sum=0;\nvar length=pxPos+byteWidth;\nfor(var x=pxPos;x<length;x++){\n\nvar up=pxPos>0?pxData[x-byteWidth]:0;\nvar val=pxData[x]-up;\n\nsum+=Math.abs(val);\n}\n\nreturn sum;\n}\n\nfunction filterAvg(pxData,pxPos,byteWidth,rawData,rawPos,bpp){\n\nfor(var x=0;x<byteWidth;x++){\n\nvar left=x>=bpp?pxData[pxPos+x-bpp]:0;\nvar up=pxPos>0?pxData[pxPos+x-byteWidth]:0;\nvar val=pxData[pxPos+x]-(left+up>>1);\n\nrawData[rawPos+x]=val;\n}\n}\n\nfunction filterSumAvg(pxData,pxPos,byteWidth,bpp){\n\nvar sum=0;\nfor(var x=0;x<byteWidth;x++){\n\nvar left=x>=bpp?pxData[pxPos+x-bpp]:0;\nvar up=pxPos>0?pxData[pxPos+x-byteWidth]:0;\nvar val=pxData[pxPos+x]-(left+up>>1);\n\nsum+=Math.abs(val);\n}\n\nreturn sum;\n}\n\nfunction filterPaeth(pxData,pxPos,byteWidth,rawData,rawPos,bpp){\n\nfor(var x=0;x<byteWidth;x++){\n\nvar left=x>=bpp?pxData[pxPos+x-bpp]:0;\nvar up=pxPos>0?pxData[pxPos+x-byteWidth]:0;\nvar upleft=pxPos>0&&x>=bpp?pxData[pxPos+x-(byteWidth+bpp)]:0;\nvar val=pxData[pxPos+x]-paethPredictor(left,up,upleft);\n\nrawData[rawPos+x]=val;\n}\n}\n\nfunction filterSumPaeth(pxData,pxPos,byteWidth,bpp){\nvar sum=0;\nfor(var x=0;x<byteWidth;x++){\n\nvar left=x>=bpp?pxData[pxPos+x-bpp]:0;\nvar up=pxPos>0?pxData[pxPos+x-byteWidth]:0;\nvar upleft=pxPos>0&&x>=bpp?pxData[pxPos+x-(byteWidth+bpp)]:0;\nvar val=pxData[pxPos+x]-paethPredictor(left,up,upleft);\n\nsum+=Math.abs(val);\n}\n\nreturn sum;\n}\n\nvar filters={\n0:filterNone,\n1:filterSub,\n2:filterUp,\n3:filterAvg,\n4:filterPaeth};\n\n\nvar filterSums={\n0:filterSumNone,\n1:filterSumSub,\n2:filterSumUp,\n3:filterSumAvg,\n4:filterSumPaeth};\n\n\nmodule.exports=function(pxData,width,height,options,bpp){\n\nvar filterTypes;\nif(!('filterType'in options)||options.filterType===-1){\nfilterTypes=[0,1,2,3,4];\n}else\nif(typeof options.filterType==='number'){\nfilterTypes=[options.filterType];\n}else\n{\nthrow new Error('unrecognised filter types');\n}\n\nif(options.bitDepth===16)bpp*=2;\nvar byteWidth=width*bpp;\nvar rawPos=0;\nvar pxPos=0;\nvar rawData=new Buffer((byteWidth+1)*height);\n\nvar sel=filterTypes[0];\n\nfor(var y=0;y<height;y++){\n\nif(filterTypes.length>1){\n// find best filter for this line (with lowest sum of values)\nvar min=Infinity;\n\nfor(var i=0;i<filterTypes.length;i++){\nvar sum=filterSums[filterTypes[i]](pxData,pxPos,byteWidth,bpp);\nif(sum<min){\nsel=filterTypes[i];\nmin=sum;\n}\n}\n}\n\nrawData[rawPos]=sel;\nrawPos++;\nfilters[sel](pxData,pxPos,byteWidth,rawData,rawPos,bpp);\nrawPos+=byteWidth;\npxPos+=byteWidth;\n}\nreturn rawData;\n};\n\n}).call(this,require(\"buffer\").Buffer);\n},{\"./paeth-predictor\":214,\"buffer\":16}],206:[function(require,module,exports){\n(function(Buffer){\n'use strict';\n\nvar util=require('util');\nvar ChunkStream=require('./chunkstream');\nvar Filter=require('./filter-parse');\n\n\nvar FilterAsync=module.exports=function(bitmapInfo){\nChunkStream.call(this);\n\nvar buffers=[];\nvar that=this;\nthis._filter=new Filter(bitmapInfo,{\nread:this.read.bind(this),\nwrite:function write(buffer){\nbuffers.push(buffer);\n},\ncomplete:function complete(){\nthat.emit('complete',Buffer.concat(buffers));\n}});\n\n\nthis._filter.start();\n};\nutil.inherits(FilterAsync,ChunkStream);\n\n}).call(this,require(\"buffer\").Buffer);\n},{\"./chunkstream\":202,\"./filter-parse\":208,\"buffer\":16,\"util\":258}],207:[function(require,module,exports){\n(function(Buffer){\n'use strict';\n\nvar SyncReader=require('./sync-reader');\nvar Filter=require('./filter-parse');\n\n\nexports.process=function(inBuffer,bitmapInfo){\n\nvar outBuffers=[];\nvar reader=new SyncReader(inBuffer);\nvar filter=new Filter(bitmapInfo,{\nread:reader.read.bind(reader),\nwrite:function write(bufferPart){\noutBuffers.push(bufferPart);\n},\ncomplete:function complete(){\n}});\n\n\nfilter.start();\nreader.process();\n\nreturn Buffer.concat(outBuffers);\n};\n}).call(this,require(\"buffer\").Buffer);\n},{\"./filter-parse\":208,\"./sync-reader\":221,\"buffer\":16}],208:[function(require,module,exports){\n(function(Buffer){\n'use strict';\n\nvar interlaceUtils=require('./interlace');\nvar paethPredictor=require('./paeth-predictor');\n\nfunction getByteWidth(width,bpp,depth){\nvar byteWidth=width*bpp;\nif(depth!==8){\nbyteWidth=Math.ceil(byteWidth/(8/depth));\n}\nreturn byteWidth;\n}\n\nvar Filter=module.exports=function(bitmapInfo,dependencies){\n\nvar width=bitmapInfo.width;\nvar height=bitmapInfo.height;\nvar interlace=bitmapInfo.interlace;\nvar bpp=bitmapInfo.bpp;\nvar depth=bitmapInfo.depth;\n\nthis.read=dependencies.read;\nthis.write=dependencies.write;\nthis.complete=dependencies.complete;\n\nthis._imageIndex=0;\nthis._images=[];\nif(interlace){\nvar passes=interlaceUtils.getImagePasses(width,height);\nfor(var i=0;i<passes.length;i++){\nthis._images.push({\nbyteWidth:getByteWidth(passes[i].width,bpp,depth),\nheight:passes[i].height,\nlineIndex:0});\n\n}\n}else\n{\nthis._images.push({\nbyteWidth:getByteWidth(width,bpp,depth),\nheight:height,\nlineIndex:0});\n\n}\n\n// when filtering the line we look at the pixel to the left\n// the spec also says it is done on a byte level regardless of the number of pixels\n// so if the depth is byte compatible (8 or 16) we subtract the bpp in order to compare back\n// a pixel rather than just a different byte part. However if we are sub byte, we ignore.\nif(depth===8){\nthis._xComparison=bpp;\n}else\nif(depth===16){\nthis._xComparison=bpp*2;\n}else\n{\nthis._xComparison=1;\n}\n};\n\nFilter.prototype.start=function(){\nthis.read(this._images[this._imageIndex].byteWidth+1,this._reverseFilterLine.bind(this));\n};\n\nFilter.prototype._unFilterType1=function(rawData,unfilteredLine,byteWidth){\n\nvar xComparison=this._xComparison;\nvar xBiggerThan=xComparison-1;\n\nfor(var x=0;x<byteWidth;x++){\nvar rawByte=rawData[1+x];\nvar f1Left=x>xBiggerThan?unfilteredLine[x-xComparison]:0;\nunfilteredLine[x]=rawByte+f1Left;\n}\n};\n\nFilter.prototype._unFilterType2=function(rawData,unfilteredLine,byteWidth){\n\nvar lastLine=this._lastLine;\n\nfor(var x=0;x<byteWidth;x++){\nvar rawByte=rawData[1+x];\nvar f2Up=lastLine?lastLine[x]:0;\nunfilteredLine[x]=rawByte+f2Up;\n}\n};\n\nFilter.prototype._unFilterType3=function(rawData,unfilteredLine,byteWidth){\n\nvar xComparison=this._xComparison;\nvar xBiggerThan=xComparison-1;\nvar lastLine=this._lastLine;\n\nfor(var x=0;x<byteWidth;x++){\nvar rawByte=rawData[1+x];\nvar f3Up=lastLine?lastLine[x]:0;\nvar f3Left=x>xBiggerThan?unfilteredLine[x-xComparison]:0;\nvar f3Add=Math.floor((f3Left+f3Up)/2);\nunfilteredLine[x]=rawByte+f3Add;\n}\n};\n\nFilter.prototype._unFilterType4=function(rawData,unfilteredLine,byteWidth){\n\nvar xComparison=this._xComparison;\nvar xBiggerThan=xComparison-1;\nvar lastLine=this._lastLine;\n\nfor(var x=0;x<byteWidth;x++){\nvar rawByte=rawData[1+x];\nvar f4Up=lastLine?lastLine[x]:0;\nvar f4Left=x>xBiggerThan?unfilteredLine[x-xComparison]:0;\nvar f4UpLeft=x>xBiggerThan&&lastLine?lastLine[x-xComparison]:0;\nvar f4Add=paethPredictor(f4Left,f4Up,f4UpLeft);\nunfilteredLine[x]=rawByte+f4Add;\n}\n};\n\nFilter.prototype._reverseFilterLine=function(rawData){\n\nvar filter=rawData[0];\nvar unfilteredLine;\nvar currentImage=this._images[this._imageIndex];\nvar byteWidth=currentImage.byteWidth;\n\nif(filter===0){\nunfilteredLine=rawData.slice(1,byteWidth+1);\n}else\n{\n\nunfilteredLine=new Buffer(byteWidth);\n\nswitch(filter){\ncase 1:\nthis._unFilterType1(rawData,unfilteredLine,byteWidth);\nbreak;\ncase 2:\nthis._unFilterType2(rawData,unfilteredLine,byteWidth);\nbreak;\ncase 3:\nthis._unFilterType3(rawData,unfilteredLine,byteWidth);\nbreak;\ncase 4:\nthis._unFilterType4(rawData,unfilteredLine,byteWidth);\nbreak;\ndefault:\nthrow new Error('Unrecognised filter type - '+filter);}\n\n}\n\nthis.write(unfilteredLine);\n\ncurrentImage.lineIndex++;\nif(currentImage.lineIndex>=currentImage.height){\nthis._lastLine=null;\nthis._imageIndex++;\ncurrentImage=this._images[this._imageIndex];\n}else\n{\nthis._lastLine=unfilteredLine;\n}\n\nif(currentImage){\n// read, using the byte width that may be from the new current image\nthis.read(currentImage.byteWidth+1,this._reverseFilterLine.bind(this));\n}else\n{\nthis._lastLine=null;\nthis.complete();\n}\n};\n\n}).call(this,require(\"buffer\").Buffer);\n},{\"./interlace\":210,\"./paeth-predictor\":214,\"buffer\":16}],209:[function(require,module,exports){\n(function(Buffer){\n'use strict';\n\nfunction dePalette(indata,outdata,width,height,palette){\nvar pxPos=0;\n// use values from palette\nfor(var y=0;y<height;y++){\nfor(var x=0;x<width;x++){\nvar color=palette[indata[pxPos]];\n\nif(!color){\nthrow new Error('index '+indata[pxPos]+' not in palette');\n}\n\nfor(var i=0;i<4;i++){\noutdata[pxPos+i]=color[i];\n}\npxPos+=4;\n}\n}\n}\n\nfunction replaceTransparentColor(indata,outdata,width,height,transColor){\nvar pxPos=0;\nfor(var y=0;y<height;y++){\nfor(var x=0;x<width;x++){\nvar makeTrans=false;\n\nif(transColor.length===1){\nif(transColor[0]===indata[pxPos]){\nmakeTrans=true;\n}\n}else\nif(transColor[0]===indata[pxPos]&&transColor[1]===indata[pxPos+1]&&transColor[2]===indata[pxPos+2]){\nmakeTrans=true;\n}\nif(makeTrans){\nfor(var i=0;i<4;i++){\noutdata[pxPos+i]=0;\n}\n}\npxPos+=4;\n}\n}\n}\n\nfunction scaleDepth(indata,outdata,width,height,depth){\nvar maxOutSample=255;\nvar maxInSample=Math.pow(2,depth)-1;\nvar pxPos=0;\n\nfor(var y=0;y<height;y++){\nfor(var x=0;x<width;x++){\nfor(var i=0;i<4;i++){\noutdata[pxPos+i]=Math.floor(indata[pxPos+i]*maxOutSample/maxInSample+0.5);\n}\npxPos+=4;\n}\n}\n}\n\nmodule.exports=function(indata,imageData){\n\nvar depth=imageData.depth;\nvar width=imageData.width;\nvar height=imageData.height;\nvar colorType=imageData.colorType;\nvar transColor=imageData.transColor;\nvar palette=imageData.palette;\n\nvar outdata=indata;// only different for 16 bits\n\nif(colorType===3){// paletted\ndePalette(indata,outdata,width,height,palette);\n}else\n{\nif(transColor){\nreplaceTransparentColor(indata,outdata,width,height,transColor);\n}\n// if it needs scaling\nif(depth!==8){\n// if we need to change the buffer size\nif(depth===16){\noutdata=new Buffer(width*height*4);\n}\nscaleDepth(indata,outdata,width,height,depth);\n}\n}\nreturn outdata;\n};\n\n}).call(this,require(\"buffer\").Buffer);\n},{\"buffer\":16}],210:[function(require,module,exports){\n'use strict';\n\n// Adam 7\n//   0 1 2 3 4 5 6 7\n// 0 x 6 4 6 x 6 4 6\n// 1 7 7 7 7 7 7 7 7\n// 2 5 6 5 6 5 6 5 6\n// 3 7 7 7 7 7 7 7 7\n// 4 3 6 4 6 3 6 4 6\n// 5 7 7 7 7 7 7 7 7\n// 6 5 6 5 6 5 6 5 6\n// 7 7 7 7 7 7 7 7 7\n\n\nvar imagePasses=[\n{// pass 1 - 1px\nx:[0],\ny:[0]},\n\n{// pass 2 - 1px\nx:[4],\ny:[0]},\n\n{// pass 3 - 2px\nx:[0,4],\ny:[4]},\n\n{// pass 4 - 4px\nx:[2,6],\ny:[0,4]},\n\n{// pass 5 - 8px\nx:[0,2,4,6],\ny:[2,6]},\n\n{// pass 6 - 16px\nx:[1,3,5,7],\ny:[0,2,4,6]},\n\n{// pass 7 - 32px\nx:[0,1,2,3,4,5,6,7],\ny:[1,3,5,7]}];\n\n\n\nexports.getImagePasses=function(width,height){\nvar images=[];\nvar xLeftOver=width%8;\nvar yLeftOver=height%8;\nvar xRepeats=(width-xLeftOver)/8;\nvar yRepeats=(height-yLeftOver)/8;\nfor(var i=0;i<imagePasses.length;i++){\nvar pass=imagePasses[i];\nvar passWidth=xRepeats*pass.x.length;\nvar passHeight=yRepeats*pass.y.length;\nfor(var j=0;j<pass.x.length;j++){\nif(pass.x[j]<xLeftOver){\npassWidth++;\n}else\n{\nbreak;\n}\n}\nfor(j=0;j<pass.y.length;j++){\nif(pass.y[j]<yLeftOver){\npassHeight++;\n}else\n{\nbreak;\n}\n}\nif(passWidth>0&&passHeight>0){\nimages.push({width:passWidth,height:passHeight,index:i});\n}\n}\nreturn images;\n};\n\nexports.getInterlaceIterator=function(width){\nreturn function(x,y,pass){\nvar outerXLeftOver=x%imagePasses[pass].x.length;\nvar outerX=(x-outerXLeftOver)/imagePasses[pass].x.length*8+imagePasses[pass].x[outerXLeftOver];\nvar outerYLeftOver=y%imagePasses[pass].y.length;\nvar outerY=(y-outerYLeftOver)/imagePasses[pass].y.length*8+imagePasses[pass].y[outerYLeftOver];\nreturn outerX*4+outerY*width*4;\n};\n};\n},{}],211:[function(require,module,exports){\n(function(Buffer){\n'use strict';\n\nvar util=require('util');\nvar Stream=require('stream');\nvar constants=require('./constants');\nvar Packer=require('./packer');\n\nvar PackerAsync=module.exports=function(opt){\nStream.call(this);\n\nvar options=opt||{};\n\nthis._packer=new Packer(options);\nthis._deflate=this._packer.createDeflate();\n\nthis.readable=true;\n};\nutil.inherits(PackerAsync,Stream);\n\n\nPackerAsync.prototype.pack=function(data,width,height,gamma){\n// Signature\nthis.emit('data',new Buffer(constants.PNG_SIGNATURE));\nthis.emit('data',this._packer.packIHDR(width,height));\n\nif(gamma){\nthis.emit('data',this._packer.packGAMA(gamma));\n}\n\nvar filteredData=this._packer.filterData(data,width,height);\n\n// compress it\nthis._deflate.on('error',this.emit.bind(this,'error'));\n\nthis._deflate.on('data',function(compressedData){\nthis.emit('data',this._packer.packIDAT(compressedData));\n}.bind(this));\n\nthis._deflate.on('end',function(){\nthis.emit('data',this._packer.packIEND());\nthis.emit('end');\n}.bind(this));\n\nthis._deflate.end(filteredData);\n};\n\n}).call(this,require(\"buffer\").Buffer);\n},{\"./constants\":203,\"./packer\":213,\"buffer\":16,\"stream\":242,\"util\":258}],212:[function(require,module,exports){\n(function(Buffer){\n'use strict';\n\nvar hasSyncZlib=true;\nvar zlib=require('zlib');\nif(!zlib.deflateSync){\nhasSyncZlib=false;\n}\nvar constants=require('./constants');\nvar Packer=require('./packer');\n\nmodule.exports=function(metaData,opt){\n\nif(!hasSyncZlib){\nthrow new Error('To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0');\n}\n\nvar options=opt||{};\n\nvar packer=new Packer(options);\n\nvar chunks=[];\n\n// Signature\nchunks.push(new Buffer(constants.PNG_SIGNATURE));\n\n// Header\nchunks.push(packer.packIHDR(metaData.width,metaData.height));\n\nif(metaData.gamma){\nchunks.push(packer.packGAMA(metaData.gamma));\n}\n\nvar filteredData=packer.filterData(metaData.data,metaData.width,metaData.height);\n\n// compress it\nvar compressedData=zlib.deflateSync(filteredData,packer.getDeflateOptions());\nfilteredData=null;\n\nif(!compressedData||!compressedData.length){\nthrow new Error('bad png - invalid compressed data response');\n}\nchunks.push(packer.packIDAT(compressedData));\n\n// End\nchunks.push(packer.packIEND());\n\nreturn Buffer.concat(chunks);\n};\n\n}).call(this,require(\"buffer\").Buffer);\n},{\"./constants\":203,\"./packer\":213,\"buffer\":16,\"zlib\":13}],213:[function(require,module,exports){\n(function(Buffer){\n'use strict';\n\nvar constants=require('./constants');\nvar CrcStream=require('./crc');\nvar bitPacker=require('./bitpacker');\nvar filter=require('./filter-pack');\nvar zlib=require('zlib');\n\nvar Packer=module.exports=function(options){\nthis._options=options;\n\noptions.deflateChunkSize=options.deflateChunkSize||32*1024;\noptions.deflateLevel=options.deflateLevel!=null?options.deflateLevel:9;\noptions.deflateStrategy=options.deflateStrategy!=null?options.deflateStrategy:3;\noptions.inputHasAlpha=options.inputHasAlpha!=null?options.inputHasAlpha:true;\noptions.deflateFactory=options.deflateFactory||zlib.createDeflate;\noptions.bitDepth=options.bitDepth||8;\n// This is outputColorType\noptions.colorType=typeof options.colorType==='number'?options.colorType:constants.COLORTYPE_COLOR_ALPHA;\noptions.inputColorType=typeof options.inputColorType==='number'?options.inputColorType:constants.COLORTYPE_COLOR_ALPHA;\n\nif([\nconstants.COLORTYPE_GRAYSCALE,\nconstants.COLORTYPE_COLOR,\nconstants.COLORTYPE_COLOR_ALPHA,\nconstants.COLORTYPE_ALPHA].\nindexOf(options.colorType)===-1){\nthrow new Error('option color type:'+options.colorType+' is not supported at present');\n}\nif([\nconstants.COLORTYPE_GRAYSCALE,\nconstants.COLORTYPE_COLOR,\nconstants.COLORTYPE_COLOR_ALPHA,\nconstants.COLORTYPE_ALPHA].\nindexOf(options.inputColorType)===-1){\nthrow new Error('option input color type:'+options.inputColorType+' is not supported at present');\n}\nif(options.bitDepth!==8&&options.bitDepth!==16){\nthrow new Error('option bit depth:'+options.bitDepth+' is not supported at present');\n}\n};\n\nPacker.prototype.getDeflateOptions=function(){\nreturn{\nchunkSize:this._options.deflateChunkSize,\nlevel:this._options.deflateLevel,\nstrategy:this._options.deflateStrategy};\n\n};\n\nPacker.prototype.createDeflate=function(){\nreturn this._options.deflateFactory(this.getDeflateOptions());\n};\n\nPacker.prototype.filterData=function(data,width,height){\n// convert to correct format for filtering (e.g. right bpp and bit depth)\nvar packedData=bitPacker(data,width,height,this._options);\n\n// filter pixel data\nvar bpp=constants.COLORTYPE_TO_BPP_MAP[this._options.colorType];\nvar filteredData=filter(packedData,width,height,this._options,bpp);\nreturn filteredData;\n};\n\nPacker.prototype._packChunk=function(type,data){\n\nvar len=data?data.length:0;\nvar buf=new Buffer(len+12);\n\nbuf.writeUInt32BE(len,0);\nbuf.writeUInt32BE(type,4);\n\nif(data){\ndata.copy(buf,8);\n}\n\nbuf.writeInt32BE(CrcStream.crc32(buf.slice(4,buf.length-4)),buf.length-4);\nreturn buf;\n};\n\nPacker.prototype.packGAMA=function(gamma){\nvar buf=new Buffer(4);\nbuf.writeUInt32BE(Math.floor(gamma*constants.GAMMA_DIVISION),0);\nreturn this._packChunk(constants.TYPE_gAMA,buf);\n};\n\nPacker.prototype.packIHDR=function(width,height){\n\nvar buf=new Buffer(13);\nbuf.writeUInt32BE(width,0);\nbuf.writeUInt32BE(height,4);\nbuf[8]=this._options.bitDepth;// Bit depth\nbuf[9]=this._options.colorType;// colorType\nbuf[10]=0;// compression\nbuf[11]=0;// filter\nbuf[12]=0;// interlace\n\nreturn this._packChunk(constants.TYPE_IHDR,buf);\n};\n\nPacker.prototype.packIDAT=function(data){\nreturn this._packChunk(constants.TYPE_IDAT,data);\n};\n\nPacker.prototype.packIEND=function(){\nreturn this._packChunk(constants.TYPE_IEND,null);\n};\n\n}).call(this,require(\"buffer\").Buffer);\n},{\"./bitpacker\":201,\"./constants\":203,\"./crc\":204,\"./filter-pack\":205,\"buffer\":16,\"zlib\":13}],214:[function(require,module,exports){\n'use strict';\n\nmodule.exports=function paethPredictor(left,above,upLeft){\n\nvar paeth=left+above-upLeft;\nvar pLeft=Math.abs(paeth-left);\nvar pAbove=Math.abs(paeth-above);\nvar pUpLeft=Math.abs(paeth-upLeft);\n\nif(pLeft<=pAbove&&pLeft<=pUpLeft){\nreturn left;\n}\nif(pAbove<=pUpLeft){\nreturn above;\n}\nreturn upLeft;\n};\n},{}],215:[function(require,module,exports){\n'use strict';\n\nvar util=require('util');\nvar zlib=require('zlib');\nvar ChunkStream=require('./chunkstream');\nvar FilterAsync=require('./filter-parse-async');\nvar Parser=require('./parser');\nvar bitmapper=require('./bitmapper');\nvar formatNormaliser=require('./format-normaliser');\n\nvar ParserAsync=module.exports=function(options){\nChunkStream.call(this);\n\nthis._parser=new Parser(options,{\nread:this.read.bind(this),\nerror:this._handleError.bind(this),\nmetadata:this._handleMetaData.bind(this),\ngamma:this.emit.bind(this,'gamma'),\npalette:this._handlePalette.bind(this),\ntransColor:this._handleTransColor.bind(this),\nfinished:this._finished.bind(this),\ninflateData:this._inflateData.bind(this)});\n\nthis._options=options;\nthis.writable=true;\n\nthis._parser.start();\n};\nutil.inherits(ParserAsync,ChunkStream);\n\n\nParserAsync.prototype._handleError=function(err){\n\nthis.emit('error',err);\n\nthis.writable=false;\n\nthis.destroy();\n\nif(this._inflate&&this._inflate.destroy){\nthis._inflate.destroy();\n}\n\nif(this._filter){\nthis._filter.destroy();\n// For backward compatibility with Node 7 and below.\n// Suppress errors due to _inflate calling write() even after\n// it's destroy()'ed.\nthis._filter.on('error',function(){});\n}\n\nthis.errord=true;\n};\n\nParserAsync.prototype._inflateData=function(data){\nif(!this._inflate){\nif(this._bitmapInfo.interlace){\nthis._inflate=zlib.createInflate();\n\nthis._inflate.on('error',this.emit.bind(this,'error'));\nthis._filter.on('complete',this._complete.bind(this));\n\nthis._inflate.pipe(this._filter);\n}else{\nvar rowSize=(this._bitmapInfo.width*this._bitmapInfo.bpp*this._bitmapInfo.depth+7>>3)+1;\nvar imageSize=rowSize*this._bitmapInfo.height;\nvar chunkSize=Math.max(imageSize,zlib.Z_MIN_CHUNK);\n\nthis._inflate=zlib.createInflate({chunkSize:chunkSize});\nvar leftToInflate=imageSize;\n\nvar emitError=this.emit.bind(this,'error');\nthis._inflate.on('error',function(err){\nif(!leftToInflate){\nreturn;\n}\n\nemitError(err);\n});\nthis._filter.on('complete',this._complete.bind(this));\n\nvar filterWrite=this._filter.write.bind(this._filter);\nthis._inflate.on('data',function(chunk){\nif(!leftToInflate){\nreturn;\n}\n\nif(chunk.length>leftToInflate){\nchunk=chunk.slice(0,leftToInflate);\n}\n\nleftToInflate-=chunk.length;\n\nfilterWrite(chunk);\n});\n\nthis._inflate.on('end',this._filter.end.bind(this._filter));\n}\n}\nthis._inflate.write(data);\n};\n\nParserAsync.prototype._handleMetaData=function(metaData){\n\nthis.emit('metadata',metaData);\n\nthis._bitmapInfo=Object.create(metaData);\n\nthis._filter=new FilterAsync(this._bitmapInfo);\n};\n\nParserAsync.prototype._handleTransColor=function(transColor){\nthis._bitmapInfo.transColor=transColor;\n};\n\nParserAsync.prototype._handlePalette=function(palette){\nthis._bitmapInfo.palette=palette;\n};\n\n\nParserAsync.prototype._finished=function(){\nif(this.errord){\nreturn;\n}\n\nif(!this._inflate){\nthis.emit('error','No Inflate block');\n}else\n{\n// no more data to inflate\nthis._inflate.end();\n}\nthis.destroySoon();\n};\n\nParserAsync.prototype._complete=function(filteredData){\n\nif(this.errord){\nreturn;\n}\n\ntry{\nvar bitmapData=bitmapper.dataToBitMap(filteredData,this._bitmapInfo);\n\nvar normalisedBitmapData=formatNormaliser(bitmapData,this._bitmapInfo);\nbitmapData=null;\n}\ncatch(ex){\nthis._handleError(ex);\nreturn;\n}\n\nthis.emit('parsed',normalisedBitmapData);\n};\n\n},{\"./bitmapper\":200,\"./chunkstream\":202,\"./filter-parse-async\":206,\"./format-normaliser\":209,\"./parser\":217,\"util\":258,\"zlib\":13}],216:[function(require,module,exports){\n(function(Buffer){\n'use strict';\n\nvar hasSyncZlib=true;\nvar zlib=require('zlib');\nvar inflateSync=require('./sync-inflate');\nif(!zlib.deflateSync){\nhasSyncZlib=false;\n}\nvar SyncReader=require('./sync-reader');\nvar FilterSync=require('./filter-parse-sync');\nvar Parser=require('./parser');\nvar bitmapper=require('./bitmapper');\nvar formatNormaliser=require('./format-normaliser');\n\n\nmodule.exports=function(buffer,options){\n\nif(!hasSyncZlib){\nthrow new Error('To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0');\n}\n\nvar err;\nfunction handleError(_err_){\nerr=_err_;\n}\n\nvar metaData;\nfunction handleMetaData(_metaData_){\nmetaData=_metaData_;\n}\n\nfunction handleTransColor(transColor){\nmetaData.transColor=transColor;\n}\n\nfunction handlePalette(palette){\nmetaData.palette=palette;\n}\n\nvar gamma;\nfunction handleGamma(_gamma_){\ngamma=_gamma_;\n}\n\nvar inflateDataList=[];\nfunction handleInflateData(inflatedData){\ninflateDataList.push(inflatedData);\n}\n\nvar reader=new SyncReader(buffer);\n\nvar parser=new Parser(options,{\nread:reader.read.bind(reader),\nerror:handleError,\nmetadata:handleMetaData,\ngamma:handleGamma,\npalette:handlePalette,\ntransColor:handleTransColor,\ninflateData:handleInflateData});\n\n\nparser.start();\nreader.process();\n\nif(err){\nthrow err;\n}\n\n//join together the inflate datas\nvar inflateData=Buffer.concat(inflateDataList);\ninflateDataList.length=0;\n\nvar inflatedData;\nif(metaData.interlace){\ninflatedData=zlib.inflateSync(inflateData);\n}else{\nvar rowSize=(metaData.width*metaData.bpp*metaData.depth+7>>3)+1;\nvar imageSize=rowSize*metaData.height;\ninflatedData=inflateSync(inflateData,{chunkSize:imageSize,maxLength:imageSize});\n}\ninflateData=null;\n\nif(!inflatedData||!inflatedData.length){\nthrow new Error('bad png - invalid inflate data response');\n}\n\nvar unfilteredData=FilterSync.process(inflatedData,metaData);\ninflateData=null;\n\nvar bitmapData=bitmapper.dataToBitMap(unfilteredData,metaData);\nunfilteredData=null;\n\nvar normalisedBitmapData=formatNormaliser(bitmapData,metaData);\n\nmetaData.data=normalisedBitmapData;\nmetaData.gamma=gamma||0;\n\nreturn metaData;\n};\n\n}).call(this,require(\"buffer\").Buffer);\n},{\"./bitmapper\":200,\"./filter-parse-sync\":207,\"./format-normaliser\":209,\"./parser\":217,\"./sync-inflate\":220,\"./sync-reader\":221,\"buffer\":16,\"zlib\":13}],217:[function(require,module,exports){\n(function(Buffer){\n'use strict';\n\nvar constants=require('./constants');\nvar CrcCalculator=require('./crc');\n\n\nvar Parser=module.exports=function(options,dependencies){\n\nthis._options=options;\noptions.checkCRC=options.checkCRC!==false;\n\nthis._hasIHDR=false;\nthis._hasIEND=false;\n\n// input flags/metadata\nthis._palette=[];\nthis._colorType=0;\n\nthis._chunks={};\nthis._chunks[constants.TYPE_IHDR]=this._handleIHDR.bind(this);\nthis._chunks[constants.TYPE_IEND]=this._handleIEND.bind(this);\nthis._chunks[constants.TYPE_IDAT]=this._handleIDAT.bind(this);\nthis._chunks[constants.TYPE_PLTE]=this._handlePLTE.bind(this);\nthis._chunks[constants.TYPE_tRNS]=this._handleTRNS.bind(this);\nthis._chunks[constants.TYPE_gAMA]=this._handleGAMA.bind(this);\n\nthis.read=dependencies.read;\nthis.error=dependencies.error;\nthis.metadata=dependencies.metadata;\nthis.gamma=dependencies.gamma;\nthis.transColor=dependencies.transColor;\nthis.palette=dependencies.palette;\nthis.parsed=dependencies.parsed;\nthis.inflateData=dependencies.inflateData;\nthis.finished=dependencies.finished;\n};\n\nParser.prototype.start=function(){\nthis.read(constants.PNG_SIGNATURE.length,\nthis._parseSignature.bind(this));\n\n};\n\nParser.prototype._parseSignature=function(data){\n\nvar signature=constants.PNG_SIGNATURE;\n\nfor(var i=0;i<signature.length;i++){\nif(data[i]!==signature[i]){\nthis.error(new Error('Invalid file signature'));\nreturn;\n}\n}\nthis.read(8,this._parseChunkBegin.bind(this));\n};\n\nParser.prototype._parseChunkBegin=function(data){\n\n// chunk content length\nvar length=data.readUInt32BE(0);\n\n// chunk type\nvar type=data.readUInt32BE(4);\nvar name='';\nfor(var i=4;i<8;i++){\nname+=String.fromCharCode(data[i]);\n}\n\n//console.log('chunk ', name, length);\n\n// chunk flags\nvar ancillary=Boolean(data[4]&0x20);// or critical\n//    priv = Boolean(data[5] & 0x20), // or public\n//    safeToCopy = Boolean(data[7] & 0x20); // or unsafe\n\nif(!this._hasIHDR&&type!==constants.TYPE_IHDR){\nthis.error(new Error('Expected IHDR on beggining'));\nreturn;\n}\n\nthis._crc=new CrcCalculator();\nthis._crc.write(new Buffer(name));\n\nif(this._chunks[type]){\nreturn this._chunks[type](length);\n}\n\nif(!ancillary){\nthis.error(new Error('Unsupported critical chunk type '+name));\nreturn;\n}\n\nthis.read(length+4,this._skipChunk.bind(this));\n};\n\nParser.prototype._skipChunk=function()/*data*/{\nthis.read(8,this._parseChunkBegin.bind(this));\n};\n\nParser.prototype._handleChunkEnd=function(){\nthis.read(4,this._parseChunkEnd.bind(this));\n};\n\nParser.prototype._parseChunkEnd=function(data){\n\nvar fileCrc=data.readInt32BE(0);\nvar calcCrc=this._crc.crc32();\n\n// check CRC\nif(this._options.checkCRC&&calcCrc!==fileCrc){\nthis.error(new Error('Crc error - '+fileCrc+' - '+calcCrc));\nreturn;\n}\n\nif(!this._hasIEND){\nthis.read(8,this._parseChunkBegin.bind(this));\n}\n};\n\nParser.prototype._handleIHDR=function(length){\nthis.read(length,this._parseIHDR.bind(this));\n};\nParser.prototype._parseIHDR=function(data){\n\nthis._crc.write(data);\n\nvar width=data.readUInt32BE(0);\nvar height=data.readUInt32BE(4);\nvar depth=data[8];\nvar colorType=data[9];// bits: 1 palette, 2 color, 4 alpha\nvar compr=data[10];\nvar filter=data[11];\nvar interlace=data[12];\n\n// console.log('    width', width, 'height', height,\n//     'depth', depth, 'colorType', colorType,\n//     'compr', compr, 'filter', filter, 'interlace', interlace\n// );\n\nif(depth!==8&&depth!==4&&depth!==2&&depth!==1&&depth!==16){\nthis.error(new Error('Unsupported bit depth '+depth));\nreturn;\n}\nif(!(colorType in constants.COLORTYPE_TO_BPP_MAP)){\nthis.error(new Error('Unsupported color type'));\nreturn;\n}\nif(compr!==0){\nthis.error(new Error('Unsupported compression method'));\nreturn;\n}\nif(filter!==0){\nthis.error(new Error('Unsupported filter method'));\nreturn;\n}\nif(interlace!==0&&interlace!==1){\nthis.error(new Error('Unsupported interlace method'));\nreturn;\n}\n\nthis._colorType=colorType;\n\nvar bpp=constants.COLORTYPE_TO_BPP_MAP[this._colorType];\n\nthis._hasIHDR=true;\n\nthis.metadata({\nwidth:width,\nheight:height,\ndepth:depth,\ninterlace:Boolean(interlace),\npalette:Boolean(colorType&constants.COLORTYPE_PALETTE),\ncolor:Boolean(colorType&constants.COLORTYPE_COLOR),\nalpha:Boolean(colorType&constants.COLORTYPE_ALPHA),\nbpp:bpp,\ncolorType:colorType});\n\n\nthis._handleChunkEnd();\n};\n\n\nParser.prototype._handlePLTE=function(length){\nthis.read(length,this._parsePLTE.bind(this));\n};\nParser.prototype._parsePLTE=function(data){\n\nthis._crc.write(data);\n\nvar entries=Math.floor(data.length/3);\n// console.log('Palette:', entries);\n\nfor(var i=0;i<entries;i++){\nthis._palette.push([\ndata[i*3],\ndata[i*3+1],\ndata[i*3+2],\n0xff]);\n\n}\n\nthis.palette(this._palette);\n\nthis._handleChunkEnd();\n};\n\nParser.prototype._handleTRNS=function(length){\nthis.read(length,this._parseTRNS.bind(this));\n};\nParser.prototype._parseTRNS=function(data){\n\nthis._crc.write(data);\n\n// palette\nif(this._colorType===constants.COLORTYPE_PALETTE_COLOR){\nif(this._palette.length===0){\nthis.error(new Error('Transparency chunk must be after palette'));\nreturn;\n}\nif(data.length>this._palette.length){\nthis.error(new Error('More transparent colors than palette size'));\nreturn;\n}\nfor(var i=0;i<data.length;i++){\nthis._palette[i][3]=data[i];\n}\nthis.palette(this._palette);\n}\n\n// for colorType 0 (grayscale) and 2 (rgb)\n// there might be one gray/color defined as transparent\nif(this._colorType===constants.COLORTYPE_GRAYSCALE){\n// grey, 2 bytes\nthis.transColor([data.readUInt16BE(0)]);\n}\nif(this._colorType===constants.COLORTYPE_COLOR){\nthis.transColor([data.readUInt16BE(0),data.readUInt16BE(2),data.readUInt16BE(4)]);\n}\n\nthis._handleChunkEnd();\n};\n\nParser.prototype._handleGAMA=function(length){\nthis.read(length,this._parseGAMA.bind(this));\n};\nParser.prototype._parseGAMA=function(data){\n\nthis._crc.write(data);\nthis.gamma(data.readUInt32BE(0)/constants.GAMMA_DIVISION);\n\nthis._handleChunkEnd();\n};\n\nParser.prototype._handleIDAT=function(length){\nthis.read(-length,this._parseIDAT.bind(this,length));\n};\nParser.prototype._parseIDAT=function(length,data){\n\nthis._crc.write(data);\n\nif(this._colorType===constants.COLORTYPE_PALETTE_COLOR&&this._palette.length===0){\nthrow new Error('Expected palette not found');\n}\n\nthis.inflateData(data);\nvar leftOverLength=length-data.length;\n\nif(leftOverLength>0){\nthis._handleIDAT(leftOverLength);\n}else\n{\nthis._handleChunkEnd();\n}\n};\n\nParser.prototype._handleIEND=function(length){\nthis.read(length,this._parseIEND.bind(this));\n};\nParser.prototype._parseIEND=function(data){\n\nthis._crc.write(data);\n\nthis._hasIEND=true;\nthis._handleChunkEnd();\n\nif(this.finished){\nthis.finished();\n}\n};\n\n}).call(this,require(\"buffer\").Buffer);\n},{\"./constants\":203,\"./crc\":204,\"buffer\":16}],218:[function(require,module,exports){\n'use strict';\n\n\nvar parse=require('./parser-sync');\nvar pack=require('./packer-sync');\n\n\nexports.read=function(buffer,options){\n\nreturn parse(buffer,options||{});\n};\n\nexports.write=function(png,options){\n\nreturn pack(png,options);\n};\n\n},{\"./packer-sync\":212,\"./parser-sync\":216}],219:[function(require,module,exports){\n(function(process,Buffer){\n'use strict';\n\nvar util=require('util');\nvar Stream=require('stream');\nvar Parser=require('./parser-async');\nvar Packer=require('./packer-async');\nvar PNGSync=require('./png-sync');\n\n\nvar PNG=exports.PNG=function(options){\nStream.call(this);\n\noptions=options||{};// eslint-disable-line no-param-reassign\n\n// coerce pixel dimensions to integers (also coerces undefined -> 0):\nthis.width=options.width|0;\nthis.height=options.height|0;\n\nthis.data=this.width>0&&this.height>0?\nnew Buffer(4*this.width*this.height):null;\n\nif(options.fill&&this.data){\nthis.data.fill(0);\n}\n\nthis.gamma=0;\nthis.readable=this.writable=true;\n\nthis._parser=new Parser(options);\n\nthis._parser.on('error',this.emit.bind(this,'error'));\nthis._parser.on('close',this._handleClose.bind(this));\nthis._parser.on('metadata',this._metadata.bind(this));\nthis._parser.on('gamma',this._gamma.bind(this));\nthis._parser.on('parsed',function(data){\nthis.data=data;\nthis.emit('parsed',data);\n}.bind(this));\n\nthis._packer=new Packer(options);\nthis._packer.on('data',this.emit.bind(this,'data'));\nthis._packer.on('end',this.emit.bind(this,'end'));\nthis._parser.on('close',this._handleClose.bind(this));\nthis._packer.on('error',this.emit.bind(this,'error'));\n\n};\nutil.inherits(PNG,Stream);\n\nPNG.sync=PNGSync;\n\nPNG.prototype.pack=function(){\n\nif(!this.data||!this.data.length){\nthis.emit('error','No data provided');\nreturn this;\n}\n\nprocess.nextTick(function(){\nthis._packer.pack(this.data,this.width,this.height,this.gamma);\n}.bind(this));\n\nreturn this;\n};\n\n\nPNG.prototype.parse=function(data,callback){\n\nif(callback){\nvar onParsed,onError;\n\nonParsed=function(parsedData){\nthis.removeListener('error',onError);\n\nthis.data=parsedData;\ncallback(null,this);\n}.bind(this);\n\nonError=function(err){\nthis.removeListener('parsed',onParsed);\n\ncallback(err,null);\n}.bind(this);\n\nthis.once('parsed',onParsed);\nthis.once('error',onError);\n}\n\nthis.end(data);\nreturn this;\n};\n\nPNG.prototype.write=function(data){\nthis._parser.write(data);\nreturn true;\n};\n\nPNG.prototype.end=function(data){\nthis._parser.end(data);\n};\n\nPNG.prototype._metadata=function(metadata){\nthis.width=metadata.width;\nthis.height=metadata.height;\n\nthis.emit('metadata',metadata);\n};\n\nPNG.prototype._gamma=function(gamma){\nthis.gamma=gamma;\n};\n\nPNG.prototype._handleClose=function(){\nif(!this._parser.writable&&!this._packer.readable){\nthis.emit('close');\n}\n};\n\n\nPNG.bitblt=function(src,dst,srcX,srcY,width,height,deltaX,deltaY){// eslint-disable-line max-params\n// coerce pixel dimensions to integers (also coerces undefined -> 0):\n/* eslint-disable no-param-reassign */\nsrcX|=0;\nsrcY|=0;\nwidth|=0;\nheight|=0;\ndeltaX|=0;\ndeltaY|=0;\n/* eslint-enable no-param-reassign */\n\nif(srcX>src.width||srcY>src.height||srcX+width>src.width||srcY+height>src.height){\nthrow new Error('bitblt reading outside image');\n}\n\nif(deltaX>dst.width||deltaY>dst.height||deltaX+width>dst.width||deltaY+height>dst.height){\nthrow new Error('bitblt writing outside image');\n}\n\nfor(var y=0;y<height;y++){\nsrc.data.copy(dst.data,\n(deltaY+y)*dst.width+deltaX<<2,\n(srcY+y)*src.width+srcX<<2,\n(srcY+y)*src.width+srcX+width<<2);\n\n}\n};\n\n\nPNG.prototype.bitblt=function(dst,srcX,srcY,width,height,deltaX,deltaY){// eslint-disable-line max-params\n\nPNG.bitblt(this,dst,srcX,srcY,width,height,deltaX,deltaY);\nreturn this;\n};\n\nPNG.adjustGamma=function(src){\nif(src.gamma){\nfor(var y=0;y<src.height;y++){\nfor(var x=0;x<src.width;x++){\nvar idx=src.width*y+x<<2;\n\nfor(var i=0;i<3;i++){\nvar sample=src.data[idx+i]/255;\nsample=Math.pow(sample,1/2.2/src.gamma);\nsrc.data[idx+i]=Math.round(sample*255);\n}\n}\n}\nsrc.gamma=0;\n}\n};\n\nPNG.prototype.adjustGamma=function(){\nPNG.adjustGamma(this);\n};\n\n}).call(this,require('_process'),require(\"buffer\").Buffer);\n},{\"./packer-async\":211,\"./parser-async\":215,\"./png-sync\":218,\"_process\":223,\"buffer\":16,\"stream\":242,\"util\":258}],220:[function(require,module,exports){\n(function(process,Buffer){\n'use strict';\n\nvar assert=require('assert').ok;\nvar zlib=require('zlib');\nvar util=require('util');\n\nvar kMaxLength=require('buffer').kMaxLength;\n\nfunction Inflate(opts){\nif(!(this instanceof Inflate)){\nreturn new Inflate(opts);\n}\n\nif(opts&&opts.chunkSize<zlib.Z_MIN_CHUNK){\nopts.chunkSize=zlib.Z_MIN_CHUNK;\n}\n\nzlib.Inflate.call(this,opts);\n\n// Node 8 --> 9 compatibility check\nthis._offset=this._offset===undefined?this._outOffset:this._offset;\nthis._buffer=this._buffer||this._outBuffer;\n\nif(opts&&opts.maxLength!=null){\nthis._maxLength=opts.maxLength;\n}\n}\n\nfunction createInflate(opts){\nreturn new Inflate(opts);\n}\n\nfunction _close(engine,callback){\nif(callback){\nprocess.nextTick(callback);\n}\n\n// Caller may invoke .close after a zlib error (which will null _handle).\nif(!engine._handle){\nreturn;\n}\n\nengine._handle.close();\nengine._handle=null;\n}\n\nInflate.prototype._processChunk=function(chunk,flushFlag,asyncCb){\nif(typeof asyncCb==='function'){\nreturn zlib.Inflate._processChunk.call(this,chunk,flushFlag,asyncCb);\n}\n\nvar self=this;\n\nvar availInBefore=chunk&&chunk.length;\nvar availOutBefore=this._chunkSize-this._offset;\nvar leftToInflate=this._maxLength;\nvar inOff=0;\n\nvar buffers=[];\nvar nread=0;\n\nvar error;\nthis.on('error',function(err){\nerror=err;\n});\n\nfunction handleChunk(availInAfter,availOutAfter){\nif(self._hadError){\nreturn;\n}\n\nvar have=availOutBefore-availOutAfter;\nassert(have>=0,'have should not go down');\n\nif(have>0){\nvar out=self._buffer.slice(self._offset,self._offset+have);\nself._offset+=have;\n\nif(out.length>leftToInflate){\nout=out.slice(0,leftToInflate);\n}\n\nbuffers.push(out);\nnread+=out.length;\nleftToInflate-=out.length;\n\nif(leftToInflate===0){\nreturn false;\n}\n}\n\nif(availOutAfter===0||self._offset>=self._chunkSize){\navailOutBefore=self._chunkSize;\nself._offset=0;\nself._buffer=Buffer.allocUnsafe(self._chunkSize);\n}\n\nif(availOutAfter===0){\ninOff+=availInBefore-availInAfter;\navailInBefore=availInAfter;\n\nreturn true;\n}\n\nreturn false;\n}\n\nassert(this._handle,'zlib binding closed');\ndo{\nvar res=this._handle.writeSync(flushFlag,\nchunk,// in\ninOff,// in_off\navailInBefore,// in_len\nthis._buffer,// out\nthis._offset,//out_off\navailOutBefore);// out_len\n// Node 8 --> 9 compatibility check\nres=res||this._writeState;\n}while(!this._hadError&&handleChunk(res[0],res[1]));\n\nif(this._hadError){\nthrow error;\n}\n\nif(nread>=kMaxLength){\n_close(this);\nthrow new RangeError('Cannot create final Buffer. It would be larger than 0x'+kMaxLength.toString(16)+' bytes');\n}\n\nvar buf=Buffer.concat(buffers,nread);\n_close(this);\n\nreturn buf;\n};\n\nutil.inherits(Inflate,zlib.Inflate);\n\nfunction zlibBufferSync(engine,buffer){\nif(typeof buffer==='string'){\nbuffer=Buffer.from(buffer);\n}\nif(!(buffer instanceof Buffer)){\nthrow new TypeError('Not a string or buffer');\n}\n\nvar flushFlag=engine._finishFlushFlag;\nif(flushFlag==null){\nflushFlag=zlib.Z_FINISH;\n}\n\nreturn engine._processChunk(buffer,flushFlag);\n}\n\nfunction inflateSync(buffer,opts){\nreturn zlibBufferSync(new Inflate(opts),buffer);\n}\n\nmodule.exports=exports=inflateSync;\nexports.Inflate=Inflate;\nexports.createInflate=createInflate;\nexports.inflateSync=inflateSync;\n\n}).call(this,require('_process'),require(\"buffer\").Buffer);\n},{\"_process\":223,\"assert\":3,\"buffer\":16,\"util\":258,\"zlib\":13}],221:[function(require,module,exports){\n'use strict';\n\nvar SyncReader=module.exports=function(buffer){\n\nthis._buffer=buffer;\nthis._reads=[];\n};\n\nSyncReader.prototype.read=function(length,callback){\n\nthis._reads.push({\nlength:Math.abs(length),// if length < 0 then at most this length\nallowLess:length<0,\nfunc:callback});\n\n};\n\nSyncReader.prototype.process=function(){\n\n// as long as there is any data and read requests\nwhile(this._reads.length>0&&this._buffer.length){\n\nvar read=this._reads[0];\n\nif(this._buffer.length&&(this._buffer.length>=read.length||read.allowLess)){\n\n// ok there is any data so that we can satisfy this request\nthis._reads.shift();// == read\n\nvar buf=this._buffer;\n\nthis._buffer=buf.slice(read.length);\n\nread.func.call(this,buf.slice(0,read.length));\n\n}else\n{\nbreak;\n}\n\n}\n\nif(this._reads.length>0){\nreturn new Error('There are some read requests waitng on finished stream');\n}\n\nif(this._buffer.length>0){\nreturn new Error('unrecognised content at end of stream');\n}\n\n};\n\n},{}],222:[function(require,module,exports){\n(function(process){\n'use strict';\n\nif(!process.version||\nprocess.version.indexOf('v0.')===0||\nprocess.version.indexOf('v1.')===0&&process.version.indexOf('v1.8.')!==0){\nmodule.exports={nextTick:nextTick};\n}else{\nmodule.exports=process;\n}\n\nfunction nextTick(fn,arg1,arg2,arg3){\nif(typeof fn!=='function'){\nthrow new TypeError('\"callback\" argument must be a function');\n}\nvar len=arguments.length;\nvar args,i;\nswitch(len){\ncase 0:\ncase 1:\nreturn process.nextTick(fn);\ncase 2:\nreturn process.nextTick(function afterTickOne(){\nfn.call(null,arg1);\n});\ncase 3:\nreturn process.nextTick(function afterTickTwo(){\nfn.call(null,arg1,arg2);\n});\ncase 4:\nreturn process.nextTick(function afterTickThree(){\nfn.call(null,arg1,arg2,arg3);\n});\ndefault:\nargs=new Array(len-1);\ni=0;\nwhile(i<args.length){\nargs[i++]=arguments[i];\n}\nreturn process.nextTick(function afterTick(){\nfn.apply(null,args);\n});}\n\n}\n\n\n}).call(this,require('_process'));\n},{\"_process\":223}],223:[function(require,module,exports){\n// shim for using process in browser\nvar process=module.exports={};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout(){\nthrow new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout(){\nthrow new Error('clearTimeout has not been defined');\n}\n(function(){\ntry{\nif(typeof setTimeout==='function'){\ncachedSetTimeout=setTimeout;\n}else{\ncachedSetTimeout=defaultSetTimout;\n}\n}catch(e){\ncachedSetTimeout=defaultSetTimout;\n}\ntry{\nif(typeof clearTimeout==='function'){\ncachedClearTimeout=clearTimeout;\n}else{\ncachedClearTimeout=defaultClearTimeout;\n}\n}catch(e){\ncachedClearTimeout=defaultClearTimeout;\n}\n})();\nfunction runTimeout(fun){\nif(cachedSetTimeout===setTimeout){\n//normal enviroments in sane situations\nreturn setTimeout(fun,0);\n}\n// if setTimeout wasn't available but was latter defined\nif((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout){\ncachedSetTimeout=setTimeout;\nreturn setTimeout(fun,0);\n}\ntry{\n// when when somebody has screwed with setTimeout but no I.E. maddness\nreturn cachedSetTimeout(fun,0);\n}catch(e){\ntry{\n// When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\nreturn cachedSetTimeout.call(null,fun,0);\n}catch(e){\n// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\nreturn cachedSetTimeout.call(this,fun,0);\n}\n}\n\n\n}\nfunction runClearTimeout(marker){\nif(cachedClearTimeout===clearTimeout){\n//normal enviroments in sane situations\nreturn clearTimeout(marker);\n}\n// if clearTimeout wasn't available but was latter defined\nif((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout){\ncachedClearTimeout=clearTimeout;\nreturn clearTimeout(marker);\n}\ntry{\n// when when somebody has screwed with setTimeout but no I.E. maddness\nreturn cachedClearTimeout(marker);\n}catch(e){\ntry{\n// When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\nreturn cachedClearTimeout.call(null,marker);\n}catch(e){\n// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n// Some versions of I.E. have different rules for clearTimeout vs setTimeout\nreturn cachedClearTimeout.call(this,marker);\n}\n}\n\n\n\n}\nvar queue=[];\nvar draining=false;\nvar currentQueue;\nvar queueIndex=-1;\n\nfunction cleanUpNextTick(){\nif(!draining||!currentQueue){\nreturn;\n}\ndraining=false;\nif(currentQueue.length){\nqueue=currentQueue.concat(queue);\n}else{\nqueueIndex=-1;\n}\nif(queue.length){\ndrainQueue();\n}\n}\n\nfunction drainQueue(){\nif(draining){\nreturn;\n}\nvar timeout=runTimeout(cleanUpNextTick);\ndraining=true;\n\nvar len=queue.length;\nwhile(len){\ncurrentQueue=queue;\nqueue=[];\nwhile(++queueIndex<len){\nif(currentQueue){\ncurrentQueue[queueIndex].run();\n}\n}\nqueueIndex=-1;\nlen=queue.length;\n}\ncurrentQueue=null;\ndraining=false;\nrunClearTimeout(timeout);\n}\n\nprocess.nextTick=function(fun){\nvar args=new Array(arguments.length-1);\nif(arguments.length>1){\nfor(var i=1;i<arguments.length;i++){\nargs[i-1]=arguments[i];\n}\n}\nqueue.push(new Item(fun,args));\nif(queue.length===1&&!draining){\nrunTimeout(drainQueue);\n}\n};\n\n// v8 likes predictible objects\nfunction Item(fun,array){\nthis.fun=fun;\nthis.array=array;\n}\nItem.prototype.run=function(){\nthis.fun.apply(null,this.array);\n};\nprocess.title='browser';\nprocess.browser=true;\nprocess.env={};\nprocess.argv=[];\nprocess.version='';// empty string to avoid regexp issues\nprocess.versions={};\n\nfunction noop(){}\n\nprocess.on=noop;\nprocess.addListener=noop;\nprocess.once=noop;\nprocess.off=noop;\nprocess.removeListener=noop;\nprocess.removeAllListeners=noop;\nprocess.emit=noop;\nprocess.prependListener=noop;\nprocess.prependOnceListener=noop;\n\nprocess.listeners=function(name){return[];};\n\nprocess.binding=function(name){\nthrow new Error('process.binding is not supported');\n};\n\nprocess.cwd=function(){return'/';};\nprocess.chdir=function(dir){\nthrow new Error('process.chdir is not supported');\n};\nprocess.umask=function(){return 0;};\n\n},{}],224:[function(require,module,exports){\n(function(global){\n/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root){\n\n/** Detect free variables */\nvar freeExports=typeof exports=='object'&&exports&&\n!exports.nodeType&&exports;\nvar freeModule=typeof module=='object'&&module&&\n!module.nodeType&&module;\nvar freeGlobal=typeof global=='object'&&global;\nif(\nfreeGlobal.global===freeGlobal||\nfreeGlobal.window===freeGlobal||\nfreeGlobal.self===freeGlobal)\n{\nroot=freeGlobal;\n}\n\n/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\nvar punycode,\n\n/** Highest positive signed 32-bit float value */\nmaxInt=2147483647,// aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nbase=36,\ntMin=1,\ntMax=26,\nskew=38,\ndamp=700,\ninitialBias=72,\ninitialN=128,// 0x80\ndelimiter='-',// '\\x2D'\n\n/** Regular expressions */\nregexPunycode=/^xn--/,\nregexNonASCII=/[^\\x20-\\x7E]/,// unprintable ASCII chars + non-ASCII chars\nregexSeparators=/[\\x2E\\u3002\\uFF0E\\uFF61]/g,// RFC 3490 separators\n\n/** Error messages */\nerrors={\n'overflow':'Overflow: input needs wider integers to process',\n'not-basic':'Illegal input >= 0x80 (not a basic code point)',\n'invalid-input':'Invalid input'},\n\n\n/** Convenience shortcuts */\nbaseMinusTMin=base-tMin,\nfloor=Math.floor,\nstringFromCharCode=String.fromCharCode,\n\n/** Temporary variable */\nkey;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\nfunction error(type){\nthrow new RangeError(errors[type]);\n}\n\n/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\nfunction map(array,fn){\nvar length=array.length;\nvar result=[];\nwhile(length--){\nresult[length]=fn(array[length]);\n}\nreturn result;\n}\n\n/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\nfunction mapDomain(string,fn){\nvar parts=string.split('@');\nvar result='';\nif(parts.length>1){\n// In email addresses, only the domain name should be punycoded. Leave\n// the local part (i.e. everything up to `@`) intact.\nresult=parts[0]+'@';\nstring=parts[1];\n}\n// Avoid `split(regex)` for IE8 compatibility. See #17.\nstring=string.replace(regexSeparators,'\\x2E');\nvar labels=string.split('.');\nvar encoded=map(labels,fn).join('.');\nreturn result+encoded;\n}\n\n/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\nfunction ucs2decode(string){\nvar output=[],\ncounter=0,\nlength=string.length,\nvalue,\nextra;\nwhile(counter<length){\nvalue=string.charCodeAt(counter++);\nif(value>=0xD800&&value<=0xDBFF&&counter<length){\n// high surrogate, and there is a next character\nextra=string.charCodeAt(counter++);\nif((extra&0xFC00)==0xDC00){// low surrogate\noutput.push(((value&0x3FF)<<10)+(extra&0x3FF)+0x10000);\n}else{\n// unmatched surrogate; only append this code unit, in case the next\n// code unit is the high surrogate of a surrogate pair\noutput.push(value);\ncounter--;\n}\n}else{\noutput.push(value);\n}\n}\nreturn output;\n}\n\n/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\nfunction ucs2encode(array){\nreturn map(array,function(value){\nvar output='';\nif(value>0xFFFF){\nvalue-=0x10000;\noutput+=stringFromCharCode(value>>>10&0x3FF|0xD800);\nvalue=0xDC00|value&0x3FF;\n}\noutput+=stringFromCharCode(value);\nreturn output;\n}).join('');\n}\n\n/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\nfunction basicToDigit(codePoint){\nif(codePoint-48<10){\nreturn codePoint-22;\n}\nif(codePoint-65<26){\nreturn codePoint-65;\n}\nif(codePoint-97<26){\nreturn codePoint-97;\n}\nreturn base;\n}\n\n/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\nfunction digitToBasic(digit,flag){\n//  0..25 map to ASCII a..z or A..Z\n// 26..35 map to ASCII 0..9\nreturn digit+22+75*(digit<26)-((flag!=0)<<5);\n}\n\n/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\nfunction adapt(delta,numPoints,firstTime){\nvar k=0;\ndelta=firstTime?floor(delta/damp):delta>>1;\ndelta+=floor(delta/numPoints);\nfor(;/* no initialization */delta>baseMinusTMin*tMax>>1;k+=base){\ndelta=floor(delta/baseMinusTMin);\n}\nreturn floor(k+(baseMinusTMin+1)*delta/(delta+skew));\n}\n\n/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\nfunction decode(input){\n// Don't use UCS-2\nvar output=[],\ninputLength=input.length,\nout,\ni=0,\nn=initialN,\nbias=initialBias,\nbasic,\nj,\nindex,\noldi,\nw,\nk,\ndigit,\nt,\n/** Cached calculation results */\nbaseMinusT;\n\n// Handle the basic code points: let `basic` be the number of input code\n// points before the last delimiter, or `0` if there is none, then copy\n// the first basic code points to the output.\n\nbasic=input.lastIndexOf(delimiter);\nif(basic<0){\nbasic=0;\n}\n\nfor(j=0;j<basic;++j){\n// if it's not a basic code point\nif(input.charCodeAt(j)>=0x80){\nerror('not-basic');\n}\noutput.push(input.charCodeAt(j));\n}\n\n// Main decoding loop: start just after the last delimiter if any basic code\n// points were copied; start at the beginning otherwise.\n\nfor(index=basic>0?basic+1:0;index<inputLength;)/* no final expression */{\n\n// `index` is the index of the next character to be consumed.\n// Decode a generalized variable-length integer into `delta`,\n// which gets added to `i`. The overflow checking is easier\n// if we increase `i` as we go, then subtract off its starting\n// value at the end to obtain `delta`.\nfor(oldi=i,w=1,k=base;;/* no condition */k+=base){\n\nif(index>=inputLength){\nerror('invalid-input');\n}\n\ndigit=basicToDigit(input.charCodeAt(index++));\n\nif(digit>=base||digit>floor((maxInt-i)/w)){\nerror('overflow');\n}\n\ni+=digit*w;\nt=k<=bias?tMin:k>=bias+tMax?tMax:k-bias;\n\nif(digit<t){\nbreak;\n}\n\nbaseMinusT=base-t;\nif(w>floor(maxInt/baseMinusT)){\nerror('overflow');\n}\n\nw*=baseMinusT;\n\n}\n\nout=output.length+1;\nbias=adapt(i-oldi,out,oldi==0);\n\n// `i` was supposed to wrap around from `out` to `0`,\n// incrementing `n` each time, so we'll fix that now:\nif(floor(i/out)>maxInt-n){\nerror('overflow');\n}\n\nn+=floor(i/out);\ni%=out;\n\n// Insert `n` at position `i` of the output\noutput.splice(i++,0,n);\n\n}\n\nreturn ucs2encode(output);\n}\n\n/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\nfunction encode(input){\nvar n,\ndelta,\nhandledCPCount,\nbasicLength,\nbias,\nj,\nm,\nq,\nk,\nt,\ncurrentValue,\noutput=[],\n/** `inputLength` will hold the number of code points in `input`. */\ninputLength,\n/** Cached calculation results */\nhandledCPCountPlusOne,\nbaseMinusT,\nqMinusT;\n\n// Convert the input in UCS-2 to Unicode\ninput=ucs2decode(input);\n\n// Cache the length\ninputLength=input.length;\n\n// Initialize the state\nn=initialN;\ndelta=0;\nbias=initialBias;\n\n// Handle the basic code points\nfor(j=0;j<inputLength;++j){\ncurrentValue=input[j];\nif(currentValue<0x80){\noutput.push(stringFromCharCode(currentValue));\n}\n}\n\nhandledCPCount=basicLength=output.length;\n\n// `handledCPCount` is the number of code points that have been handled;\n// `basicLength` is the number of basic code points.\n\n// Finish the basic string - if it is not empty - with a delimiter\nif(basicLength){\noutput.push(delimiter);\n}\n\n// Main encoding loop:\nwhile(handledCPCount<inputLength){\n\n// All non-basic code points < n have been handled already. Find the next\n// larger one:\nfor(m=maxInt,j=0;j<inputLength;++j){\ncurrentValue=input[j];\nif(currentValue>=n&&currentValue<m){\nm=currentValue;\n}\n}\n\n// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n// but guard against overflow\nhandledCPCountPlusOne=handledCPCount+1;\nif(m-n>floor((maxInt-delta)/handledCPCountPlusOne)){\nerror('overflow');\n}\n\ndelta+=(m-n)*handledCPCountPlusOne;\nn=m;\n\nfor(j=0;j<inputLength;++j){\ncurrentValue=input[j];\n\nif(currentValue<n&&++delta>maxInt){\nerror('overflow');\n}\n\nif(currentValue==n){\n// Represent delta as a generalized variable-length integer\nfor(q=delta,k=base;;/* no condition */k+=base){\nt=k<=bias?tMin:k>=bias+tMax?tMax:k-bias;\nif(q<t){\nbreak;\n}\nqMinusT=q-t;\nbaseMinusT=base-t;\noutput.push(\nstringFromCharCode(digitToBasic(t+qMinusT%baseMinusT,0)));\n\nq=floor(qMinusT/baseMinusT);\n}\n\noutput.push(stringFromCharCode(digitToBasic(q,0)));\nbias=adapt(delta,handledCPCountPlusOne,handledCPCount==basicLength);\ndelta=0;\n++handledCPCount;\n}\n}\n\n++delta;\n++n;\n\n}\nreturn output.join('');\n}\n\n/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\nfunction toUnicode(input){\nreturn mapDomain(input,function(string){\nreturn regexPunycode.test(string)?\ndecode(string.slice(4).toLowerCase()):\nstring;\n});\n}\n\n/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\nfunction toASCII(input){\nreturn mapDomain(input,function(string){\nreturn regexNonASCII.test(string)?\n'xn--'+encode(string):\nstring;\n});\n}\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\npunycode={\n/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n'version':'1.4.1',\n/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n'ucs2':{\n'decode':ucs2decode,\n'encode':ucs2encode},\n\n'decode':decode,\n'encode':encode,\n'toASCII':toASCII,\n'toUnicode':toUnicode};\n\n\n/** Expose `punycode` */\n// Some AMD build optimizers, like r.js, check for specific condition patterns\n// like the following:\nif(\ntypeof define=='function'&&\ntypeof define.amd=='object'&&\ndefine.amd)\n{\ndefine('punycode',function(){\nreturn punycode;\n});\n}else if(freeExports&&freeModule){\nif(module.exports==freeExports){\n// in Node.js, io.js, or RingoJS v0.8.0+\nfreeModule.exports=punycode;\n}else{\n// in Narwhal or RingoJS v0.7.0-\nfor(key in punycode){\npunycode.hasOwnProperty(key)&&(freeExports[key]=punycode[key]);\n}\n}\n}else{\n// in Rhino or a web browser\nroot.punycode=punycode;\n}\n\n})(this);\n\n}).call(this,typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{});\n},{}],225:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj,prop){\nreturn Object.prototype.hasOwnProperty.call(obj,prop);\n}\n\nmodule.exports=function(qs,sep,eq,options){\nsep=sep||'&';\neq=eq||'=';\nvar obj={};\n\nif(typeof qs!=='string'||qs.length===0){\nreturn obj;\n}\n\nvar regexp=/\\+/g;\nqs=qs.split(sep);\n\nvar maxKeys=1000;\nif(options&&typeof options.maxKeys==='number'){\nmaxKeys=options.maxKeys;\n}\n\nvar len=qs.length;\n// maxKeys <= 0 means that we should not limit keys count\nif(maxKeys>0&&len>maxKeys){\nlen=maxKeys;\n}\n\nfor(var i=0;i<len;++i){\nvar x=qs[i].replace(regexp,'%20'),\nidx=x.indexOf(eq),\nkstr,vstr,k,v;\n\nif(idx>=0){\nkstr=x.substr(0,idx);\nvstr=x.substr(idx+1);\n}else{\nkstr=x;\nvstr='';\n}\n\nk=decodeURIComponent(kstr);\nv=decodeURIComponent(vstr);\n\nif(!hasOwnProperty(obj,k)){\nobj[k]=v;\n}else if(isArray(obj[k])){\nobj[k].push(v);\n}else{\nobj[k]=[obj[k],v];\n}\n}\n\nreturn obj;\n};\n\nvar isArray=Array.isArray||function(xs){\nreturn Object.prototype.toString.call(xs)==='[object Array]';\n};\n\n},{}],226:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive=function stringifyPrimitive(v){\nswitch(typeof v){\ncase'string':\nreturn v;\n\ncase'boolean':\nreturn v?'true':'false';\n\ncase'number':\nreturn isFinite(v)?v:'';\n\ndefault:\nreturn'';}\n\n};\n\nmodule.exports=function(obj,sep,eq,name){\nsep=sep||'&';\neq=eq||'=';\nif(obj===null){\nobj=undefined;\n}\n\nif(typeof obj==='object'){\nreturn map(objectKeys(obj),function(k){\nvar ks=encodeURIComponent(stringifyPrimitive(k))+eq;\nif(isArray(obj[k])){\nreturn map(obj[k],function(v){\nreturn ks+encodeURIComponent(stringifyPrimitive(v));\n}).join(sep);\n}else{\nreturn ks+encodeURIComponent(stringifyPrimitive(obj[k]));\n}\n}).join(sep);\n\n}\n\nif(!name)return'';\nreturn encodeURIComponent(stringifyPrimitive(name))+eq+\nencodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray=Array.isArray||function(xs){\nreturn Object.prototype.toString.call(xs)==='[object Array]';\n};\n\nfunction map(xs,f){\nif(xs.map)return xs.map(f);\nvar res=[];\nfor(var i=0;i<xs.length;i++){\nres.push(f(xs[i],i));\n}\nreturn res;\n}\n\nvar objectKeys=Object.keys||function(obj){\nvar res=[];\nfor(var key in obj){\nif(Object.prototype.hasOwnProperty.call(obj,key))res.push(key);\n}\nreturn res;\n};\n\n},{}],227:[function(require,module,exports){\n'use strict';\n\nexports.decode=exports.parse=require('./decode');\nexports.encode=exports.stringify=require('./encode');\n\n},{\"./decode\":225,\"./encode\":226}],228:[function(require,module,exports){\nmodule.exports=require('./lib/_stream_duplex.js');\n\n},{\"./lib/_stream_duplex.js\":229}],229:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna=require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys=Object.keys||function(obj){\nvar keys=[];\nfor(var key in obj){\nkeys.push(key);\n}return keys;\n};\n/*</replacement>*/\n\nmodule.exports=Duplex;\n\n/*<replacement>*/\nvar util=require('core-util-is');\nutil.inherits=require('inherits');\n/*</replacement>*/\n\nvar Readable=require('./_stream_readable');\nvar Writable=require('./_stream_writable');\n\nutil.inherits(Duplex,Readable);\n\n{\n// avoid scope creep, the keys array can then be collected\nvar keys=objectKeys(Writable.prototype);\nfor(var v=0;v<keys.length;v++){\nvar method=keys[v];\nif(!Duplex.prototype[method])Duplex.prototype[method]=Writable.prototype[method];\n}\n}\n\nfunction Duplex(options){\nif(!(this instanceof Duplex))return new Duplex(options);\n\nReadable.call(this,options);\nWritable.call(this,options);\n\nif(options&&options.readable===false)this.readable=false;\n\nif(options&&options.writable===false)this.writable=false;\n\nthis.allowHalfOpen=true;\nif(options&&options.allowHalfOpen===false)this.allowHalfOpen=false;\n\nthis.once('end',onend);\n}\n\nObject.defineProperty(Duplex.prototype,'writableHighWaterMark',{\n// making it explicit this property is not enumerable\n// because otherwise some prototype manipulation in\n// userland will fail\nenumerable:false,\nget:function get(){\nreturn this._writableState.highWaterMark;\n}});\n\n\n// the no-half-open enforcer\nfunction onend(){\n// if we allow half-open state, or if the writable side ended,\n// then we're ok.\nif(this.allowHalfOpen||this._writableState.ended)return;\n\n// no more data can be written.\n// But allow more writes to happen in this tick.\npna.nextTick(onEndNT,this);\n}\n\nfunction onEndNT(self){\nself.end();\n}\n\nObject.defineProperty(Duplex.prototype,'destroyed',{\nget:function get(){\nif(this._readableState===undefined||this._writableState===undefined){\nreturn false;\n}\nreturn this._readableState.destroyed&&this._writableState.destroyed;\n},\nset:function set(value){\n// we ignore the value if the stream\n// has not been initialized yet\nif(this._readableState===undefined||this._writableState===undefined){\nreturn;\n}\n\n// backward compatibility, the user is explicitly\n// managing destroyed\nthis._readableState.destroyed=value;\nthis._writableState.destroyed=value;\n}});\n\n\nDuplex.prototype._destroy=function(err,cb){\nthis.push(null);\nthis.end();\n\npna.nextTick(cb,err);\n};\n},{\"./_stream_readable\":231,\"./_stream_writable\":233,\"core-util-is\":150,\"inherits\":166,\"process-nextick-args\":222}],230:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports=PassThrough;\n\nvar Transform=require('./_stream_transform');\n\n/*<replacement>*/\nvar util=require('core-util-is');\nutil.inherits=require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough,Transform);\n\nfunction PassThrough(options){\nif(!(this instanceof PassThrough))return new PassThrough(options);\n\nTransform.call(this,options);\n}\n\nPassThrough.prototype._transform=function(chunk,encoding,cb){\ncb(null,chunk);\n};\n},{\"./_stream_transform\":232,\"core-util-is\":150,\"inherits\":166}],231:[function(require,module,exports){\n(function(process,global){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna=require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports=Readable;\n\n/*<replacement>*/\nvar isArray=require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState=ReadableState;\n\n/*<replacement>*/\nvar EE=require('events').EventEmitter;\n\nvar EElistenerCount=function EElistenerCount(emitter,type){\nreturn emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream=require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer=require('safe-buffer').Buffer;\nvar OurUint8Array=global.Uint8Array||function(){};\nfunction _uint8ArrayToBuffer(chunk){\nreturn Buffer.from(chunk);\n}\nfunction _isUint8Array(obj){\nreturn Buffer.isBuffer(obj)||obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util=require('core-util-is');\nutil.inherits=require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil=require('util');\nvar debug=void 0;\nif(debugUtil&&debugUtil.debuglog){\ndebug=debugUtil.debuglog('stream');\n}else{\ndebug=function debug(){};\n}\n/*</replacement>*/\n\nvar BufferList=require('./internal/streams/BufferList');\nvar destroyImpl=require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable,Stream);\n\nvar kProxyEvents=['error','close','destroy','pause','resume'];\n\nfunction prependListener(emitter,event,fn){\n// Sadly this is not cacheable as some libraries bundle their own\n// event emitter implementation with them.\nif(typeof emitter.prependListener==='function')return emitter.prependListener(event,fn);\n\n// This is a hack to make sure that our error handler is attached before any\n// userland ones.  NEVER DO THIS. This is here only because this code needs\n// to continue to work with older versions of Node.js that do not include\n// the prependListener() method. The goal is to eventually remove this hack.\nif(!emitter._events||!emitter._events[event])emitter.on(event,fn);else if(isArray(emitter._events[event]))emitter._events[event].unshift(fn);else emitter._events[event]=[fn,emitter._events[event]];\n}\n\nfunction ReadableState(options,stream){\nDuplex=Duplex||require('./_stream_duplex');\n\noptions=options||{};\n\n// Duplex streams are both readable and writable, but share\n// the same options object.\n// However, some cases require setting options to different\n// values for the readable and the writable sides of the duplex stream.\n// These options can be provided separately as readableXXX and writableXXX.\nvar isDuplex=stream instanceof Duplex;\n\n// object stream flag. Used to make read(n) ignore n and to\n// make all the buffer merging and length checks go away\nthis.objectMode=!!options.objectMode;\n\nif(isDuplex)this.objectMode=this.objectMode||!!options.readableObjectMode;\n\n// the point at which it stops calling _read() to fill the buffer\n// Note: 0 is a valid value, means \"don't call _read preemptively ever\"\nvar hwm=options.highWaterMark;\nvar readableHwm=options.readableHighWaterMark;\nvar defaultHwm=this.objectMode?16:16*1024;\n\nif(hwm||hwm===0)this.highWaterMark=hwm;else if(isDuplex&&(readableHwm||readableHwm===0))this.highWaterMark=readableHwm;else this.highWaterMark=defaultHwm;\n\n// cast to ints.\nthis.highWaterMark=Math.floor(this.highWaterMark);\n\n// A linked list is used to store data chunks instead of an array because the\n// linked list can remove elements from the beginning faster than\n// array.shift()\nthis.buffer=new BufferList();\nthis.length=0;\nthis.pipes=null;\nthis.pipesCount=0;\nthis.flowing=null;\nthis.ended=false;\nthis.endEmitted=false;\nthis.reading=false;\n\n// a flag to be able to tell if the event 'readable'/'data' is emitted\n// immediately, or on a later tick.  We set this to true at first, because\n// any actions that shouldn't happen until \"later\" should generally also\n// not happen before the first read call.\nthis.sync=true;\n\n// whenever we return null, then we set a flag to say\n// that we're awaiting a 'readable' event emission.\nthis.needReadable=false;\nthis.emittedReadable=false;\nthis.readableListening=false;\nthis.resumeScheduled=false;\n\n// has it been destroyed\nthis.destroyed=false;\n\n// Crypto is kind of old and crusty.  Historically, its default string\n// encoding is 'binary' so we have to make this configurable.\n// Everything else in the universe uses 'utf8', though.\nthis.defaultEncoding=options.defaultEncoding||'utf8';\n\n// the number of writers that are awaiting a drain event in .pipe()s\nthis.awaitDrain=0;\n\n// if true, a maybeReadMore has been scheduled\nthis.readingMore=false;\n\nthis.decoder=null;\nthis.encoding=null;\nif(options.encoding){\nif(!StringDecoder)StringDecoder=require('string_decoder/').StringDecoder;\nthis.decoder=new StringDecoder(options.encoding);\nthis.encoding=options.encoding;\n}\n}\n\nfunction Readable(options){\nDuplex=Duplex||require('./_stream_duplex');\n\nif(!(this instanceof Readable))return new Readable(options);\n\nthis._readableState=new ReadableState(options,this);\n\n// legacy\nthis.readable=true;\n\nif(options){\nif(typeof options.read==='function')this._read=options.read;\n\nif(typeof options.destroy==='function')this._destroy=options.destroy;\n}\n\nStream.call(this);\n}\n\nObject.defineProperty(Readable.prototype,'destroyed',{\nget:function get(){\nif(this._readableState===undefined){\nreturn false;\n}\nreturn this._readableState.destroyed;\n},\nset:function set(value){\n// we ignore the value if the stream\n// has not been initialized yet\nif(!this._readableState){\nreturn;\n}\n\n// backward compatibility, the user is explicitly\n// managing destroyed\nthis._readableState.destroyed=value;\n}});\n\n\nReadable.prototype.destroy=destroyImpl.destroy;\nReadable.prototype._undestroy=destroyImpl.undestroy;\nReadable.prototype._destroy=function(err,cb){\nthis.push(null);\ncb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push=function(chunk,encoding){\nvar state=this._readableState;\nvar skipChunkCheck;\n\nif(!state.objectMode){\nif(typeof chunk==='string'){\nencoding=encoding||state.defaultEncoding;\nif(encoding!==state.encoding){\nchunk=Buffer.from(chunk,encoding);\nencoding='';\n}\nskipChunkCheck=true;\n}\n}else{\nskipChunkCheck=true;\n}\n\nreturn readableAddChunk(this,chunk,encoding,false,skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift=function(chunk){\nreturn readableAddChunk(this,chunk,null,true,false);\n};\n\nfunction readableAddChunk(stream,chunk,encoding,addToFront,skipChunkCheck){\nvar state=stream._readableState;\nif(chunk===null){\nstate.reading=false;\nonEofChunk(stream,state);\n}else{\nvar er;\nif(!skipChunkCheck)er=chunkInvalid(state,chunk);\nif(er){\nstream.emit('error',er);\n}else if(state.objectMode||chunk&&chunk.length>0){\nif(typeof chunk!=='string'&&!state.objectMode&&Object.getPrototypeOf(chunk)!==Buffer.prototype){\nchunk=_uint8ArrayToBuffer(chunk);\n}\n\nif(addToFront){\nif(state.endEmitted)stream.emit('error',new Error('stream.unshift() after end event'));else addChunk(stream,state,chunk,true);\n}else if(state.ended){\nstream.emit('error',new Error('stream.push() after EOF'));\n}else{\nstate.reading=false;\nif(state.decoder&&!encoding){\nchunk=state.decoder.write(chunk);\nif(state.objectMode||chunk.length!==0)addChunk(stream,state,chunk,false);else maybeReadMore(stream,state);\n}else{\naddChunk(stream,state,chunk,false);\n}\n}\n}else if(!addToFront){\nstate.reading=false;\n}\n}\n\nreturn needMoreData(state);\n}\n\nfunction addChunk(stream,state,chunk,addToFront){\nif(state.flowing&&state.length===0&&!state.sync){\nstream.emit('data',chunk);\nstream.read(0);\n}else{\n// update the buffer info.\nstate.length+=state.objectMode?1:chunk.length;\nif(addToFront)state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\nif(state.needReadable)emitReadable(stream);\n}\nmaybeReadMore(stream,state);\n}\n\nfunction chunkInvalid(state,chunk){\nvar er;\nif(!_isUint8Array(chunk)&&typeof chunk!=='string'&&chunk!==undefined&&!state.objectMode){\ner=new TypeError('Invalid non-string/buffer chunk');\n}\nreturn er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state){\nreturn!state.ended&&(state.needReadable||state.length<state.highWaterMark||state.length===0);\n}\n\nReadable.prototype.isPaused=function(){\nreturn this._readableState.flowing===false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding=function(enc){\nif(!StringDecoder)StringDecoder=require('string_decoder/').StringDecoder;\nthis._readableState.decoder=new StringDecoder(enc);\nthis._readableState.encoding=enc;\nreturn this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM=0x800000;\nfunction computeNewHighWaterMark(n){\nif(n>=MAX_HWM){\nn=MAX_HWM;\n}else{\n// Get the next highest power of 2 to prevent increasing hwm excessively in\n// tiny amounts\nn--;\nn|=n>>>1;\nn|=n>>>2;\nn|=n>>>4;\nn|=n>>>8;\nn|=n>>>16;\nn++;\n}\nreturn n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n,state){\nif(n<=0||state.length===0&&state.ended)return 0;\nif(state.objectMode)return 1;\nif(n!==n){\n// Only flow one buffer at a time\nif(state.flowing&&state.length)return state.buffer.head.data.length;else return state.length;\n}\n// If we're asking for more than the current hwm, then raise the hwm.\nif(n>state.highWaterMark)state.highWaterMark=computeNewHighWaterMark(n);\nif(n<=state.length)return n;\n// Don't have enough\nif(!state.ended){\nstate.needReadable=true;\nreturn 0;\n}\nreturn state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read=function(n){\ndebug('read',n);\nn=parseInt(n,10);\nvar state=this._readableState;\nvar nOrig=n;\n\nif(n!==0)state.emittedReadable=false;\n\n// if we're doing read(0) to trigger a readable event, but we\n// already have a bunch of data in the buffer, then just trigger\n// the 'readable' event and move on.\nif(n===0&&state.needReadable&&(state.length>=state.highWaterMark||state.ended)){\ndebug('read: emitReadable',state.length,state.ended);\nif(state.length===0&&state.ended)endReadable(this);else emitReadable(this);\nreturn null;\n}\n\nn=howMuchToRead(n,state);\n\n// if we've ended, and we're now clear, then finish it up.\nif(n===0&&state.ended){\nif(state.length===0)endReadable(this);\nreturn null;\n}\n\n// All the actual chunk generation logic needs to be\n// *below* the call to _read.  The reason is that in certain\n// synthetic stream cases, such as passthrough streams, _read\n// may be a completely synchronous operation which may change\n// the state of the read buffer, providing enough data when\n// before there was *not* enough.\n//\n// So, the steps are:\n// 1. Figure out what the state of things will be after we do\n// a read from the buffer.\n//\n// 2. If that resulting state will trigger a _read, then call _read.\n// Note that this may be asynchronous, or synchronous.  Yes, it is\n// deeply ugly to write APIs this way, but that still doesn't mean\n// that the Readable class should behave improperly, as streams are\n// designed to be sync/async agnostic.\n// Take note if the _read call is sync or async (ie, if the read call\n// has returned yet), so that we know whether or not it's safe to emit\n// 'readable' etc.\n//\n// 3. Actually pull the requested chunks out of the buffer and return.\n\n// if we need a readable event, then we need to do some reading.\nvar doRead=state.needReadable;\ndebug('need readable',doRead);\n\n// if we currently have less than the highWaterMark, then also read some\nif(state.length===0||state.length-n<state.highWaterMark){\ndoRead=true;\ndebug('length less than watermark',doRead);\n}\n\n// however, if we've ended, then there's no point, and if we're already\n// reading, then it's unnecessary.\nif(state.ended||state.reading){\ndoRead=false;\ndebug('reading or ended',doRead);\n}else if(doRead){\ndebug('do read');\nstate.reading=true;\nstate.sync=true;\n// if the length is currently zero, then we *need* a readable event.\nif(state.length===0)state.needReadable=true;\n// call internal read method\nthis._read(state.highWaterMark);\nstate.sync=false;\n// If _read pushed data synchronously, then `reading` will be false,\n// and we need to re-evaluate how much data we can return to the user.\nif(!state.reading)n=howMuchToRead(nOrig,state);\n}\n\nvar ret;\nif(n>0)ret=fromList(n,state);else ret=null;\n\nif(ret===null){\nstate.needReadable=true;\nn=0;\n}else{\nstate.length-=n;\n}\n\nif(state.length===0){\n// If we have nothing in the buffer, then we want to know\n// as soon as we *do* get something into the buffer.\nif(!state.ended)state.needReadable=true;\n\n// If we tried to read() past the EOF, then emit end on the next tick.\nif(nOrig!==n&&state.ended)endReadable(this);\n}\n\nif(ret!==null)this.emit('data',ret);\n\nreturn ret;\n};\n\nfunction onEofChunk(stream,state){\nif(state.ended)return;\nif(state.decoder){\nvar chunk=state.decoder.end();\nif(chunk&&chunk.length){\nstate.buffer.push(chunk);\nstate.length+=state.objectMode?1:chunk.length;\n}\n}\nstate.ended=true;\n\n// emit 'readable' now to make sure it gets picked up.\nemitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream){\nvar state=stream._readableState;\nstate.needReadable=false;\nif(!state.emittedReadable){\ndebug('emitReadable',state.flowing);\nstate.emittedReadable=true;\nif(state.sync)pna.nextTick(emitReadable_,stream);else emitReadable_(stream);\n}\n}\n\nfunction emitReadable_(stream){\ndebug('emit readable');\nstream.emit('readable');\nflow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream,state){\nif(!state.readingMore){\nstate.readingMore=true;\npna.nextTick(maybeReadMore_,stream,state);\n}\n}\n\nfunction maybeReadMore_(stream,state){\nvar len=state.length;\nwhile(!state.reading&&!state.flowing&&!state.ended&&state.length<state.highWaterMark){\ndebug('maybeReadMore read 0');\nstream.read(0);\nif(len===state.length)\n// didn't get any data, stop spinning.\nbreak;else len=state.length;\n}\nstate.readingMore=false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read=function(n){\nthis.emit('error',new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe=function(dest,pipeOpts){\nvar src=this;\nvar state=this._readableState;\n\nswitch(state.pipesCount){\ncase 0:\nstate.pipes=dest;\nbreak;\ncase 1:\nstate.pipes=[state.pipes,dest];\nbreak;\ndefault:\nstate.pipes.push(dest);\nbreak;}\n\nstate.pipesCount+=1;\ndebug('pipe count=%d opts=%j',state.pipesCount,pipeOpts);\n\nvar doEnd=(!pipeOpts||pipeOpts.end!==false)&&dest!==process.stdout&&dest!==process.stderr;\n\nvar endFn=doEnd?onend:unpipe;\nif(state.endEmitted)pna.nextTick(endFn);else src.once('end',endFn);\n\ndest.on('unpipe',onunpipe);\nfunction onunpipe(readable,unpipeInfo){\ndebug('onunpipe');\nif(readable===src){\nif(unpipeInfo&&unpipeInfo.hasUnpiped===false){\nunpipeInfo.hasUnpiped=true;\ncleanup();\n}\n}\n}\n\nfunction onend(){\ndebug('onend');\ndest.end();\n}\n\n// when the dest drains, it reduces the awaitDrain counter\n// on the source.  This would be more elegant with a .once()\n// handler in flow(), but adding and removing repeatedly is\n// too slow.\nvar ondrain=pipeOnDrain(src);\ndest.on('drain',ondrain);\n\nvar cleanedUp=false;\nfunction cleanup(){\ndebug('cleanup');\n// cleanup event handlers once the pipe is broken\ndest.removeListener('close',onclose);\ndest.removeListener('finish',onfinish);\ndest.removeListener('drain',ondrain);\ndest.removeListener('error',onerror);\ndest.removeListener('unpipe',onunpipe);\nsrc.removeListener('end',onend);\nsrc.removeListener('end',unpipe);\nsrc.removeListener('data',ondata);\n\ncleanedUp=true;\n\n// if the reader is waiting for a drain event from this\n// specific writer, then it would cause it to never start\n// flowing again.\n// So, if this is awaiting a drain, then we just call it now.\n// If we don't know, then assume that we are waiting for one.\nif(state.awaitDrain&&(!dest._writableState||dest._writableState.needDrain))ondrain();\n}\n\n// If the user pushes more data while we're writing to dest then we'll end up\n// in ondata again. However, we only want to increase awaitDrain once because\n// dest will only emit one 'drain' event for the multiple writes.\n// => Introduce a guard on increasing awaitDrain.\nvar increasedAwaitDrain=false;\nsrc.on('data',ondata);\nfunction ondata(chunk){\ndebug('ondata');\nincreasedAwaitDrain=false;\nvar ret=dest.write(chunk);\nif(false===ret&&!increasedAwaitDrain){\n// If the user unpiped during `dest.write()`, it is possible\n// to get stuck in a permanently paused state if that write\n// also returned false.\n// => Check whether `dest` is still a piping destination.\nif((state.pipesCount===1&&state.pipes===dest||state.pipesCount>1&&indexOf(state.pipes,dest)!==-1)&&!cleanedUp){\ndebug('false write response, pause',src._readableState.awaitDrain);\nsrc._readableState.awaitDrain++;\nincreasedAwaitDrain=true;\n}\nsrc.pause();\n}\n}\n\n// if the dest has an error, then stop piping into it.\n// however, don't suppress the throwing behavior for this.\nfunction onerror(er){\ndebug('onerror',er);\nunpipe();\ndest.removeListener('error',onerror);\nif(EElistenerCount(dest,'error')===0)dest.emit('error',er);\n}\n\n// Make sure our error handler is attached before userland ones.\nprependListener(dest,'error',onerror);\n\n// Both close and finish should trigger unpipe, but only once.\nfunction onclose(){\ndest.removeListener('finish',onfinish);\nunpipe();\n}\ndest.once('close',onclose);\nfunction onfinish(){\ndebug('onfinish');\ndest.removeListener('close',onclose);\nunpipe();\n}\ndest.once('finish',onfinish);\n\nfunction unpipe(){\ndebug('unpipe');\nsrc.unpipe(dest);\n}\n\n// tell the dest that it's being piped to\ndest.emit('pipe',src);\n\n// start the flow if it hasn't been started already.\nif(!state.flowing){\ndebug('pipe resume');\nsrc.resume();\n}\n\nreturn dest;\n};\n\nfunction pipeOnDrain(src){\nreturn function(){\nvar state=src._readableState;\ndebug('pipeOnDrain',state.awaitDrain);\nif(state.awaitDrain)state.awaitDrain--;\nif(state.awaitDrain===0&&EElistenerCount(src,'data')){\nstate.flowing=true;\nflow(src);\n}\n};\n}\n\nReadable.prototype.unpipe=function(dest){\nvar state=this._readableState;\nvar unpipeInfo={hasUnpiped:false};\n\n// if we're not piping anywhere, then do nothing.\nif(state.pipesCount===0)return this;\n\n// just one destination.  most common case.\nif(state.pipesCount===1){\n// passed in one, but it's not the right one.\nif(dest&&dest!==state.pipes)return this;\n\nif(!dest)dest=state.pipes;\n\n// got a match.\nstate.pipes=null;\nstate.pipesCount=0;\nstate.flowing=false;\nif(dest)dest.emit('unpipe',this,unpipeInfo);\nreturn this;\n}\n\n// slow case. multiple pipe destinations.\n\nif(!dest){\n// remove all.\nvar dests=state.pipes;\nvar len=state.pipesCount;\nstate.pipes=null;\nstate.pipesCount=0;\nstate.flowing=false;\n\nfor(var i=0;i<len;i++){\ndests[i].emit('unpipe',this,unpipeInfo);\n}return this;\n}\n\n// try to find the right one.\nvar index=indexOf(state.pipes,dest);\nif(index===-1)return this;\n\nstate.pipes.splice(index,1);\nstate.pipesCount-=1;\nif(state.pipesCount===1)state.pipes=state.pipes[0];\n\ndest.emit('unpipe',this,unpipeInfo);\n\nreturn this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on=function(ev,fn){\nvar res=Stream.prototype.on.call(this,ev,fn);\n\nif(ev==='data'){\n// Start flowing on next tick if stream isn't explicitly paused\nif(this._readableState.flowing!==false)this.resume();\n}else if(ev==='readable'){\nvar state=this._readableState;\nif(!state.endEmitted&&!state.readableListening){\nstate.readableListening=state.needReadable=true;\nstate.emittedReadable=false;\nif(!state.reading){\npna.nextTick(nReadingNextTick,this);\n}else if(state.length){\nemitReadable(this);\n}\n}\n}\n\nreturn res;\n};\nReadable.prototype.addListener=Readable.prototype.on;\n\nfunction nReadingNextTick(self){\ndebug('readable nexttick read 0');\nself.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume=function(){\nvar state=this._readableState;\nif(!state.flowing){\ndebug('resume');\nstate.flowing=true;\nresume(this,state);\n}\nreturn this;\n};\n\nfunction resume(stream,state){\nif(!state.resumeScheduled){\nstate.resumeScheduled=true;\npna.nextTick(resume_,stream,state);\n}\n}\n\nfunction resume_(stream,state){\nif(!state.reading){\ndebug('resume read 0');\nstream.read(0);\n}\n\nstate.resumeScheduled=false;\nstate.awaitDrain=0;\nstream.emit('resume');\nflow(stream);\nif(state.flowing&&!state.reading)stream.read(0);\n}\n\nReadable.prototype.pause=function(){\ndebug('call pause flowing=%j',this._readableState.flowing);\nif(false!==this._readableState.flowing){\ndebug('pause');\nthis._readableState.flowing=false;\nthis.emit('pause');\n}\nreturn this;\n};\n\nfunction flow(stream){\nvar state=stream._readableState;\ndebug('flow',state.flowing);\nwhile(state.flowing&&stream.read()!==null){}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap=function(stream){\nvar _this=this;\n\nvar state=this._readableState;\nvar paused=false;\n\nstream.on('end',function(){\ndebug('wrapped end');\nif(state.decoder&&!state.ended){\nvar chunk=state.decoder.end();\nif(chunk&&chunk.length)_this.push(chunk);\n}\n\n_this.push(null);\n});\n\nstream.on('data',function(chunk){\ndebug('wrapped data');\nif(state.decoder)chunk=state.decoder.write(chunk);\n\n// don't skip over falsy values in objectMode\nif(state.objectMode&&(chunk===null||chunk===undefined))return;else if(!state.objectMode&&(!chunk||!chunk.length))return;\n\nvar ret=_this.push(chunk);\nif(!ret){\npaused=true;\nstream.pause();\n}\n});\n\n// proxy all the other methods.\n// important when wrapping filters and duplexes.\nfor(var i in stream){\nif(this[i]===undefined&&typeof stream[i]==='function'){\nthis[i]=function(method){\nreturn function(){\nreturn stream[method].apply(stream,arguments);\n};\n}(i);\n}\n}\n\n// proxy certain important events.\nfor(var n=0;n<kProxyEvents.length;n++){\nstream.on(kProxyEvents[n],this.emit.bind(this,kProxyEvents[n]));\n}\n\n// when we try to consume some more bytes, simply unpause the\n// underlying stream.\nthis._read=function(n){\ndebug('wrapped _read',n);\nif(paused){\npaused=false;\nstream.resume();\n}\n};\n\nreturn this;\n};\n\nObject.defineProperty(Readable.prototype,'readableHighWaterMark',{\n// making it explicit this property is not enumerable\n// because otherwise some prototype manipulation in\n// userland will fail\nenumerable:false,\nget:function get(){\nreturn this._readableState.highWaterMark;\n}});\n\n\n// exposed for testing purposes only.\nReadable._fromList=fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n,state){\n// nothing buffered\nif(state.length===0)return null;\n\nvar ret;\nif(state.objectMode)ret=state.buffer.shift();else if(!n||n>=state.length){\n// read it all, truncate the list\nif(state.decoder)ret=state.buffer.join('');else if(state.buffer.length===1)ret=state.buffer.head.data;else ret=state.buffer.concat(state.length);\nstate.buffer.clear();\n}else{\n// read part of list\nret=fromListPartial(n,state.buffer,state.decoder);\n}\n\nreturn ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n,list,hasStrings){\nvar ret;\nif(n<list.head.data.length){\n// slice is the same for buffers and strings\nret=list.head.data.slice(0,n);\nlist.head.data=list.head.data.slice(n);\n}else if(n===list.head.data.length){\n// first chunk is a perfect match\nret=list.shift();\n}else{\n// result spans more than one buffer\nret=hasStrings?copyFromBufferString(n,list):copyFromBuffer(n,list);\n}\nreturn ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n,list){\nvar p=list.head;\nvar c=1;\nvar ret=p.data;\nn-=ret.length;\nwhile(p=p.next){\nvar str=p.data;\nvar nb=n>str.length?str.length:n;\nif(nb===str.length)ret+=str;else ret+=str.slice(0,n);\nn-=nb;\nif(n===0){\nif(nb===str.length){\n++c;\nif(p.next)list.head=p.next;else list.head=list.tail=null;\n}else{\nlist.head=p;\np.data=str.slice(nb);\n}\nbreak;\n}\n++c;\n}\nlist.length-=c;\nreturn ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n,list){\nvar ret=Buffer.allocUnsafe(n);\nvar p=list.head;\nvar c=1;\np.data.copy(ret);\nn-=p.data.length;\nwhile(p=p.next){\nvar buf=p.data;\nvar nb=n>buf.length?buf.length:n;\nbuf.copy(ret,ret.length-n,0,nb);\nn-=nb;\nif(n===0){\nif(nb===buf.length){\n++c;\nif(p.next)list.head=p.next;else list.head=list.tail=null;\n}else{\nlist.head=p;\np.data=buf.slice(nb);\n}\nbreak;\n}\n++c;\n}\nlist.length-=c;\nreturn ret;\n}\n\nfunction endReadable(stream){\nvar state=stream._readableState;\n\n// If we get here before consuming all the bytes, then that is a\n// bug in node.  Should never happen.\nif(state.length>0)throw new Error('\"endReadable()\" called on non-empty stream');\n\nif(!state.endEmitted){\nstate.ended=true;\npna.nextTick(endReadableNT,state,stream);\n}\n}\n\nfunction endReadableNT(state,stream){\n// Check that we didn't get one last unshift.\nif(!state.endEmitted&&state.length===0){\nstate.endEmitted=true;\nstream.readable=false;\nstream.emit('end');\n}\n}\n\nfunction indexOf(xs,x){\nfor(var i=0,l=xs.length;i<l;i++){\nif(xs[i]===x)return i;\n}\nreturn-1;\n}\n}).call(this,require('_process'),typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{});\n},{\"./_stream_duplex\":229,\"./internal/streams/BufferList\":234,\"./internal/streams/destroy\":235,\"./internal/streams/stream\":236,\"_process\":223,\"core-util-is\":150,\"events\":151,\"inherits\":166,\"isarray\":170,\"process-nextick-args\":222,\"safe-buffer\":241,\"string_decoder/\":247,\"util\":11}],232:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports=Transform;\n\nvar Duplex=require('./_stream_duplex');\n\n/*<replacement>*/\nvar util=require('core-util-is');\nutil.inherits=require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform,Duplex);\n\nfunction afterTransform(er,data){\nvar ts=this._transformState;\nts.transforming=false;\n\nvar cb=ts.writecb;\n\nif(!cb){\nreturn this.emit('error',new Error('write callback called multiple times'));\n}\n\nts.writechunk=null;\nts.writecb=null;\n\nif(data!=null)// single equals check for both `null` and `undefined`\nthis.push(data);\n\ncb(er);\n\nvar rs=this._readableState;\nrs.reading=false;\nif(rs.needReadable||rs.length<rs.highWaterMark){\nthis._read(rs.highWaterMark);\n}\n}\n\nfunction Transform(options){\nif(!(this instanceof Transform))return new Transform(options);\n\nDuplex.call(this,options);\n\nthis._transformState={\nafterTransform:afterTransform.bind(this),\nneedTransform:false,\ntransforming:false,\nwritecb:null,\nwritechunk:null,\nwriteencoding:null};\n\n\n// start out asking for a readable event once data is transformed.\nthis._readableState.needReadable=true;\n\n// we have implemented the _read method, and done the other things\n// that Readable wants before the first _read call, so unset the\n// sync guard flag.\nthis._readableState.sync=false;\n\nif(options){\nif(typeof options.transform==='function')this._transform=options.transform;\n\nif(typeof options.flush==='function')this._flush=options.flush;\n}\n\n// When the writable side finishes, then flush out anything remaining.\nthis.on('prefinish',prefinish);\n}\n\nfunction prefinish(){\nvar _this=this;\n\nif(typeof this._flush==='function'){\nthis._flush(function(er,data){\ndone(_this,er,data);\n});\n}else{\ndone(this,null,null);\n}\n}\n\nTransform.prototype.push=function(chunk,encoding){\nthis._transformState.needTransform=false;\nreturn Duplex.prototype.push.call(this,chunk,encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform=function(chunk,encoding,cb){\nthrow new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write=function(chunk,encoding,cb){\nvar ts=this._transformState;\nts.writecb=cb;\nts.writechunk=chunk;\nts.writeencoding=encoding;\nif(!ts.transforming){\nvar rs=this._readableState;\nif(ts.needTransform||rs.needReadable||rs.length<rs.highWaterMark)this._read(rs.highWaterMark);\n}\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read=function(n){\nvar ts=this._transformState;\n\nif(ts.writechunk!==null&&ts.writecb&&!ts.transforming){\nts.transforming=true;\nthis._transform(ts.writechunk,ts.writeencoding,ts.afterTransform);\n}else{\n// mark that we need a transform, so that any data that comes in\n// will get processed, now that we've asked for it.\nts.needTransform=true;\n}\n};\n\nTransform.prototype._destroy=function(err,cb){\nvar _this2=this;\n\nDuplex.prototype._destroy.call(this,err,function(err2){\ncb(err2);\n_this2.emit('close');\n});\n};\n\nfunction done(stream,er,data){\nif(er)return stream.emit('error',er);\n\nif(data!=null)// single equals check for both `null` and `undefined`\nstream.push(data);\n\n// if there's nothing in the write buffer, then that means\n// that nothing more will ever be provided\nif(stream._writableState.length)throw new Error('Calling transform done when ws.length != 0');\n\nif(stream._transformState.transforming)throw new Error('Calling transform done when still transforming');\n\nreturn stream.push(null);\n}\n},{\"./_stream_duplex\":229,\"core-util-is\":150,\"inherits\":166}],233:[function(require,module,exports){\n(function(process,global,setImmediate){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna=require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports=Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk,encoding,cb){\nthis.chunk=chunk;\nthis.encoding=encoding;\nthis.callback=cb;\nthis.next=null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state){\nvar _this=this;\n\nthis.next=null;\nthis.entry=null;\nthis.finish=function(){\nonCorkedFinish(_this,state);\n};\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite=!process.browser&&['v0.10','v0.9.'].indexOf(process.version.slice(0,5))>-1?setImmediate:pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState=WritableState;\n\n/*<replacement>*/\nvar util=require('core-util-is');\nutil.inherits=require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil={\ndeprecate:require('util-deprecate')};\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream=require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer=require('safe-buffer').Buffer;\nvar OurUint8Array=global.Uint8Array||function(){};\nfunction _uint8ArrayToBuffer(chunk){\nreturn Buffer.from(chunk);\n}\nfunction _isUint8Array(obj){\nreturn Buffer.isBuffer(obj)||obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl=require('./internal/streams/destroy');\n\nutil.inherits(Writable,Stream);\n\nfunction nop(){}\n\nfunction WritableState(options,stream){\nDuplex=Duplex||require('./_stream_duplex');\n\noptions=options||{};\n\n// Duplex streams are both readable and writable, but share\n// the same options object.\n// However, some cases require setting options to different\n// values for the readable and the writable sides of the duplex stream.\n// These options can be provided separately as readableXXX and writableXXX.\nvar isDuplex=stream instanceof Duplex;\n\n// object stream flag to indicate whether or not this stream\n// contains buffers or objects.\nthis.objectMode=!!options.objectMode;\n\nif(isDuplex)this.objectMode=this.objectMode||!!options.writableObjectMode;\n\n// the point at which write() starts returning false\n// Note: 0 is a valid value, means that we always return false if\n// the entire buffer is not flushed immediately on write()\nvar hwm=options.highWaterMark;\nvar writableHwm=options.writableHighWaterMark;\nvar defaultHwm=this.objectMode?16:16*1024;\n\nif(hwm||hwm===0)this.highWaterMark=hwm;else if(isDuplex&&(writableHwm||writableHwm===0))this.highWaterMark=writableHwm;else this.highWaterMark=defaultHwm;\n\n// cast to ints.\nthis.highWaterMark=Math.floor(this.highWaterMark);\n\n// if _final has been called\nthis.finalCalled=false;\n\n// drain event flag.\nthis.needDrain=false;\n// at the start of calling end()\nthis.ending=false;\n// when end() has been called, and returned\nthis.ended=false;\n// when 'finish' is emitted\nthis.finished=false;\n\n// has it been destroyed\nthis.destroyed=false;\n\n// should we decode strings into buffers before passing to _write?\n// this is here so that some node-core streams can optimize string\n// handling at a lower level.\nvar noDecode=options.decodeStrings===false;\nthis.decodeStrings=!noDecode;\n\n// Crypto is kind of old and crusty.  Historically, its default string\n// encoding is 'binary' so we have to make this configurable.\n// Everything else in the universe uses 'utf8', though.\nthis.defaultEncoding=options.defaultEncoding||'utf8';\n\n// not an actual buffer we keep track of, but a measurement\n// of how much we're waiting to get pushed to some underlying\n// socket or file.\nthis.length=0;\n\n// a flag to see when we're in the middle of a write.\nthis.writing=false;\n\n// when true all writes will be buffered until .uncork() call\nthis.corked=0;\n\n// a flag to be able to tell if the onwrite cb is called immediately,\n// or on a later tick.  We set this to true at first, because any\n// actions that shouldn't happen until \"later\" should generally also\n// not happen before the first write call.\nthis.sync=true;\n\n// a flag to know if we're processing previously buffered items, which\n// may call the _write() callback in the same tick, so that we don't\n// end up in an overlapped onwrite situation.\nthis.bufferProcessing=false;\n\n// the callback that's passed to _write(chunk,cb)\nthis.onwrite=function(er){\nonwrite(stream,er);\n};\n\n// the callback that the user supplies to write(chunk,encoding,cb)\nthis.writecb=null;\n\n// the amount that is being written when _write is called.\nthis.writelen=0;\n\nthis.bufferedRequest=null;\nthis.lastBufferedRequest=null;\n\n// number of pending user-supplied write callbacks\n// this must be 0 before 'finish' can be emitted\nthis.pendingcb=0;\n\n// emit prefinish if the only thing we're waiting for is _write cbs\n// This is relevant for synchronous Transform streams\nthis.prefinished=false;\n\n// True if the error was already emitted and should not be thrown again\nthis.errorEmitted=false;\n\n// count buffered requests\nthis.bufferedRequestCount=0;\n\n// allocate the first CorkedRequest, there is always\n// one allocated and free to use, and we maintain at most two\nthis.corkedRequestsFree=new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer=function getBuffer(){\nvar current=this.bufferedRequest;\nvar out=[];\nwhile(current){\nout.push(current);\ncurrent=current.next;\n}\nreturn out;\n};\n\n(function(){\ntry{\nObject.defineProperty(WritableState.prototype,'buffer',{\nget:internalUtil.deprecate(function(){\nreturn this.getBuffer();\n},'_writableState.buffer is deprecated. Use _writableState.getBuffer '+'instead.','DEP0003')});\n\n}catch(_){}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif(typeof Symbol==='function'&&Symbol.hasInstance&&typeof Function.prototype[Symbol.hasInstance]==='function'){\nrealHasInstance=Function.prototype[Symbol.hasInstance];\nObject.defineProperty(Writable,Symbol.hasInstance,{\nvalue:function value(object){\nif(realHasInstance.call(this,object))return true;\nif(this!==Writable)return false;\n\nreturn object&&object._writableState instanceof WritableState;\n}});\n\n}else{\nrealHasInstance=function realHasInstance(object){\nreturn object instanceof this;\n};\n}\n\nfunction Writable(options){\nDuplex=Duplex||require('./_stream_duplex');\n\n// Writable ctor is applied to Duplexes, too.\n// `realHasInstance` is necessary because using plain `instanceof`\n// would return false, as no `_writableState` property is attached.\n\n// Trying to use the custom `instanceof` for Writable here will also break the\n// Node.js LazyTransform implementation, which has a non-trivial getter for\n// `_writableState` that would lead to infinite recursion.\nif(!realHasInstance.call(Writable,this)&&!(this instanceof Duplex)){\nreturn new Writable(options);\n}\n\nthis._writableState=new WritableState(options,this);\n\n// legacy.\nthis.writable=true;\n\nif(options){\nif(typeof options.write==='function')this._write=options.write;\n\nif(typeof options.writev==='function')this._writev=options.writev;\n\nif(typeof options.destroy==='function')this._destroy=options.destroy;\n\nif(typeof options.final==='function')this._final=options.final;\n}\n\nStream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe=function(){\nthis.emit('error',new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream,cb){\nvar er=new Error('write after end');\n// TODO: defer error events consistently everywhere, not just the cb\nstream.emit('error',er);\npna.nextTick(cb,er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream,state,chunk,cb){\nvar valid=true;\nvar er=false;\n\nif(chunk===null){\ner=new TypeError('May not write null values to stream');\n}else if(typeof chunk!=='string'&&chunk!==undefined&&!state.objectMode){\ner=new TypeError('Invalid non-string/buffer chunk');\n}\nif(er){\nstream.emit('error',er);\npna.nextTick(cb,er);\nvalid=false;\n}\nreturn valid;\n}\n\nWritable.prototype.write=function(chunk,encoding,cb){\nvar state=this._writableState;\nvar ret=false;\nvar isBuf=!state.objectMode&&_isUint8Array(chunk);\n\nif(isBuf&&!Buffer.isBuffer(chunk)){\nchunk=_uint8ArrayToBuffer(chunk);\n}\n\nif(typeof encoding==='function'){\ncb=encoding;\nencoding=null;\n}\n\nif(isBuf)encoding='buffer';else if(!encoding)encoding=state.defaultEncoding;\n\nif(typeof cb!=='function')cb=nop;\n\nif(state.ended)writeAfterEnd(this,cb);else if(isBuf||validChunk(this,state,chunk,cb)){\nstate.pendingcb++;\nret=writeOrBuffer(this,state,isBuf,chunk,encoding,cb);\n}\n\nreturn ret;\n};\n\nWritable.prototype.cork=function(){\nvar state=this._writableState;\n\nstate.corked++;\n};\n\nWritable.prototype.uncork=function(){\nvar state=this._writableState;\n\nif(state.corked){\nstate.corked--;\n\nif(!state.writing&&!state.corked&&!state.finished&&!state.bufferProcessing&&state.bufferedRequest)clearBuffer(this,state);\n}\n};\n\nWritable.prototype.setDefaultEncoding=function setDefaultEncoding(encoding){\n// node::ParseEncoding() requires lower case.\nif(typeof encoding==='string')encoding=encoding.toLowerCase();\nif(!(['hex','utf8','utf-8','ascii','binary','base64','ucs2','ucs-2','utf16le','utf-16le','raw'].indexOf((encoding+'').toLowerCase())>-1))throw new TypeError('Unknown encoding: '+encoding);\nthis._writableState.defaultEncoding=encoding;\nreturn this;\n};\n\nfunction decodeChunk(state,chunk,encoding){\nif(!state.objectMode&&state.decodeStrings!==false&&typeof chunk==='string'){\nchunk=Buffer.from(chunk,encoding);\n}\nreturn chunk;\n}\n\nObject.defineProperty(Writable.prototype,'writableHighWaterMark',{\n// making it explicit this property is not enumerable\n// because otherwise some prototype manipulation in\n// userland will fail\nenumerable:false,\nget:function get(){\nreturn this._writableState.highWaterMark;\n}});\n\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream,state,isBuf,chunk,encoding,cb){\nif(!isBuf){\nvar newChunk=decodeChunk(state,chunk,encoding);\nif(chunk!==newChunk){\nisBuf=true;\nencoding='buffer';\nchunk=newChunk;\n}\n}\nvar len=state.objectMode?1:chunk.length;\n\nstate.length+=len;\n\nvar ret=state.length<state.highWaterMark;\n// we must ensure that previous needDrain will not be reset to false.\nif(!ret)state.needDrain=true;\n\nif(state.writing||state.corked){\nvar last=state.lastBufferedRequest;\nstate.lastBufferedRequest={\nchunk:chunk,\nencoding:encoding,\nisBuf:isBuf,\ncallback:cb,\nnext:null};\n\nif(last){\nlast.next=state.lastBufferedRequest;\n}else{\nstate.bufferedRequest=state.lastBufferedRequest;\n}\nstate.bufferedRequestCount+=1;\n}else{\ndoWrite(stream,state,false,len,chunk,encoding,cb);\n}\n\nreturn ret;\n}\n\nfunction doWrite(stream,state,writev,len,chunk,encoding,cb){\nstate.writelen=len;\nstate.writecb=cb;\nstate.writing=true;\nstate.sync=true;\nif(writev)stream._writev(chunk,state.onwrite);else stream._write(chunk,encoding,state.onwrite);\nstate.sync=false;\n}\n\nfunction onwriteError(stream,state,sync,er,cb){\n--state.pendingcb;\n\nif(sync){\n// defer the callback if we are being called synchronously\n// to avoid piling up things on the stack\npna.nextTick(cb,er);\n// this can emit finish, and it will always happen\n// after error\npna.nextTick(finishMaybe,stream,state);\nstream._writableState.errorEmitted=true;\nstream.emit('error',er);\n}else{\n// the caller expect this to happen before if\n// it is async\ncb(er);\nstream._writableState.errorEmitted=true;\nstream.emit('error',er);\n// this can emit finish, but finish must\n// always follow error\nfinishMaybe(stream,state);\n}\n}\n\nfunction onwriteStateUpdate(state){\nstate.writing=false;\nstate.writecb=null;\nstate.length-=state.writelen;\nstate.writelen=0;\n}\n\nfunction onwrite(stream,er){\nvar state=stream._writableState;\nvar sync=state.sync;\nvar cb=state.writecb;\n\nonwriteStateUpdate(state);\n\nif(er)onwriteError(stream,state,sync,er,cb);else{\n// Check if we're actually ready to finish, but don't emit yet\nvar finished=needFinish(state);\n\nif(!finished&&!state.corked&&!state.bufferProcessing&&state.bufferedRequest){\nclearBuffer(stream,state);\n}\n\nif(sync){\n/*<replacement>*/\nasyncWrite(afterWrite,stream,state,finished,cb);\n/*</replacement>*/\n}else{\nafterWrite(stream,state,finished,cb);\n}\n}\n}\n\nfunction afterWrite(stream,state,finished,cb){\nif(!finished)onwriteDrain(stream,state);\nstate.pendingcb--;\ncb();\nfinishMaybe(stream,state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream,state){\nif(state.length===0&&state.needDrain){\nstate.needDrain=false;\nstream.emit('drain');\n}\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream,state){\nstate.bufferProcessing=true;\nvar entry=state.bufferedRequest;\n\nif(stream._writev&&entry&&entry.next){\n// Fast case, write everything using _writev()\nvar l=state.bufferedRequestCount;\nvar buffer=new Array(l);\nvar holder=state.corkedRequestsFree;\nholder.entry=entry;\n\nvar count=0;\nvar allBuffers=true;\nwhile(entry){\nbuffer[count]=entry;\nif(!entry.isBuf)allBuffers=false;\nentry=entry.next;\ncount+=1;\n}\nbuffer.allBuffers=allBuffers;\n\ndoWrite(stream,state,true,state.length,buffer,'',holder.finish);\n\n// doWrite is almost always async, defer these to save a bit of time\n// as the hot path ends with doWrite\nstate.pendingcb++;\nstate.lastBufferedRequest=null;\nif(holder.next){\nstate.corkedRequestsFree=holder.next;\nholder.next=null;\n}else{\nstate.corkedRequestsFree=new CorkedRequest(state);\n}\nstate.bufferedRequestCount=0;\n}else{\n// Slow case, write chunks one-by-one\nwhile(entry){\nvar chunk=entry.chunk;\nvar encoding=entry.encoding;\nvar cb=entry.callback;\nvar len=state.objectMode?1:chunk.length;\n\ndoWrite(stream,state,false,len,chunk,encoding,cb);\nentry=entry.next;\nstate.bufferedRequestCount--;\n// if we didn't call the onwrite immediately, then\n// it means that we need to wait until it does.\n// also, that means that the chunk and cb are currently\n// being processed, so move the buffer counter past them.\nif(state.writing){\nbreak;\n}\n}\n\nif(entry===null)state.lastBufferedRequest=null;\n}\n\nstate.bufferedRequest=entry;\nstate.bufferProcessing=false;\n}\n\nWritable.prototype._write=function(chunk,encoding,cb){\ncb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev=null;\n\nWritable.prototype.end=function(chunk,encoding,cb){\nvar state=this._writableState;\n\nif(typeof chunk==='function'){\ncb=chunk;\nchunk=null;\nencoding=null;\n}else if(typeof encoding==='function'){\ncb=encoding;\nencoding=null;\n}\n\nif(chunk!==null&&chunk!==undefined)this.write(chunk,encoding);\n\n// .end() fully uncorks\nif(state.corked){\nstate.corked=1;\nthis.uncork();\n}\n\n// ignore unnecessary end() calls.\nif(!state.ending&&!state.finished)endWritable(this,state,cb);\n};\n\nfunction needFinish(state){\nreturn state.ending&&state.length===0&&state.bufferedRequest===null&&!state.finished&&!state.writing;\n}\nfunction callFinal(stream,state){\nstream._final(function(err){\nstate.pendingcb--;\nif(err){\nstream.emit('error',err);\n}\nstate.prefinished=true;\nstream.emit('prefinish');\nfinishMaybe(stream,state);\n});\n}\nfunction prefinish(stream,state){\nif(!state.prefinished&&!state.finalCalled){\nif(typeof stream._final==='function'){\nstate.pendingcb++;\nstate.finalCalled=true;\npna.nextTick(callFinal,stream,state);\n}else{\nstate.prefinished=true;\nstream.emit('prefinish');\n}\n}\n}\n\nfunction finishMaybe(stream,state){\nvar need=needFinish(state);\nif(need){\nprefinish(stream,state);\nif(state.pendingcb===0){\nstate.finished=true;\nstream.emit('finish');\n}\n}\nreturn need;\n}\n\nfunction endWritable(stream,state,cb){\nstate.ending=true;\nfinishMaybe(stream,state);\nif(cb){\nif(state.finished)pna.nextTick(cb);else stream.once('finish',cb);\n}\nstate.ended=true;\nstream.writable=false;\n}\n\nfunction onCorkedFinish(corkReq,state,err){\nvar entry=corkReq.entry;\ncorkReq.entry=null;\nwhile(entry){\nvar cb=entry.callback;\nstate.pendingcb--;\ncb(err);\nentry=entry.next;\n}\nif(state.corkedRequestsFree){\nstate.corkedRequestsFree.next=corkReq;\n}else{\nstate.corkedRequestsFree=corkReq;\n}\n}\n\nObject.defineProperty(Writable.prototype,'destroyed',{\nget:function get(){\nif(this._writableState===undefined){\nreturn false;\n}\nreturn this._writableState.destroyed;\n},\nset:function set(value){\n// we ignore the value if the stream\n// has not been initialized yet\nif(!this._writableState){\nreturn;\n}\n\n// backward compatibility, the user is explicitly\n// managing destroyed\nthis._writableState.destroyed=value;\n}});\n\n\nWritable.prototype.destroy=destroyImpl.destroy;\nWritable.prototype._undestroy=destroyImpl.undestroy;\nWritable.prototype._destroy=function(err,cb){\nthis.end();\ncb(err);\n};\n}).call(this,require('_process'),typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{},require(\"timers\").setImmediate);\n},{\"./_stream_duplex\":229,\"./internal/streams/destroy\":235,\"./internal/streams/stream\":236,\"_process\":223,\"core-util-is\":150,\"inherits\":166,\"process-nextick-args\":222,\"safe-buffer\":241,\"timers\":248,\"util-deprecate\":256}],234:[function(require,module,exports){\n'use strict';\n\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\n\nvar Buffer=require('safe-buffer').Buffer;\nvar util=require('util');\n\nfunction copyBuffer(src,target,offset){\nsrc.copy(target,offset);\n}\n\nmodule.exports=function(){\nfunction BufferList(){\n_classCallCheck(this,BufferList);\n\nthis.head=null;\nthis.tail=null;\nthis.length=0;\n}\n\nBufferList.prototype.push=function push(v){\nvar entry={data:v,next:null};\nif(this.length>0)this.tail.next=entry;else this.head=entry;\nthis.tail=entry;\n++this.length;\n};\n\nBufferList.prototype.unshift=function unshift(v){\nvar entry={data:v,next:this.head};\nif(this.length===0)this.tail=entry;\nthis.head=entry;\n++this.length;\n};\n\nBufferList.prototype.shift=function shift(){\nif(this.length===0)return;\nvar ret=this.head.data;\nif(this.length===1)this.head=this.tail=null;else this.head=this.head.next;\n--this.length;\nreturn ret;\n};\n\nBufferList.prototype.clear=function clear(){\nthis.head=this.tail=null;\nthis.length=0;\n};\n\nBufferList.prototype.join=function join(s){\nif(this.length===0)return'';\nvar p=this.head;\nvar ret=''+p.data;\nwhile(p=p.next){\nret+=s+p.data;\n}return ret;\n};\n\nBufferList.prototype.concat=function concat(n){\nif(this.length===0)return Buffer.alloc(0);\nif(this.length===1)return this.head.data;\nvar ret=Buffer.allocUnsafe(n>>>0);\nvar p=this.head;\nvar i=0;\nwhile(p){\ncopyBuffer(p.data,ret,i);\ni+=p.data.length;\np=p.next;\n}\nreturn ret;\n};\n\nreturn BufferList;\n}();\n\nif(util&&util.inspect&&util.inspect.custom){\nmodule.exports.prototype[util.inspect.custom]=function(){\nvar obj=util.inspect({length:this.length});\nreturn this.constructor.name+' '+obj;\n};\n}\n},{\"safe-buffer\":241,\"util\":11}],235:[function(require,module,exports){\n'use strict';\n\n/*<replacement>*/\n\nvar pna=require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err,cb){\nvar _this=this;\n\nvar readableDestroyed=this._readableState&&this._readableState.destroyed;\nvar writableDestroyed=this._writableState&&this._writableState.destroyed;\n\nif(readableDestroyed||writableDestroyed){\nif(cb){\ncb(err);\n}else if(err&&(!this._writableState||!this._writableState.errorEmitted)){\npna.nextTick(emitErrorNT,this,err);\n}\nreturn this;\n}\n\n// we set destroyed to true before firing error callbacks in order\n// to make it re-entrance safe in case destroy() is called within callbacks\n\nif(this._readableState){\nthis._readableState.destroyed=true;\n}\n\n// if this is a duplex stream mark the writable part as destroyed as well\nif(this._writableState){\nthis._writableState.destroyed=true;\n}\n\nthis._destroy(err||null,function(err){\nif(!cb&&err){\npna.nextTick(emitErrorNT,_this,err);\nif(_this._writableState){\n_this._writableState.errorEmitted=true;\n}\n}else if(cb){\ncb(err);\n}\n});\n\nreturn this;\n}\n\nfunction undestroy(){\nif(this._readableState){\nthis._readableState.destroyed=false;\nthis._readableState.reading=false;\nthis._readableState.ended=false;\nthis._readableState.endEmitted=false;\n}\n\nif(this._writableState){\nthis._writableState.destroyed=false;\nthis._writableState.ended=false;\nthis._writableState.ending=false;\nthis._writableState.finished=false;\nthis._writableState.errorEmitted=false;\n}\n}\n\nfunction emitErrorNT(self,err){\nself.emit('error',err);\n}\n\nmodule.exports={\ndestroy:destroy,\nundestroy:undestroy};\n\n},{\"process-nextick-args\":222}],236:[function(require,module,exports){\nmodule.exports=require('events').EventEmitter;\n\n},{\"events\":151}],237:[function(require,module,exports){\nmodule.exports=require('./readable').PassThrough;\n\n},{\"./readable\":238}],238:[function(require,module,exports){\nexports=module.exports=require('./lib/_stream_readable.js');\nexports.Stream=exports;\nexports.Readable=exports;\nexports.Writable=require('./lib/_stream_writable.js');\nexports.Duplex=require('./lib/_stream_duplex.js');\nexports.Transform=require('./lib/_stream_transform.js');\nexports.PassThrough=require('./lib/_stream_passthrough.js');\n\n},{\"./lib/_stream_duplex.js\":229,\"./lib/_stream_passthrough.js\":230,\"./lib/_stream_readable.js\":231,\"./lib/_stream_transform.js\":232,\"./lib/_stream_writable.js\":233}],239:[function(require,module,exports){\nmodule.exports=require('./readable').Transform;\n\n},{\"./readable\":238}],240:[function(require,module,exports){\nmodule.exports=require('./lib/_stream_writable.js');\n\n},{\"./lib/_stream_writable.js\":233}],241:[function(require,module,exports){\n/* eslint-disable node/no-deprecated-api */\nvar buffer=require('buffer');\nvar Buffer=buffer.Buffer;\n\n// alternative to using Object.keys for old browsers\nfunction copyProps(src,dst){\nfor(var key in src){\ndst[key]=src[key];\n}\n}\nif(Buffer.from&&Buffer.alloc&&Buffer.allocUnsafe&&Buffer.allocUnsafeSlow){\nmodule.exports=buffer;\n}else{\n// Copy properties from require('buffer')\ncopyProps(buffer,exports);\nexports.Buffer=SafeBuffer;\n}\n\nfunction SafeBuffer(arg,encodingOrOffset,length){\nreturn Buffer(arg,encodingOrOffset,length);\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer,SafeBuffer);\n\nSafeBuffer.from=function(arg,encodingOrOffset,length){\nif(typeof arg==='number'){\nthrow new TypeError('Argument must not be a number');\n}\nreturn Buffer(arg,encodingOrOffset,length);\n};\n\nSafeBuffer.alloc=function(size,fill,encoding){\nif(typeof size!=='number'){\nthrow new TypeError('Argument must be a number');\n}\nvar buf=Buffer(size);\nif(fill!==undefined){\nif(typeof encoding==='string'){\nbuf.fill(fill,encoding);\n}else{\nbuf.fill(fill);\n}\n}else{\nbuf.fill(0);\n}\nreturn buf;\n};\n\nSafeBuffer.allocUnsafe=function(size){\nif(typeof size!=='number'){\nthrow new TypeError('Argument must be a number');\n}\nreturn Buffer(size);\n};\n\nSafeBuffer.allocUnsafeSlow=function(size){\nif(typeof size!=='number'){\nthrow new TypeError('Argument must be a number');\n}\nreturn buffer.SlowBuffer(size);\n};\n\n},{\"buffer\":16}],242:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports=Stream;\n\nvar EE=require('events').EventEmitter;\nvar inherits=require('inherits');\n\ninherits(Stream,EE);\nStream.Readable=require('readable-stream/readable.js');\nStream.Writable=require('readable-stream/writable.js');\nStream.Duplex=require('readable-stream/duplex.js');\nStream.Transform=require('readable-stream/transform.js');\nStream.PassThrough=require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream=Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream(){\nEE.call(this);\n}\n\nStream.prototype.pipe=function(dest,options){\nvar source=this;\n\nfunction ondata(chunk){\nif(dest.writable){\nif(false===dest.write(chunk)&&source.pause){\nsource.pause();\n}\n}\n}\n\nsource.on('data',ondata);\n\nfunction ondrain(){\nif(source.readable&&source.resume){\nsource.resume();\n}\n}\n\ndest.on('drain',ondrain);\n\n// If the 'end' option is not supplied, dest.end() will be called when\n// source gets the 'end' or 'close' events.  Only dest.end() once.\nif(!dest._isStdio&&(!options||options.end!==false)){\nsource.on('end',onend);\nsource.on('close',onclose);\n}\n\nvar didOnEnd=false;\nfunction onend(){\nif(didOnEnd)return;\ndidOnEnd=true;\n\ndest.end();\n}\n\n\nfunction onclose(){\nif(didOnEnd)return;\ndidOnEnd=true;\n\nif(typeof dest.destroy==='function')dest.destroy();\n}\n\n// don't leave dangling pipes when there are errors.\nfunction onerror(er){\ncleanup();\nif(EE.listenerCount(this,'error')===0){\nthrow er;// Unhandled stream error in pipe.\n}\n}\n\nsource.on('error',onerror);\ndest.on('error',onerror);\n\n// remove all the event listeners that were added.\nfunction cleanup(){\nsource.removeListener('data',ondata);\ndest.removeListener('drain',ondrain);\n\nsource.removeListener('end',onend);\nsource.removeListener('close',onclose);\n\nsource.removeListener('error',onerror);\ndest.removeListener('error',onerror);\n\nsource.removeListener('end',cleanup);\nsource.removeListener('close',cleanup);\n\ndest.removeListener('close',cleanup);\n}\n\nsource.on('end',cleanup);\nsource.on('close',cleanup);\n\ndest.on('close',cleanup);\n\ndest.emit('pipe',source);\n\n// Allow for unix-like usage: A.pipe(B).pipe(C)\nreturn dest;\n};\n\n},{\"events\":151,\"inherits\":166,\"readable-stream/duplex.js\":228,\"readable-stream/passthrough.js\":237,\"readable-stream/readable.js\":238,\"readable-stream/transform.js\":239,\"readable-stream/writable.js\":240}],243:[function(require,module,exports){\n(function(global){\nvar ClientRequest=require('./lib/request');\nvar response=require('./lib/response');\nvar extend=require('xtend');\nvar statusCodes=require('builtin-status-codes');\nvar url=require('url');\n\nvar http=exports;\n\nhttp.request=function(opts,cb){\nif(typeof opts==='string')\nopts=url.parse(opts);else\n\nopts=extend(opts);\n\n// Normally, the page is loaded from http or https, so not specifying a protocol\n// will result in a (valid) protocol-relative url. However, this won't work if\n// the protocol is something else, like 'file:'\nvar defaultProtocol=global.location.protocol.search(/^https?:$/)===-1?'http:':'';\n\nvar protocol=opts.protocol||defaultProtocol;\nvar host=opts.hostname||opts.host;\nvar port=opts.port;\nvar path=opts.path||'/';\n\n// Necessary for IPv6 addresses\nif(host&&host.indexOf(':')!==-1)\nhost='['+host+']';\n\n// This may be a relative url. The browser should always be able to interpret it correctly.\nopts.url=(host?protocol+'//'+host:'')+(port?':'+port:'')+path;\nopts.method=(opts.method||'GET').toUpperCase();\nopts.headers=opts.headers||{};\n\n// Also valid opts.auth, opts.mode\n\nvar req=new ClientRequest(opts);\nif(cb)\nreq.on('response',cb);\nreturn req;\n};\n\nhttp.get=function get(opts,cb){\nvar req=http.request(opts,cb);\nreq.end();\nreturn req;\n};\n\nhttp.ClientRequest=ClientRequest;\nhttp.IncomingMessage=response.IncomingMessage;\n\nhttp.Agent=function(){};\nhttp.Agent.defaultMaxSockets=4;\n\nhttp.globalAgent=new http.Agent();\n\nhttp.STATUS_CODES=statusCodes;\n\nhttp.METHODS=[\n'CHECKOUT',\n'CONNECT',\n'COPY',\n'DELETE',\n'GET',\n'HEAD',\n'LOCK',\n'M-SEARCH',\n'MERGE',\n'MKACTIVITY',\n'MKCOL',\n'MOVE',\n'NOTIFY',\n'OPTIONS',\n'PATCH',\n'POST',\n'PROPFIND',\n'PROPPATCH',\n'PURGE',\n'PUT',\n'REPORT',\n'SEARCH',\n'SUBSCRIBE',\n'TRACE',\n'UNLOCK',\n'UNSUBSCRIBE'];\n\n}).call(this,typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{});\n},{\"./lib/request\":245,\"./lib/response\":246,\"builtin-status-codes\":17,\"url\":253,\"xtend\":261}],244:[function(require,module,exports){\n(function(global){\nexports.fetch=isFunction(global.fetch)&&isFunction(global.ReadableStream);\n\nexports.writableStream=isFunction(global.WritableStream);\n\nexports.abortController=isFunction(global.AbortController);\n\nexports.blobConstructor=false;\ntry{\nnew Blob([new ArrayBuffer(1)]);\nexports.blobConstructor=true;\n}catch(e){}\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr;\nfunction getXHR(){\n// Cache the xhr value\nif(xhr!==undefined)return xhr;\n\nif(global.XMLHttpRequest){\nxhr=new global.XMLHttpRequest();\n// If XDomainRequest is available (ie only, where xhr might not work\n// cross domain), use the page location. Otherwise use example.com\n// Note: this doesn't actually make an http request.\ntry{\nxhr.open('GET',global.XDomainRequest?'/':'https://example.com');\n}catch(e){\nxhr=null;\n}\n}else{\n// Service workers don't have XHR\nxhr=null;\n}\nreturn xhr;\n}\n\nfunction checkTypeSupport(type){\nvar xhr=getXHR();\nif(!xhr)return false;\ntry{\nxhr.responseType=type;\nreturn xhr.responseType===type;\n}catch(e){}\nreturn false;\n}\n\n// For some strange reason, Safari 7.0 reports typeof global.ArrayBuffer === 'object'.\n// Safari 7.1 appears to have fixed this bug.\nvar haveArrayBuffer=typeof global.ArrayBuffer!=='undefined';\nvar haveSlice=haveArrayBuffer&&isFunction(global.ArrayBuffer.prototype.slice);\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer=exports.fetch||haveArrayBuffer&&checkTypeSupport('arraybuffer');\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream=!exports.fetch&&haveSlice&&checkTypeSupport('ms-stream');\nexports.mozchunkedarraybuffer=!exports.fetch&&haveArrayBuffer&&\ncheckTypeSupport('moz-chunked-arraybuffer');\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType=exports.fetch||(getXHR()?isFunction(getXHR().overrideMimeType):false);\n\nexports.vbArray=isFunction(global.VBArray);\n\nfunction isFunction(value){\nreturn typeof value==='function';\n}\n\nxhr=null;// Help gc\n\n}).call(this,typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{});\n},{}],245:[function(require,module,exports){\n(function(process,global,Buffer){\nvar capability=require('./capability');\nvar inherits=require('inherits');\nvar response=require('./response');\nvar stream=require('readable-stream');\nvar toArrayBuffer=require('to-arraybuffer');\n\nvar IncomingMessage=response.IncomingMessage;\nvar rStates=response.readyStates;\n\nfunction decideMode(preferBinary,useFetch){\nif(capability.fetch&&useFetch){\nreturn'fetch';\n}else if(capability.mozchunkedarraybuffer){\nreturn'moz-chunked-arraybuffer';\n}else if(capability.msstream){\nreturn'ms-stream';\n}else if(capability.arraybuffer&&preferBinary){\nreturn'arraybuffer';\n}else if(capability.vbArray&&preferBinary){\nreturn'text:vbarray';\n}else{\nreturn'text';\n}\n}\n\nvar ClientRequest=module.exports=function(opts){\nvar self=this;\nstream.Writable.call(self);\n\nself._opts=opts;\nself._body=[];\nself._headers={};\nif(opts.auth)\nself.setHeader('Authorization','Basic '+new Buffer(opts.auth).toString('base64'));\nObject.keys(opts.headers).forEach(function(name){\nself.setHeader(name,opts.headers[name]);\n});\n\nvar preferBinary;\nvar useFetch=true;\nif(opts.mode==='disable-fetch'||'requestTimeout'in opts&&!capability.abortController){\n// If the use of XHR should be preferred. Not typically needed.\nuseFetch=false;\npreferBinary=true;\n}else if(opts.mode==='prefer-streaming'){\n// If streaming is a high priority but binary compatibility and\n// the accuracy of the 'content-type' header aren't\npreferBinary=false;\n}else if(opts.mode==='allow-wrong-content-type'){\n// If streaming is more important than preserving the 'content-type' header\npreferBinary=!capability.overrideMimeType;\n}else if(!opts.mode||opts.mode==='default'||opts.mode==='prefer-fast'){\n// Use binary if text streaming may corrupt data or the content-type header, or for speed\npreferBinary=true;\n}else{\nthrow new Error('Invalid value for opts.mode');\n}\nself._mode=decideMode(preferBinary,useFetch);\nself._fetchTimer=null;\n\nself.on('finish',function(){\nself._onFinish();\n});\n};\n\ninherits(ClientRequest,stream.Writable);\n\nClientRequest.prototype.setHeader=function(name,value){\nvar self=this;\nvar lowerName=name.toLowerCase();\n// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n// http-browserify did it, so I will too.\nif(unsafeHeaders.indexOf(lowerName)!==-1)\nreturn;\n\nself._headers[lowerName]={\nname:name,\nvalue:value};\n\n};\n\nClientRequest.prototype.getHeader=function(name){\nvar header=this._headers[name.toLowerCase()];\nif(header)\nreturn header.value;\nreturn null;\n};\n\nClientRequest.prototype.removeHeader=function(name){\nvar self=this;\ndelete self._headers[name.toLowerCase()];\n};\n\nClientRequest.prototype._onFinish=function(){\nvar self=this;\n\nif(self._destroyed)\nreturn;\nvar opts=self._opts;\n\nvar headersObj=self._headers;\nvar body=null;\nif(opts.method!=='GET'&&opts.method!=='HEAD'){\nif(capability.arraybuffer){\nbody=toArrayBuffer(Buffer.concat(self._body));\n}else if(capability.blobConstructor){\nbody=new global.Blob(self._body.map(function(buffer){\nreturn toArrayBuffer(buffer);\n}),{\ntype:(headersObj['content-type']||{}).value||''});\n\n}else{\n// get utf8 string\nbody=Buffer.concat(self._body).toString();\n}\n}\n\n// create flattened list of headers\nvar headersList=[];\nObject.keys(headersObj).forEach(function(keyName){\nvar name=headersObj[keyName].name;\nvar value=headersObj[keyName].value;\nif(Array.isArray(value)){\nvalue.forEach(function(v){\nheadersList.push([name,v]);\n});\n}else{\nheadersList.push([name,value]);\n}\n});\n\nif(self._mode==='fetch'){\nvar signal=null;\nvar fetchTimer=null;\nif(capability.abortController){\nvar controller=new AbortController();\nsignal=controller.signal;\nself._fetchAbortController=controller;\n\nif('requestTimeout'in opts&&opts.requestTimeout!==0){\nself._fetchTimer=global.setTimeout(function(){\nself.emit('requestTimeout');\nif(self._fetchAbortController)\nself._fetchAbortController.abort();\n},opts.requestTimeout);\n}\n}\n\nglobal.fetch(self._opts.url,{\nmethod:self._opts.method,\nheaders:headersList,\nbody:body||undefined,\nmode:'cors',\ncredentials:opts.withCredentials?'include':'same-origin',\nsignal:signal}).\nthen(function(response){\nself._fetchResponse=response;\nself._connect();\n},function(reason){\nglobal.clearTimeout(self._fetchTimer);\nif(!self._destroyed)\nself.emit('error',reason);\n});\n}else{\nvar xhr=self._xhr=new global.XMLHttpRequest();\ntry{\nxhr.open(self._opts.method,self._opts.url,true);\n}catch(err){\nprocess.nextTick(function(){\nself.emit('error',err);\n});\nreturn;\n}\n\n// Can't set responseType on really old browsers\nif('responseType'in xhr)\nxhr.responseType=self._mode.split(':')[0];\n\nif('withCredentials'in xhr)\nxhr.withCredentials=!!opts.withCredentials;\n\nif(self._mode==='text'&&'overrideMimeType'in xhr)\nxhr.overrideMimeType('text/plain; charset=x-user-defined');\n\nif('requestTimeout'in opts){\nxhr.timeout=opts.requestTimeout;\nxhr.ontimeout=function(){\nself.emit('requestTimeout');\n};\n}\n\nheadersList.forEach(function(header){\nxhr.setRequestHeader(header[0],header[1]);\n});\n\nself._response=null;\nxhr.onreadystatechange=function(){\nswitch(xhr.readyState){\ncase rStates.LOADING:\ncase rStates.DONE:\nself._onXHRProgress();\nbreak;}\n\n};\n// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n// in onprogress, not in onreadystatechange with xhr.readyState = 3\nif(self._mode==='moz-chunked-arraybuffer'){\nxhr.onprogress=function(){\nself._onXHRProgress();\n};\n}\n\nxhr.onerror=function(){\nif(self._destroyed)\nreturn;\nself.emit('error',new Error('XHR error'));\n};\n\ntry{\nxhr.send(body);\n}catch(err){\nprocess.nextTick(function(){\nself.emit('error',err);\n});\nreturn;\n}\n}\n};\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid(xhr){\ntry{\nvar status=xhr.status;\nreturn status!==null&&status!==0;\n}catch(e){\nreturn false;\n}\n}\n\nClientRequest.prototype._onXHRProgress=function(){\nvar self=this;\n\nif(!statusValid(self._xhr)||self._destroyed)\nreturn;\n\nif(!self._response)\nself._connect();\n\nself._response._onXHRProgress();\n};\n\nClientRequest.prototype._connect=function(){\nvar self=this;\n\nif(self._destroyed)\nreturn;\n\nself._response=new IncomingMessage(self._xhr,self._fetchResponse,self._mode,self._fetchTimer);\nself._response.on('error',function(err){\nself.emit('error',err);\n});\n\nself.emit('response',self._response);\n};\n\nClientRequest.prototype._write=function(chunk,encoding,cb){\nvar self=this;\n\nself._body.push(chunk);\ncb();\n};\n\nClientRequest.prototype.abort=ClientRequest.prototype.destroy=function(){\nvar self=this;\nself._destroyed=true;\nglobal.clearTimeout(self._fetchTimer);\nif(self._response)\nself._response._destroyed=true;\nif(self._xhr)\nself._xhr.abort();else\nif(self._fetchAbortController)\nself._fetchAbortController.abort();\n};\n\nClientRequest.prototype.end=function(data,encoding,cb){\nvar self=this;\nif(typeof data==='function'){\ncb=data;\ndata=undefined;\n}\n\nstream.Writable.prototype.end.call(self,data,encoding,cb);\n};\n\nClientRequest.prototype.flushHeaders=function(){};\nClientRequest.prototype.setTimeout=function(){};\nClientRequest.prototype.setNoDelay=function(){};\nClientRequest.prototype.setSocketKeepAlive=function(){};\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders=[\n'accept-charset',\n'accept-encoding',\n'access-control-request-headers',\n'access-control-request-method',\n'connection',\n'content-length',\n'cookie',\n'cookie2',\n'date',\n'dnt',\n'expect',\n'host',\n'keep-alive',\n'origin',\n'referer',\n'te',\n'trailer',\n'transfer-encoding',\n'upgrade',\n'via'];\n\n\n}).call(this,require('_process'),typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{},require(\"buffer\").Buffer);\n},{\"./capability\":244,\"./response\":246,\"_process\":223,\"buffer\":16,\"inherits\":166,\"readable-stream\":238,\"to-arraybuffer\":251}],246:[function(require,module,exports){\n(function(process,global,Buffer){\nvar capability=require('./capability');\nvar inherits=require('inherits');\nvar stream=require('readable-stream');\n\nvar rStates=exports.readyStates={\nUNSENT:0,\nOPENED:1,\nHEADERS_RECEIVED:2,\nLOADING:3,\nDONE:4};\n\n\nvar IncomingMessage=exports.IncomingMessage=function(xhr,response,mode,fetchTimer){\nvar self=this;\nstream.Readable.call(self);\n\nself._mode=mode;\nself.headers={};\nself.rawHeaders=[];\nself.trailers={};\nself.rawTrailers=[];\n\n// Fake the 'close' event, but only once 'end' fires\nself.on('end',function(){\n// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\nprocess.nextTick(function(){\nself.emit('close');\n});\n});\n\nif(mode==='fetch'){var\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nread=function read(){\nreader.read().then(function(result){\nif(self._destroyed)\nreturn;\nif(result.done){\nglobal.clearTimeout(fetchTimer);\nself.push(null);\nreturn;\n}\nself.push(new Buffer(result.value));\nread();\n}).catch(function(err){\nglobal.clearTimeout(fetchTimer);\nif(!self._destroyed)\nself.emit('error',err);\n});\n};self._fetchResponse=response;self.url=response.url;self.statusCode=response.status;self.statusMessage=response.statusText;response.headers.forEach(function(header,key){self.headers[key.toLowerCase()]=header;self.rawHeaders.push(key,header);});if(capability.writableStream){var writable=new WritableStream({write:function write(chunk){return new Promise(function(resolve,reject){if(self._destroyed){reject();}else if(self.push(new Buffer(chunk))){resolve();}else{self._resumeFetch=resolve;}});},close:function close(){global.clearTimeout(fetchTimer);if(!self._destroyed)self.push(null);},abort:function abort(err){if(!self._destroyed)self.emit('error',err);}});try{response.body.pipeTo(writable).catch(function(err){global.clearTimeout(fetchTimer);if(!self._destroyed)self.emit('error',err);});return;}catch(e){}// pipeTo method isn't defined. Can't find a better way to feature test this\n}// fallback for when writableStream or pipeTo aren't available\nvar reader=response.body.getReader();read();}else{\nself._xhr=xhr;\nself._pos=0;\n\nself.url=xhr.responseURL;\nself.statusCode=xhr.status;\nself.statusMessage=xhr.statusText;\nvar headers=xhr.getAllResponseHeaders().split(/\\r?\\n/);\nheaders.forEach(function(header){\nvar matches=header.match(/^([^:]+):\\s*(.*)/);\nif(matches){\nvar key=matches[1].toLowerCase();\nif(key==='set-cookie'){\nif(self.headers[key]===undefined){\nself.headers[key]=[];\n}\nself.headers[key].push(matches[2]);\n}else if(self.headers[key]!==undefined){\nself.headers[key]+=', '+matches[2];\n}else{\nself.headers[key]=matches[2];\n}\nself.rawHeaders.push(matches[1],matches[2]);\n}\n});\n\nself._charset='x-user-defined';\nif(!capability.overrideMimeType){\nvar mimeType=self.rawHeaders['mime-type'];\nif(mimeType){\nvar charsetMatch=mimeType.match(/;\\s*charset=([^;])(;|$)/);\nif(charsetMatch){\nself._charset=charsetMatch[1].toLowerCase();\n}\n}\nif(!self._charset)\nself._charset='utf-8';// best guess\n}\n}\n};\n\ninherits(IncomingMessage,stream.Readable);\n\nIncomingMessage.prototype._read=function(){\nvar self=this;\n\nvar resolve=self._resumeFetch;\nif(resolve){\nself._resumeFetch=null;\nresolve();\n}\n};\n\nIncomingMessage.prototype._onXHRProgress=function(){\nvar self=this;\n\nvar xhr=self._xhr;\n\nvar response=null;\nswitch(self._mode){\ncase'text:vbarray':// For IE9\nif(xhr.readyState!==rStates.DONE)\nbreak;\ntry{\n// This fails in IE8\nresponse=new global.VBArray(xhr.responseBody).toArray();\n}catch(e){}\nif(response!==null){\nself.push(new Buffer(response));\nbreak;\n}\n// Falls through in IE8\t\ncase'text':\ntry{// This will fail when readyState = 3 in IE9. Switch mode and wait for readyState = 4\nresponse=xhr.responseText;\n}catch(e){\nself._mode='text:vbarray';\nbreak;\n}\nif(response.length>self._pos){\nvar newData=response.substr(self._pos);\nif(self._charset==='x-user-defined'){\nvar buffer=new Buffer(newData.length);\nfor(var i=0;i<newData.length;i++){\nbuffer[i]=newData.charCodeAt(i)&0xff;}\n\nself.push(buffer);\n}else{\nself.push(newData,self._charset);\n}\nself._pos=response.length;\n}\nbreak;\ncase'arraybuffer':\nif(xhr.readyState!==rStates.DONE||!xhr.response)\nbreak;\nresponse=xhr.response;\nself.push(new Buffer(new Uint8Array(response)));\nbreak;\ncase'moz-chunked-arraybuffer':// take whole\nresponse=xhr.response;\nif(xhr.readyState!==rStates.LOADING||!response)\nbreak;\nself.push(new Buffer(new Uint8Array(response)));\nbreak;\ncase'ms-stream':\nresponse=xhr.response;\nif(xhr.readyState!==rStates.LOADING)\nbreak;\nvar reader=new global.MSStreamReader();\nreader.onprogress=function(){\nif(reader.result.byteLength>self._pos){\nself.push(new Buffer(new Uint8Array(reader.result.slice(self._pos))));\nself._pos=reader.result.byteLength;\n}\n};\nreader.onload=function(){\nself.push(null);\n};\n// reader.onerror = ??? // TODO: this\nreader.readAsArrayBuffer(response);\nbreak;}\n\n\n// The ms-stream case handles end separately in reader.onload()\nif(self._xhr.readyState===rStates.DONE&&self._mode!=='ms-stream'){\nself.push(null);\n}\n};\n\n}).call(this,require('_process'),typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{},require(\"buffer\").Buffer);\n},{\"./capability\":244,\"_process\":223,\"buffer\":16,\"inherits\":166,\"readable-stream\":238}],247:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer=require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding=Buffer.isEncoding||function(encoding){\nencoding=''+encoding;\nswitch(encoding&&encoding.toLowerCase()){\ncase'hex':case'utf8':case'utf-8':case'ascii':case'binary':case'base64':case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':case'raw':\nreturn true;\ndefault:\nreturn false;}\n\n};\n\nfunction _normalizeEncoding(enc){\nif(!enc)return'utf8';\nvar retried;\nwhile(true){\nswitch(enc){\ncase'utf8':\ncase'utf-8':\nreturn'utf8';\ncase'ucs2':\ncase'ucs-2':\ncase'utf16le':\ncase'utf-16le':\nreturn'utf16le';\ncase'latin1':\ncase'binary':\nreturn'latin1';\ncase'base64':\ncase'ascii':\ncase'hex':\nreturn enc;\ndefault:\nif(retried)return;// undefined\nenc=(''+enc).toLowerCase();\nretried=true;}\n\n}\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc){\nvar nenc=_normalizeEncoding(enc);\nif(typeof nenc!=='string'&&(Buffer.isEncoding===isEncoding||!isEncoding(enc)))throw new Error('Unknown encoding: '+enc);\nreturn nenc||enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder=StringDecoder;\nfunction StringDecoder(encoding){\nthis.encoding=normalizeEncoding(encoding);\nvar nb;\nswitch(this.encoding){\ncase'utf16le':\nthis.text=utf16Text;\nthis.end=utf16End;\nnb=4;\nbreak;\ncase'utf8':\nthis.fillLast=utf8FillLast;\nnb=4;\nbreak;\ncase'base64':\nthis.text=base64Text;\nthis.end=base64End;\nnb=3;\nbreak;\ndefault:\nthis.write=simpleWrite;\nthis.end=simpleEnd;\nreturn;}\n\nthis.lastNeed=0;\nthis.lastTotal=0;\nthis.lastChar=Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write=function(buf){\nif(buf.length===0)return'';\nvar r;\nvar i;\nif(this.lastNeed){\nr=this.fillLast(buf);\nif(r===undefined)return'';\ni=this.lastNeed;\nthis.lastNeed=0;\n}else{\ni=0;\n}\nif(i<buf.length)return r?r+this.text(buf,i):this.text(buf,i);\nreturn r||'';\n};\n\nStringDecoder.prototype.end=utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text=utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast=function(buf){\nif(this.lastNeed<=buf.length){\nbuf.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed);\nreturn this.lastChar.toString(this.encoding,0,this.lastTotal);\n}\nbuf.copy(this.lastChar,this.lastTotal-this.lastNeed,0,buf.length);\nthis.lastNeed-=buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte){\nif(byte<=0x7F)return 0;else if(byte>>5===0x06)return 2;else if(byte>>4===0x0E)return 3;else if(byte>>3===0x1E)return 4;\nreturn byte>>6===0x02?-1:-2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self,buf,i){\nvar j=buf.length-1;\nif(j<i)return 0;\nvar nb=utf8CheckByte(buf[j]);\nif(nb>=0){\nif(nb>0)self.lastNeed=nb-1;\nreturn nb;\n}\nif(--j<i||nb===-2)return 0;\nnb=utf8CheckByte(buf[j]);\nif(nb>=0){\nif(nb>0)self.lastNeed=nb-2;\nreturn nb;\n}\nif(--j<i||nb===-2)return 0;\nnb=utf8CheckByte(buf[j]);\nif(nb>=0){\nif(nb>0){\nif(nb===2)nb=0;else self.lastNeed=nb-3;\n}\nreturn nb;\n}\nreturn 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self,buf,p){\nif((buf[0]&0xC0)!==0x80){\nself.lastNeed=0;\nreturn\"\\uFFFD\";\n}\nif(self.lastNeed>1&&buf.length>1){\nif((buf[1]&0xC0)!==0x80){\nself.lastNeed=1;\nreturn\"\\uFFFD\";\n}\nif(self.lastNeed>2&&buf.length>2){\nif((buf[2]&0xC0)!==0x80){\nself.lastNeed=2;\nreturn\"\\uFFFD\";\n}\n}\n}\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf){\nvar p=this.lastTotal-this.lastNeed;\nvar r=utf8CheckExtraBytes(this,buf,p);\nif(r!==undefined)return r;\nif(this.lastNeed<=buf.length){\nbuf.copy(this.lastChar,p,0,this.lastNeed);\nreturn this.lastChar.toString(this.encoding,0,this.lastTotal);\n}\nbuf.copy(this.lastChar,p,0,buf.length);\nthis.lastNeed-=buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf,i){\nvar total=utf8CheckIncomplete(this,buf,i);\nif(!this.lastNeed)return buf.toString('utf8',i);\nthis.lastTotal=total;\nvar end=buf.length-(total-this.lastNeed);\nbuf.copy(this.lastChar,0,end);\nreturn buf.toString('utf8',i,end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf){\nvar r=buf&&buf.length?this.write(buf):'';\nif(this.lastNeed)return r+\"\\uFFFD\";\nreturn r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf,i){\nif((buf.length-i)%2===0){\nvar r=buf.toString('utf16le',i);\nif(r){\nvar c=r.charCodeAt(r.length-1);\nif(c>=0xD800&&c<=0xDBFF){\nthis.lastNeed=2;\nthis.lastTotal=4;\nthis.lastChar[0]=buf[buf.length-2];\nthis.lastChar[1]=buf[buf.length-1];\nreturn r.slice(0,-1);\n}\n}\nreturn r;\n}\nthis.lastNeed=1;\nthis.lastTotal=2;\nthis.lastChar[0]=buf[buf.length-1];\nreturn buf.toString('utf16le',i,buf.length-1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf){\nvar r=buf&&buf.length?this.write(buf):'';\nif(this.lastNeed){\nvar end=this.lastTotal-this.lastNeed;\nreturn r+this.lastChar.toString('utf16le',0,end);\n}\nreturn r;\n}\n\nfunction base64Text(buf,i){\nvar n=(buf.length-i)%3;\nif(n===0)return buf.toString('base64',i);\nthis.lastNeed=3-n;\nthis.lastTotal=3;\nif(n===1){\nthis.lastChar[0]=buf[buf.length-1];\n}else{\nthis.lastChar[0]=buf[buf.length-2];\nthis.lastChar[1]=buf[buf.length-1];\n}\nreturn buf.toString('base64',i,buf.length-n);\n}\n\nfunction base64End(buf){\nvar r=buf&&buf.length?this.write(buf):'';\nif(this.lastNeed)return r+this.lastChar.toString('base64',0,3-this.lastNeed);\nreturn r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf){\nreturn buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf){\nreturn buf&&buf.length?this.write(buf):'';\n}\n},{\"safe-buffer\":241}],248:[function(require,module,exports){\n(function(setImmediate,clearImmediate){\nvar nextTick=require('process/browser.js').nextTick;\nvar apply=Function.prototype.apply;\nvar slice=Array.prototype.slice;\nvar immediateIds={};\nvar nextImmediateId=0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout=function(){\nreturn new Timeout(apply.call(setTimeout,window,arguments),clearTimeout);\n};\nexports.setInterval=function(){\nreturn new Timeout(apply.call(setInterval,window,arguments),clearInterval);\n};\nexports.clearTimeout=\nexports.clearInterval=function(timeout){timeout.close();};\n\nfunction Timeout(id,clearFn){\nthis._id=id;\nthis._clearFn=clearFn;\n}\nTimeout.prototype.unref=Timeout.prototype.ref=function(){};\nTimeout.prototype.close=function(){\nthis._clearFn.call(window,this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll=function(item,msecs){\nclearTimeout(item._idleTimeoutId);\nitem._idleTimeout=msecs;\n};\n\nexports.unenroll=function(item){\nclearTimeout(item._idleTimeoutId);\nitem._idleTimeout=-1;\n};\n\nexports._unrefActive=exports.active=function(item){\nclearTimeout(item._idleTimeoutId);\n\nvar msecs=item._idleTimeout;\nif(msecs>=0){\nitem._idleTimeoutId=setTimeout(function onTimeout(){\nif(item._onTimeout)\nitem._onTimeout();\n},msecs);\n}\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate=typeof setImmediate===\"function\"?setImmediate:function(fn){\nvar id=nextImmediateId++;\nvar args=arguments.length<2?false:slice.call(arguments,1);\n\nimmediateIds[id]=true;\n\nnextTick(function onNextTick(){\nif(immediateIds[id]){\n// fn.call() is faster so we optimize for the common use-case\n// @see http://jsperf.com/call-apply-segu\nif(args){\nfn.apply(null,args);\n}else{\nfn.call(null);\n}\n// Prevent ids from leaking\nexports.clearImmediate(id);\n}\n});\n\nreturn id;\n};\n\nexports.clearImmediate=typeof clearImmediate===\"function\"?clearImmediate:function(id){\ndelete immediateIds[id];\n};\n}).call(this,require(\"timers\").setImmediate,require(\"timers\").clearImmediate);\n},{\"process/browser.js\":223,\"timers\":248}],249:[function(require,module,exports){\n(function(process){\n'use strict';\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\n\nvar _typeof=typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};\n\nexports.clone=clone;\nexports.addLast=addLast;\nexports.addFirst=addFirst;\nexports.removeLast=removeLast;\nexports.removeFirst=removeFirst;\nexports.insert=insert;\nexports.removeAt=removeAt;\nexports.replaceAt=replaceAt;\nexports.getIn=getIn;\nexports.set=set;\nexports.setIn=setIn;\nexports.update=update;\nexports.updateIn=updateIn;\nexports.merge=merge;\nexports.mergeDeep=mergeDeep;\nexports.mergeIn=mergeIn;\nexports.omit=omit;\nexports.addDefaults=addDefaults;\n\n\n/*!\n * Timm\n *\n * Immutability helpers with fast reads and acceptable writes.\n *\n * @copyright Guillermo Grau Panea 2016\n * @license MIT\n */\n\nvar INVALID_ARGS='INVALID_ARGS';\n\n// ===============================================\n// ### Helpers\n// ===============================================\n\n\nfunction throwStr(msg){\nthrow new Error(msg);\n}\n\nfunction getKeysAndSymbols(obj){\nvar keys=Object.keys(obj);\nif(Object.getOwnPropertySymbols){\nreturn keys.concat(Object.getOwnPropertySymbols(obj));\n}\nreturn keys;\n}\n\nvar hasOwnProperty={}.hasOwnProperty;\n\nfunction clone(obj){\nif(Array.isArray(obj))return obj.slice();\nvar keys=getKeysAndSymbols(obj);\nvar out={};\nfor(var i=0;i<keys.length;i++){\nvar key=keys[i];\nout[key]=obj[key];\n}\nreturn out;\n}\n\nfunction doMerge(fAddDefaults,fDeep,first){\nvar out=first;\n!(out!=null)&&throwStr(process.env.NODE_ENV!=='production'?'At least one object should be provided to merge()':INVALID_ARGS);\nvar fChanged=false;\n\nfor(var _len=arguments.length,rest=Array(_len>3?_len-3:0),_key=3;_key<_len;_key++){\nrest[_key-3]=arguments[_key];\n}\n\nfor(var idx=0;idx<rest.length;idx++){\nvar obj=rest[idx];\nif(obj==null)continue;\nvar keys=getKeysAndSymbols(obj);\nif(!keys.length)continue;\nfor(var j=0;j<=keys.length;j++){\nvar key=keys[j];\nif(fAddDefaults&&out[key]!==undefined)continue;\nvar nextVal=obj[key];\nif(fDeep&&isObject(out[key])&&isObject(nextVal)){\nnextVal=doMerge(fAddDefaults,fDeep,out[key],nextVal);\n}\nif(nextVal===undefined||nextVal===out[key])continue;\nif(!fChanged){\nfChanged=true;\nout=clone(out);\n}\nout[key]=nextVal;\n}\n}\nreturn out;\n}\n\nfunction isObject(o){\nvar type=typeof o==='undefined'?'undefined':_typeof(o);\nreturn o!=null&&type==='object';\n}\n\n// _deepFreeze = (obj) ->\n//   Object.freeze obj\n//   for key in Object.getOwnPropertyNames obj\n//     val = obj[key]\n//     if isObject(val) and not Object.isFrozen val\n//       _deepFreeze val\n//   obj\n\n// ===============================================\n// -- ### Arrays\n// ===============================================\n\n// -- #### addLast()\n// -- Returns a new array with an appended item or items.\n// --\n// -- Usage: `addLast<T>(array: Array<T>, val: Array<T>|T): Array<T>`\n// --\n// -- ```js\n// -- arr = ['a', 'b']\n// -- arr2 = addLast(arr, 'c')\n// -- // ['a', 'b', 'c']\n// -- arr2 === arr\n// -- // false\n// -- arr3 = addLast(arr, ['c', 'd'])\n// -- // ['a', 'b', 'c', 'd']\n// -- ```\n// `array.concat(val)` also handles the scalar case,\n// but is apparently very slow\nfunction addLast(array,val){\nif(Array.isArray(val))return array.concat(val);\nreturn array.concat([val]);\n}\n\n// -- #### addFirst()\n// -- Returns a new array with a prepended item or items.\n// --\n// -- Usage: `addFirst<T>(array: Array<T>, val: Array<T>|T): Array<T>`\n// --\n// -- ```js\n// -- arr = ['a', 'b']\n// -- arr2 = addFirst(arr, 'c')\n// -- // ['c', 'a', 'b']\n// -- arr2 === arr\n// -- // false\n// -- arr3 = addFirst(arr, ['c', 'd'])\n// -- // ['c', 'd', 'a', 'b']\n// -- ```\nfunction addFirst(array,val){\nif(Array.isArray(val))return val.concat(array);\nreturn[val].concat(array);\n}\n\n// -- #### removeLast()\n// -- Returns a new array removing the last item.\n// --\n// -- Usage: `removeLast<T>(array: Array<T>): Array<T>`\n// --\n// -- ```js\n// -- arr = ['a', 'b']\n// -- arr2 = removeLast(arr)\n// -- // ['a']\n// -- arr2 === arr\n// -- // false\n// --\n// -- // The same array is returned if there are no changes:\n// -- arr3 = []\n// -- removeLast(arr3) === arr3\n// -- // true\n// -- ```\nfunction removeLast(array){\nif(!array.length)return array;\nreturn array.slice(0,array.length-1);\n}\n\n// -- #### removeFirst()\n// -- Returns a new array removing the first item.\n// --\n// -- Usage: `removeFirst<T>(array: Array<T>): Array<T>`\n// --\n// -- ```js\n// -- arr = ['a', 'b']\n// -- arr2 = removeFirst(arr)\n// -- // ['b']\n// -- arr2 === arr\n// -- // false\n// --\n// -- // The same array is returned if there are no changes:\n// -- arr3 = []\n// -- removeFirst(arr3) === arr3\n// -- // true\n// -- ```\nfunction removeFirst(array){\nif(!array.length)return array;\nreturn array.slice(1);\n}\n\n// -- #### insert()\n// -- Returns a new array obtained by inserting an item or items\n// -- at a specified index.\n// --\n// -- Usage: `insert<T>(array: Array<T>, idx: number, val: Array<T>|T): Array<T>`\n// --\n// -- ```js\n// -- arr = ['a', 'b', 'c']\n// -- arr2 = insert(arr, 1, 'd')\n// -- // ['a', 'd', 'b', 'c']\n// -- arr2 === arr\n// -- // false\n// -- insert(arr, 1, ['d', 'e'])\n// -- // ['a', 'd', 'e', 'b', 'c']\n// -- ```\nfunction insert(array,idx,val){\nreturn array.slice(0,idx).concat(Array.isArray(val)?val:[val]).concat(array.slice(idx));\n}\n\n// -- #### removeAt()\n// -- Returns a new array obtained by removing an item at\n// -- a specified index.\n// --\n// -- Usage: `removeAt<T>(array: Array<T>, idx: number): Array<T>`\n// --\n// -- ```js\n// -- arr = ['a', 'b', 'c']\n// -- arr2 = removeAt(arr, 1)\n// -- // ['a', 'c']\n// -- arr2 === arr\n// -- // false\n// --\n// -- // The same array is returned if there are no changes:\n// -- removeAt(arr, 4) === arr\n// -- // true\n// -- ```\nfunction removeAt(array,idx){\nif(idx>=array.length||idx<0)return array;\nreturn array.slice(0,idx).concat(array.slice(idx+1));\n}\n\n// -- #### replaceAt()\n// -- Returns a new array obtained by replacing an item at\n// -- a specified index. If the provided item is the same as\n// -- (*referentially equal to*) the previous item at that position,\n// -- the original array is returned.\n// --\n// -- Usage: `replaceAt<T>(array: Array<T>, idx: number, newItem: T): Array<T>`\n// --\n// -- ```js\n// -- arr = ['a', 'b', 'c']\n// -- arr2 = replaceAt(arr, 1, 'd')\n// -- // ['a', 'd', 'c']\n// -- arr2 === arr\n// -- // false\n// --\n// -- // The same object is returned if there are no changes:\n// -- replaceAt(arr, 1, 'b') === arr\n// -- // true\n// -- ```\nfunction replaceAt(array,idx,newItem){\nif(array[idx]===newItem)return array;\nvar len=array.length;\nvar result=Array(len);\nfor(var i=0;i<len;i++){\nresult[i]=array[i];\n}\nresult[idx]=newItem;\nreturn result;\n}\n\n// ===============================================\n// -- ### Collections (objects and arrays)\n// ===============================================\n// -- The following types are used throughout this section\n// -- ```js\n// -- type ArrayOrObject = Array<any>|Object;\n// -- type Key = number|string;\n// -- ```\n\n// -- #### getIn()\n// -- Returns a value from an object at a given path. Works with\n// -- nested arrays and objects. If the path does not exist, it returns\n// -- `undefined`.\n// --\n// -- Usage: `getIn(obj: ?ArrayOrObject, path: Array<Key>): any`\n// --\n// -- ```js\n// -- obj = { a: 1, b: 2, d: { d1: 3, d2: 4 }, e: ['a', 'b', 'c'] }\n// -- getIn(obj, ['d', 'd1'])\n// -- // 3\n// -- getIn(obj, ['e', 1])\n// -- // 'b'\n// -- ```\nfunction getIn(obj,path){\n!Array.isArray(path)&&throwStr(process.env.NODE_ENV!=='production'?'A path array should be provided when calling getIn()':INVALID_ARGS);\nif(obj==null)return undefined;\nvar ptr=obj;\nfor(var i=0;i<path.length;i++){\nvar key=path[i];\nptr=ptr!=null?ptr[key]:undefined;\nif(ptr===undefined)return ptr;\n}\nreturn ptr;\n}\n\n// -- #### set()\n// -- Returns a new object with a modified attribute.\n// -- If the provided value is the same as (*referentially equal to*)\n// -- the previous value, the original object is returned.\n// --\n// -- Usage: `set<T>(obj: ?T, key: Key, val: any): T`\n// --\n// -- ```js\n// -- obj = { a: 1, b: 2, c: 3 }\n// -- obj2 = set(obj, 'b', 5)\n// -- // { a: 1, b: 5, c: 3 }\n// -- obj2 === obj\n// -- // false\n// --\n// -- // The same object is returned if there are no changes:\n// -- set(obj, 'b', 2) === obj\n// -- // true\n// -- ```\nfunction set(obj,key,val){\nvar fallback=typeof key==='number'?[]:{};\nvar finalObj=obj==null?fallback:obj;\nif(finalObj[key]===val)return finalObj;\nvar obj2=clone(finalObj);\nobj2[key]=val;\nreturn obj2;\n}\n\n// -- #### setIn()\n// -- Returns a new object with a modified **nested** attribute.\n// --\n// -- Notes:\n// --\n// -- * If the provided value is the same as (*referentially equal to*)\n// -- the previous value, the original object is returned.\n// -- * If the path does not exist, it will be created before setting\n// -- the new value.\n// --\n// -- Usage: `setIn<T: ArrayOrObject>(obj: T, path: Array<Key>, val: any): T`\n// --\n// -- ```js\n// -- obj = { a: 1, b: 2, d: { d1: 3, d2: 4 }, e: { e1: 'foo', e2: 'bar' } }\n// -- obj2 = setIn(obj, ['d', 'd1'], 4)\n// -- // { a: 1, b: 2, d: { d1: 4, d2: 4 }, e: { e1: 'foo', e2: 'bar' } }\n// -- obj2 === obj\n// -- // false\n// -- obj2.d === obj.d\n// -- // false\n// -- obj2.e === obj.e\n// -- // true\n// --\n// -- // The same object is returned if there are no changes:\n// -- obj3 = setIn(obj, ['d', 'd1'], 3)\n// -- // { a: 1, b: 2, d: { d1: 3, d2: 4 }, e: { e1: 'foo', e2: 'bar' } }\n// -- obj3 === obj\n// -- // true\n// -- obj3.d === obj.d\n// -- // true\n// -- obj3.e === obj.e\n// -- // true\n// --\n// -- // ... unknown paths create intermediate keys. Numeric segments are treated as array indices:\n// -- setIn({ a: 3 }, ['unknown', 0, 'path'], 4)\n// -- // { a: 3, unknown: [{ path: 4 }] }\n// -- ```\nfunction doSetIn(obj,path,val,idx){\nvar newValue=void 0;\nvar key=path[idx];\nif(idx===path.length-1){\nnewValue=val;\n}else{\nvar nestedObj=isObject(obj)&&isObject(obj[key])?obj[key]:typeof path[idx+1]==='number'?[]:{};\nnewValue=doSetIn(nestedObj,path,val,idx+1);\n}\nreturn set(obj,key,newValue);\n}\n\nfunction setIn(obj,path,val){\nif(!path.length)return val;\nreturn doSetIn(obj,path,val,0);\n}\n\n// -- #### update()\n// -- Returns a new object with a modified attribute,\n// -- calculated via a user-provided callback based on the current value.\n// -- If the calculated value is the same as (*referentially equal to*)\n// -- the previous value, the original object is returned.\n// --\n// -- Usage: `update<T: ArrayOrObject>(obj: T, key: Key,\n// -- fnUpdate: (prevValue: any) => any): T`\n// --\n// -- ```js\n// -- obj = { a: 1, b: 2, c: 3 }\n// -- obj2 = update(obj, 'b', (val) => val + 1)\n// -- // { a: 1, b: 3, c: 3 }\n// -- obj2 === obj\n// -- // false\n// --\n// -- // The same object is returned if there are no changes:\n// -- update(obj, 'b', (val) => val) === obj\n// -- // true\n// -- ```\nfunction update(obj,key,fnUpdate){\nvar prevVal=obj==null?undefined:obj[key];\nvar nextVal=fnUpdate(prevVal);\nreturn set(obj,key,nextVal);\n}\n\n// -- #### updateIn()\n// -- Returns a new object with a modified **nested** attribute,\n// -- calculated via a user-provided callback based on the current value.\n// -- If the calculated value is the same as (*referentially equal to*)\n// -- the previous value, the original object is returned.\n// --\n// -- Usage: `updateIn<T: ArrayOrObject>(obj: T, path: Array<Key>,\n// -- fnUpdate: (prevValue: any) => any): T`\n// --\n// -- ```js\n// -- obj = { a: 1, d: { d1: 3, d2: 4 } }\n// -- obj2 = updateIn(obj, ['d', 'd1'], (val) => val + 1)\n// -- // { a: 1, d: { d1: 4, d2: 4 } }\n// -- obj2 === obj\n// -- // false\n// --\n// -- // The same object is returned if there are no changes:\n// -- obj3 = updateIn(obj, ['d', 'd1'], (val) => val)\n// -- // { a: 1, d: { d1: 3, d2: 4 } }\n// -- obj3 === obj\n// -- // true\n// -- ```\nfunction updateIn(obj,path,fnUpdate){\nvar prevVal=getIn(obj,path);\nvar nextVal=fnUpdate(prevVal);\nreturn setIn(obj,path,nextVal);\n}\n\n// -- #### merge()\n// -- Returns a new object built as follows: the overlapping keys from the\n// -- second one overwrite the corresponding entries from the first one.\n// -- Similar to `Object.assign()`, but immutable.\n// --\n// -- Usage:\n// --\n// -- * `merge(obj1: Object, obj2: ?Object): Object`\n// -- * `merge(obj1: Object, ...objects: Array<?Object>): Object`\n// --\n// -- The unmodified `obj1` is returned if `obj2` does not *provide something\n// -- new to* `obj1`, i.e. if either of the following\n// -- conditions are true:\n// --\n// -- * `obj2` is `null` or `undefined`\n// -- * `obj2` is an object, but it is empty\n// -- * All attributes of `obj2` are `undefined`\n// -- * All attributes of `obj2` are referentially equal to the\n// --   corresponding attributes of `obj1`\n// --\n// -- Note that `undefined` attributes in `obj2` do not modify the\n// -- corresponding attributes in `obj1`.\n// --\n// -- ```js\n// -- obj1 = { a: 1, b: 2, c: 3 }\n// -- obj2 = { c: 4, d: 5 }\n// -- obj3 = merge(obj1, obj2)\n// -- // { a: 1, b: 2, c: 4, d: 5 }\n// -- obj3 === obj1\n// -- // false\n// --\n// -- // The same object is returned if there are no changes:\n// -- merge(obj1, { c: 3 }) === obj1\n// -- // true\n// -- ```\nfunction merge(a,b,c,d,e,f){\nfor(var _len2=arguments.length,rest=Array(_len2>6?_len2-6:0),_key2=6;_key2<_len2;_key2++){\nrest[_key2-6]=arguments[_key2];\n}\n\nreturn rest.length?doMerge.call.apply(doMerge,[null,false,false,a,b,c,d,e,f].concat(rest)):doMerge(false,false,a,b,c,d,e,f);\n}\n\n// -- #### mergeDeep()\n// -- Returns a new object built as follows: the overlapping keys from the\n// -- second one overwrite the corresponding entries from the first one.\n// -- If both the first and second entries are objects they are merged recursively.\n// -- Similar to `Object.assign()`, but immutable, and deeply merging.\n// --\n// -- Usage:\n// --\n// -- * `mergeDeep(obj1: Object, obj2: ?Object): Object`\n// -- * `mergeDeep(obj1: Object, ...objects: Array<?Object>): Object`\n// --\n// -- The unmodified `obj1` is returned if `obj2` does not *provide something\n// -- new to* `obj1`, i.e. if either of the following\n// -- conditions are true:\n// --\n// -- * `obj2` is `null` or `undefined`\n// -- * `obj2` is an object, but it is empty\n// -- * All attributes of `obj2` are `undefined`\n// -- * All attributes of `obj2` are referentially equal to the\n// --   corresponding attributes of `obj1`\n// --\n// -- Note that `undefined` attributes in `obj2` do not modify the\n// -- corresponding attributes in `obj1`.\n// --\n// -- ```js\n// -- obj1 = { a: 1, b: 2, c: { a: 1 } }\n// -- obj2 = { b: 3, c: { b: 2 } }\n// -- obj3 = mergeDeep(obj1, obj2)\n// -- // { a: 1, b: 3, c: { a: 1, b: 2 }  }\n// -- obj3 === obj1\n// -- // false\n// --\n// -- // The same object is returned if there are no changes:\n// -- mergeDeep(obj1, { c: { a: 1 } }) === obj1\n// -- // true\n// -- ```\nfunction mergeDeep(a,b,c,d,e,f){\nfor(var _len3=arguments.length,rest=Array(_len3>6?_len3-6:0),_key3=6;_key3<_len3;_key3++){\nrest[_key3-6]=arguments[_key3];\n}\n\nreturn rest.length?doMerge.call.apply(doMerge,[null,false,true,a,b,c,d,e,f].concat(rest)):doMerge(false,true,a,b,c,d,e,f);\n}\n\n// -- #### mergeIn()\n// -- Similar to `merge()`, but merging the value at a given nested path.\n// -- Note that the returned type is the same as that of the first argument.\n// --\n// -- Usage:\n// --\n// -- * `mergeIn<T: ArrayOrObject>(obj1: T, path: Array<Key>, obj2: ?Object): T`\n// -- * `mergeIn<T: ArrayOrObject>(obj1: T, path: Array<Key>,\n// -- ...objects: Array<?Object>): T`\n// --\n// -- ```js\n// -- obj1 = { a: 1, d: { b: { d1: 3, d2: 4 } } }\n// -- obj2 = { d3: 5 }\n// -- obj3 = mergeIn(obj1, ['d', 'b'], obj2)\n// -- // { a: 1, d: { b: { d1: 3, d2: 4, d3: 5 } } }\n// -- obj3 === obj1\n// -- // false\n// --\n// -- // The same object is returned if there are no changes:\n// -- mergeIn(obj1, ['d', 'b'], { d2: 4 }) === obj1\n// -- // true\n// -- ```\nfunction mergeIn(a,path,b,c,d,e,f){\nvar prevVal=getIn(a,path);\nif(prevVal==null)prevVal={};\nvar nextVal=void 0;\n\nfor(var _len4=arguments.length,rest=Array(_len4>7?_len4-7:0),_key4=7;_key4<_len4;_key4++){\nrest[_key4-7]=arguments[_key4];\n}\n\nif(rest.length){\nnextVal=doMerge.call.apply(doMerge,[null,false,false,prevVal,b,c,d,e,f].concat(rest));\n}else{\nnextVal=doMerge(false,false,prevVal,b,c,d,e,f);\n}\nreturn setIn(a,path,nextVal);\n}\n\n// -- #### omit()\n// -- Returns an object excluding one or several attributes.\n// --\n// -- Usage: `omit(obj: Object, attrs: Array<string>|string): Object`\n//\n// -- ```js\n// -- obj = { a: 1, b: 2, c: 3, d: 4 }\n// -- omit(obj, 'a')\n// -- // { b: 2, c: 3, d: 4 }\n// -- omit(obj, ['b', 'c'])\n// -- // { a: 1, d: 4 }\n// --\n// -- // The same object is returned if there are no changes:\n// -- omit(obj, 'z') === obj1\n// -- // true\n// -- ```\nfunction omit(obj,attrs){\nvar omitList=Array.isArray(attrs)?attrs:[attrs];\nvar fDoSomething=false;\nfor(var i=0;i<omitList.length;i++){\nif(hasOwnProperty.call(obj,omitList[i])){\nfDoSomething=true;\nbreak;\n}\n}\nif(!fDoSomething)return obj;\nvar out={};\nvar keys=getKeysAndSymbols(obj);\nfor(var _i=0;_i<keys.length;_i++){\nvar key=keys[_i];\nif(omitList.indexOf(key)>=0)continue;\nout[key]=obj[key];\n}\nreturn out;\n}\n\n// -- #### addDefaults()\n// -- Returns a new object built as follows: `undefined` keys in the first one\n// -- are filled in with the corresponding values from the second one\n// -- (even if they are `null`).\n// --\n// -- Usage:\n// --\n// -- * `addDefaults(obj: Object, defaults: Object): Object`\n// -- * `addDefaults(obj: Object, ...defaultObjects: Array<?Object>): Object`\n// --\n// -- ```js\n// -- obj1 = { a: 1, b: 2, c: 3 }\n// -- obj2 = { c: 4, d: 5, e: null }\n// -- obj3 = addDefaults(obj1, obj2)\n// -- // { a: 1, b: 2, c: 3, d: 5, e: null }\n// -- obj3 === obj1\n// -- // false\n// --\n// -- // The same object is returned if there are no changes:\n// -- addDefaults(obj1, { c: 4 }) === obj1\n// -- // true\n// -- ```\nfunction addDefaults(a,b,c,d,e,f){\nfor(var _len5=arguments.length,rest=Array(_len5>6?_len5-6:0),_key5=6;_key5<_len5;_key5++){\nrest[_key5-6]=arguments[_key5];\n}\n\nreturn rest.length?doMerge.call.apply(doMerge,[null,true,false,a,b,c,d,e,f].concat(rest)):doMerge(true,false,a,b,c,d,e,f);\n}\n\n// ===============================================\n// ### Public API\n// ===============================================\nvar timm={\nclone:clone,\naddLast:addLast,\naddFirst:addFirst,\nremoveLast:removeLast,\nremoveFirst:removeFirst,\ninsert:insert,\nremoveAt:removeAt,\nreplaceAt:replaceAt,\n\ngetIn:getIn,\n// eslint-disable-next-line object-shorthand\nset:set,// so that flow doesn't complain\nsetIn:setIn,\nupdate:update,\nupdateIn:updateIn,\nmerge:merge,\nmergeDeep:mergeDeep,\nmergeIn:mergeIn,\nomit:omit,\naddDefaults:addDefaults};\n\n\nexports.default=timm;\n\n}).call(this,require('_process'));\n},{\"_process\":223}],250:[function(require,module,exports){\n// TinyColor v1.4.1\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\n(function(Math){\n\nvar trimLeft=/^\\s+/,\ntrimRight=/\\s+$/,\ntinyCounter=0,\nmathRound=Math.round,\nmathMin=Math.min,\nmathMax=Math.max,\nmathRandom=Math.random;\n\nfunction tinycolor(color,opts){\n\ncolor=color?color:'';\nopts=opts||{};\n\n// If input is already a tinycolor, return itself\nif(color instanceof tinycolor){\nreturn color;\n}\n// If we are called as a function, call using new instead\nif(!(this instanceof tinycolor)){\nreturn new tinycolor(color,opts);\n}\n\nvar rgb=inputToRGB(color);\nthis._originalInput=color,\nthis._r=rgb.r,\nthis._g=rgb.g,\nthis._b=rgb.b,\nthis._a=rgb.a,\nthis._roundA=mathRound(100*this._a)/100,\nthis._format=opts.format||rgb.format;\nthis._gradientType=opts.gradientType;\n\n// Don't let the range of [0,255] come back in [0,1].\n// Potentially lose a little bit of precision here, but will fix issues where\n// .5 gets interpreted as half of the total, instead of half of 1\n// If it was supposed to be 128, this was already taken care of by `inputToRgb`\nif(this._r<1){this._r=mathRound(this._r);}\nif(this._g<1){this._g=mathRound(this._g);}\nif(this._b<1){this._b=mathRound(this._b);}\n\nthis._ok=rgb.ok;\nthis._tc_id=tinyCounter++;\n}\n\ntinycolor.prototype={\nisDark:function isDark(){\nreturn this.getBrightness()<128;\n},\nisLight:function isLight(){\nreturn!this.isDark();\n},\nisValid:function isValid(){\nreturn this._ok;\n},\ngetOriginalInput:function getOriginalInput(){\nreturn this._originalInput;\n},\ngetFormat:function getFormat(){\nreturn this._format;\n},\ngetAlpha:function getAlpha(){\nreturn this._a;\n},\ngetBrightness:function getBrightness(){\n//http://www.w3.org/TR/AERT#color-contrast\nvar rgb=this.toRgb();\nreturn(rgb.r*299+rgb.g*587+rgb.b*114)/1000;\n},\ngetLuminance:function getLuminance(){\n//http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\nvar rgb=this.toRgb();\nvar RsRGB,GsRGB,BsRGB,R,G,B;\nRsRGB=rgb.r/255;\nGsRGB=rgb.g/255;\nBsRGB=rgb.b/255;\n\nif(RsRGB<=0.03928){R=RsRGB/12.92;}else{R=Math.pow((RsRGB+0.055)/1.055,2.4);}\nif(GsRGB<=0.03928){G=GsRGB/12.92;}else{G=Math.pow((GsRGB+0.055)/1.055,2.4);}\nif(BsRGB<=0.03928){B=BsRGB/12.92;}else{B=Math.pow((BsRGB+0.055)/1.055,2.4);}\nreturn 0.2126*R+0.7152*G+0.0722*B;\n},\nsetAlpha:function setAlpha(value){\nthis._a=boundAlpha(value);\nthis._roundA=mathRound(100*this._a)/100;\nreturn this;\n},\ntoHsv:function toHsv(){\nvar hsv=rgbToHsv(this._r,this._g,this._b);\nreturn{h:hsv.h*360,s:hsv.s,v:hsv.v,a:this._a};\n},\ntoHsvString:function toHsvString(){\nvar hsv=rgbToHsv(this._r,this._g,this._b);\nvar h=mathRound(hsv.h*360),s=mathRound(hsv.s*100),v=mathRound(hsv.v*100);\nreturn this._a==1?\n\"hsv(\"+h+\", \"+s+\"%, \"+v+\"%)\":\n\"hsva(\"+h+\", \"+s+\"%, \"+v+\"%, \"+this._roundA+\")\";\n},\ntoHsl:function toHsl(){\nvar hsl=rgbToHsl(this._r,this._g,this._b);\nreturn{h:hsl.h*360,s:hsl.s,l:hsl.l,a:this._a};\n},\ntoHslString:function toHslString(){\nvar hsl=rgbToHsl(this._r,this._g,this._b);\nvar h=mathRound(hsl.h*360),s=mathRound(hsl.s*100),l=mathRound(hsl.l*100);\nreturn this._a==1?\n\"hsl(\"+h+\", \"+s+\"%, \"+l+\"%)\":\n\"hsla(\"+h+\", \"+s+\"%, \"+l+\"%, \"+this._roundA+\")\";\n},\ntoHex:function toHex(allow3Char){\nreturn rgbToHex(this._r,this._g,this._b,allow3Char);\n},\ntoHexString:function toHexString(allow3Char){\nreturn'#'+this.toHex(allow3Char);\n},\ntoHex8:function toHex8(allow4Char){\nreturn rgbaToHex(this._r,this._g,this._b,this._a,allow4Char);\n},\ntoHex8String:function toHex8String(allow4Char){\nreturn'#'+this.toHex8(allow4Char);\n},\ntoRgb:function toRgb(){\nreturn{r:mathRound(this._r),g:mathRound(this._g),b:mathRound(this._b),a:this._a};\n},\ntoRgbString:function toRgbString(){\nreturn this._a==1?\n\"rgb(\"+mathRound(this._r)+\", \"+mathRound(this._g)+\", \"+mathRound(this._b)+\")\":\n\"rgba(\"+mathRound(this._r)+\", \"+mathRound(this._g)+\", \"+mathRound(this._b)+\", \"+this._roundA+\")\";\n},\ntoPercentageRgb:function toPercentageRgb(){\nreturn{r:mathRound(bound01(this._r,255)*100)+\"%\",g:mathRound(bound01(this._g,255)*100)+\"%\",b:mathRound(bound01(this._b,255)*100)+\"%\",a:this._a};\n},\ntoPercentageRgbString:function toPercentageRgbString(){\nreturn this._a==1?\n\"rgb(\"+mathRound(bound01(this._r,255)*100)+\"%, \"+mathRound(bound01(this._g,255)*100)+\"%, \"+mathRound(bound01(this._b,255)*100)+\"%)\":\n\"rgba(\"+mathRound(bound01(this._r,255)*100)+\"%, \"+mathRound(bound01(this._g,255)*100)+\"%, \"+mathRound(bound01(this._b,255)*100)+\"%, \"+this._roundA+\")\";\n},\ntoName:function toName(){\nif(this._a===0){\nreturn\"transparent\";\n}\n\nif(this._a<1){\nreturn false;\n}\n\nreturn hexNames[rgbToHex(this._r,this._g,this._b,true)]||false;\n},\ntoFilter:function toFilter(secondColor){\nvar hex8String='#'+rgbaToArgbHex(this._r,this._g,this._b,this._a);\nvar secondHex8String=hex8String;\nvar gradientType=this._gradientType?\"GradientType = 1, \":\"\";\n\nif(secondColor){\nvar s=tinycolor(secondColor);\nsecondHex8String='#'+rgbaToArgbHex(s._r,s._g,s._b,s._a);\n}\n\nreturn\"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n},\ntoString:function toString(format){\nvar formatSet=!!format;\nformat=format||this._format;\n\nvar formattedString=false;\nvar hasAlpha=this._a<1&&this._a>=0;\nvar needsAlphaFormat=!formatSet&&hasAlpha&&(format===\"hex\"||format===\"hex6\"||format===\"hex3\"||format===\"hex4\"||format===\"hex8\"||format===\"name\");\n\nif(needsAlphaFormat){\n// Special case for \"transparent\", all other non-alpha formats\n// will return rgba when there is transparency.\nif(format===\"name\"&&this._a===0){\nreturn this.toName();\n}\nreturn this.toRgbString();\n}\nif(format===\"rgb\"){\nformattedString=this.toRgbString();\n}\nif(format===\"prgb\"){\nformattedString=this.toPercentageRgbString();\n}\nif(format===\"hex\"||format===\"hex6\"){\nformattedString=this.toHexString();\n}\nif(format===\"hex3\"){\nformattedString=this.toHexString(true);\n}\nif(format===\"hex4\"){\nformattedString=this.toHex8String(true);\n}\nif(format===\"hex8\"){\nformattedString=this.toHex8String();\n}\nif(format===\"name\"){\nformattedString=this.toName();\n}\nif(format===\"hsl\"){\nformattedString=this.toHslString();\n}\nif(format===\"hsv\"){\nformattedString=this.toHsvString();\n}\n\nreturn formattedString||this.toHexString();\n},\nclone:function clone(){\nreturn tinycolor(this.toString());\n},\n\n_applyModification:function _applyModification(fn,args){\nvar color=fn.apply(null,[this].concat([].slice.call(args)));\nthis._r=color._r;\nthis._g=color._g;\nthis._b=color._b;\nthis.setAlpha(color._a);\nreturn this;\n},\nlighten:function lighten(){\nreturn this._applyModification(_lighten,arguments);\n},\nbrighten:function brighten(){\nreturn this._applyModification(_brighten,arguments);\n},\ndarken:function darken(){\nreturn this._applyModification(_darken,arguments);\n},\ndesaturate:function desaturate(){\nreturn this._applyModification(_desaturate,arguments);\n},\nsaturate:function saturate(){\nreturn this._applyModification(_saturate,arguments);\n},\ngreyscale:function greyscale(){\nreturn this._applyModification(_greyscale,arguments);\n},\nspin:function spin(){\nreturn this._applyModification(_spin,arguments);\n},\n\n_applyCombination:function _applyCombination(fn,args){\nreturn fn.apply(null,[this].concat([].slice.call(args)));\n},\nanalogous:function analogous(){\nreturn this._applyCombination(_analogous,arguments);\n},\ncomplement:function complement(){\nreturn this._applyCombination(_complement,arguments);\n},\nmonochromatic:function monochromatic(){\nreturn this._applyCombination(_monochromatic,arguments);\n},\nsplitcomplement:function splitcomplement(){\nreturn this._applyCombination(_splitcomplement,arguments);\n},\ntriad:function triad(){\nreturn this._applyCombination(_triad,arguments);\n},\ntetrad:function tetrad(){\nreturn this._applyCombination(_tetrad,arguments);\n}};\n\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio=function(color,opts){\nif(typeof color==\"object\"){\nvar newColor={};\nfor(var i in color){\nif(color.hasOwnProperty(i)){\nif(i===\"a\"){\nnewColor[i]=color[i];\n}else\n{\nnewColor[i]=convertToPercentage(color[i]);\n}\n}\n}\ncolor=newColor;\n}\n\nreturn tinycolor(color,opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color){\n\nvar rgb={r:0,g:0,b:0};\nvar a=1;\nvar s=null;\nvar v=null;\nvar l=null;\nvar ok=false;\nvar format=false;\n\nif(typeof color==\"string\"){\ncolor=stringInputToObject(color);\n}\n\nif(typeof color==\"object\"){\nif(isValidCSSUnit(color.r)&&isValidCSSUnit(color.g)&&isValidCSSUnit(color.b)){\nrgb=rgbToRgb(color.r,color.g,color.b);\nok=true;\nformat=String(color.r).substr(-1)===\"%\"?\"prgb\":\"rgb\";\n}else\nif(isValidCSSUnit(color.h)&&isValidCSSUnit(color.s)&&isValidCSSUnit(color.v)){\ns=convertToPercentage(color.s);\nv=convertToPercentage(color.v);\nrgb=hsvToRgb(color.h,s,v);\nok=true;\nformat=\"hsv\";\n}else\nif(isValidCSSUnit(color.h)&&isValidCSSUnit(color.s)&&isValidCSSUnit(color.l)){\ns=convertToPercentage(color.s);\nl=convertToPercentage(color.l);\nrgb=hslToRgb(color.h,s,l);\nok=true;\nformat=\"hsl\";\n}\n\nif(color.hasOwnProperty(\"a\")){\na=color.a;\n}\n}\n\na=boundAlpha(a);\n\nreturn{\nok:ok,\nformat:color.format||format,\nr:mathMin(255,mathMax(rgb.r,0)),\ng:mathMin(255,mathMax(rgb.g,0)),\nb:mathMin(255,mathMax(rgb.b,0)),\na:a};\n\n}\n\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r,g,b){\nreturn{\nr:bound01(r,255)*255,\ng:bound01(g,255)*255,\nb:bound01(b,255)*255};\n\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r,g,b){\n\nr=bound01(r,255);\ng=bound01(g,255);\nb=bound01(b,255);\n\nvar max=mathMax(r,g,b),min=mathMin(r,g,b);\nvar h,s,l=(max+min)/2;\n\nif(max==min){\nh=s=0;// achromatic\n}else\n{\nvar d=max-min;\ns=l>0.5?d/(2-max-min):d/(max+min);\nswitch(max){\ncase r:h=(g-b)/d+(g<b?6:0);break;\ncase g:h=(b-r)/d+2;break;\ncase b:h=(r-g)/d+4;break;}\n\n\nh/=6;\n}\n\nreturn{h:h,s:s,l:l};\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h,s,l){\nvar r,g,b;\n\nh=bound01(h,360);\ns=bound01(s,100);\nl=bound01(l,100);\n\nfunction hue2rgb(p,q,t){\nif(t<0)t+=1;\nif(t>1)t-=1;\nif(t<1/6)return p+(q-p)*6*t;\nif(t<1/2)return q;\nif(t<2/3)return p+(q-p)*(2/3-t)*6;\nreturn p;\n}\n\nif(s===0){\nr=g=b=l;// achromatic\n}else\n{\nvar q=l<0.5?l*(1+s):l+s-l*s;\nvar p=2*l-q;\nr=hue2rgb(p,q,h+1/3);\ng=hue2rgb(p,q,h);\nb=hue2rgb(p,q,h-1/3);\n}\n\nreturn{r:r*255,g:g*255,b:b*255};\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r,g,b){\n\nr=bound01(r,255);\ng=bound01(g,255);\nb=bound01(b,255);\n\nvar max=mathMax(r,g,b),min=mathMin(r,g,b);\nvar h,s,v=max;\n\nvar d=max-min;\ns=max===0?0:d/max;\n\nif(max==min){\nh=0;// achromatic\n}else\n{\nswitch(max){\ncase r:h=(g-b)/d+(g<b?6:0);break;\ncase g:h=(b-r)/d+2;break;\ncase b:h=(r-g)/d+4;break;}\n\nh/=6;\n}\nreturn{h:h,s:s,v:v};\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hsvToRgb(h,s,v){\n\nh=bound01(h,360)*6;\ns=bound01(s,100);\nv=bound01(v,100);\n\nvar i=Math.floor(h),\nf=h-i,\np=v*(1-s),\nq=v*(1-f*s),\nt=v*(1-(1-f)*s),\nmod=i%6,\nr=[v,q,p,p,t,v][mod],\ng=[t,v,v,q,p,p][mod],\nb=[p,p,t,v,v,q][mod];\n\nreturn{r:r*255,g:g*255,b:b*255};\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r,g,b,allow3Char){\n\nvar hex=[\npad2(mathRound(r).toString(16)),\npad2(mathRound(g).toString(16)),\npad2(mathRound(b).toString(16))];\n\n\n// Return a 3 character hex if possible\nif(allow3Char&&hex[0].charAt(0)==hex[0].charAt(1)&&hex[1].charAt(0)==hex[1].charAt(1)&&hex[2].charAt(0)==hex[2].charAt(1)){\nreturn hex[0].charAt(0)+hex[1].charAt(0)+hex[2].charAt(0);\n}\n\nreturn hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r,g,b,a,allow4Char){\n\nvar hex=[\npad2(mathRound(r).toString(16)),\npad2(mathRound(g).toString(16)),\npad2(mathRound(b).toString(16)),\npad2(convertDecimalToHex(a))];\n\n\n// Return a 4 character hex if possible\nif(allow4Char&&hex[0].charAt(0)==hex[0].charAt(1)&&hex[1].charAt(0)==hex[1].charAt(1)&&hex[2].charAt(0)==hex[2].charAt(1)&&hex[3].charAt(0)==hex[3].charAt(1)){\nreturn hex[0].charAt(0)+hex[1].charAt(0)+hex[2].charAt(0)+hex[3].charAt(0);\n}\n\nreturn hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r,g,b,a){\n\nvar hex=[\npad2(convertDecimalToHex(a)),\npad2(mathRound(r).toString(16)),\npad2(mathRound(g).toString(16)),\npad2(mathRound(b).toString(16))];\n\n\nreturn hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals=function(color1,color2){\nif(!color1||!color2){return false;}\nreturn tinycolor(color1).toRgbString()==tinycolor(color2).toRgbString();\n};\n\ntinycolor.random=function(){\nreturn tinycolor.fromRatio({\nr:mathRandom(),\ng:mathRandom(),\nb:mathRandom()});\n\n};\n\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction _desaturate(color,amount){\namount=amount===0?0:amount||10;\nvar hsl=tinycolor(color).toHsl();\nhsl.s-=amount/100;\nhsl.s=clamp01(hsl.s);\nreturn tinycolor(hsl);\n}\n\nfunction _saturate(color,amount){\namount=amount===0?0:amount||10;\nvar hsl=tinycolor(color).toHsl();\nhsl.s+=amount/100;\nhsl.s=clamp01(hsl.s);\nreturn tinycolor(hsl);\n}\n\nfunction _greyscale(color){\nreturn tinycolor(color).desaturate(100);\n}\n\nfunction _lighten(color,amount){\namount=amount===0?0:amount||10;\nvar hsl=tinycolor(color).toHsl();\nhsl.l+=amount/100;\nhsl.l=clamp01(hsl.l);\nreturn tinycolor(hsl);\n}\n\nfunction _brighten(color,amount){\namount=amount===0?0:amount||10;\nvar rgb=tinycolor(color).toRgb();\nrgb.r=mathMax(0,mathMin(255,rgb.r-mathRound(255*-(amount/100))));\nrgb.g=mathMax(0,mathMin(255,rgb.g-mathRound(255*-(amount/100))));\nrgb.b=mathMax(0,mathMin(255,rgb.b-mathRound(255*-(amount/100))));\nreturn tinycolor(rgb);\n}\n\nfunction _darken(color,amount){\namount=amount===0?0:amount||10;\nvar hsl=tinycolor(color).toHsl();\nhsl.l-=amount/100;\nhsl.l=clamp01(hsl.l);\nreturn tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction _spin(color,amount){\nvar hsl=tinycolor(color).toHsl();\nvar hue=(hsl.h+amount)%360;\nhsl.h=hue<0?360+hue:hue;\nreturn tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction _complement(color){\nvar hsl=tinycolor(color).toHsl();\nhsl.h=(hsl.h+180)%360;\nreturn tinycolor(hsl);\n}\n\nfunction _triad(color){\nvar hsl=tinycolor(color).toHsl();\nvar h=hsl.h;\nreturn[\ntinycolor(color),\ntinycolor({h:(h+120)%360,s:hsl.s,l:hsl.l}),\ntinycolor({h:(h+240)%360,s:hsl.s,l:hsl.l})];\n\n}\n\nfunction _tetrad(color){\nvar hsl=tinycolor(color).toHsl();\nvar h=hsl.h;\nreturn[\ntinycolor(color),\ntinycolor({h:(h+90)%360,s:hsl.s,l:hsl.l}),\ntinycolor({h:(h+180)%360,s:hsl.s,l:hsl.l}),\ntinycolor({h:(h+270)%360,s:hsl.s,l:hsl.l})];\n\n}\n\nfunction _splitcomplement(color){\nvar hsl=tinycolor(color).toHsl();\nvar h=hsl.h;\nreturn[\ntinycolor(color),\ntinycolor({h:(h+72)%360,s:hsl.s,l:hsl.l}),\ntinycolor({h:(h+216)%360,s:hsl.s,l:hsl.l})];\n\n}\n\nfunction _analogous(color,results,slices){\nresults=results||6;\nslices=slices||30;\n\nvar hsl=tinycolor(color).toHsl();\nvar part=360/slices;\nvar ret=[tinycolor(color)];\n\nfor(hsl.h=(hsl.h-(part*results>>1)+720)%360;--results;){\nhsl.h=(hsl.h+part)%360;\nret.push(tinycolor(hsl));\n}\nreturn ret;\n}\n\nfunction _monochromatic(color,results){\nresults=results||6;\nvar hsv=tinycolor(color).toHsv();\nvar h=hsv.h,s=hsv.s,v=hsv.v;\nvar ret=[];\nvar modification=1/results;\n\nwhile(results--){\nret.push(tinycolor({h:h,s:s,v:v}));\nv=(v+modification)%1;\n}\n\nreturn ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix=function(color1,color2,amount){\namount=amount===0?0:amount||50;\n\nvar rgb1=tinycolor(color1).toRgb();\nvar rgb2=tinycolor(color2).toRgb();\n\nvar p=amount/100;\n\nvar rgba={\nr:(rgb2.r-rgb1.r)*p+rgb1.r,\ng:(rgb2.g-rgb1.g)*p+rgb1.g,\nb:(rgb2.b-rgb1.b)*p+rgb1.b,\na:(rgb2.a-rgb1.a)*p+rgb1.a};\n\n\nreturn tinycolor(rgba);\n};\n\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability=function(color1,color2){\nvar c1=tinycolor(color1);\nvar c2=tinycolor(color2);\nreturn(Math.max(c1.getLuminance(),c2.getLuminance())+0.05)/(Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable=function(color1,color2,wcag2){\nvar readability=tinycolor.readability(color1,color2);\nvar wcag2Parms,out;\n\nout=false;\n\nwcag2Parms=validateWCAG2Parms(wcag2);\nswitch(wcag2Parms.level+wcag2Parms.size){\ncase\"AAsmall\":\ncase\"AAAlarge\":\nout=readability>=4.5;\nbreak;\ncase\"AAlarge\":\nout=readability>=3;\nbreak;\ncase\"AAAsmall\":\nout=readability>=7;\nbreak;}\n\nreturn out;\n\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable=function(baseColor,colorList,args){\nvar bestColor=null;\nvar bestScore=0;\nvar readability;\nvar includeFallbackColors,level,size;\nargs=args||{};\nincludeFallbackColors=args.includeFallbackColors;\nlevel=args.level;\nsize=args.size;\n\nfor(var i=0;i<colorList.length;i++){\nreadability=tinycolor.readability(baseColor,colorList[i]);\nif(readability>bestScore){\nbestScore=readability;\nbestColor=tinycolor(colorList[i]);\n}\n}\n\nif(tinycolor.isReadable(baseColor,bestColor,{\"level\":level,\"size\":size})||!includeFallbackColors){\nreturn bestColor;\n}else\n{\nargs.includeFallbackColors=false;\nreturn tinycolor.mostReadable(baseColor,[\"#fff\",\"#000\"],args);\n}\n};\n\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names=tinycolor.names={\naliceblue:\"f0f8ff\",\nantiquewhite:\"faebd7\",\naqua:\"0ff\",\naquamarine:\"7fffd4\",\nazure:\"f0ffff\",\nbeige:\"f5f5dc\",\nbisque:\"ffe4c4\",\nblack:\"000\",\nblanchedalmond:\"ffebcd\",\nblue:\"00f\",\nblueviolet:\"8a2be2\",\nbrown:\"a52a2a\",\nburlywood:\"deb887\",\nburntsienna:\"ea7e5d\",\ncadetblue:\"5f9ea0\",\nchartreuse:\"7fff00\",\nchocolate:\"d2691e\",\ncoral:\"ff7f50\",\ncornflowerblue:\"6495ed\",\ncornsilk:\"fff8dc\",\ncrimson:\"dc143c\",\ncyan:\"0ff\",\ndarkblue:\"00008b\",\ndarkcyan:\"008b8b\",\ndarkgoldenrod:\"b8860b\",\ndarkgray:\"a9a9a9\",\ndarkgreen:\"006400\",\ndarkgrey:\"a9a9a9\",\ndarkkhaki:\"bdb76b\",\ndarkmagenta:\"8b008b\",\ndarkolivegreen:\"556b2f\",\ndarkorange:\"ff8c00\",\ndarkorchid:\"9932cc\",\ndarkred:\"8b0000\",\ndarksalmon:\"e9967a\",\ndarkseagreen:\"8fbc8f\",\ndarkslateblue:\"483d8b\",\ndarkslategray:\"2f4f4f\",\ndarkslategrey:\"2f4f4f\",\ndarkturquoise:\"00ced1\",\ndarkviolet:\"9400d3\",\ndeeppink:\"ff1493\",\ndeepskyblue:\"00bfff\",\ndimgray:\"696969\",\ndimgrey:\"696969\",\ndodgerblue:\"1e90ff\",\nfirebrick:\"b22222\",\nfloralwhite:\"fffaf0\",\nforestgreen:\"228b22\",\nfuchsia:\"f0f\",\ngainsboro:\"dcdcdc\",\nghostwhite:\"f8f8ff\",\ngold:\"ffd700\",\ngoldenrod:\"daa520\",\ngray:\"808080\",\ngreen:\"008000\",\ngreenyellow:\"adff2f\",\ngrey:\"808080\",\nhoneydew:\"f0fff0\",\nhotpink:\"ff69b4\",\nindianred:\"cd5c5c\",\nindigo:\"4b0082\",\nivory:\"fffff0\",\nkhaki:\"f0e68c\",\nlavender:\"e6e6fa\",\nlavenderblush:\"fff0f5\",\nlawngreen:\"7cfc00\",\nlemonchiffon:\"fffacd\",\nlightblue:\"add8e6\",\nlightcoral:\"f08080\",\nlightcyan:\"e0ffff\",\nlightgoldenrodyellow:\"fafad2\",\nlightgray:\"d3d3d3\",\nlightgreen:\"90ee90\",\nlightgrey:\"d3d3d3\",\nlightpink:\"ffb6c1\",\nlightsalmon:\"ffa07a\",\nlightseagreen:\"20b2aa\",\nlightskyblue:\"87cefa\",\nlightslategray:\"789\",\nlightslategrey:\"789\",\nlightsteelblue:\"b0c4de\",\nlightyellow:\"ffffe0\",\nlime:\"0f0\",\nlimegreen:\"32cd32\",\nlinen:\"faf0e6\",\nmagenta:\"f0f\",\nmaroon:\"800000\",\nmediumaquamarine:\"66cdaa\",\nmediumblue:\"0000cd\",\nmediumorchid:\"ba55d3\",\nmediumpurple:\"9370db\",\nmediumseagreen:\"3cb371\",\nmediumslateblue:\"7b68ee\",\nmediumspringgreen:\"00fa9a\",\nmediumturquoise:\"48d1cc\",\nmediumvioletred:\"c71585\",\nmidnightblue:\"191970\",\nmintcream:\"f5fffa\",\nmistyrose:\"ffe4e1\",\nmoccasin:\"ffe4b5\",\nnavajowhite:\"ffdead\",\nnavy:\"000080\",\noldlace:\"fdf5e6\",\nolive:\"808000\",\nolivedrab:\"6b8e23\",\norange:\"ffa500\",\norangered:\"ff4500\",\norchid:\"da70d6\",\npalegoldenrod:\"eee8aa\",\npalegreen:\"98fb98\",\npaleturquoise:\"afeeee\",\npalevioletred:\"db7093\",\npapayawhip:\"ffefd5\",\npeachpuff:\"ffdab9\",\nperu:\"cd853f\",\npink:\"ffc0cb\",\nplum:\"dda0dd\",\npowderblue:\"b0e0e6\",\npurple:\"800080\",\nrebeccapurple:\"663399\",\nred:\"f00\",\nrosybrown:\"bc8f8f\",\nroyalblue:\"4169e1\",\nsaddlebrown:\"8b4513\",\nsalmon:\"fa8072\",\nsandybrown:\"f4a460\",\nseagreen:\"2e8b57\",\nseashell:\"fff5ee\",\nsienna:\"a0522d\",\nsilver:\"c0c0c0\",\nskyblue:\"87ceeb\",\nslateblue:\"6a5acd\",\nslategray:\"708090\",\nslategrey:\"708090\",\nsnow:\"fffafa\",\nspringgreen:\"00ff7f\",\nsteelblue:\"4682b4\",\ntan:\"d2b48c\",\nteal:\"008080\",\nthistle:\"d8bfd8\",\ntomato:\"ff6347\",\nturquoise:\"40e0d0\",\nviolet:\"ee82ee\",\nwheat:\"f5deb3\",\nwhite:\"fff\",\nwhitesmoke:\"f5f5f5\",\nyellow:\"ff0\",\nyellowgreen:\"9acd32\"};\n\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames=tinycolor.hexNames=flip(names);\n\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o){\nvar flipped={};\nfor(var i in o){\nif(o.hasOwnProperty(i)){\nflipped[o[i]]=i;\n}\n}\nreturn flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a){\na=parseFloat(a);\n\nif(isNaN(a)||a<0||a>1){\na=1;\n}\n\nreturn a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n,max){\nif(isOnePointZero(n)){n=\"100%\";}\n\nvar processPercent=isPercentage(n);\nn=mathMin(max,mathMax(0,parseFloat(n)));\n\n// Automatically convert percentage into number\nif(processPercent){\nn=parseInt(n*max,10)/100;\n}\n\n// Handle floating point rounding errors\nif(Math.abs(n-max)<0.000001){\nreturn 1;\n}\n\n// Convert into [0, 1] range if it isn't already\nreturn n%max/parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val){\nreturn mathMin(1,mathMax(0,val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val){\nreturn parseInt(val,16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n){\nreturn typeof n==\"string\"&&n.indexOf('.')!=-1&&parseFloat(n)===1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n){\nreturn typeof n===\"string\"&&n.indexOf('%')!=-1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c){\nreturn c.length==1?'0'+c:''+c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n){\nif(n<=1){\nn=n*100+\"%\";\n}\n\nreturn n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d){\nreturn Math.round(parseFloat(d)*255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h){\nreturn parseIntFromHex(h)/255;\n}\n\nvar matchers=function(){\n\n// <http://www.w3.org/TR/css3-values/#integers>\nvar CSS_INTEGER=\"[-\\\\+]?\\\\d+%?\";\n\n// <http://www.w3.org/TR/css3-values/#number-value>\nvar CSS_NUMBER=\"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n// Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\nvar CSS_UNIT=\"(?:\"+CSS_NUMBER+\")|(?:\"+CSS_INTEGER+\")\";\n\n// Actual matching.\n// Parentheses and commas are optional, but not required.\n// Whitespace can take the place of commas or opening paren\nvar PERMISSIVE_MATCH3=\"[\\\\s|\\\\(]+(\"+CSS_UNIT+\")[,|\\\\s]+(\"+CSS_UNIT+\")[,|\\\\s]+(\"+CSS_UNIT+\")\\\\s*\\\\)?\";\nvar PERMISSIVE_MATCH4=\"[\\\\s|\\\\(]+(\"+CSS_UNIT+\")[,|\\\\s]+(\"+CSS_UNIT+\")[,|\\\\s]+(\"+CSS_UNIT+\")[,|\\\\s]+(\"+CSS_UNIT+\")\\\\s*\\\\)?\";\n\nreturn{\nCSS_UNIT:new RegExp(CSS_UNIT),\nrgb:new RegExp(\"rgb\"+PERMISSIVE_MATCH3),\nrgba:new RegExp(\"rgba\"+PERMISSIVE_MATCH4),\nhsl:new RegExp(\"hsl\"+PERMISSIVE_MATCH3),\nhsla:new RegExp(\"hsla\"+PERMISSIVE_MATCH4),\nhsv:new RegExp(\"hsv\"+PERMISSIVE_MATCH3),\nhsva:new RegExp(\"hsva\"+PERMISSIVE_MATCH4),\nhex3:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\nhex6:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\nhex4:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\nhex8:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/};\n\n}();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color){\nreturn!!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color){\n\ncolor=color.replace(trimLeft,'').replace(trimRight,'').toLowerCase();\nvar named=false;\nif(names[color]){\ncolor=names[color];\nnamed=true;\n}else\nif(color=='transparent'){\nreturn{r:0,g:0,b:0,a:0,format:\"name\"};\n}\n\n// Try to match string input using regular expressions.\n// Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n// Just return an object and let the conversion functions handle that.\n// This way the result will be the same whether the tinycolor is initialized with string or object.\nvar match;\nif(match=matchers.rgb.exec(color)){\nreturn{r:match[1],g:match[2],b:match[3]};\n}\nif(match=matchers.rgba.exec(color)){\nreturn{r:match[1],g:match[2],b:match[3],a:match[4]};\n}\nif(match=matchers.hsl.exec(color)){\nreturn{h:match[1],s:match[2],l:match[3]};\n}\nif(match=matchers.hsla.exec(color)){\nreturn{h:match[1],s:match[2],l:match[3],a:match[4]};\n}\nif(match=matchers.hsv.exec(color)){\nreturn{h:match[1],s:match[2],v:match[3]};\n}\nif(match=matchers.hsva.exec(color)){\nreturn{h:match[1],s:match[2],v:match[3],a:match[4]};\n}\nif(match=matchers.hex8.exec(color)){\nreturn{\nr:parseIntFromHex(match[1]),\ng:parseIntFromHex(match[2]),\nb:parseIntFromHex(match[3]),\na:convertHexToDecimal(match[4]),\nformat:named?\"name\":\"hex8\"};\n\n}\nif(match=matchers.hex6.exec(color)){\nreturn{\nr:parseIntFromHex(match[1]),\ng:parseIntFromHex(match[2]),\nb:parseIntFromHex(match[3]),\nformat:named?\"name\":\"hex\"};\n\n}\nif(match=matchers.hex4.exec(color)){\nreturn{\nr:parseIntFromHex(match[1]+''+match[1]),\ng:parseIntFromHex(match[2]+''+match[2]),\nb:parseIntFromHex(match[3]+''+match[3]),\na:convertHexToDecimal(match[4]+''+match[4]),\nformat:named?\"name\":\"hex8\"};\n\n}\nif(match=matchers.hex3.exec(color)){\nreturn{\nr:parseIntFromHex(match[1]+''+match[1]),\ng:parseIntFromHex(match[2]+''+match[2]),\nb:parseIntFromHex(match[3]+''+match[3]),\nformat:named?\"name\":\"hex\"};\n\n}\n\nreturn false;\n}\n\nfunction validateWCAG2Parms(parms){\n// return valid WCAG2 parms for isReadable.\n// If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\nvar level,size;\nparms=parms||{\"level\":\"AA\",\"size\":\"small\"};\nlevel=(parms.level||\"AA\").toUpperCase();\nsize=(parms.size||\"small\").toLowerCase();\nif(level!==\"AA\"&&level!==\"AAA\"){\nlevel=\"AA\";\n}\nif(size!==\"small\"&&size!==\"large\"){\nsize=\"small\";\n}\nreturn{\"level\":level,\"size\":size};\n}\n\n// Node: Export function\nif(typeof module!==\"undefined\"&&module.exports){\nmodule.exports=tinycolor;\n}\n// AMD/requirejs: Define the module\nelse if(typeof define==='function'&&define.amd){\ndefine(function(){return tinycolor;});\n}\n// Browser: Expose to window\nelse{\nwindow.tinycolor=tinycolor;\n}\n\n})(Math);\n\n},{}],251:[function(require,module,exports){\nvar Buffer=require('buffer').Buffer;\n\nmodule.exports=function(buf){\n// If the buffer is backed by a Uint8Array, a faster version will work\nif(buf instanceof Uint8Array){\n// If the buffer isn't a subarray, return the underlying ArrayBuffer\nif(buf.byteOffset===0&&buf.byteLength===buf.buffer.byteLength){\nreturn buf.buffer;\n}else if(typeof buf.buffer.slice==='function'){\n// Otherwise we need to get a proper copy\nreturn buf.buffer.slice(buf.byteOffset,buf.byteOffset+buf.byteLength);\n}\n}\n\nif(Buffer.isBuffer(buf)){\n// This is the slow version that will work with any Buffer\n// implementation (even in old browsers)\nvar arrayCopy=new Uint8Array(buf.length);\nvar len=buf.length;\nfor(var i=0;i<len;i++){\narrayCopy[i]=buf[i];\n}\nreturn arrayCopy.buffer;\n}else{\nthrow new Error('Argument must be a Buffer');\n}\n};\n\n},{\"buffer\":16}],252:[function(require,module,exports){\n\nexports=module.exports=trim;\n\nfunction trim(str){\nreturn str.replace(/^\\s*|\\s*$/g,'');\n}\n\nexports.left=function(str){\nreturn str.replace(/^\\s*/,'');\n};\n\nexports.right=function(str){\nreturn str.replace(/\\s*$/,'');\n};\n\n},{}],253:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode=require('punycode');\nvar util=require('./util');\n\nexports.parse=urlParse;\nexports.resolve=urlResolve;\nexports.resolveObject=urlResolveObject;\nexports.format=urlFormat;\n\nexports.Url=Url;\n\nfunction Url(){\nthis.protocol=null;\nthis.slashes=null;\nthis.auth=null;\nthis.host=null;\nthis.port=null;\nthis.hostname=null;\nthis.hash=null;\nthis.search=null;\nthis.query=null;\nthis.pathname=null;\nthis.path=null;\nthis.href=null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern=/^([a-z0-9.+-]+:)/i,\nportPattern=/:[0-9]*$/,\n\n// Special case for a simple path URL\nsimplePathPattern=/^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n// RFC 2396: characters reserved for delimiting URLs.\n// We actually just auto-escape these.\ndelims=['<','>','\"','`',' ','\\r','\\n','\\t'],\n\n// RFC 2396: characters not allowed for various reasons.\nunwise=['{','}','|','\\\\','^','`'].concat(delims),\n\n// Allowed by RFCs, but cause of XSS attacks.  Always escape these.\nautoEscape=['\\''].concat(unwise),\n// Characters that are never ever allowed in a hostname.\n// Note that any invalid chars are also handled, but these\n// are the ones that are *expected* to be seen, so we fast-path\n// them.\nnonHostChars=['%','/','?',';','#'].concat(autoEscape),\nhostEndingChars=['/','?','#'],\nhostnameMaxLen=255,\nhostnamePartPattern=/^[+a-z0-9A-Z_-]{0,63}$/,\nhostnamePartStart=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n// protocols that can allow \"unsafe\" and \"unwise\" chars.\nunsafeProtocol={\n'javascript':true,\n'javascript:':true},\n\n// protocols that never have a hostname.\nhostlessProtocol={\n'javascript':true,\n'javascript:':true},\n\n// protocols that always contain a // bit.\nslashedProtocol={\n'http':true,\n'https':true,\n'ftp':true,\n'gopher':true,\n'file':true,\n'http:':true,\n'https:':true,\n'ftp:':true,\n'gopher:':true,\n'file:':true},\n\nquerystring=require('querystring');\n\nfunction urlParse(url,parseQueryString,slashesDenoteHost){\nif(url&&util.isObject(url)&&url instanceof Url)return url;\n\nvar u=new Url();\nu.parse(url,parseQueryString,slashesDenoteHost);\nreturn u;\n}\n\nUrl.prototype.parse=function(url,parseQueryString,slashesDenoteHost){\nif(!util.isString(url)){\nthrow new TypeError(\"Parameter 'url' must be a string, not \"+typeof url);\n}\n\n// Copy chrome, IE, opera backslash-handling behavior.\n// Back slashes before the query string get converted to forward slashes\n// See: https://code.google.com/p/chromium/issues/detail?id=25916\nvar queryIndex=url.indexOf('?'),\nsplitter=\nqueryIndex!==-1&&queryIndex<url.indexOf('#')?'?':'#',\nuSplit=url.split(splitter),\nslashRegex=/\\\\/g;\nuSplit[0]=uSplit[0].replace(slashRegex,'/');\nurl=uSplit.join(splitter);\n\nvar rest=url;\n\n// trim before proceeding.\n// This is to support parse stuff like \"  http://foo.com  \\n\"\nrest=rest.trim();\n\nif(!slashesDenoteHost&&url.split('#').length===1){\n// Try fast path regexp\nvar simplePath=simplePathPattern.exec(rest);\nif(simplePath){\nthis.path=rest;\nthis.href=rest;\nthis.pathname=simplePath[1];\nif(simplePath[2]){\nthis.search=simplePath[2];\nif(parseQueryString){\nthis.query=querystring.parse(this.search.substr(1));\n}else{\nthis.query=this.search.substr(1);\n}\n}else if(parseQueryString){\nthis.search='';\nthis.query={};\n}\nreturn this;\n}\n}\n\nvar proto=protocolPattern.exec(rest);\nif(proto){\nproto=proto[0];\nvar lowerProto=proto.toLowerCase();\nthis.protocol=lowerProto;\nrest=rest.substr(proto.length);\n}\n\n// figure out if it's got a host\n// user@server is *always* interpreted as a hostname, and url\n// resolution will treat //foo/bar as host=foo,path=bar because that's\n// how the browser resolves relative URLs.\nif(slashesDenoteHost||proto||rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)){\nvar slashes=rest.substr(0,2)==='//';\nif(slashes&&!(proto&&hostlessProtocol[proto])){\nrest=rest.substr(2);\nthis.slashes=true;\n}\n}\n\nif(!hostlessProtocol[proto]&&(\nslashes||proto&&!slashedProtocol[proto])){\n\n// there's a hostname.\n// the first instance of /, ?, ;, or # ends the host.\n//\n// If there is an @ in the hostname, then non-host chars *are* allowed\n// to the left of the last @ sign, unless some host-ending character\n// comes *before* the @-sign.\n// URLs are obnoxious.\n//\n// ex:\n// http://a@b@c/ => user:a@b host:c\n// http://a@b?@c => user:a host:c path:/?@c\n\n// v0.12 TODO(isaacs): This is not quite how Chrome does things.\n// Review our test case against browsers more comprehensively.\n\n// find the first instance of any hostEndingChars\nvar hostEnd=-1;\nfor(var i=0;i<hostEndingChars.length;i++){\nvar hec=rest.indexOf(hostEndingChars[i]);\nif(hec!==-1&&(hostEnd===-1||hec<hostEnd))\nhostEnd=hec;\n}\n\n// at this point, either we have an explicit point where the\n// auth portion cannot go past, or the last @ char is the decider.\nvar auth,atSign;\nif(hostEnd===-1){\n// atSign can be anywhere.\natSign=rest.lastIndexOf('@');\n}else{\n// atSign must be in auth portion.\n// http://a@b/c@d => host:b auth:a path:/c@d\natSign=rest.lastIndexOf('@',hostEnd);\n}\n\n// Now we have a portion which is definitely the auth.\n// Pull that off.\nif(atSign!==-1){\nauth=rest.slice(0,atSign);\nrest=rest.slice(atSign+1);\nthis.auth=decodeURIComponent(auth);\n}\n\n// the host is the remaining to the left of the first non-host char\nhostEnd=-1;\nfor(var i=0;i<nonHostChars.length;i++){\nvar hec=rest.indexOf(nonHostChars[i]);\nif(hec!==-1&&(hostEnd===-1||hec<hostEnd))\nhostEnd=hec;\n}\n// if we still have not hit it, then the entire thing is a host.\nif(hostEnd===-1)\nhostEnd=rest.length;\n\nthis.host=rest.slice(0,hostEnd);\nrest=rest.slice(hostEnd);\n\n// pull out port.\nthis.parseHost();\n\n// we've indicated that there is a hostname,\n// so even if it's empty, it has to be present.\nthis.hostname=this.hostname||'';\n\n// if hostname begins with [ and ends with ]\n// assume that it's an IPv6 address.\nvar ipv6Hostname=this.hostname[0]==='['&&\nthis.hostname[this.hostname.length-1]===']';\n\n// validate a little.\nif(!ipv6Hostname){\nvar hostparts=this.hostname.split(/\\./);\nfor(var i=0,l=hostparts.length;i<l;i++){\nvar part=hostparts[i];\nif(!part)continue;\nif(!part.match(hostnamePartPattern)){\nvar newpart='';\nfor(var j=0,k=part.length;j<k;j++){\nif(part.charCodeAt(j)>127){\n// we replace non-ASCII char with a temporary placeholder\n// we need this to make sure size of hostname is not\n// broken by replacing non-ASCII by nothing\nnewpart+='x';\n}else{\nnewpart+=part[j];\n}\n}\n// we test again with ASCII char only\nif(!newpart.match(hostnamePartPattern)){\nvar validParts=hostparts.slice(0,i);\nvar notHost=hostparts.slice(i+1);\nvar bit=part.match(hostnamePartStart);\nif(bit){\nvalidParts.push(bit[1]);\nnotHost.unshift(bit[2]);\n}\nif(notHost.length){\nrest='/'+notHost.join('.')+rest;\n}\nthis.hostname=validParts.join('.');\nbreak;\n}\n}\n}\n}\n\nif(this.hostname.length>hostnameMaxLen){\nthis.hostname='';\n}else{\n// hostnames are always lower case.\nthis.hostname=this.hostname.toLowerCase();\n}\n\nif(!ipv6Hostname){\n// IDNA Support: Returns a punycoded representation of \"domain\".\n// It only converts parts of the domain name that\n// have non-ASCII characters, i.e. it doesn't matter if\n// you call it with a domain that already is ASCII-only.\nthis.hostname=punycode.toASCII(this.hostname);\n}\n\nvar p=this.port?':'+this.port:'';\nvar h=this.hostname||'';\nthis.host=h+p;\nthis.href+=this.host;\n\n// strip [ and ] from the hostname\n// the host field still retains them, though\nif(ipv6Hostname){\nthis.hostname=this.hostname.substr(1,this.hostname.length-2);\nif(rest[0]!=='/'){\nrest='/'+rest;\n}\n}\n}\n\n// now rest is set to the post-host stuff.\n// chop off any delim chars.\nif(!unsafeProtocol[lowerProto]){\n\n// First, make 100% sure that any \"autoEscape\" chars get\n// escaped, even if encodeURIComponent doesn't think they\n// need to be.\nfor(var i=0,l=autoEscape.length;i<l;i++){\nvar ae=autoEscape[i];\nif(rest.indexOf(ae)===-1)\ncontinue;\nvar esc=encodeURIComponent(ae);\nif(esc===ae){\nesc=escape(ae);\n}\nrest=rest.split(ae).join(esc);\n}\n}\n\n\n// chop off from the tail first.\nvar hash=rest.indexOf('#');\nif(hash!==-1){\n// got a fragment string.\nthis.hash=rest.substr(hash);\nrest=rest.slice(0,hash);\n}\nvar qm=rest.indexOf('?');\nif(qm!==-1){\nthis.search=rest.substr(qm);\nthis.query=rest.substr(qm+1);\nif(parseQueryString){\nthis.query=querystring.parse(this.query);\n}\nrest=rest.slice(0,qm);\n}else if(parseQueryString){\n// no query string, but parseQueryString still requested\nthis.search='';\nthis.query={};\n}\nif(rest)this.pathname=rest;\nif(slashedProtocol[lowerProto]&&\nthis.hostname&&!this.pathname){\nthis.pathname='/';\n}\n\n//to support http.request\nif(this.pathname||this.search){\nvar p=this.pathname||'';\nvar s=this.search||'';\nthis.path=p+s;\n}\n\n// finally, reconstruct the href based on what has been validated.\nthis.href=this.format();\nreturn this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj){\n// ensure it's an object, and not a string url.\n// If it's an obj, this is a no-op.\n// this way, you can call url_format() on strings\n// to clean up potentially wonky urls.\nif(util.isString(obj))obj=urlParse(obj);\nif(!(obj instanceof Url))return Url.prototype.format.call(obj);\nreturn obj.format();\n}\n\nUrl.prototype.format=function(){\nvar auth=this.auth||'';\nif(auth){\nauth=encodeURIComponent(auth);\nauth=auth.replace(/%3A/i,':');\nauth+='@';\n}\n\nvar protocol=this.protocol||'',\npathname=this.pathname||'',\nhash=this.hash||'',\nhost=false,\nquery='';\n\nif(this.host){\nhost=auth+this.host;\n}else if(this.hostname){\nhost=auth+(this.hostname.indexOf(':')===-1?\nthis.hostname:\n'['+this.hostname+']');\nif(this.port){\nhost+=':'+this.port;\n}\n}\n\nif(this.query&&\nutil.isObject(this.query)&&\nObject.keys(this.query).length){\nquery=querystring.stringify(this.query);\n}\n\nvar search=this.search||query&&'?'+query||'';\n\nif(protocol&&protocol.substr(-1)!==':')protocol+=':';\n\n// only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n// unless they had them to begin with.\nif(this.slashes||\n(!protocol||slashedProtocol[protocol])&&host!==false){\nhost='//'+(host||'');\nif(pathname&&pathname.charAt(0)!=='/')pathname='/'+pathname;\n}else if(!host){\nhost='';\n}\n\nif(hash&&hash.charAt(0)!=='#')hash='#'+hash;\nif(search&&search.charAt(0)!=='?')search='?'+search;\n\npathname=pathname.replace(/[?#]/g,function(match){\nreturn encodeURIComponent(match);\n});\nsearch=search.replace('#','%23');\n\nreturn protocol+host+pathname+search+hash;\n};\n\nfunction urlResolve(source,relative){\nreturn urlParse(source,false,true).resolve(relative);\n}\n\nUrl.prototype.resolve=function(relative){\nreturn this.resolveObject(urlParse(relative,false,true)).format();\n};\n\nfunction urlResolveObject(source,relative){\nif(!source)return relative;\nreturn urlParse(source,false,true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject=function(relative){\nif(util.isString(relative)){\nvar rel=new Url();\nrel.parse(relative,false,true);\nrelative=rel;\n}\n\nvar result=new Url();\nvar tkeys=Object.keys(this);\nfor(var tk=0;tk<tkeys.length;tk++){\nvar tkey=tkeys[tk];\nresult[tkey]=this[tkey];\n}\n\n// hash is always overridden, no matter what.\n// even href=\"\" will remove it.\nresult.hash=relative.hash;\n\n// if the relative url is empty, then there's nothing left to do here.\nif(relative.href===''){\nresult.href=result.format();\nreturn result;\n}\n\n// hrefs like //foo/bar always cut to the protocol.\nif(relative.slashes&&!relative.protocol){\n// take everything except the protocol from relative\nvar rkeys=Object.keys(relative);\nfor(var rk=0;rk<rkeys.length;rk++){\nvar rkey=rkeys[rk];\nif(rkey!=='protocol')\nresult[rkey]=relative[rkey];\n}\n\n//urlParse appends trailing / to urls like http://www.example.com\nif(slashedProtocol[result.protocol]&&\nresult.hostname&&!result.pathname){\nresult.path=result.pathname='/';\n}\n\nresult.href=result.format();\nreturn result;\n}\n\nif(relative.protocol&&relative.protocol!==result.protocol){\n// if it's a known url protocol, then changing\n// the protocol does weird things\n// first, if it's not file:, then we MUST have a host,\n// and if there was a path\n// to begin with, then we MUST have a path.\n// if it is file:, then the host is dropped,\n// because that's known to be hostless.\n// anything else is assumed to be absolute.\nif(!slashedProtocol[relative.protocol]){\nvar keys=Object.keys(relative);\nfor(var v=0;v<keys.length;v++){\nvar k=keys[v];\nresult[k]=relative[k];\n}\nresult.href=result.format();\nreturn result;\n}\n\nresult.protocol=relative.protocol;\nif(!relative.host&&!hostlessProtocol[relative.protocol]){\nvar relPath=(relative.pathname||'').split('/');\nwhile(relPath.length&&!(relative.host=relPath.shift())){;}\nif(!relative.host)relative.host='';\nif(!relative.hostname)relative.hostname='';\nif(relPath[0]!=='')relPath.unshift('');\nif(relPath.length<2)relPath.unshift('');\nresult.pathname=relPath.join('/');\n}else{\nresult.pathname=relative.pathname;\n}\nresult.search=relative.search;\nresult.query=relative.query;\nresult.host=relative.host||'';\nresult.auth=relative.auth;\nresult.hostname=relative.hostname||relative.host;\nresult.port=relative.port;\n// to support http.request\nif(result.pathname||result.search){\nvar p=result.pathname||'';\nvar s=result.search||'';\nresult.path=p+s;\n}\nresult.slashes=result.slashes||relative.slashes;\nresult.href=result.format();\nreturn result;\n}\n\nvar isSourceAbs=result.pathname&&result.pathname.charAt(0)==='/',\nisRelAbs=\nrelative.host||\nrelative.pathname&&relative.pathname.charAt(0)==='/',\n\nmustEndAbs=isRelAbs||isSourceAbs||\nresult.host&&relative.pathname,\nremoveAllDots=mustEndAbs,\nsrcPath=result.pathname&&result.pathname.split('/')||[],\nrelPath=relative.pathname&&relative.pathname.split('/')||[],\npsychotic=result.protocol&&!slashedProtocol[result.protocol];\n\n// if the url is a non-slashed url, then relative\n// links like ../.. should be able\n// to crawl up to the hostname, as well.  This is strange.\n// result.protocol has already been set by now.\n// Later on, put the first path part into the host field.\nif(psychotic){\nresult.hostname='';\nresult.port=null;\nif(result.host){\nif(srcPath[0]==='')srcPath[0]=result.host;else\nsrcPath.unshift(result.host);\n}\nresult.host='';\nif(relative.protocol){\nrelative.hostname=null;\nrelative.port=null;\nif(relative.host){\nif(relPath[0]==='')relPath[0]=relative.host;else\nrelPath.unshift(relative.host);\n}\nrelative.host=null;\n}\nmustEndAbs=mustEndAbs&&(relPath[0]===''||srcPath[0]==='');\n}\n\nif(isRelAbs){\n// it's absolute.\nresult.host=relative.host||relative.host===''?\nrelative.host:result.host;\nresult.hostname=relative.hostname||relative.hostname===''?\nrelative.hostname:result.hostname;\nresult.search=relative.search;\nresult.query=relative.query;\nsrcPath=relPath;\n// fall through to the dot-handling below.\n}else if(relPath.length){\n// it's relative\n// throw away the existing file, and take the new path instead.\nif(!srcPath)srcPath=[];\nsrcPath.pop();\nsrcPath=srcPath.concat(relPath);\nresult.search=relative.search;\nresult.query=relative.query;\n}else if(!util.isNullOrUndefined(relative.search)){\n// just pull out the search.\n// like href='?foo'.\n// Put this after the other two cases because it simplifies the booleans\nif(psychotic){\nresult.hostname=result.host=srcPath.shift();\n//occationaly the auth can get stuck only in host\n//this especially happens in cases like\n//url.resolveObject('mailto:local1@domain1', 'local2@domain2')\nvar authInHost=result.host&&result.host.indexOf('@')>0?\nresult.host.split('@'):false;\nif(authInHost){\nresult.auth=authInHost.shift();\nresult.host=result.hostname=authInHost.shift();\n}\n}\nresult.search=relative.search;\nresult.query=relative.query;\n//to support http.request\nif(!util.isNull(result.pathname)||!util.isNull(result.search)){\nresult.path=(result.pathname?result.pathname:'')+(\nresult.search?result.search:'');\n}\nresult.href=result.format();\nreturn result;\n}\n\nif(!srcPath.length){\n// no path at all.  easy.\n// we've already handled the other stuff above.\nresult.pathname=null;\n//to support http.request\nif(result.search){\nresult.path='/'+result.search;\n}else{\nresult.path=null;\n}\nresult.href=result.format();\nreturn result;\n}\n\n// if a url ENDs in . or .., then it must get a trailing slash.\n// however, if it ends in anything else non-slashy,\n// then it must NOT get a trailing slash.\nvar last=srcPath.slice(-1)[0];\nvar hasTrailingSlash=\n(result.host||relative.host||srcPath.length>1)&&(\nlast==='.'||last==='..')||last==='';\n\n// strip single dots, resolve double dots to parent dir\n// if the path tries to go above the root, `up` ends up > 0\nvar up=0;\nfor(var i=srcPath.length;i>=0;i--){\nlast=srcPath[i];\nif(last==='.'){\nsrcPath.splice(i,1);\n}else if(last==='..'){\nsrcPath.splice(i,1);\nup++;\n}else if(up){\nsrcPath.splice(i,1);\nup--;\n}\n}\n\n// if the path is allowed to go above the root, restore leading ..s\nif(!mustEndAbs&&!removeAllDots){\nfor(;up--;up){\nsrcPath.unshift('..');\n}\n}\n\nif(mustEndAbs&&srcPath[0]!==''&&(\n!srcPath[0]||srcPath[0].charAt(0)!=='/')){\nsrcPath.unshift('');\n}\n\nif(hasTrailingSlash&&srcPath.join('/').substr(-1)!=='/'){\nsrcPath.push('');\n}\n\nvar isAbsolute=srcPath[0]===''||\nsrcPath[0]&&srcPath[0].charAt(0)==='/';\n\n// put the host back\nif(psychotic){\nresult.hostname=result.host=isAbsolute?'':\nsrcPath.length?srcPath.shift():'';\n//occationaly the auth can get stuck only in host\n//this especially happens in cases like\n//url.resolveObject('mailto:local1@domain1', 'local2@domain2')\nvar authInHost=result.host&&result.host.indexOf('@')>0?\nresult.host.split('@'):false;\nif(authInHost){\nresult.auth=authInHost.shift();\nresult.host=result.hostname=authInHost.shift();\n}\n}\n\nmustEndAbs=mustEndAbs||result.host&&srcPath.length;\n\nif(mustEndAbs&&!isAbsolute){\nsrcPath.unshift('');\n}\n\nif(!srcPath.length){\nresult.pathname=null;\nresult.path=null;\n}else{\nresult.pathname=srcPath.join('/');\n}\n\n//to support request.http\nif(!util.isNull(result.pathname)||!util.isNull(result.search)){\nresult.path=(result.pathname?result.pathname:'')+(\nresult.search?result.search:'');\n}\nresult.auth=relative.auth||result.auth;\nresult.slashes=result.slashes||relative.slashes;\nresult.href=result.format();\nreturn result;\n};\n\nUrl.prototype.parseHost=function(){\nvar host=this.host;\nvar port=portPattern.exec(host);\nif(port){\nport=port[0];\nif(port!==':'){\nthis.port=port.substr(1);\n}\nhost=host.substr(0,host.length-port.length);\n}\nif(host)this.hostname=host;\n};\n\n},{\"./util\":254,\"punycode\":224,\"querystring\":227}],254:[function(require,module,exports){\n'use strict';\n\nmodule.exports={\nisString:function isString(arg){\nreturn typeof arg==='string';\n},\nisObject:function isObject(arg){\nreturn typeof arg==='object'&&arg!==null;\n},\nisNull:function isNull(arg){\nreturn arg===null;\n},\nisNullOrUndefined:function isNullOrUndefined(arg){\nreturn arg==null;\n}};\n\n\n},{}],255:[function(require,module,exports){\n(function(process){\n\n\n\n\n;(function(){\nvar UTIF={};\n\n// Make available for import by `require()`\nif(typeof module==\"object\"){module.exports=UTIF;}else\n{self.UTIF=UTIF;}\n\nvar pako;\nif(typeof require==\"function\"){pako=require(\"pako\");}else\n{pako=self.pako;}\n\nfunction log(){if(typeof process==\"undefined\"||process.env.NODE_ENV==\"development\")console.log.apply(console,arguments);}\n\n(function(UTIF,pako){\n\n// Following lines add a JPEG decoder  to UTIF.JpegDecoder\n(function(){var V=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(g){return typeof g;}:function(g){return g&&\"function\"===typeof Symbol&&g.constructor===Symbol&&g!==Symbol.prototype?\"symbol\":typeof g;},D=function(){function g(g){this.message=\"JPEG error: \"+g;}g.prototype=Error();g.prototype.name=\"JpegError\";return g.constructor=g;}(),P=function(){function g(g,D){this.message=g;this.g=D;}g.prototype=Error();g.prototype.name=\"DNLMarkerError\";return g.constructor=g;}();(function(){function g(){this.M=\nnull;this.B=-1;}function W(a,d){for(var f=0,e=[],b,B,k=16;0<k&&!a[k-1];){k--;}e.push({children:[],index:0});var l=e[0],r;for(b=0;b<k;b++){for(B=0;B<a[b];B++){l=e.pop();for(l.children[l.index]=d[f];0<l.index;){l=e.pop();}l.index++;for(e.push(l);e.length<=b;){e.push(r={children:[],index:0}),l.children[l.index]=r.children,l=r;}f++;}b+1<k&&(e.push(r={children:[],index:0}),l.children[l.index]=r.children,l=r);}return e[0].children;}function X(a,d,f,e,b,B,k,l,r){function n(){if(0<x)return x--,z>>x&1;z=a[d++];if(255===\nz){var c=a[d++];if(c){if(220===c&&g){d+=2;var b=a[d++]<<8|a[d++];if(0<b&&b!==f.g)throw new P(\"Found DNL marker (0xFFDC) while parsing scan data\",b);}throw new D(\"unexpected marker \"+(z<<8|c).toString(16));}}x=7;return z>>>7;}function q(a){for(;;){a=a[n()];if(\"number\"===typeof a)return a;if(\"object\"!==(\"undefined\"===typeof a?\"undefined\":V(a)))throw new D(\"invalid huffman sequence\");}}function h(a){for(var c=0;0<a;){c=c<<1|n(),a--;}return c;}function c(a){if(1===a)return 1===n()?1:-1;var c=h(a);return c>=\n1<<a-1?c:c+(-1<<a)+1;}function C(a,b){var d=q(a.D);d=0===d?0:c(d);a.a[b]=a.m+=d;for(d=1;64>d;){var h=q(a.o),k=h&15;h>>=4;if(0===k){if(15>h)break;d+=16;}else d+=h,a.a[b+J[d]]=c(k),d++;}}function w(a,d){var b=q(a.D);b=0===b?0:c(b)<<r;a.a[d]=a.m+=b;}function p(a,c){a.a[c]|=n()<<r;}function m(a,b){if(0<A)A--;else for(var d=B;d<=k;){var e=q(a.o),f=e&15;e>>=4;if(0===f){if(15>e){A=h(e)+(1<<e)-1;break;}d+=16;}else d+=e,a.a[b+J[d]]=c(f)*(1<<r),d++;}}function t(a,d){for(var b=B,e=0,f;b<=k;){f=d+J[b];var l=0>a.a[f]?\n-1:1;switch(E){case 0:e=q(a.o);f=e&15;e>>=4;if(0===f)15>e?(A=h(e)+(1<<e),E=4):(e=16,E=1);else{if(1!==f)throw new D(\"invalid ACn encoding\");Q=c(f);E=e?2:3;}continue;case 1:case 2:a.a[f]?a.a[f]+=l*(n()<<r):(e--,0===e&&(E=2===E?3:0));break;case 3:a.a[f]?a.a[f]+=l*(n()<<r):(a.a[f]=Q<<r,E=0);break;case 4:a.a[f]&&(a.a[f]+=l*(n()<<r));}b++;}4===E&&(A--,0===A&&(E=0));}var g=9<arguments.length&&void 0!==arguments[9]?arguments[9]:!1,u=f.P,v=d,z=0,x=0,A=0,E=0,Q,K=e.length,F,L,M,I;var R=f.S?0===B?0===l?w:p:0===l?\nm:t:C;var G=0;var O=1===K?e[0].c*e[0].l:u*f.O;for(var S,T;G<O;){var U=b?Math.min(O-G,b):O;for(F=0;F<K;F++){e[F].m=0;}A=0;if(1===K){var y=e[0];for(I=0;I<U;I++){R(y,64*((y.c+1)*(G/y.c|0)+G%y.c)),G++;}}else for(I=0;I<U;I++){for(F=0;F<K;F++){for(y=e[F],S=y.h,T=y.j,L=0;L<T;L++){for(M=0;M<S;M++){R(y,64*((y.c+1)*((G/u|0)*y.j+L)+(G%u*y.h+M)));}}}G++;}x=0;(y=N(a,d))&&y.f&&((0,_util.warn)(\"decodeScan - unexpected MCU data, current marker is: \"+y.f),d=y.offset);y=y&&y.F;if(!y||65280>=y)throw new D(\"marker was not found\");\nif(65488<=y&&65495>=y)d+=2;else break;}(y=N(a,d))&&y.f&&((0,_util.warn)(\"decodeScan - unexpected Scan data, current marker is: \"+y.f),d=y.offset);return d-v;}function Y(a,d){for(var f=d.c,e=d.l,b=new Int16Array(64),B=0;B<e;B++){for(var k=0;k<f;k++){var l=64*((d.c+1)*B+k),r=b,n=d.G,q=d.a;if(!n)throw new D(\"missing required Quantization Table.\");for(var h=0;64>h;h+=8){var c=q[l+h];var C=q[l+h+1];var w=q[l+h+2];var p=q[l+h+3];var m=q[l+h+4];var t=q[l+h+5];var g=q[l+h+6];var u=q[l+h+7];c*=n[h];if(0===(C|\nw|p|m|t|g|u))c=5793*c+512>>10,r[h]=c,r[h+1]=c,r[h+2]=c,r[h+3]=c,r[h+4]=c,r[h+5]=c,r[h+6]=c,r[h+7]=c;else{C*=n[h+1];w*=n[h+2];p*=n[h+3];m*=n[h+4];t*=n[h+5];g*=n[h+6];u*=n[h+7];var v=5793*c+128>>8;var z=5793*m+128>>8;var x=w;var A=g;m=2896*(C-u)+128>>8;u=2896*(C+u)+128>>8;p<<=4;t<<=4;v=v+z+1>>1;z=v-z;c=3784*x+1567*A+128>>8;x=1567*x-3784*A+128>>8;A=c;m=m+t+1>>1;t=m-t;u=u+p+1>>1;p=u-p;v=v+A+1>>1;A=v-A;z=z+x+1>>1;x=z-x;c=2276*m+3406*u+2048>>12;m=3406*m-2276*u+2048>>12;u=c;c=799*p+4017*t+2048>>12;p=4017*\np-799*t+2048>>12;t=c;r[h]=v+u;r[h+7]=v-u;r[h+1]=z+t;r[h+6]=z-t;r[h+2]=x+p;r[h+5]=x-p;r[h+3]=A+m;r[h+4]=A-m;}}for(n=0;8>n;++n){c=r[n],C=r[n+8],w=r[n+16],p=r[n+24],m=r[n+32],t=r[n+40],g=r[n+48],u=r[n+56],0===(C|w|p|m|t|g|u)?(c=5793*c+8192>>14,c=-2040>c?0:2024<=c?255:c+2056>>4,q[l+n]=c,q[l+n+8]=c,q[l+n+16]=c,q[l+n+24]=c,q[l+n+32]=c,q[l+n+40]=c,q[l+n+48]=c,q[l+n+56]=c):(v=5793*c+2048>>12,z=5793*m+2048>>12,x=w,A=g,m=2896*(C-u)+2048>>12,u=2896*(C+u)+2048>>12,v=(v+z+1>>1)+4112,z=v-z,c=3784*x+1567*A+2048>>\n12,x=1567*x-3784*A+2048>>12,A=c,m=m+t+1>>1,t=m-t,u=u+p+1>>1,p=u-p,v=v+A+1>>1,A=v-A,z=z+x+1>>1,x=z-x,c=2276*m+3406*u+2048>>12,m=3406*m-2276*u+2048>>12,u=c,c=799*p+4017*t+2048>>12,p=4017*p-799*t+2048>>12,t=c,c=v+u,u=v-u,C=z+t,g=z-t,w=x+p,t=x-p,p=A+m,m=A-m,c=16>c?0:4080<=c?255:c>>4,C=16>C?0:4080<=C?255:C>>4,w=16>w?0:4080<=w?255:w>>4,p=16>p?0:4080<=p?255:p>>4,m=16>m?0:4080<=m?255:m>>4,t=16>t?0:4080<=t?255:t>>4,g=16>g?0:4080<=g?255:g>>4,u=16>u?0:4080<=u?255:u>>4,q[l+n]=c,q[l+n+8]=C,q[l+n+16]=w,q[l+n+24]=\np,q[l+n+32]=m,q[l+n+40]=t,q[l+n+48]=g,q[l+n+56]=u);}}}return d.a;}function N(a,d){var f=2<arguments.length&&void 0!==arguments[2]?arguments[2]:d,e=a.length-1;f=f<d?f:d;if(d>=e)return null;var b=a[d]<<8|a[d+1];if(65472<=b&&65534>=b)return{f:null,F:b,offset:d};for(var B=a[f]<<8|a[f+1];!(65472<=B&&65534>=B);){if(++f>=e)return null;B=a[f]<<8|a[f+1];}return{f:b.toString(16),F:B,offset:f};}var J=new Uint8Array([0,1,8,16,9,2,3,10,17,24,32,25,18,11,4,5,12,19,26,33,40,48,41,34,27,20,13,6,7,14,21,28,35,42,49,56,\n57,50,43,36,29,22,15,23,30,37,44,51,58,59,52,45,38,31,39,46,53,60,61,54,47,55,62,63]);g.prototype={parse:function parse(a){function d(){var d=a[k]<<8|a[k+1];k+=2;return d;}function f(){var b=d();b=k+b-2;var c=N(a,b,k);c&&c.f&&((0,_util.warn)(\"readDataBlock - incorrect length, current marker is: \"+c.f),b=c.offset);b=a.subarray(k,b);k+=b.length;return b;}function e(a){for(var b=Math.ceil(a.v/8/a.s),c=Math.ceil(a.g/8/a.u),d=0;d<a.b.length;d++){v=a.b[d];var e=Math.ceil(Math.ceil(a.v/8)*v.h/a.s),f=Math.ceil(Math.ceil(a.g/\n8)*v.j/a.u);v.a=new Int16Array(64*c*v.j*(b*v.h+1));v.c=e;v.l=f;}a.P=b;a.O=c;}var b=(1<arguments.length&&void 0!==arguments[1]?arguments[1]:{}).N,B=void 0===b?null:b,k=0,l=null,r=0;b=[];var n=[],q=[],h=d();if(65496!==h)throw new D(\"SOI not found\");for(h=d();65497!==h;){switch(h){case 65504:case 65505:case 65506:case 65507:case 65508:case 65509:case 65510:case 65511:case 65512:case 65513:case 65514:case 65515:case 65516:case 65517:case 65518:case 65519:case 65534:var c=f();65518===h&&65===c[0]&&100===\nc[1]&&111===c[2]&&98===c[3]&&101===c[4]&&(l={version:c[5]<<8|c[6],Y:c[7]<<8|c[8],Z:c[9]<<8|c[10],W:c[11]});break;case 65499:h=d()+k-2;for(var g;k<h;){var w=a[k++],p=new Uint16Array(64);if(0===w>>4)for(c=0;64>c;c++){g=J[c],p[g]=a[k++];}else if(1===w>>4)for(c=0;64>c;c++){g=J[c],p[g]=d();}else throw new D(\"DQT - invalid table spec\");b[w&15]=p;}break;case 65472:case 65473:case 65474:if(m)throw new D(\"Only single frame JPEGs supported\");d();var m={};m.X=65473===h;m.S=65474===h;m.precision=a[k++];h=d();m.g=\nB||h;m.v=d();m.b=[];m.C={};c=a[k++];for(h=p=w=0;h<c;h++){g=a[k];var t=a[k+1]>>4;var H=a[k+1]&15;w<t&&(w=t);p<H&&(p=H);t=m.b.push({h:t,j:H,T:a[k+2],G:null});m.C[g]=t-1;k+=3;}m.s=w;m.u=p;e(m);break;case 65476:g=d();for(h=2;h<g;){w=a[k++];p=new Uint8Array(16);for(c=t=0;16>c;c++,k++){t+=p[c]=a[k];}H=new Uint8Array(t);for(c=0;c<t;c++,k++){H[c]=a[k];}h+=17+t;(0===w>>4?q:n)[w&15]=W(p,H);}break;case 65501:d();var u=d();break;case 65498:c=1===++r&&!B;d();w=a[k++];g=[];for(h=0;h<w;h++){p=m.C[a[k++]];var v=m.b[p];\np=a[k++];v.D=q[p>>4];v.o=n[p&15];g.push(v);}h=a[k++];w=a[k++];p=a[k++];try{var z=X(a,k,m,g,u,h,w,p>>4,p&15,c);k+=z;}catch(x){if(x instanceof P)return(0,_util.warn)('Attempting to re-parse JPEG image using \"scanLines\" parameter found in DNL marker (0xFFDC) segment.'),this.parse(a,{N:x.g});throw x;}break;case 65500:k+=4;break;case 65535:255!==a[k]&&k--;break;default:if(255===a[k-3]&&192<=a[k-2]&&254>=a[k-2])k-=3;else if((c=N(a,k-2))&&c.f)(0,_util.warn)(\"JpegImage.parse - unexpected data, current marker is: \"+\nc.f),k=c.offset;else throw new D(\"unknown marker \"+h.toString(16));}h=d();}this.width=m.v;this.height=m.g;this.A=l;this.b=[];for(h=0;h<m.b.length;h++){v=m.b[h];if(u=b[v.T])v.G=u;this.b.push({R:Y(m,v),U:v.h/m.s,V:v.j/m.u,c:v.c,l:v.l});}this.i=this.b.length;},L:function L(a,d){var f=this.width/a,e=this.height/d,b,g,k=this.b.length,l=a*d*k,r=new Uint8ClampedArray(l),n=new Uint32Array(a);for(g=0;g<k;g++){var q=this.b[g];var h=q.U*f;var c=q.V*e;var C=g;var w=q.R;var p=q.c+1<<3;for(b=0;b<a;b++){q=0|b*h,n[b]=\n(q&4294967288)<<3|q&7;}for(h=0;h<d;h++){for(q=0|h*c,q=p*(q&4294967288)|(q&7)<<3,b=0;b<a;b++){r[C]=w[q+n[b]],C+=k;}}}if(e=this.M)for(g=0;g<l;){for(f=q=0;q<k;q++,g++,f+=2){r[g]=(r[g]*e[f]>>8)+e[f+1];}}return r;},w:function w(){return this.A?!!this.A.W:3===this.i?0===this.B?!1:!0:1===this.B?!0:!1;},I:function I(a){for(var d,f,e,b=0,g=a.length;b<g;b+=3){d=a[b],f=a[b+1],e=a[b+2],a[b]=d-179.456+1.402*e,a[b+1]=d+135.459-.344*f-.714*e,a[b+2]=d-226.816+1.772*f;}return a;},K:function K(a){for(var d,f,e,b,g=0,k=0,l=a.length;k<l;k+=\n4){d=a[k],f=a[k+1],e=a[k+2],b=a[k+3],a[g++]=-122.67195406894+f*(-6.60635669420364E-5*f+4.37130475926232E-4*e-5.4080610064599E-5*d+4.8449797120281E-4*b-.154362151871126)+e*(-9.57964378445773E-4*e+8.17076911346625E-4*d-.00477271405408747*b+1.53380253221734)+d*(9.61250184130688E-4*d-.00266257332283933*b+.48357088451265)+b*(-3.36197177618394E-4*b+.484791561490776),a[g++]=107.268039397724+f*(2.19927104525741E-5*f-6.40992018297945E-4*e+6.59397001245577E-4*d+4.26105652938837E-4*b-.176491792462875)+e*(-7.78269941513683E-4*\ne+.00130872261408275*d+7.70482631801132E-4*b-.151051492775562)+d*(.00126935368114843*d-.00265090189010898*b+.25802910206845)+b*(-3.18913117588328E-4*b-.213742400323665),a[g++]=-20.810012546947+f*(-5.70115196973677E-4*f-2.63409051004589E-5*e+.0020741088115012*d-.00288260236853442*b+.814272968359295)+e*(-1.53496057440975E-5*e-1.32689043961446E-4*d+5.60833691242812E-4*b-.195152027534049)+d*(.00174418132927582*d-.00255243321439347*b+.116935020465145)+b*(-3.43531996510555E-4*b+.24165260232407);}return a.subarray(0,\ng);},J:function J(a){for(var d,f,e,b=0,g=a.length;b<g;b+=4){d=a[b],f=a[b+1],e=a[b+2],a[b]=434.456-d-1.402*e,a[b+1]=119.541-d+.344*f+.714*e,a[b+2]=481.816-d-1.772*f;}return a;},H:function H(a){for(var d,f,e,b,g=0,k=1/255,l=0,r=a.length;l<r;l+=4){d=a[l]*k,f=a[l+1]*k,e=a[l+2]*k,b=a[l+3]*k,a[g++]=255+d*(-4.387332384609988*d+54.48615194189176*f+18.82290502165302*e+212.25662451639585*b-285.2331026137004)+f*(1.7149763477362134*f-5.6096736904047315*e-17.873870861415444*b-5.497006427196366)+e*(-2.5217340131683033*\ne-21.248923337353073*b+17.5119270841813)-b*(21.86122147463605*b+189.48180835922747),a[g++]=255+d*(8.841041422036149*d+60.118027045597366*f+6.871425592049007*e+31.159100130055922*b-79.2970844816548)+f*(-15.310361306967817*f+17.575251261109482*e+131.35250912493976*b-190.9453302588951)+e*(4.444339102852739*e+9.8632861493405*b-24.86741582555878)-b*(20.737325471181034*b+187.80453709719578),a[g++]=255+d*(.8842522430003296*d+8.078677503112928*f+30.89978309703729*e-.23883238689178934*b-14.183576799673286)+\nf*(10.49593273432072*f+63.02378494754052*e+50.606957656360734*b-112.23884253719248)+e*(.03296041114873217*e+115.60384449646641*b-193.58209356861505)-b*(22.33816807309886*b+180.12613974708367);}return a.subarray(0,g);},getData:function getData(a,d,f){if(4<this.i)throw new D(\"Unsupported color mode\");a=this.L(a,d);if(1===this.i&&f){f=a.length;d=new Uint8ClampedArray(3*f);for(var e=0,b=0;b<f;b++){var g=a[b];d[e++]=g;d[e++]=g;d[e++]=g;}return d;}if(3===this.i&&this.w())return this.I(a);if(4===this.i){if(this.w())return f?\nthis.K(a):this.J(a);if(f)return this.H(a);}return a;}};UTIF.JpegDecoder=g;})();})();\n\n//UTIF.JpegDecoder = window.JpegDecoder;\n\nUTIF.encodeImage=function(rgba,w,h,metadata)\n{\nvar idf={\"t256\":[w],\"t257\":[h],\"t258\":[8,8,8,8],\"t259\":[1],\"t262\":[2],\"t273\":[1000],// strips offset\n\"t277\":[4],\"t278\":[h],/* rows per strip */\"t279\":[w*h*4],// strip byte counts\n\"t282\":[1],\"t283\":[1],\"t284\":[1],\"t286\":[0],\"t287\":[0],\"t296\":[1],\"t305\":[\"Photopea (UTIF.js)\"],\"t338\":[1]};\n\nif(metadata)for(var i in metadata){idf[i]=metadata[i];}\n\nvar prfx=new Uint8Array(UTIF.encode([idf]));\nvar img=new Uint8Array(rgba);\nvar data=new Uint8Array(1000+w*h*4);\nfor(var i=0;i<prfx.length;i++){data[i]=prfx[i];}\nfor(var i=0;i<img.length;i++){data[1000+i]=img[i];}\nreturn data.buffer;\n};\n\nUTIF.encode=function(ifds)\n{\nvar data=new Uint8Array(20000),offset=4,bin=UTIF._binBE;\ndata[0]=77;data[1]=77;data[3]=42;\n\nvar ifdo=8;\nbin.writeUint(data,offset,ifdo);offset+=4;\nfor(var i=0;i<ifds.length;i++)\n{\nvar noffs=UTIF._writeIFD(bin,data,ifdo,ifds[i]);\nifdo=noffs[1];\nif(i<ifds.length-1)bin.writeUint(data,noffs[0],ifdo);\n}\nreturn data.slice(0,ifdo).buffer;\n};\n//UTIF.encode._writeIFD\n\nUTIF.decode=function(buff)\n{\nUTIF.decode._decodeG3.allow2D=null;\nvar data=new Uint8Array(buff),offset=0;\n\nvar id=UTIF._binBE.readASCII(data,offset,2);offset+=2;\nvar bin=id==\"II\"?UTIF._binLE:UTIF._binBE;\nvar num=bin.readUshort(data,offset);offset+=2;\n\nvar ifdo=bin.readUint(data,offset);offset+=4;\nvar ifds=[];\nwhile(true)\n{\nvar noff=UTIF._readIFD(bin,data,ifdo,ifds);\n//var ifd = ifds[ifds.length-1];   if(ifd[\"t34665\"]) {  ifd.exifIFD = [];  UTIF._readIFD(bin, data, ifd[\"t34665\"][0], ifd.exifIFD);  }\nifdo=bin.readUint(data,noff);\nif(ifdo==0)break;\n}\nreturn ifds;\n};\n\nUTIF.decodeImages=function(buff,ifds)\n{\nvar data=new Uint8Array(buff);\nvar id=UTIF._binBE.readASCII(data,0,2);\n\nfor(var ii=0;ii<ifds.length;ii++)\n{\nvar img=ifds[ii];\nif(img[\"t256\"]==null)continue;// EXIF files don't have TIFF tags\nimg.isLE=id==\"II\";\nimg.width=img[\"t256\"][0];//delete img[\"t256\"];\nimg.height=img[\"t257\"][0];//delete img[\"t257\"];\n\nvar cmpr=img[\"t259\"]?img[\"t259\"][0]:1;//delete img[\"t259\"];\nvar fo=img[\"t266\"]?img[\"t266\"][0]:1;//delete img[\"t266\"];\nif(img[\"t284\"]&&img[\"t284\"][0]==2)log(\"PlanarConfiguration 2 should not be used!\");\n\nvar bipp=(img[\"t258\"]?Math.min(32,img[\"t258\"][0]):1)*(img[\"t277\"]?img[\"t277\"][0]:1);// bits per pixel\nvar bipl=Math.ceil(img.width*bipp/8)*8;\nvar soff=img[\"t273\"];if(soff==null)soff=img[\"t324\"];\nvar bcnt=img[\"t279\"];if(cmpr==1&&soff.length==1)bcnt=[img.height*(bipl>>>3)];if(bcnt==null)bcnt=img[\"t325\"];\nvar bytes=new Uint8Array(img.height*(bipl>>>3)),bilen=0;\n\nif(img[\"t322\"]!=null)// tiled\n{\nvar tw=img[\"t322\"][0],th=img[\"t323\"][0];\nvar tx=Math.floor((img.width+tw-1)/tw);\nvar ty=Math.floor((img.height+th-1)/th);\nvar tbuff=new Uint8Array(Math.ceil(tw*th*bipp/8)|0);\nfor(var y=0;y<ty;y++){\nfor(var x=0;x<tx;x++)\n{\nvar i=y*tx+x;for(var j=0;j<tbuff.length;j++){tbuff[j]=0;}\nUTIF.decode._decompress(img,data,soff[i],bcnt[i],cmpr,tbuff,0,fo);\n// Might be required for 7 too. Need to check\nif(cmpr==6)bytes=tbuff;else\nUTIF._copyTile(tbuff,Math.ceil(tw*bipp/8)|0,th,bytes,Math.ceil(img.width*bipp/8)|0,img.height,Math.ceil(x*tw*bipp/8)|0,y*th);\n}}\nbilen=bytes.length*8;\n}else\n// stripped\n{\nvar rps=img[\"t278\"]?img[\"t278\"][0]:img.height;rps=Math.min(rps,img.height);\nfor(var i=0;i<soff.length;i++)\n{\nUTIF.decode._decompress(img,data,soff[i],bcnt[i],cmpr,bytes,Math.ceil(bilen/8)|0,fo);\nbilen+=bipl*rps;\n}\nbilen=Math.min(bilen,bytes.length*8);\n}\nimg.data=new Uint8Array(bytes.buffer,0,Math.ceil(bilen/8)|0);\n}\n};\n\nUTIF.decode._decompress=function(img,data,off,len,cmpr,tgt,toff,fo)// fill order\n{\n//console.log(\"compression\", cmpr);\nif(false){}else\nif(cmpr==1)for(var j=0;j<len;j++){tgt[toff+j]=data[off+j];}else\nif(cmpr==3)UTIF.decode._decodeG3(data,off,len,tgt,toff,img.width,fo);else\nif(cmpr==4)UTIF.decode._decodeG4(data,off,len,tgt,toff,img.width,fo);else\nif(cmpr==5)UTIF.decode._decodeLZW(data,off,tgt,toff);else\nif(cmpr==6)UTIF.decode._decodeOldJPEG(img,data,off,len,tgt,toff);else\nif(cmpr==7)UTIF.decode._decodeNewJPEG(img,data,off,len,tgt,toff);else\nif(cmpr==8){var src=new Uint8Array(data.buffer,off,len);var bin=pako[\"inflate\"](src);for(var i=0;i<bin.length;i++){tgt[toff+i]=bin[i];}}else\nif(cmpr==32773)UTIF.decode._decodePackBits(data,off,len,tgt,toff);else\nif(cmpr==32809)UTIF.decode._decodeThunder(data,off,len,tgt,toff);\n//else if(cmpr==34713) UTIF.decode._decodeNikon   (data, off, len, tgt, toff);\nelse log(\"Unknown compression\",cmpr);\n\nif(img[\"t317\"]&&img[\"t317\"][0]==2)\n{\nvar noc=img[\"t277\"]?img[\"t277\"][0]:1,h=img[\"t278\"]?img[\"t278\"][0]:img.height,bpr=img.width*noc;\n//log(noc);\nfor(var y=0;y<h;y++)\n{\nvar ntoff=toff+y*bpr;\nif(noc==3)for(var j=3;j<bpr;j+=3)\n{\ntgt[ntoff+j]=tgt[ntoff+j]+tgt[ntoff+j-3]&255;\ntgt[ntoff+j+1]=tgt[ntoff+j+1]+tgt[ntoff+j-2]&255;\ntgt[ntoff+j+2]=tgt[ntoff+j+2]+tgt[ntoff+j-1]&255;\n}else\nfor(var j=noc;j<bpr;j++){tgt[ntoff+j]=tgt[ntoff+j]+tgt[ntoff+j-noc]&255;}\n}\n}\n};\n\nUTIF.decode._decodeNikon=function(data,off,len,tgt,toff)\n{\nvar nikon_tree=[\n[0,1,5,1,1,1,1,1,1,2,0,0,0,0,0,0,/* 12-bit lossy */\n5,4,3,6,2,7,1,0,8,9,11,10,12],\n[0,1,5,1,1,1,1,1,1,2,0,0,0,0,0,0,/* 12-bit lossy after split */\n0x39,0x5a,0x38,0x27,0x16,5,4,3,2,1,0,11,12,12],\n[0,1,4,2,3,1,2,0,0,0,0,0,0,0,0,0,/* 12-bit lossless */\n5,4,6,3,7,2,8,1,9,0,10,11,12],\n[0,1,4,3,1,1,1,1,1,2,0,0,0,0,0,0,/* 14-bit lossy */\n5,6,4,7,8,3,9,2,1,0,10,11,12,13,14],\n[0,1,5,1,1,1,1,1,1,1,2,0,0,0,0,0,/* 14-bit lossy after split */\n8,0x5c,0x4b,0x3a,0x29,7,6,5,4,3,2,1,0,13,14],\n[0,1,4,2,2,3,1,2,0,0,0,0,0,0,0,0,/* 14-bit lossless */\n7,6,8,5,9,4,10,3,11,12,2,0,1,13,14]];\n\n//struct decode *dindex;\nvar ver0,ver1,vpred,hpred,csize;\nvar i,min,max,step=0,huff=0,split=0,row,col,len,shl,diff;\n\nlog(data.slice(off,off+100));\nver0=data[off];off++;\nver1=data[off];off++;\nlog(ver0.toString(16),ver1.toString(16),len);\n};\n\nUTIF.decode._decodeNewJPEG=function(img,data,off,len,tgt,toff)\n{\nvar tables=img[\"t347\"],tlen=tables?tables.length:0,buff=new Uint8Array(tlen+len);\n\nif(tables)\n{\nvar SOI=216,EOI=217,boff=0;\nfor(var i=0;i<tlen-1;i++)\n{\n// Skip EOI marker from JPEGTables\nif(tables[i]==255&&tables[i+1]==EOI)break;\nbuff[boff++]=tables[i];\n}\n\n// Skip SOI marker from data\nvar byte1=data[off],byte2=data[off+1];\nif(byte1!=255||byte2!=SOI)\n{\nbuff[boff++]=byte1;\nbuff[boff++]=byte2;\n}\nfor(var i=2;i<len;i++){buff[boff++]=data[off+i];}\n}else\nfor(var i=0;i<len;i++){buff[i]=data[off+i];}\n\nif(img[\"t262\"]==32803)// lossless JPEG (used in DNG files) is not available in JpegDecoder.\n{\nvar bps=img[\"t258\"][0],dcdr=new LosslessJpegDecoder();\nvar out=dcdr.decode(buff),olen=out.length;\n\nif(false){}else\nif(bps==16)for(var i=0;i<olen;i++){tgt[toff++]=out[i]&255;tgt[toff++]=out[i]>>>8;}else\nif(bps==12)for(var i=0;i<olen;i+=2){tgt[toff++]=out[i]>>>4;tgt[toff++]=(out[i]<<4|out[i+1]>>>8)&255;tgt[toff++]=out[i+1]&255;}else\nthrow new Error(\"unsupported bit depth \"+bps);\n}else\n\n{\nvar parser=new UTIF.JpegDecoder();parser.parse(buff);\nvar decoded=parser.getData(parser.width,parser.height);\nfor(var i=0;i<decoded.length;i++){tgt[toff+i]=decoded[i];}\n}\n\n// PhotometricInterpretation is 6 (YCbCr) for JPEG, but after decoding we populate data in\n// RGB format, so updating the tag value\nif(img[\"t262\"][0]==6)img[\"t262\"][0]=2;\n};\n\nUTIF.decode._decodeOldJPEGInit=function(img,data,off,len)\n{\nvar SOI=216,EOI=217,DQT=219,DHT=196,DRI=221,SOF0=192,SOS=218;\nvar joff=0,soff=0,tables,sosMarker,isTiled=false,i,j,k;\nvar jpgIchgFmt=img[\"t513\"],jifoff=jpgIchgFmt?jpgIchgFmt[0]:0;\nvar jpgIchgFmtLen=img[\"t514\"],jiflen=jpgIchgFmtLen?jpgIchgFmtLen[0]:0;\nvar soffTag=img[\"t324\"]||img[\"t273\"]||jpgIchgFmt;\nvar ycbcrss=img[\"t530\"],ssx=0,ssy=0;\nvar spp=img[\"t277\"]?img[\"t277\"][0]:1;\nvar jpgresint=img[\"t515\"];\n\nif(soffTag)\n{\nsoff=soffTag[0];\nisTiled=soffTag.length>1;\n}\n\nif(!isTiled)\n{\nif(data[off]==255&&data[off+1]==SOI)return{jpegOffset:off};\nif(jpgIchgFmt!=null)\n{\nif(data[off+jifoff]==255&&data[off+jifoff+1]==SOI)joff=off+jifoff;else\nlog(\"JPEGInterchangeFormat does not point to SOI\");\n\nif(jpgIchgFmtLen==null)log(\"JPEGInterchangeFormatLength field is missing\");else\nif(jifoff>=soff||jifoff+jiflen<=soff)log(\"JPEGInterchangeFormatLength field value is invalid\");\n\nif(joff!=null)return{jpegOffset:joff};\n}\n}\n\nif(ycbcrss!=null){ssx=ycbcrss[0];ssy=ycbcrss[1];}\n\nif(jpgIchgFmt!=null)\nif(jpgIchgFmtLen!=null)\nif(jiflen>=2&&jifoff+jiflen<=soff)\n{\nif(data[off+jifoff+jiflen-2]==255&&data[off+jifoff+jiflen-1]==SOI)tables=new Uint8Array(jiflen-2);else\ntables=new Uint8Array(jiflen);\n\nfor(i=0;i<tables.length;i++){tables[i]=data[off+jifoff+i];}\nlog(\"Incorrect JPEG interchange format: using JPEGInterchangeFormat offset to derive tables\");\n}else\nlog(\"JPEGInterchangeFormat+JPEGInterchangeFormatLength > offset to first strip or tile\");\n\nif(tables==null)\n{\nvar ooff=0,out=[];\nout[ooff++]=255;out[ooff++]=SOI;\n\nvar qtables=img[\"t519\"];\nif(qtables==null)throw new Error(\"JPEGQTables tag is missing\");\nfor(i=0;i<qtables.length;i++)\n{\nout[ooff++]=255;out[ooff++]=DQT;out[ooff++]=0;out[ooff++]=67;out[ooff++]=i;\nfor(j=0;j<64;j++){out[ooff++]=data[off+qtables[i]+j];}\n}\n\nfor(k=0;k<2;k++)\n{\nvar htables=img[k==0?\"t520\":\"t521\"];\nif(htables==null)throw new Error((k==0?\"JPEGDCTables\":\"JPEGACTables\")+\" tag is missing\");\nfor(i=0;i<htables.length;i++)\n{\nout[ooff++]=255;out[ooff++]=DHT;\n//out[ooff++] = 0; out[ooff++] = 67; out[ooff++] = i;\nvar nc=19;\nfor(j=0;j<16;j++){nc+=data[off+htables[i]+j];}\n\nout[ooff++]=nc>>>8;out[ooff++]=nc&255;\nout[ooff++]=i|k<<4;\nfor(j=0;j<16;j++){out[ooff++]=data[off+htables[i]+j];}\nfor(j=0;j<nc;j++){out[ooff++]=data[off+htables[i]+16+j];}\n}\n}\n\nout[ooff++]=255;out[ooff++]=SOF0;\nout[ooff++]=0;out[ooff++]=8+3*spp;out[ooff++]=8;\nout[ooff++]=img.height>>>8&255;out[ooff++]=img.height&255;\nout[ooff++]=img.width>>>8&255;out[ooff++]=img.width&255;\nout[ooff++]=spp;\nif(spp==1){out[ooff++]=1;out[ooff++]=17;out[ooff++]=0;}else\nfor(i=0;i<3;i++)\n{\nout[ooff++]=i+1;\nout[ooff++]=i!=0?17:(ssx&15)<<4|ssy&15;\nout[ooff++]=i;\n}\n\nif(jpgresint!=null&&jpgresint[0]!=0)\n{\nout[ooff++]=255;out[ooff++]=DRI;out[ooff++]=0;out[ooff++]=4;\nout[ooff++]=jpgresint[0]>>>8&255;\nout[ooff++]=jpgresint[0]&255;\n}\n\ntables=new Uint8Array(out);\n}\n\nvar sofpos=-1;\ni=0;\nwhile(i<tables.length-1){\nif(tables[i]==255&&tables[i+1]==SOF0){sofpos=i;break;}\ni++;\n}\n\nif(sofpos==-1)\n{\nvar tmptab=new Uint8Array(tables.length+10+3*spp);\ntmptab.set(tables);\nvar tmpoff=tables.length;\nsofpos=tables.length;\ntables=tmptab;\n\ntables[tmpoff++]=255;tables[tmpoff++]=SOF0;\ntables[tmpoff++]=0;tables[tmpoff++]=8+3*spp;tables[tmpoff++]=8;\ntables[tmpoff++]=img.height>>>8&255;tables[tmpoff++]=img.height&255;\ntables[tmpoff++]=img.width>>>8&255;tables[tmpoff++]=img.width&255;\ntables[tmpoff++]=spp;\nif(spp==1){tables[tmpoff++]=1;tables[tmpoff++]=17;tables[tmpoff++]=0;}else\nfor(i=0;i<3;i++)\n{\ntables[tmpoff++]=i+1;\ntables[tmpoff++]=i!=0?17:(ssx&15)<<4|ssy&15;\ntables[tmpoff++]=i;\n}\n}\n\nif(data[soff]==255&&data[soff+1]==SOS)\n{\nvar soslen=data[soff+2]<<8|data[soff+3];\nsosMarker=new Uint8Array(soslen+2);\nsosMarker[0]=data[soff];sosMarker[1]=data[soff+1];sosMarker[2]=data[soff+2];sosMarker[3]=data[soff+3];\nfor(i=0;i<soslen-2;i++){sosMarker[i+4]=data[soff+i+4];}\n}else\n\n{\nsosMarker=new Uint8Array(2+6+2*spp);\nvar sosoff=0;\nsosMarker[sosoff++]=255;sosMarker[sosoff++]=SOS;\nsosMarker[sosoff++]=0;sosMarker[sosoff++]=6+2*spp;sosMarker[sosoff++]=spp;\nif(spp==1){sosMarker[sosoff++]=1;sosMarker[sosoff++]=0;}else\nfor(i=0;i<3;i++)\n{\nsosMarker[sosoff++]=i+1;sosMarker[sosoff++]=i<<4|i;\n}\nsosMarker[sosoff++]=0;sosMarker[sosoff++]=63;sosMarker[sosoff++]=0;\n}\n\nreturn{jpegOffset:off,tables:tables,sosMarker:sosMarker,sofPosition:sofpos};\n};\n\nUTIF.decode._decodeOldJPEG=function(img,data,off,len,tgt,toff)\n{\nvar i,dlen,tlen,buff,buffoff;\nvar jpegData=UTIF.decode._decodeOldJPEGInit(img,data,off,len);\n\nif(jpegData.jpegOffset!=null)\n{\ndlen=off+len-jpegData.jpegOffset;\nbuff=new Uint8Array(dlen);\nfor(i=0;i<dlen;i++){buff[i]=data[jpegData.jpegOffset+i];}\n}else\n\n{\ntlen=jpegData.tables.length;\nbuff=new Uint8Array(tlen+jpegData.sosMarker.length+len+2);\nbuff.set(jpegData.tables);\nbuffoff=tlen;\n\nbuff[jpegData.sofPosition+5]=img.height>>>8&255;buff[jpegData.sofPosition+6]=img.height&255;\nbuff[jpegData.sofPosition+7]=img.width>>>8&255;buff[jpegData.sofPosition+8]=img.width&255;\n\nif(data[off]!=255||data[off+1]!=SOS)\n{\nbuff.set(jpegData.sosMarker,bufoff);\nbufoff+=sosMarker.length;\n}\nfor(i=0;i<len;i++){buff[bufoff++]=data[off+i];}\nbuff[bufoff++]=255;buff[bufoff++]=EOI;\n}\n\nvar parser=new UTIF.JpegDecoder();parser.parse(buff);\nvar decoded=parser.getData(parser.width,parser.height);\nfor(var i=0;i<decoded.length;i++){tgt[toff+i]=decoded[i];}\n\n// PhotometricInterpretation is 6 (YCbCr) for JPEG, but after decoding we populate data in\n// RGB format, so updating the tag value\nif(img[\"t262\"][0]==6)img[\"t262\"][0]=2;\n};\n\nUTIF.decode._decodePackBits=function(data,off,len,tgt,toff)\n{\nvar sa=new Int8Array(data.buffer),ta=new Int8Array(tgt.buffer),lim=off+len;\nwhile(off<lim)\n{\nvar n=sa[off];off++;\nif(n>=0&&n<128)for(var i=0;i<n+1;i++){ta[toff]=sa[off];toff++;off++;}\nif(n>=-127&&n<0){for(var i=0;i<-n+1;i++){ta[toff]=sa[off];toff++;}off++;}\n}\n};\n\nUTIF.decode._decodeThunder=function(data,off,len,tgt,toff)\n{\nvar d2=[0,1,0,-1],d3=[0,1,2,3,0,-3,-2,-1];\nvar lim=off+len,qoff=toff*2,px=0;\nwhile(off<lim)\n{\nvar b=data[off],msk=b>>>6,n=b&63;off++;\nif(msk==3){px=n&15;tgt[qoff>>>1]|=px<<4*(1-qoff&1);qoff++;}\nif(msk==0)for(var i=0;i<n;i++){tgt[qoff>>>1]|=px<<4*(1-qoff&1);qoff++;}\nif(msk==2)for(var i=0;i<2;i++){var d=n>>>3*(1-i)&7;if(d!=4){px+=d3[d];tgt[qoff>>>1]|=px<<4*(1-qoff&1);qoff++;}}\nif(msk==1)for(var i=0;i<3;i++){var d=n>>>2*(2-i)&3;if(d!=2){px+=d2[d];tgt[qoff>>>1]|=px<<4*(1-qoff&1);qoff++;}}\n}\n};\n\nUTIF.decode._dmap={\"1\":0,\"011\":1,\"000011\":2,\"0000011\":3,\"010\":-1,\"000010\":-2,\"0000010\":-3};\nUTIF.decode._lens=function()\n{\nvar addKeys=function addKeys(lens,arr,i0,inc){for(var i=0;i<arr.length;i++){lens[arr[i]]=i0+i*inc;}};\n\nvar termW=\"00110101,000111,0111,1000,1011,1100,1110,1111,10011,10100,00111,01000,001000,000011,110100,110101,\"// 15\n+\"101010,101011,0100111,0001100,0001000,0010111,0000011,0000100,0101000,0101011,0010011,0100100,0011000,00000010,00000011,00011010,\"// 31\n+\"00011011,00010010,00010011,00010100,00010101,00010110,00010111,00101000,00101001,00101010,00101011,00101100,00101101,00000100,00000101,00001010,\"// 47\n+\"00001011,01010010,01010011,01010100,01010101,00100100,00100101,01011000,01011001,01011010,01011011,01001010,01001011,00110010,00110011,00110100\";\n\nvar termB=\"0000110111,010,11,10,011,0011,0010,00011,000101,000100,0000100,0000101,0000111,00000100,00000111,000011000,\"// 15\n+\"0000010111,0000011000,0000001000,00001100111,00001101000,00001101100,00000110111,00000101000,00000010111,00000011000,000011001010,000011001011,000011001100,000011001101,000001101000,000001101001,\"// 31\n+\"000001101010,000001101011,000011010010,000011010011,000011010100,000011010101,000011010110,000011010111,000001101100,000001101101,000011011010,000011011011,000001010100,000001010101,000001010110,000001010111,\"// 47\n+\"000001100100,000001100101,000001010010,000001010011,000000100100,000000110111,000000111000,000000100111,000000101000,000001011000,000001011001,000000101011,000000101100,000001011010,000001100110,000001100111\";\n\nvar makeW=\"11011,10010,010111,0110111,00110110,00110111,01100100,01100101,01101000,01100111,011001100,011001101,011010010,011010011,011010100,011010101,011010110,\"+\n\"011010111,011011000,011011001,011011010,011011011,010011000,010011001,010011010,011000,010011011\";\n\nvar makeB=\"0000001111,000011001000,000011001001,000001011011,000000110011,000000110100,000000110101,0000001101100,0000001101101,0000001001010,0000001001011,0000001001100,\"+\n\"0000001001101,0000001110010,0000001110011,0000001110100,0000001110101,0000001110110,0000001110111,0000001010010,0000001010011,0000001010100,0000001010101,0000001011010,\"+\n\"0000001011011,0000001100100,0000001100101\";\n\nvar makeA=\"00000001000,00000001100,00000001101,000000010010,000000010011,000000010100,000000010101,000000010110,000000010111,000000011100,000000011101,000000011110,000000011111\";\n\ntermW=termW.split(\",\");termB=termB.split(\",\");makeW=makeW.split(\",\");makeB=makeB.split(\",\");makeA=makeA.split(\",\");\n\nvar lensW={},lensB={};\naddKeys(lensW,termW,0,1);addKeys(lensW,makeW,64,64);addKeys(lensW,makeA,1792,64);\naddKeys(lensB,termB,0,1);addKeys(lensB,makeB,64,64);addKeys(lensB,makeA,1792,64);\nreturn[lensW,lensB];\n}();\n\nUTIF.decode._decodeG4=function(data,off,slen,tgt,toff,w,fo)\n{\nvar U=UTIF.decode,boff=off<<3,len=0,wrd=\"\";// previous starts with 1\nvar line=[],pline=[];for(var i=0;i<w;i++){pline.push(0);}pline=U._makeDiff(pline);\nvar a0=0,a1=0,a2=0,b1=0,b2=0,clr=0;\nvar y=0,mode=\"\",toRead=0;\nvar bipl=Math.ceil(w/8)*8;\n\nwhile(boff>>>3<off+slen)\n{\nb1=U._findDiff(pline,a0+(a0==0?0:1),1-clr),b2=U._findDiff(pline,b1,clr);// could be precomputed\nvar bit=0;\nif(fo==1)bit=data[boff>>>3]>>>7-(boff&7)&1;\nif(fo==2)bit=data[boff>>>3]>>>(boff&7)&1;\nboff++;wrd+=bit;\nif(mode==\"H\")\n{\nif(U._lens[clr][wrd]!=null)\n{\nvar dl=U._lens[clr][wrd];wrd=\"\";len+=dl;\nif(dl<64){U._addNtimes(line,len,clr);a0+=len;clr=1-clr;len=0;toRead--;if(toRead==0)mode=\"\";}\n}\n}else\n\n{\nif(wrd==\"0001\"){wrd=\"\";U._addNtimes(line,b2-a0,clr);a0=b2;}\nif(wrd==\"001\"){wrd=\"\";mode=\"H\";toRead=2;}\nif(U._dmap[wrd]!=null){a1=b1+U._dmap[wrd];U._addNtimes(line,a1-a0,clr);a0=a1;wrd=\"\";clr=1-clr;}\n}\nif(line.length==w&&mode==\"\")\n{\nU._writeBits(line,tgt,toff*8+y*bipl);\nclr=0;y++;a0=0;\npline=U._makeDiff(line);line=[];\n}\n//if(wrd.length>150) {  log(wrd);  break;  throw \"e\";  }\n}\n};\n\nUTIF.decode._findDiff=function(line,x,clr){for(var i=0;i<line.length;i+=2){if(line[i]>=x&&line[i+1]==clr)return line[i];}};\n\nUTIF.decode._makeDiff=function(line)\n{\nvar out=[];if(line[0]==1)out.push(0,1);\nfor(var i=1;i<line.length;i++){if(line[i-1]!=line[i])out.push(i,line[i]);}\nout.push(line.length,0,line.length,1);return out;\n};\n\nUTIF.decode._decodeG3=function(data,off,slen,tgt,toff,w,fo)\n{\nvar U=UTIF.decode,boff=off<<3,len=0,wrd=\"\";\nvar line=[],pline=[];for(var i=0;i<w;i++){line.push(0);}\nvar a0=0,a1=0,a2=0,b1=0,b2=0,clr=0;\nvar y=-1,mode=\"\",toRead=0,is1D=false;\nvar bipl=Math.ceil(w/8)*8;\nwhile(boff>>>3<off+slen)\n{\nb1=U._findDiff(pline,a0+(a0==0?0:1),1-clr),b2=U._findDiff(pline,b1,clr);// could be precomputed\nvar bit=0;\nif(fo==1)bit=data[boff>>>3]>>>7-(boff&7)&1;\nif(fo==2)bit=data[boff>>>3]>>>(boff&7)&1;\nboff++;wrd+=bit;\n\nif(is1D)\n{\nif(U._lens[clr][wrd]!=null)\n{\nvar dl=U._lens[clr][wrd];wrd=\"\";len+=dl;\nif(dl<64){U._addNtimes(line,len,clr);clr=1-clr;len=0;}\n}\n}else\n\n{\nif(mode==\"H\")\n{\nif(U._lens[clr][wrd]!=null)\n{\nvar dl=U._lens[clr][wrd];wrd=\"\";len+=dl;\nif(dl<64){U._addNtimes(line,len,clr);a0+=len;clr=1-clr;len=0;toRead--;if(toRead==0)mode=\"\";}\n}\n}else\n\n{\nif(wrd==\"0001\"){wrd=\"\";U._addNtimes(line,b2-a0,clr);a0=b2;}\nif(wrd==\"001\"){wrd=\"\";mode=\"H\";toRead=2;}\nif(U._dmap[wrd]!=null){a1=b1+U._dmap[wrd];U._addNtimes(line,a1-a0,clr);a0=a1;wrd=\"\";clr=1-clr;}\n}\n}\nif(wrd.endsWith(\"000000000001\"))// needed for some files\n{\nif(y>=0)U._writeBits(line,tgt,toff*8+y*bipl);\nif(fo==1)is1D=(data[boff>>>3]>>>7-(boff&7)&1)==1;\nif(fo==2)is1D=(data[boff>>>3]>>>(boff&7)&1)==1;\nboff++;\nif(U._decodeG3.allow2D==null)U._decodeG3.allow2D=is1D;\nif(!U._decodeG3.allow2D){is1D=true;boff--;}\n//log(\"EOL\",y, \"next 1D:\", is1D);\nwrd=\"\";clr=0;y++;a0=0;\npline=U._makeDiff(line);line=[];\n}\n}\nif(line.length==w)U._writeBits(line,tgt,toff*8+y*bipl);\n};\n\nUTIF.decode._addNtimes=function(arr,n,val){for(var i=0;i<n;i++){arr.push(val);}};\n\nUTIF.decode._writeBits=function(bits,tgt,boff)\n{\nfor(var i=0;i<bits.length;i++){tgt[boff+i>>>3]|=bits[i]<<7-(boff+i&7);}\n};\n\nUTIF.decode._decodeLZW=function(data,off,tgt,toff)\n{\nif(UTIF.decode._lzwTab==null)\n{\nvar tb=new Uint32Array(0xffff),tn=new Uint16Array(0xffff),chr=new Uint8Array(2e6);\nfor(var i=0;i<256;i++){chr[i<<2]=i;tb[i]=i<<2;tn[i]=1;}\nUTIF.decode._lzwTab=[tb,tn,chr];\n}\nvar copy=UTIF.decode._copyData;\nvar tab=UTIF.decode._lzwTab[0],tln=UTIF.decode._lzwTab[1],chr=UTIF.decode._lzwTab[2],totl=258,chrl=258<<2;\nvar bits=9,boff=off<<3;// offset in bits\n\nvar ClearCode=256,EoiCode=257;\nvar v=0,Code=0,OldCode=0;\nwhile(true)\n{\nv=data[boff>>>3]<<16|data[boff+8>>>3]<<8|data[boff+16>>>3];\nCode=v>>24-(boff&7)-bits&(1<<bits)-1;boff+=bits;\n\nif(Code==EoiCode)break;\nif(Code==ClearCode)\n{\nbits=9;totl=258;chrl=258<<2;\n\nv=data[boff>>>3]<<16|data[boff+8>>>3]<<8|data[boff+16>>>3];\nCode=v>>24-(boff&7)-bits&(1<<bits)-1;boff+=bits;\nif(Code==EoiCode)break;\ntgt[toff]=Code;toff++;\n}else\nif(Code<totl)\n{\nvar cd=tab[Code],cl=tln[Code];\ncopy(chr,cd,tgt,toff,cl);toff+=cl;\n\nif(OldCode>=totl){tab[totl]=chrl;chr[tab[totl]]=cd[0];tln[totl]=1;chrl=chrl+1+3&~0x03;totl++;}else\n\n{\ntab[totl]=chrl;\nvar nit=tab[OldCode],nil=tln[OldCode];\ncopy(chr,nit,chr,chrl,nil);\nchr[chrl+nil]=chr[cd];nil++;\ntln[totl]=nil;totl++;\n\nchrl=chrl+nil+3&~0x03;\n}\nif(totl+1==1<<bits)bits++;\n}else\n\n{\nif(OldCode>=totl){tab[totl]=chrl;tln[totl]=0;totl++;}else\n\n{\ntab[totl]=chrl;\nvar nit=tab[OldCode],nil=tln[OldCode];\ncopy(chr,nit,chr,chrl,nil);\nchr[chrl+nil]=chr[chrl];nil++;\ntln[totl]=nil;totl++;\n\ncopy(chr,chrl,tgt,toff,nil);toff+=nil;\nchrl=chrl+nil+3&~0x03;\n}\nif(totl+1==1<<bits)bits++;\n}\nOldCode=Code;\n}\n};\n\nUTIF.decode._copyData=function(s,so,t,to,l){for(var i=0;i<l;i+=4){t[to+i]=s[so+i];t[to+i+1]=s[so+i+1];t[to+i+2]=s[so+i+2];t[to+i+3]=s[so+i+3];}};\n\nUTIF.tags={254:\"NewSubfileType\",255:\"SubfileType\",256:\"ImageWidth\",257:\"ImageLength\",258:\"BitsPerSample\",259:\"Compression\",262:\"PhotometricInterpretation\",266:\"FillOrder\",\n269:\"DocumentName\",270:\"ImageDescription\",271:\"Make\",272:\"Model\",273:\"StripOffset\",274:\"Orientation\",277:\"SamplesPerPixel\",278:\"RowsPerStrip\",\n279:\"StripByteCounts\",280:\"MinSampleValue\",281:\"MaxSampleValue\",282:\"XResolution\",283:\"YResolution\",284:\"PlanarConfiguration\",285:\"PageName\",\n286:\"XPosition\",287:\"YPosition\",\n292:\"T4Options\",296:\"ResolutionUnit\",297:\"PageNumber\",305:\"Software\",306:\"DateTime\",\n315:\"Artist\",316:\"HostComputer\",317:\"Predictor\",318:\"WhitePoint\",319:\"PrimaryChromaticities\",320:\"ColorMap\",\n321:\"HalftoneHints\",322:\"TileWidth\",\n323:\"TileLength\",324:\"TileOffset\",325:\"TileByteCounts\",330:\"SubIFDs\",336:\"DotRange\",338:\"ExtraSample\",339:\"SampleFormat\",347:\"JPEGTables\",\n512:\"JPEGProc\",513:\"JPEGInterchangeFormat\",514:\"JPEGInterchangeFormatLength\",519:\"JPEGQTables\",520:\"JPEGDCTables\",521:\"JPEGACTables\",\n529:\"YCbCrCoefficients\",530:\"YCbCrSubSampling\",531:\"YCbCrPositioning\",532:\"ReferenceBlackWhite\",700:\"XMP\",\n33421:\"CFARepeatPatternDim\",33422:\"CFAPattern\",33432:\"Copyright\",33434:\"ExposureTime\",33437:\"FNumber\",33723:\"IPTC/NAA\",34377:\"Photoshop\",\n34665:\"ExifIFD\",34675:\"ICC Profile\",34850:\"ExposureProgram\",34853:\"GPSInfo\",34855:\"ISOSpeedRatings\",34858:\"TimeZoneOffset\",34859:\"SelfTimeMode\",\n36867:\"DateTimeOriginal\",36868:\"DateTimeDigitized\",\n37377:\"ShutterSpeedValue\",37378:\"ApertureValue\",37380:\"ExposureBiasValue\",37383:\"MeteringMode\",37385:\"Flash\",37386:\"FocalLength\",\n37390:\"FocalPlaneXResolution\",37391:\"FocalPlaneYResolution\",37392:\"FocalPlaneResolutionUnit\",37393:\"ImageNumber\",37398:\"TIFF/EPStandardID\",37399:\"SensingMethod\",\n37500:\"MakerNote\",37510:\"UserComment\",37724:\"ImageSourceData\",\n40092:\"XPComment\",40094:\"XPKeywords\",\n40961:\"ColorSpace\",40962:\"PixelXDimension\",40963:\"PixelXDimension\",41486:\"FocalPlaneXResolution\",41487:\"FocalPlaneYResolution\",41488:\"FocalPlaneResolutionUnit\",\n41985:\"CustomRendered\",41986:\"ExposureMode\",41987:\"WhiteBalance\",41990:\"SceneCaptureType\",\n50706:\"DNGVersion\",50707:\"DNGBackwardVersion\",50708:\"UniqueCameraModel\",50709:\"LocalizedCameraModel\",50710:\"CFAPlaneColor\",\n50711:\"CFALayout\",50712:\"LinearizationTable\",50713:\"BlackLevelRepeatDim\",50714:\"BlackLevel\",50716:\"BlackLevelDeltaV\",50717:\"WhiteLevel\",\n50718:\"DefaultScale\",50719:\"DefaultCropOrigin\",\n50720:\"DefaultCropSize\",50733:\"BayerGreenSplit\",50738:\"AntiAliasStrength\",\n50721:\"ColorMatrix1\",50722:\"ColorMatrix2\",50723:\"CameraCalibration1\",50724:\"CameraCalibration2\",50727:\"AnalogBalance\",50728:\"AsShotNeutral\",\n50730:\"BaselineExposure\",50731:\"BaselineNoise\",50732:\"BaselineSharpness\",50734:\"LinearResponseLimit\",50735:\"CameraSerialNumber\",50736:\"LensInfo\",50739:\"ShadowScale\",\n50740:\"DNGPrivateData\",50741:\"MakerNoteSafety\",50778:\"CalibrationIlluminant1\",50779:\"CalibrationIlluminant2\",50780:\"BestQualityScale\",\n50781:\"RawDataUniqueID\",50827:\"OriginalRawFileName\",50829:\"ActiveArea\",50830:\"MaskedAreas\",50931:\"CameraCalibrationSignature\",50932:\"ProfileCalibrationSignature\",\n50935:\"NoiseReductionApplied\",50936:\"ProfileName\",50937:\"ProfileHueSatMapDims\",50938:\"ProfileHueSatMapData1\",50939:\"ProfileHueSatMapData2\",\n50940:\"ProfileToneCurve\",50941:\"ProfileEmbedPolicy\",50942:\"ProfileCopyright\",\n50964:\"ForwardMatrix1\",50965:\"ForwardMatrix2\",50966:\"PreviewApplicationName\",50967:\"PreviewApplicationVersion\",50969:\"PreviewSettingsDigest\",\n50970:\"PreviewColorSpace\",50971:\"PreviewDateTime\",50972:\"RawImageDigest\",\n51008:\"OpcodeList1\",51009:\"OpcodeList2\",51022:\"OpcodeList3\",51041:\"NoiseProfile\",51089:\"OriginalDefaultFinalSize\",\n51090:\"OriginalBestQualityFinalSize\",51091:\"OriginalDefaultCropSize\",51125:\"DefaultUserCrop\"};\n\nUTIF.ttypes={256:3,257:3,258:3,259:3,262:3,273:4,274:3,277:3,278:4,279:4,282:5,283:5,284:3,286:5,287:5,296:3,305:2,306:2,338:3,513:4,514:4,34665:4};\n\nUTIF._readIFD=function(bin,data,offset,ifds)\n{\nvar cnt=bin.readUshort(data,offset);offset+=2;\nvar ifd={};ifds.push(ifd);\n\n//log(\">>>----------------\");\nfor(var i=0;i<cnt;i++)\n{\nvar tag=bin.readUshort(data,offset);offset+=2;\nvar type=bin.readUshort(data,offset);offset+=2;\nvar num=bin.readUint(data,offset);offset+=4;\nvar voff=bin.readUint(data,offset);offset+=4;\n\nvar arr=[];\nifd[\"t\"+tag]=arr;\n//ifd[\"t\"+tag+\"-\"+UTIF.tags[tag]] = arr;\nif(type==1||type==7){for(var j=0;j<num;j++){arr.push(data[(num<5?offset-4:voff)+j]);}}\nif(type==2){arr.push(bin.readASCII(data,num<5?offset-4:voff,num-1));}\nif(type==3){for(var j=0;j<num;j++){arr.push(bin.readUshort(data,(num<3?offset-4:voff)+2*j));}}\nif(type==4){for(var j=0;j<num;j++){arr.push(bin.readUint(data,(num<2?offset-4:voff)+4*j));}}\nif(type==5){for(var j=0;j<num;j++){arr.push(bin.readUint(data,voff+j*8)/bin.readUint(data,voff+j*8+4));}}\nif(type==8){for(var j=0;j<num;j++){arr.push(bin.readShort(data,(num<3?offset-4:voff)+2*j));}}\nif(type==9){for(var j=0;j<num;j++){arr.push(bin.readInt(data,(num<2?offset-4:voff)+4*j));}}\nif(type==10){for(var j=0;j<num;j++){arr.push(bin.readInt(data,voff+j*8)/bin.readInt(data,voff+j*8+4));}}\nif(type==11){for(var j=0;j<num;j++){arr.push(bin.readFloat(data,voff+j*4));}}\nif(type==12){for(var j=0;j<num;j++){arr.push(bin.readDouble(data,voff+j*8));}}\nif(num!=0&&arr.length==0)log(\"unknown TIFF tag type: \",type,\"num:\",num);\n//log(tag, type, UTIF.tags[tag], arr);\nif(tag==330)for(var j=0;j<num;j++){UTIF._readIFD(bin,data,arr[j],ifds);}\n//if(tag==34665) UTIF._readIFD(bin, data, arr[0], ifds);\n}\n//log(\"<<<---------------\");\nreturn offset;\n};\n\nUTIF._writeIFD=function(bin,data,offset,ifd)\n{\nvar keys=Object.keys(ifd);\nbin.writeUshort(data,offset,keys.length);offset+=2;\n\nvar eoff=offset+keys.length*12+4;\n\nfor(var ki=0;ki<keys.length;ki++)\n{\nvar key=keys[ki];\nvar tag=parseInt(key.slice(1)),type=UTIF.ttypes[tag];if(type==null)throw new Error(\"unknown type of tag: \"+tag);\nvar val=ifd[key];if(type==2)val=val[0]+\"\\0\";var num=val.length;\nbin.writeUshort(data,offset,tag);offset+=2;\nbin.writeUshort(data,offset,type);offset+=2;\nbin.writeUint(data,offset,num);offset+=4;\n\nvar dlen=[-1,1,1,2,4,8,0,0,0,0,0,0,8][type]*num;\nvar toff=offset;\nif(dlen>4){bin.writeUint(data,offset,eoff);toff=eoff;}\n\nif(type==2){bin.writeASCII(data,toff,val);}\nif(type==3){for(var i=0;i<num;i++){bin.writeUshort(data,toff+2*i,val[i]);}}\nif(type==4){for(var i=0;i<num;i++){bin.writeUint(data,toff+4*i,val[i]);}}\nif(type==5){for(var i=0;i<num;i++){bin.writeUint(data,toff+8*i,Math.round(val[i]*10000));bin.writeUint(data,toff+8*i+4,10000);}}\nif(type==12){for(var i=0;i<num;i++){bin.writeDouble(data,toff+8*i,val[i]);}}\n\nif(dlen>4){dlen+=dlen&1;eoff+=dlen;}\noffset+=4;\n}\nreturn[offset,eoff];\n};\n\nUTIF.toRGBA8=function(out)\n{\nvar w=out.width,h=out.height,area=w*h,qarea=area*4,data=out.data;\nvar img=new Uint8Array(area*4);\n// 0: WhiteIsZero, 1: BlackIsZero, 2: RGB, 3: Palette color, 4: Transparency mask, 5: CMYK\nvar intp=out[\"t262\"][0],bps=out[\"t258\"]?Math.min(32,out[\"t258\"][0]):1,isLE=out.isLE?1:0;\n//log(\"interpretation: \", intp, \"bps\", bps, out);\nif(false){}else\nif(intp==0)\n{\nvar bpl=Math.ceil(bps*w/8);\nfor(var y=0;y<h;y++){\nvar off=y*bpl,io=y*w;\nif(bps==1)for(var i=0;i<w;i++){var qi=io+i<<2,px=data[off+(i>>3)]>>7-(i&7)&1;img[qi]=img[qi+1]=img[qi+2]=(1-px)*255;img[qi+3]=255;}\nif(bps==4)for(var i=0;i<w;i++){var qi=io+i<<2,px=data[off+(i>>1)]>>4-4*(i&1)&15;img[qi]=img[qi+1]=img[qi+2]=(15-px)*17;img[qi+3]=255;}\nif(bps==8)for(var i=0;i<w;i++){var qi=io+i<<2,px=data[off+i];img[qi]=img[qi+1]=img[qi+2]=255-px;img[qi+3]=255;}\n}\n}else\nif(intp==1)\n{\nvar bpl=Math.ceil(bps*w/8);\nfor(var y=0;y<h;y++){\nvar off=y*bpl,io=y*w;\nif(bps==1)for(var i=0;i<w;i++){var qi=io+i<<2,px=data[off+(i>>3)]>>7-(i&7)&1;img[qi]=img[qi+1]=img[qi+2]=px*255;img[qi+3]=255;}\nif(bps==2)for(var i=0;i<w;i++){var qi=io+i<<2,px=data[off+(i>>2)]>>6-2*(i&3)&3;img[qi]=img[qi+1]=img[qi+2]=px*85;img[qi+3]=255;}\nif(bps==8)for(var i=0;i<w;i++){var qi=io+i<<2,px=data[off+i];img[qi]=img[qi+1]=img[qi+2]=px;img[qi+3]=255;}\nif(bps==16)for(var i=0;i<w;i++){var qi=io+i<<2,px=data[off+(2*i+isLE)];img[qi]=img[qi+1]=img[qi+2]=Math.min(255,px);img[qi+3]=255;}// ladoga.tif\n}\n}else\nif(intp==2)\n{\nif(bps==8)// this needs to be simplified ... how many channels are there???\n{\nif(out[\"t338\"])\n{\nif(out[\"t338\"][0]>0)for(var i=0;i<qarea;i++){img[i]=data[i];}// sometimes t338 is 1 or 2 in case of Alpha\nelse for(var i=0;i<qarea;i+=4){img[i]=data[i];img[i+1]=data[i+1];img[i+2]=data[i+2];img[i+3]=255;}\n}else\n\n{\nvar smpls=out[\"t258\"]?out[\"t258\"].length:3;\nif(smpls==4)for(var i=0;i<qarea;i++){img[i]=data[i];}\nif(smpls==3)for(var i=0;i<area;i++){var qi=i<<2,ti=i*3;img[qi]=data[ti];img[qi+1]=data[ti+1];img[qi+2]=data[ti+2];img[qi+3]=255;}\n}\n}else\n// 3x 16-bit channel\nfor(var i=0;i<area;i++){var qi=i<<2,ti=i*6;img[qi]=data[ti];img[qi+1]=data[ti+2];img[qi+2]=data[ti+4];img[qi+3]=255;}\n}else\nif(intp==3)\n{\nvar map=out[\"t320\"];\nfor(var i=0;i<area;i++){var qi=i<<2,mi=data[i];img[qi]=map[mi]>>8;img[qi+1]=map[256+mi]>>8;img[qi+2]=map[512+mi]>>8;img[qi+3]=255;}\n}else\nif(intp==5)\n{\nvar smpls=out[\"t258\"]?out[\"t258\"].length:4;\nvar gotAlpha=smpls>4?1:0;\nfor(var i=0;i<area;i++){\nvar qi=i<<2,si=i*smpls;var C=255-data[si],M=255-data[si+1],Y=255-data[si+2],K=(255-data[si+3])*(1/255);\nimg[qi]=~~(C*K+0.5);img[qi+1]=~~(M*K+0.5);img[qi+2]=~~(Y*K+0.5);img[qi+3]=255*(1-gotAlpha)+data[si+4]*gotAlpha;\n}\n}else\nlog(\"Unknown Photometric interpretation: \"+intp);\nreturn img;\n};\n\nUTIF.replaceIMG=function()\n{\nvar imgs=document.getElementsByTagName(\"img\");\nfor(var i=0;i<imgs.length;i++)\n{\nvar img=imgs[i],src=img.getAttribute(\"src\");if(src==null)continue;\nvar suff=src.split(\".\").pop().toLowerCase();\nif(suff!=\"tif\"&&suff!=\"tiff\")continue;\nvar xhr=new XMLHttpRequest();UTIF._xhrs.push(xhr);UTIF._imgs.push(img);\nxhr.open(\"GET\",src);xhr.responseType=\"arraybuffer\";\nxhr.onload=UTIF._imgLoaded;xhr.send();\n}\n};\n\nUTIF._xhrs=[];UTIF._imgs=[];\nUTIF._imgLoaded=function(e)\n{\nvar buff=e.target.response;\nvar ifds=UTIF.decode(buff),page=ifds[0];UTIF.decodeImages(buff,ifds);\nvar rgba=UTIF.toRGBA8(page),w=page.width,h=page.height;\nvar ind=UTIF._xhrs.indexOf(e.target),img=UTIF._imgs[ind];\nUTIF._xhrs.splice(ind,1);UTIF._imgs.splice(ind,1);\nvar cnv=document.createElement(\"canvas\");cnv.width=w;cnv.height=h;\nvar ctx=cnv.getContext(\"2d\"),imgd=ctx.createImageData(w,h);\nfor(var i=0;i<rgba.length;i++){imgd.data[i]=rgba[i];}ctx.putImageData(imgd,0,0);\nvar attr=[\"style\",\"class\",\"id\"];\nfor(var i=0;i<attr.length;i++){cnv.setAttribute(attr[i],img.getAttribute(attr[i]));}\nimg.parentNode.replaceChild(cnv,img);\n};\n\n\nUTIF._binBE=\n{\nnextZero:function nextZero(data,o){while(data[o]!=0){o++;}return o;},\nreadUshort:function readUshort(buff,p){return buff[p]<<8|buff[p+1];},\nreadShort:function readShort(buff,p){var a=UTIF._binBE.ui8;a[0]=buff[p+1];a[1]=buff[p+0];return UTIF._binBE.i16[0];},\nreadInt:function readInt(buff,p){var a=UTIF._binBE.ui8;a[0]=buff[p+3];a[1]=buff[p+2];a[2]=buff[p+1];a[3]=buff[p+0];return UTIF._binBE.i32[0];},\nreadUint:function readUint(buff,p){var a=UTIF._binBE.ui8;a[0]=buff[p+3];a[1]=buff[p+2];a[2]=buff[p+1];a[3]=buff[p+0];return UTIF._binBE.ui32[0];},\nreadASCII:function readASCII(buff,p,l){var s=\"\";for(var i=0;i<l;i++){s+=String.fromCharCode(buff[p+i]);}return s;},\nreadFloat:function readFloat(buff,p){var a=UTIF._binBE.ui8;for(var i=0;i<4;i++){a[i]=buff[p+3-i];}return UTIF._binBE.fl32[0];},\nreadDouble:function readDouble(buff,p){var a=UTIF._binBE.ui8;for(var i=0;i<8;i++){a[i]=buff[p+7-i];}return UTIF._binBE.fl64[0];},\n\nwriteUshort:function writeUshort(buff,p,n){buff[p]=n>>8&255;buff[p+1]=n&255;},\nwriteUint:function writeUint(buff,p,n){buff[p]=n>>24&255;buff[p+1]=n>>16&255;buff[p+2]=n>>8&255;buff[p+3]=n>>0&255;},\nwriteASCII:function writeASCII(buff,p,s){for(var i=0;i<s.length;i++){buff[p+i]=s.charCodeAt(i);}},\nwriteDouble:function writeDouble(buff,p,n)\n{\nUTIF._binBE.fl64[0]=n;\nfor(var i=0;i<8;i++){buff[p+i]=UTIF._binBE.ui8[7-i];}\n}};\n\nUTIF._binBE.ui8=new Uint8Array(8);\nUTIF._binBE.i16=new Int16Array(UTIF._binBE.ui8.buffer);\nUTIF._binBE.i32=new Int32Array(UTIF._binBE.ui8.buffer);\nUTIF._binBE.ui32=new Uint32Array(UTIF._binBE.ui8.buffer);\nUTIF._binBE.fl32=new Float32Array(UTIF._binBE.ui8.buffer);\nUTIF._binBE.fl64=new Float64Array(UTIF._binBE.ui8.buffer);\n\nUTIF._binLE=\n{\nnextZero:UTIF._binBE.nextZero,\nreadUshort:function readUshort(buff,p){return buff[p+1]<<8|buff[p];},\nreadShort:function readShort(buff,p){var a=UTIF._binBE.ui8;a[0]=buff[p+0];a[1]=buff[p+1];return UTIF._binBE.i16[0];},\nreadInt:function readInt(buff,p){var a=UTIF._binBE.ui8;a[0]=buff[p+0];a[1]=buff[p+1];a[2]=buff[p+2];a[3]=buff[p+3];return UTIF._binBE.i32[0];},\nreadUint:function readUint(buff,p){var a=UTIF._binBE.ui8;a[0]=buff[p+0];a[1]=buff[p+1];a[2]=buff[p+2];a[3]=buff[p+3];return UTIF._binBE.ui32[0];},\nreadASCII:UTIF._binBE.readASCII,\nreadFloat:function readFloat(buff,p){var a=UTIF._binBE.ui8;for(var i=0;i<4;i++){a[i]=buff[p+i];}return UTIF._binBE.fl32[0];},\nreadDouble:function readDouble(buff,p){var a=UTIF._binBE.ui8;for(var i=0;i<8;i++){a[i]=buff[p+i];}return UTIF._binBE.fl64[0];}};\n\nUTIF._copyTile=function(tb,tw,th,b,w,h,xoff,yoff)\n{\n//log(\"copyTile\", tw, th,  w, h, xoff, yoff);\nvar xlim=Math.min(tw,w-xoff);\nvar ylim=Math.min(th,h-yoff);\nfor(var y=0;y<ylim;y++)\n{\nvar tof=(yoff+y)*w+xoff;\nvar sof=y*tw;\nfor(var x=0;x<xlim;x++){b[tof+x]=tb[sof+x];}\n}\n};\n\n\n})(UTIF,pako);\n})();\n}).call(this,require('_process'));\n},{\"_process\":223,\"pako\":176}],256:[function(require,module,exports){\n(function(global){\n\n/**\n * Module exports.\n */\n\nmodule.exports=deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate(fn,msg){\nif(config('noDeprecation')){\nreturn fn;\n}\n\nvar warned=false;\nfunction deprecated(){\nif(!warned){\nif(config('throwDeprecation')){\nthrow new Error(msg);\n}else if(config('traceDeprecation')){\nconsole.trace(msg);\n}else{\nconsole.warn(msg);\n}\nwarned=true;\n}\nreturn fn.apply(this,arguments);\n}\n\nreturn deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config(name){\n// accessing global.localStorage can trigger a DOMException in sandboxed iframes\ntry{\nif(!global.localStorage)return false;\n}catch(_){\nreturn false;\n}\nvar val=global.localStorage[name];\nif(null==val)return false;\nreturn String(val).toLowerCase()==='true';\n}\n\n}).call(this,typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{});\n},{}],257:[function(require,module,exports){\narguments[4][5][0].apply(exports,arguments);\n},{\"dup\":5}],258:[function(require,module,exports){\narguments[4][6][0].apply(exports,arguments);\n},{\"./support/isBuffer\":257,\"_process\":223,\"dup\":6,\"inherits\":166}],259:[function(require,module,exports){\n\"use strict\";\nvar window=require(\"global/window\");\nvar isFunction=require(\"is-function\");\nvar parseHeaders=require(\"parse-headers\");\nvar xtend=require(\"xtend\");\n\nmodule.exports=createXHR;\n// Allow use of default import syntax in TypeScript\nmodule.exports.default=createXHR;\ncreateXHR.XMLHttpRequest=window.XMLHttpRequest||noop;\ncreateXHR.XDomainRequest=\"withCredentials\"in new createXHR.XMLHttpRequest()?createXHR.XMLHttpRequest:window.XDomainRequest;\n\nforEachArray([\"get\",\"put\",\"post\",\"patch\",\"head\",\"delete\"],function(method){\ncreateXHR[method===\"delete\"?\"del\":method]=function(uri,options,callback){\noptions=initParams(uri,options,callback);\noptions.method=method.toUpperCase();\nreturn _createXHR(options);\n};\n});\n\nfunction forEachArray(array,iterator){\nfor(var i=0;i<array.length;i++){\niterator(array[i]);\n}\n}\n\nfunction isEmpty(obj){\nfor(var i in obj){\nif(obj.hasOwnProperty(i))return false;\n}\nreturn true;\n}\n\nfunction initParams(uri,options,callback){\nvar params=uri;\n\nif(isFunction(options)){\ncallback=options;\nif(typeof uri===\"string\"){\nparams={uri:uri};\n}\n}else{\nparams=xtend(options,{uri:uri});\n}\n\nparams.callback=callback;\nreturn params;\n}\n\nfunction createXHR(uri,options,callback){\noptions=initParams(uri,options,callback);\nreturn _createXHR(options);\n}\n\nfunction _createXHR(options){\nif(typeof options.callback===\"undefined\"){\nthrow new Error(\"callback argument missing\");\n}\n\nvar called=false;\nvar callback=function cbOnce(err,response,body){\nif(!called){\ncalled=true;\noptions.callback(err,response,body);\n}\n};\n\nfunction readystatechange(){\nif(xhr.readyState===4){\nsetTimeout(loadFunc,0);\n}\n}\n\nfunction getBody(){\n// Chrome with requestType=blob throws errors arround when even testing access to responseText\nvar body=undefined;\n\nif(xhr.response){\nbody=xhr.response;\n}else{\nbody=xhr.responseText||getXml(xhr);\n}\n\nif(isJson){\ntry{\nbody=JSON.parse(body);\n}catch(e){}\n}\n\nreturn body;\n}\n\nfunction errorFunc(evt){\nclearTimeout(timeoutTimer);\nif(!(evt instanceof Error)){\nevt=new Error(\"\"+(evt||\"Unknown XMLHttpRequest Error\"));\n}\nevt.statusCode=0;\nreturn callback(evt,failureResponse);\n}\n\n// will load the data & process the response in a special response object\nfunction loadFunc(){\nif(aborted)return;\nvar status;\nclearTimeout(timeoutTimer);\nif(options.useXDR&&xhr.status===undefined){\n//IE8 CORS GET successful response doesn't have a status field, but body is fine\nstatus=200;\n}else{\nstatus=xhr.status===1223?204:xhr.status;\n}\nvar response=failureResponse;\nvar err=null;\n\nif(status!==0){\nresponse={\nbody:getBody(),\nstatusCode:status,\nmethod:method,\nheaders:{},\nurl:uri,\nrawRequest:xhr};\n\nif(xhr.getAllResponseHeaders){//remember xhr can in fact be XDR for CORS in IE\nresponse.headers=parseHeaders(xhr.getAllResponseHeaders());\n}\n}else{\nerr=new Error(\"Internal XMLHttpRequest Error\");\n}\nreturn callback(err,response,response.body);\n}\n\nvar xhr=options.xhr||null;\n\nif(!xhr){\nif(options.cors||options.useXDR){\nxhr=new createXHR.XDomainRequest();\n}else{\nxhr=new createXHR.XMLHttpRequest();\n}\n}\n\nvar key;\nvar aborted;\nvar uri=xhr.url=options.uri||options.url;\nvar method=xhr.method=options.method||\"GET\";\nvar body=options.body||options.data;\nvar headers=xhr.headers=options.headers||{};\nvar sync=!!options.sync;\nvar isJson=false;\nvar timeoutTimer;\nvar failureResponse={\nbody:undefined,\nheaders:{},\nstatusCode:0,\nmethod:method,\nurl:uri,\nrawRequest:xhr};\n\n\nif(\"json\"in options&&options.json!==false){\nisJson=true;\nheaders[\"accept\"]||headers[\"Accept\"]||(headers[\"Accept\"]=\"application/json\");//Don't override existing accept header declared by user\nif(method!==\"GET\"&&method!==\"HEAD\"){\nheaders[\"content-type\"]||headers[\"Content-Type\"]||(headers[\"Content-Type\"]=\"application/json\");//Don't override existing accept header declared by user\nbody=JSON.stringify(options.json===true?body:options.json);\n}\n}\n\nxhr.onreadystatechange=readystatechange;\nxhr.onload=loadFunc;\nxhr.onerror=errorFunc;\n// IE9 must have onprogress be set to a unique function.\nxhr.onprogress=function(){\n// IE must die\n};\nxhr.onabort=function(){\naborted=true;\n};\nxhr.ontimeout=errorFunc;\nxhr.open(method,uri,!sync,options.username,options.password);\n//has to be after open\nif(!sync){\nxhr.withCredentials=!!options.withCredentials;\n}\n// Cannot set timeout with sync request\n// not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n// both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\nif(!sync&&options.timeout>0){\ntimeoutTimer=setTimeout(function(){\nif(aborted)return;\naborted=true;//IE9 may still call readystatechange\nxhr.abort(\"timeout\");\nvar e=new Error(\"XMLHttpRequest timeout\");\ne.code=\"ETIMEDOUT\";\nerrorFunc(e);\n},options.timeout);\n}\n\nif(xhr.setRequestHeader){\nfor(key in headers){\nif(headers.hasOwnProperty(key)){\nxhr.setRequestHeader(key,headers[key]);\n}\n}\n}else if(options.headers&&!isEmpty(options.headers)){\nthrow new Error(\"Headers cannot be set on an XDomainRequest object\");\n}\n\nif(\"responseType\"in options){\nxhr.responseType=options.responseType;\n}\n\nif(\"beforeSend\"in options&&\ntypeof options.beforeSend===\"function\")\n{\noptions.beforeSend(xhr);\n}\n\n// Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n// XMLHttpRequest spec says to pass null as body to indicate no body\n// See https://github.com/naugtur/xhr/issues/100.\nxhr.send(body||null);\n\nreturn xhr;\n\n\n}\n\nfunction getXml(xhr){\n// xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\n// See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\ntry{\nif(xhr.responseType===\"document\"){\nreturn xhr.responseXML;\n}\nvar firefoxBugTakenEffect=xhr.responseXML&&xhr.responseXML.documentElement.nodeName===\"parsererror\";\nif(xhr.responseType===\"\"&&!firefoxBugTakenEffect){\nreturn xhr.responseXML;\n}\n}catch(e){}\n\nreturn null;\n}\n\nfunction noop(){}\n\n},{\"global/window\":163,\"is-function\":169,\"parse-headers\":196,\"xtend\":261}],260:[function(require,module,exports){\nmodule.exports=function xmlparser(){\n//common browsers\nif(typeof self.DOMParser!=='undefined'){\nreturn function(str){\nvar parser=new self.DOMParser();\nreturn parser.parseFromString(str,'application/xml');\n};\n}\n\n//IE8 fallback\nif(typeof self.ActiveXObject!=='undefined'&&\nnew self.ActiveXObject('Microsoft.XMLDOM')){\nreturn function(str){\nvar xmlDoc=new self.ActiveXObject(\"Microsoft.XMLDOM\");\nxmlDoc.async=\"false\";\nxmlDoc.loadXML(str);\nreturn xmlDoc;\n};\n}\n\n//last resort fallback\nreturn function(str){\nvar div=document.createElement('div');\ndiv.innerHTML=str;\nreturn div;\n};\n}();\n\n},{}],261:[function(require,module,exports){\nmodule.exports=extend;\n\nvar hasOwnProperty=Object.prototype.hasOwnProperty;\n\nfunction extend(){\nvar target={};\n\nfor(var i=0;i<arguments.length;i++){\nvar source=arguments[i];\n\nfor(var key in source){\nif(hasOwnProperty.call(source,key)){\ntarget[key]=source[key];\n}\n}\n}\n\nreturn target;\n}\n\n},{}],262:[function(require,module,exports){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.srcOver=srcOver;\nexports.dstOver=dstOver;\nexports.multiply=multiply;\nexports.screen=screen;\nexports.overlay=overlay;\nexports.darken=darken;\nexports.lighten=lighten;\nexports.hardLight=hardLight;\nexports.difference=difference;\nexports.exclusion=exclusion;\n\nfunction srcOver(src,dst){\nvar ops=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;\nsrc.a*=ops;\nvar a=dst.a+src.a-dst.a*src.a;\nvar r=(src.r*src.a+dst.r*dst.a*(1-src.a))/a;\nvar g=(src.g*src.a+dst.g*dst.a*(1-src.a))/a;\nvar b=(src.b*src.a+dst.b*dst.a*(1-src.a))/a;\nreturn{\nr:r,\ng:g,\nb:b,\na:a};\n\n}\n\nfunction dstOver(src,dst){\nvar ops=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;\nsrc.a*=ops;\nvar a=dst.a+src.a-dst.a*src.a;\nvar r=(dst.r*dst.a+src.r*src.a*(1-dst.a))/a;\nvar g=(dst.g*dst.a+src.g*src.a*(1-dst.a))/a;\nvar b=(dst.b*dst.a+src.b*src.a*(1-dst.a))/a;\nreturn{\nr:r,\ng:g,\nb:b,\na:a};\n\n}\n\nfunction multiply(src,dst){\nvar ops=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;\nsrc.a*=ops;\nvar a=dst.a+src.a-dst.a*src.a;\nvar sra=src.r*src.a;\nvar sga=src.g*src.a;\nvar sba=src.b*src.a;\nvar dra=dst.r*dst.a;\nvar dga=dst.g*dst.a;\nvar dba=dst.b*dst.a;\nvar r=(sra*dra+sra*(1-dst.a)+dra*(1-src.a))/a;\nvar g=(sga*dga+sga*(1-dst.a)+dga*(1-src.a))/a;\nvar b=(sba*dba+sba*(1-dst.a)+dba*(1-src.a))/a;\nreturn{\nr:r,\ng:g,\nb:b,\na:a};\n\n}\n\nfunction screen(src,dst){\nvar ops=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;\nsrc.a*=ops;\nvar a=dst.a+src.a-dst.a*src.a;\nvar sra=src.r*src.a;\nvar sga=src.g*src.a;\nvar sba=src.b*src.a;\nvar dra=dst.r*dst.a;\nvar dga=dst.g*dst.a;\nvar dba=dst.b*dst.a;\nvar r=(sra*dst.a+dra*src.a-sra*dra+sra*(1-dst.a)+dra*(1-src.a))/a;\nvar g=(sga*dst.a+dga*src.a-sga*dga+sga*(1-dst.a)+dga*(1-src.a))/a;\nvar b=(sba*dst.a+dba*src.a-sba*dba+sba*(1-dst.a)+dba*(1-src.a))/a;\nreturn{\nr:r,\ng:g,\nb:b,\na:a};\n\n}\n\nfunction overlay(src,dst){\nvar ops=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;\nsrc.a*=ops;\nvar a=dst.a+src.a-dst.a*src.a;\nvar sra=src.r*src.a;\nvar sga=src.g*src.a;\nvar sba=src.b*src.a;\nvar dra=dst.r*dst.a;\nvar dga=dst.g*dst.a;\nvar dba=dst.b*dst.a;\nvar r=(2*dra<=dst.a?2*sra*dra+sra*(1-dst.a)+dra*(1-src.a):sra*(1+dst.a)+dra*(1+src.a)-2*dra*sra-dst.a*src.a)/a;\nvar g=(2*dga<=dst.a?2*sga*dga+sga*(1-dst.a)+dga*(1-src.a):sga*(1+dst.a)+dga*(1+src.a)-2*dga*sga-dst.a*src.a)/a;\nvar b=(2*dba<=dst.a?2*sba*dba+sba*(1-dst.a)+dba*(1-src.a):sba*(1+dst.a)+dba*(1+src.a)-2*dba*sba-dst.a*src.a)/a;\nreturn{\nr:r,\ng:g,\nb:b,\na:a};\n\n}\n\nfunction darken(src,dst){\nvar ops=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;\nsrc.a*=ops;\nvar a=dst.a+src.a-dst.a*src.a;\nvar sra=src.r*src.a;\nvar sga=src.g*src.a;\nvar sba=src.b*src.a;\nvar dra=dst.r*dst.a;\nvar dga=dst.g*dst.a;\nvar dba=dst.b*dst.a;\nvar r=(Math.min(sra*dst.a,dra*src.a)+sra*(1-dst.a)+dra*(1-src.a))/a;\nvar g=(Math.min(sga*dst.a,dga*src.a)+sga*(1-dst.a)+dga*(1-src.a))/a;\nvar b=(Math.min(sba*dst.a,dba*src.a)+sba*(1-dst.a)+dba*(1-src.a))/a;\nreturn{\nr:r,\ng:g,\nb:b,\na:a};\n\n}\n\nfunction lighten(src,dst){\nvar ops=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;\nsrc.a*=ops;\nvar a=dst.a+src.a-dst.a*src.a;\nvar sra=src.r*src.a;\nvar sga=src.g*src.a;\nvar sba=src.b*src.a;\nvar dra=dst.r*dst.a;\nvar dga=dst.g*dst.a;\nvar dba=dst.b*dst.a;\nvar r=(Math.max(sra*dst.a,dra*src.a)+sra*(1-dst.a)+dra*(1-src.a))/a;\nvar g=(Math.max(sga*dst.a,dga*src.a)+sga*(1-dst.a)+dga*(1-src.a))/a;\nvar b=(Math.max(sba*dst.a,dba*src.a)+sba*(1-dst.a)+dba*(1-src.a))/a;\nreturn{\nr:r,\ng:g,\nb:b,\na:a};\n\n}\n\nfunction hardLight(src,dst){\nvar ops=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;\nsrc.a*=ops;\nvar a=dst.a+src.a-dst.a*src.a;\nvar sra=src.r*src.a;\nvar sga=src.g*src.a;\nvar sba=src.b*src.a;\nvar dra=dst.r*dst.a;\nvar dga=dst.g*dst.a;\nvar dba=dst.b*dst.a;\nvar r=(2*sra<=src.a?2*sra*dra+sra*(1-dst.a)+dra*(1-src.a):sra*(1+dst.a)+dra*(1+src.a)-2*dra*sra-dst.a*src.a)/a;\nvar g=(2*sga<=src.a?2*sga*dga+sga*(1-dst.a)+dga*(1-src.a):sga*(1+dst.a)+dga*(1+src.a)-2*dga*sga-dst.a*src.a)/a;\nvar b=(2*sba<=src.a?2*sba*dba+sba*(1-dst.a)+dba*(1-src.a):sba*(1+dst.a)+dba*(1+src.a)-2*dba*sba-dst.a*src.a)/a;\nreturn{\nr:r,\ng:g,\nb:b,\na:a};\n\n}\n\nfunction difference(src,dst){\nvar ops=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;\nsrc.a*=ops;\nvar a=dst.a+src.a-dst.a*src.a;\nvar sra=src.r*src.a;\nvar sga=src.g*src.a;\nvar sba=src.b*src.a;\nvar dra=dst.r*dst.a;\nvar dga=dst.g*dst.a;\nvar dba=dst.b*dst.a;\nvar r=(sra+dra-2*Math.min(sra*dst.a,dra*src.a))/a;\nvar g=(sga+dga-2*Math.min(sga*dst.a,dga*src.a))/a;\nvar b=(sba+dba-2*Math.min(sba*dst.a,dba*src.a))/a;\nreturn{\nr:r,\ng:g,\nb:b,\na:a};\n\n}\n\nfunction exclusion(src,dst){\nvar ops=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;\nsrc.a*=ops;\nvar a=dst.a+src.a-dst.a*src.a;\nvar sra=src.r*src.a;\nvar sga=src.g*src.a;\nvar sba=src.b*src.a;\nvar dra=dst.r*dst.a;\nvar dga=dst.g*dst.a;\nvar dba=dst.b*dst.a;\nvar r=(sra*dst.a+dra*src.a-2*sra*dra+sra*(1-dst.a)+dra*(1-src.a))/a;\nvar g=(sga*dst.a+dga*src.a-2*sga*dga+sga*(1-dst.a)+dga*(1-src.a))/a;\nvar b=(sba*dst.a+dba*src.a-2*sba*dba+sba*(1-dst.a)+dba*(1-src.a))/a;\nreturn{\nr:r,\ng:g,\nb:b,\na:a};\n\n}\n\n},{\"core-js/modules/es6.object.define-property\":129}],263:[function(require,module,exports){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.default=composite;\n\nvar _utils=require(\"@jimp/utils\");\n\nvar constants=_interopRequireWildcard(require(\"../constants\"));\n\nvar compositeModes=_interopRequireWildcard(require(\"./composite-modes\"));\n\nfunction _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}}newObj.default=obj;return newObj;}}\n\n/**\n * Composites a source image over to this image respecting alpha channels\n * @param {Jimp} src the source Jimp instance\n * @param {number} x the x position to blit the image\n * @param {number} y the y position to blit the image\n * @param {object} options determine what mode to use\n * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n * @returns {Jimp} this for chaining of methods\n */\nfunction composite(src,x,y){\nvar options=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};\nvar cb=arguments.length>4?arguments[4]:undefined;\n\nif(typeof options==='function'){\ncb=options;\noptions={};\n}\n\nif(!(src instanceof this.constructor)){\nreturn _utils.throwError.call(this,'The source must be a Jimp image',cb);\n}\n\nif(typeof x!=='number'||typeof y!=='number'){\nreturn _utils.throwError.call(this,'x and y must be numbers',cb);\n}\n\nvar _options=options,\nmode=_options.mode,\nopacitySource=_options.opacitySource,\nopacityDest=_options.opacityDest;\n\nif(!mode){\nmode=constants.BLEND_SOURCE_OVER;\n}\n\nif(typeof opacitySource!=='number'||opacitySource<0||opacitySource>1){\nopacitySource=1.0;\n}\n\nif(typeof opacityDest!=='number'||opacityDest<0||opacityDest>1){\nopacityDest=1.0;\n}\n\nvar blendmode=compositeModes[mode];// round input\n\nx=Math.round(x);\ny=Math.round(y);\nvar baseImage=this;\n\nif(opacityDest!==1.0){\nbaseImage.opacity(opacityDest);\n}\n\nsrc.scanQuiet(0,0,src.bitmap.width,src.bitmap.height,function(sx,sy,idx){\nvar dstIdx=baseImage.getPixelIndex(x+sx,y+sy,constants.EDGE_CROP);\nvar blended=blendmode({\nr:this.bitmap.data[idx+0]/255,\ng:this.bitmap.data[idx+1]/255,\nb:this.bitmap.data[idx+2]/255,\na:this.bitmap.data[idx+3]/255},\n{\nr:baseImage.bitmap.data[dstIdx+0]/255,\ng:baseImage.bitmap.data[dstIdx+1]/255,\nb:baseImage.bitmap.data[dstIdx+2]/255,\na:baseImage.bitmap.data[dstIdx+3]/255},\nopacitySource);\nbaseImage.bitmap.data[dstIdx+0]=this.constructor.limit255(blended.r*255);\nbaseImage.bitmap.data[dstIdx+1]=this.constructor.limit255(blended.g*255);\nbaseImage.bitmap.data[dstIdx+2]=this.constructor.limit255(blended.b*255);\nbaseImage.bitmap.data[dstIdx+3]=this.constructor.limit255(blended.a*255);\n});\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n}\n\nmodule.exports=exports.default;\n\n},{\"../constants\":264,\"./composite-modes\":262,\"@jimp/utils\":303,\"core-js/modules/es6.object.define-property\":129}],264:[function(require,module,exports){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.EDGE_CROP=exports.EDGE_WRAP=exports.EDGE_EXTEND=exports.BLEND_EXCLUSION=exports.BLEND_DIFFERENCE=exports.BLEND_HARDLIGHT=exports.BLEND_LIGHTEN=exports.BLEND_DARKEN=exports.BLEND_OVERLAY=exports.BLEND_SCREEN=exports.BLEND_MULTIPLY=exports.BLEND_DESTINATION_OVER=exports.BLEND_SOURCE_OVER=exports.VERTICAL_ALIGN_BOTTOM=exports.VERTICAL_ALIGN_MIDDLE=exports.VERTICAL_ALIGN_TOP=exports.HORIZONTAL_ALIGN_RIGHT=exports.HORIZONTAL_ALIGN_CENTER=exports.HORIZONTAL_ALIGN_LEFT=exports.AUTO=void 0;\n// used to auto resizing etc.\nvar AUTO=-1;// Align modes for cover, contain, bit masks\n\nexports.AUTO=AUTO;\nvar HORIZONTAL_ALIGN_LEFT=1;\nexports.HORIZONTAL_ALIGN_LEFT=HORIZONTAL_ALIGN_LEFT;\nvar HORIZONTAL_ALIGN_CENTER=2;\nexports.HORIZONTAL_ALIGN_CENTER=HORIZONTAL_ALIGN_CENTER;\nvar HORIZONTAL_ALIGN_RIGHT=4;\nexports.HORIZONTAL_ALIGN_RIGHT=HORIZONTAL_ALIGN_RIGHT;\nvar VERTICAL_ALIGN_TOP=8;\nexports.VERTICAL_ALIGN_TOP=VERTICAL_ALIGN_TOP;\nvar VERTICAL_ALIGN_MIDDLE=16;\nexports.VERTICAL_ALIGN_MIDDLE=VERTICAL_ALIGN_MIDDLE;\nvar VERTICAL_ALIGN_BOTTOM=32;// blend modes\n\nexports.VERTICAL_ALIGN_BOTTOM=VERTICAL_ALIGN_BOTTOM;\nvar BLEND_SOURCE_OVER='srcOver';\nexports.BLEND_SOURCE_OVER=BLEND_SOURCE_OVER;\nvar BLEND_DESTINATION_OVER='dstOver';\nexports.BLEND_DESTINATION_OVER=BLEND_DESTINATION_OVER;\nvar BLEND_MULTIPLY='multiply';\nexports.BLEND_MULTIPLY=BLEND_MULTIPLY;\nvar BLEND_SCREEN='screen';\nexports.BLEND_SCREEN=BLEND_SCREEN;\nvar BLEND_OVERLAY='overlay';\nexports.BLEND_OVERLAY=BLEND_OVERLAY;\nvar BLEND_DARKEN='darken';\nexports.BLEND_DARKEN=BLEND_DARKEN;\nvar BLEND_LIGHTEN='lighten';\nexports.BLEND_LIGHTEN=BLEND_LIGHTEN;\nvar BLEND_HARDLIGHT='hardLight';\nexports.BLEND_HARDLIGHT=BLEND_HARDLIGHT;\nvar BLEND_DIFFERENCE='difference';\nexports.BLEND_DIFFERENCE=BLEND_DIFFERENCE;\nvar BLEND_EXCLUSION='exclusion';// Edge Handling\n\nexports.BLEND_EXCLUSION=BLEND_EXCLUSION;\nvar EDGE_EXTEND=1;\nexports.EDGE_EXTEND=EDGE_EXTEND;\nvar EDGE_WRAP=2;\nexports.EDGE_WRAP=EDGE_WRAP;\nvar EDGE_CROP=3;\nexports.EDGE_CROP=EDGE_CROP;\n\n},{\"core-js/modules/es6.object.define-property\":129}],265:[function(require,module,exports){\n(function(Buffer){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.addConstants=addConstants;\nexports.addJimpMethods=addJimpMethods;\nexports.jimpEvMethod=jimpEvMethod;\nexports.jimpEvChange=jimpEvChange;\nObject.defineProperty(exports,\"addType\",{\nenumerable:true,\nget:function get(){\nreturn MIME.addType;\n}});\n\nexports.default=void 0;\n\nrequire(\"core-js/modules/es6.function.bind\");\n\nrequire(\"core-js/modules/es6.reflect.construct\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es7.object.entries\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/es6.promise\");\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/es6.typed.uint8-clamped-array\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.typed.uint8-array\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nvar _fs=_interopRequireDefault(require(\"fs\"));\n\nvar _path=_interopRequireDefault(require(\"path\"));\n\nvar _events=_interopRequireDefault(require(\"events\"));\n\nvar _utils=require(\"@jimp/utils\");\n\nvar _anyBase=_interopRequireDefault(require(\"any-base\"));\n\nvar _mkdirp=_interopRequireDefault(require(\"mkdirp\"));\n\nvar _pixelmatch=_interopRequireDefault(require(\"pixelmatch\"));\n\nvar _tinycolor=_interopRequireDefault(require(\"tinycolor2\"));\n\nvar _phash=_interopRequireDefault(require(\"./modules/phash\"));\n\nvar _request=_interopRequireDefault(require(\"./request\"));\n\nvar _composite=_interopRequireDefault(require(\"./composite\"));\n\nvar _promisify=_interopRequireDefault(require(\"./utils/promisify\"));\n\nvar MIME=_interopRequireWildcard(require(\"./utils/mime\"));\n\nvar _imageBitmap=require(\"./utils/image-bitmap\");\n\nvar constants=_interopRequireWildcard(require(\"./constants\"));\n\nfunction _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}}newObj.default=obj;return newObj;}}\n\nfunction _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}\n\nfunction isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}\n\nfunction _construct(Parent,args,Class){if(isNativeReflectConstruct()){_construct=Reflect.construct;}else{_construct=function _construct(Parent,args,Class){var a=[null];a.push.apply(a,args);var Constructor=Function.bind.apply(Parent,a);var instance=new Constructor();if(Class)_setPrototypeOf(instance,Class.prototype);return instance;};}return _construct.apply(null,arguments);}\n\nfunction _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_nonIterableRest();}\n\nfunction _nonIterableRest(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");}\n\nfunction _iterableToArrayLimit(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i[\"return\"]!=null)_i[\"return\"]();}finally{if(_d)throw _e;}}return _arr;}\n\nfunction _arrayWithHoles(arr){if(Array.isArray(arr))return arr;}\n\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\n\nfunction _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}\n\nfunction _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}\n\nfunction _possibleConstructorReturn(self,call){if(call&&(_typeof(call)===\"object\"||typeof call===\"function\")){return call;}return _assertThisInitialized(self);}\n\nfunction _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}\n\nfunction _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}\n\nfunction _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}\n\nfunction _assertThisInitialized(self){if(self===void 0){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}\n\nfunction _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}\n\nfunction _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}\n\nvar alphabet='0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_';// an array storing the maximum string length of hashes at various bases\n// 0 and 1 do not exist as possible hash lengths\n\nvar maxHashLength=[NaN,NaN];\n\nfor(var i=2;i<65;i++){\nvar maxHash=(0,_anyBase.default)(_anyBase.default.BIN,alphabet.slice(0,i))(new Array(64+1).join('1'));\nmaxHashLength.push(maxHash.length);\n}// no operation\n\n\nfunction noop(){}// error checking methods\n\n\nfunction isArrayBuffer(test){\nreturn Object.prototype.toString.call(test).toLowerCase().indexOf('arraybuffer')>-1;\n}// Prepare a Buffer object from the arrayBuffer. Necessary in the browser > node conversion,\n// But this function is not useful when running in node directly\n\n\nfunction bufferFromArrayBuffer(arrayBuffer){\nvar buffer=Buffer.alloc(arrayBuffer.byteLength);\nvar view=new Uint8Array(arrayBuffer);\n\nfor(var _i=0;_i<buffer.length;++_i){\nbuffer[_i]=view[_i];\n}\n\nreturn buffer;\n}\n\nfunction loadFromURL(options,cb){\n(0,_request.default)(options,function(err,response,data){\nif(err){\nreturn cb(err);\n}\n\nif(_typeof(data)==='object'&&Buffer.isBuffer(data)){\nreturn cb(null,data);\n}\n\nvar msg='Could not load Buffer from <'+options.url+'> '+'(HTTP: '+response.statusCode+')';\nreturn new Error(msg);\n});\n}\n\nfunction loadBufferFromPath(src,cb){\nif(_fs.default&&typeof _fs.default.readFile==='function'&&!src.match(/^(http|ftp)s?:\\/\\/./)){\n_fs.default.readFile(src,cb);\n}else{\nloadFromURL({\nurl:src},\ncb);\n}\n}\n\nfunction isRawRGBAData(obj){\nreturn obj&&_typeof(obj)==='object'&&typeof obj.width==='number'&&typeof obj.height==='number'&&(Buffer.isBuffer(obj.data)||obj.data instanceof Uint8Array||typeof Uint8ClampedArray==='function'&&obj.data instanceof Uint8ClampedArray)&&(obj.data.length===obj.width*obj.height*4||obj.data.length===obj.width*obj.height*3);\n}\n\nfunction makeRGBABufferFromRGB(buffer){\nif(buffer.length%3!==0){\nthrow new Error('Buffer length is incorrect');\n}\n\nvar rgbaBuffer=Buffer.allocUnsafe(buffer.length/3*4);\nvar j=0;\n\nfor(var _i2=0;_i2<buffer.length;_i2++){\nrgbaBuffer[j]=buffer[_i2];\n\nif((_i2+1)%3===0){\nrgbaBuffer[++j]=255;\n}\n\nj++;\n}\n\nreturn rgbaBuffer;\n}\n\nvar emptyBitmap={\ndata:null,\nwidth:null,\nheight:null};\n\n/**\n * Jimp constructor (from a file)\n * @param path a path to the image\n * @param {function(Error, Jimp)} cb (optional) a function to call when the image is parsed to a bitmap\n */\n\n/**\n * Jimp constructor (from a url with options)\n * @param options { url, otherOptions}\n * @param {function(Error, Jimp)} cb (optional) a function to call when the image is parsed to a bitmap\n */\n\n/**\n * Jimp constructor (from another Jimp image or raw image data)\n * @param image a Jimp image to clone\n * @param {function(Error, Jimp)} cb a function to call when the image is parsed to a bitmap\n */\n\n/**\n * Jimp constructor (from a Buffer)\n * @param data a Buffer containing the image data\n * @param {function(Error, Jimp)} cb a function to call when the image is parsed to a bitmap\n */\n\n/**\n * Jimp constructor (to generate a new image)\n * @param w the width of the image\n * @param h the height of the image\n * @param {function(Error, Jimp)} cb (optional) a function to call when the image is parsed to a bitmap\n */\n\n/**\n * Jimp constructor (to generate a new image)\n * @param w the width of the image\n * @param h the height of the image\n * @param background color to fill the image with\n * @param {function(Error, Jimp)} cb (optional) a function to call when the image is parsed to a bitmap\n */\n\nvar Jimp=\n/*#__PURE__*/\nfunction(_EventEmitter){\n_inherits(Jimp,_EventEmitter);\n\n// An object representing a bitmap in memory, comprising:\n//  - data: a buffer of the bitmap data\n//  - width: the width of the image in pixels\n//  - height: the height of the image in pixels\n// Default colour to use for new pixels\n// Default MIME is PNG\n// Exif data for the image\n// Whether Transparency supporting formats will be exported as RGB or RGBA\nfunction Jimp(){\nvar _this;\n\nfor(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){\nargs[_key]=arguments[_key];\n}\n\n_classCallCheck(this,Jimp);\n\n_this=_possibleConstructorReturn(this,_getPrototypeOf(Jimp).call(this));\n\n_defineProperty(_assertThisInitialized(_assertThisInitialized(_this)),\"bitmap\",emptyBitmap);\n\n_defineProperty(_assertThisInitialized(_assertThisInitialized(_this)),\"_background\",0x00000000);\n\n_defineProperty(_assertThisInitialized(_assertThisInitialized(_this)),\"_originalMime\",Jimp.MIME_PNG);\n\n_defineProperty(_assertThisInitialized(_assertThisInitialized(_this)),\"_exif\",null);\n\n_defineProperty(_assertThisInitialized(_assertThisInitialized(_this)),\"_rgba\",true);\n\n_defineProperty(_assertThisInitialized(_assertThisInitialized(_this)),\"writeAsync\",function(path){\nreturn(0,_promisify.default)(_this.write,_assertThisInitialized(_assertThisInitialized(_this)),path);\n});\n\n_defineProperty(_assertThisInitialized(_assertThisInitialized(_this)),\"getBase64Async\",function(mime){\nreturn(0,_promisify.default)(_this.getBase64,_assertThisInitialized(_assertThisInitialized(_this)),mime);\n});\n\n_defineProperty(_assertThisInitialized(_assertThisInitialized(_this)),\"getBuffer\",_imageBitmap.getBuffer);\n\n_defineProperty(_assertThisInitialized(_assertThisInitialized(_this)),\"getBufferAsync\",_imageBitmap.getBufferAsync);\n\n_defineProperty(_assertThisInitialized(_assertThisInitialized(_this)),\"getPixelColour\",_this.getPixelColor);\n\n_defineProperty(_assertThisInitialized(_assertThisInitialized(_this)),\"setPixelColour\",_this.setPixelColor);\n\nvar jimpInstance=_assertThisInitialized(_assertThisInitialized(_this));\n\nvar cb=noop;\n\nif(isArrayBuffer(args[0])){\nargs[0]=bufferFromArrayBuffer(args[0]);\n}\n\nfunction finish(){\nfor(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){\nargs[_key2]=arguments[_key2];\n}\n\nvar err=args[0];\nvar evData=err||{};\nevData.methodName='constructor';\nsetTimeout(function(){\nvar _cb;\n\n// run on next tick.\nif(err&&cb===noop){\njimpInstance.emitError('constructor',err);\n}else if(!err){\njimpInstance.emitMulti('constructor','initialized');\n}\n\n(_cb=cb).call.apply(_cb,[jimpInstance].concat(args));\n},1);\n}\n\nif(typeof args[0]==='number'&&typeof args[1]==='number'||parseInt(args[0],10)&&parseInt(args[1],10)){\n// create a new image\nvar w=parseInt(args[0],10);\nvar h=parseInt(args[1],10);\ncb=args[2];// with a hex color\n\nif(typeof args[2]==='number'){\n_this._background=args[2];\ncb=args[3];\n}// with a css color\n\n\nif(typeof args[2]==='string'){\n_this._background=Jimp.cssColorToHex(args[2]);\ncb=args[3];\n}\n\nif(typeof cb==='undefined'){\ncb=noop;\n}\n\nif(typeof cb!=='function'){\nreturn _possibleConstructorReturn(_this,_utils.throwError.call(_assertThisInitialized(_assertThisInitialized(_this)),'cb must be a function',finish));\n}\n\n_this.bitmap={\ndata:Buffer.alloc(w*h*4),\nwidth:w,\nheight:h};\n\n\nfor(var _i3=0;_i3<_this.bitmap.data.length;_i3+=4){\n_this.bitmap.data.writeUInt32BE(_this._background,_i3);\n}\n\nfinish(null,_assertThisInitialized(_assertThisInitialized(_this)));\n}else if(_typeof(args[0])==='object'&&args[0].url){\ncb=args[1]||noop;\n\nif(typeof cb!=='function'){\nreturn _possibleConstructorReturn(_this,_utils.throwError.call(_assertThisInitialized(_assertThisInitialized(_this)),'cb must be a function',finish));\n}\n\nloadFromURL(args[0],function(err,data){\nif(err){\nreturn _utils.throwError.call(_assertThisInitialized(_assertThisInitialized(_this)),err,finish);\n}\n\n_this.parseBitmap(data,args[0].url,finish);\n});\n}else if(args[0]instanceof Jimp){\n// clone an existing Jimp\nvar original=args[0];\ncb=args[1];\n\nif(typeof cb==='undefined'){\ncb=noop;\n}\n\nif(typeof cb!=='function'){\nreturn _possibleConstructorReturn(_this,_utils.throwError.call(_assertThisInitialized(_assertThisInitialized(_this)),'cb must be a function',finish));\n}\n\n_this.bitmap={\ndata:Buffer.from(original.bitmap.data),\nwidth:original.bitmap.width,\nheight:original.bitmap.height};\n\n_this._quality=original._quality;\n_this._deflateLevel=original._deflateLevel;\n_this._deflateStrategy=original._deflateStrategy;\n_this._filterType=original._filterType;\n_this._rgba=original._rgba;\n_this._background=original._background;\n_this._originalMime=original._originalMime;\nfinish(null,_assertThisInitialized(_assertThisInitialized(_this)));\n}else if(isRawRGBAData(args[0])){\nvar imageData=args[0];\ncb=args[1]||noop;\nvar isRGBA=imageData.width*imageData.height*4===imageData.data.length;\nvar buffer=isRGBA?Buffer.from(imageData.data):makeRGBABufferFromRGB(imageData.data);\n_this.bitmap={\ndata:buffer,\nwidth:imageData.width,\nheight:imageData.height};\n\nfinish(null,_assertThisInitialized(_assertThisInitialized(_this)));\n}else if(typeof args[0]==='string'){\n// read from a path\nvar path=args[0];\ncb=args[1];\n\nif(typeof cb==='undefined'){\ncb=noop;\n}\n\nif(typeof cb!=='function'){\nreturn _possibleConstructorReturn(_this,_utils.throwError.call(_assertThisInitialized(_assertThisInitialized(_this)),'cb must be a function',finish));\n}\n\nloadBufferFromPath(path,function(err,data){\nif(err){\nreturn _utils.throwError.call(_assertThisInitialized(_assertThisInitialized(_this)),err,finish);\n}\n\n_this.parseBitmap(data,path,finish);\n});\n}else if(_typeof(args[0])==='object'&&Buffer.isBuffer(args[0])){\n// read from a buffer\nvar data=args[0];\ncb=args[1];\n\nif(typeof cb!=='function'){\nreturn _possibleConstructorReturn(_this,_utils.throwError.call(_assertThisInitialized(_assertThisInitialized(_this)),'cb must be a function',finish));\n}\n\n_this.parseBitmap(data,null,finish);\n}else{\n// Allow client libs to add new ways to build a Jimp object.\n// Extra constructors must be added by `Jimp.appendConstructorOption()`\ncb=args[args.length-1];\n\nif(typeof cb!=='function'){\n// TODO: try to solve the args after cb problem.\ncb=args[args.length-2];\n\nif(typeof cb!=='function'){\ncb=noop;\n}\n}\n\nvar extraConstructor=Jimp.__extraConstructors.find(function(c){\nreturn c.test.apply(c,args);\n});\n\nif(extraConstructor){\nnew Promise(function(resolve,reject){\nvar _extraConstructor$run;\n\nreturn(_extraConstructor$run=extraConstructor.run).call.apply(_extraConstructor$run,[_assertThisInitialized(_assertThisInitialized(_this)),resolve,reject].concat(args));\n}).then(function(){\nreturn finish(null,_assertThisInitialized(_assertThisInitialized(_this)));\n}).catch(finish);\n}else{\nreturn _possibleConstructorReturn(_this,_utils.throwError.call(_assertThisInitialized(_assertThisInitialized(_this)),'No matching constructor overloading was found. '+'Please see the docs for how to call the Jimp constructor.',finish));\n}\n}\n\nreturn _this;\n}\n/**\n   * Parse a bitmap with the loaded image types.\n   *\n   * @param {Buffer} data raw image data\n   * @param {string} path optional path to file\n   * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n   * @memberof Jimp\n   */\n\n\n_createClass(Jimp,[{\nkey:\"parseBitmap\",\nvalue:function parseBitmap(data,path,finish){\n_imageBitmap.parseBitmap.call(this,data,null,finish);\n}\n/**\n     * Sets the type of the image (RGB or RGBA) when saving in a format that supports transparency (default is RGBA)\n     * @param {boolean} bool A Boolean, true to use RGBA or false to use RGB\n     * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n     * @returns {Jimp} this for chaining of methods\n     */},\n\n{\nkey:\"rgba\",\nvalue:function rgba(bool,cb){\nif(typeof bool!=='boolean'){\nreturn _utils.throwError.call(this,'bool must be a boolean, true for RGBA or false for RGB',cb);\n}\n\nthis._rgba=bool;\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n}\n/**\n     * Emit for multiple listeners\n     * @param {string} methodName name of the method to emit an error for\n     * @param {string} eventName name of the eventName to emit an error for\n     * @param {object} data to emit\n     */},\n\n{\nkey:\"emitMulti\",\nvalue:function emitMulti(methodName,eventName){\nvar data=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};\ndata=Object.assign(data,{\nmethodName:methodName,\neventName:eventName});\n\nthis.emit('any',data);\n\nif(methodName){\nthis.emit(methodName,data);\n}\n\nthis.emit(eventName,data);\n}},\n{\nkey:\"emitError\",\nvalue:function emitError(methodName,err){\nthis.emitMulti(methodName,'error',err);\n}\n/**\n     * Get the current height of the image\n     * @return {number} height of the image\n     */},\n\n{\nkey:\"getHeight\",\nvalue:function getHeight(){\nreturn this.bitmap.height;\n}\n/**\n     * Get the current width of the image\n     * @return {number} width of the image\n     */},\n\n{\nkey:\"getWidth\",\nvalue:function getWidth(){\nreturn this.bitmap.width;\n}\n/**\n     * Nicely format Jimp object when sent to the console e.g. console.log(image)\n     * @returns {string} pretty printed\n     */},\n\n{\nkey:\"inspect\",\nvalue:function inspect(){\nreturn'<Jimp '+(this.bitmap===emptyBitmap?'pending...':this.bitmap.width+'x'+this.bitmap.height)+'>';\n}\n/**\n     * Nicely format Jimp object when converted to a string\n     * @returns {string} pretty printed\n     */},\n\n{\nkey:\"toString\",\nvalue:function toString(){\nreturn'[object Jimp]';\n}\n/**\n     * Returns the original MIME of the image (default: \"image/png\")\n     * @returns {string} the MIME\n     */},\n\n{\nkey:\"getMIME\",\nvalue:function getMIME(){\nvar mime=this._originalMime||Jimp.MIME_PNG;\nreturn mime;\n}\n/**\n     * Returns the appropriate file extension for the original MIME of the image (default: \"png\")\n     * @returns {string} the file extension\n     */},\n\n{\nkey:\"getExtension\",\nvalue:function getExtension(){\nvar mime=this.getMIME();\nreturn MIME.getExtension(mime);\n}\n/**\n     * Writes the image to a file\n     * @param {string} path a path to the destination file\n     * @param {function(Error, Jimp)} cb (optional) a function to call when the image is saved to disk\n     * @returns {Jimp} this for chaining of methods\n     */},\n\n{\nkey:\"write\",\nvalue:function write(path,cb){\nvar _this2=this;\n\nif(!_fs.default||!_fs.default.createWriteStream){\nthrow new Error('Cant access the filesystem. You can use the getBase64 method.');\n}\n\nif(typeof path!=='string'){\nreturn _utils.throwError.call(this,'path must be a string',cb);\n}\n\nif(typeof cb==='undefined'){\ncb=noop;\n}\n\nif(typeof cb!=='function'){\nreturn _utils.throwError.call(this,'cb must be a function',cb);\n}\n\nvar mime=MIME.getType(path)||this.getMIME();\n\nvar pathObj=_path.default.parse(path);\n\nif(pathObj.dir){\n_mkdirp.default.sync(pathObj.dir);\n}\n\nthis.getBuffer(mime,function(err,buffer){\nif(err){\nreturn _utils.throwError.call(_this2,err,cb);\n}\n\nvar stream=_fs.default.createWriteStream(path);\n\nstream.on('open',function(){\nstream.write(buffer);\nstream.end();\n}).on('error',function(err){\nreturn _utils.throwError.call(_this2,err,cb);\n});\nstream.on('finish',function(){\ncb.call(_this2,null,_this2);\n});\n});\nreturn this;\n}},\n{\nkey:\"getBase64\",\n\n/**\n     * Converts the image to a base 64 string\n     * @param {string} mime the mime type of the image data to be created\n     * @param {function(Error, Jimp)} cb a Node-style function to call with the buffer as the second argument\n     * @returns {Jimp} this for chaining of methods\n     */\nvalue:function getBase64(mime,cb){\nif(mime===Jimp.AUTO){\n// allow auto MIME detection\nmime=this.getMIME();\n}\n\nif(typeof mime!=='string'){\nreturn _utils.throwError.call(this,'mime must be a string',cb);\n}\n\nif(typeof cb!=='function'){\nreturn _utils.throwError.call(this,'cb must be a function',cb);\n}\n\nthis.getBuffer(mime,function(err,data){\nif(err){\nreturn _utils.throwError.call(this,err,cb);\n}\n\nvar src='data:'+mime+';base64,'+data.toString('base64');\ncb.call(this,null,src);\n});\nreturn this;\n}},\n{\nkey:\"hash\",\n\n/**\n     * Generates a perceptual hash of the image <https://en.wikipedia.org/wiki/Perceptual_hashing>. And pads the string. Can configure base.\n     * @param {number} base (optional) a number between 2 and 64 representing the base for the hash (e.g. 2 is binary, 10 is decimal, 16 is hex, 64 is base 64). Defaults to 64.\n     * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n     * @returns {string} a string representing the hash\n     */\nvalue:function hash(base,cb){\nbase=base||64;\n\nif(typeof base==='function'){\ncb=base;\nbase=64;\n}\n\nif(typeof base!=='number'){\nreturn _utils.throwError.call(this,'base must be a number',cb);\n}\n\nif(base<2||base>64){\nreturn _utils.throwError.call(this,'base must be a number between 2 and 64',cb);\n}\n\nvar hash=this.pHash();\nhash=(0,_anyBase.default)(_anyBase.default.BIN,alphabet.slice(0,base))(hash);\n\nwhile(hash.length<maxHashLength[base]){\nhash='0'+hash;// pad out with leading zeros\n}\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,hash);\n}\n\nreturn hash;\n}\n/**\n     * Calculates the perceptual hash\n     * @returns {number} the perceptual hash\n     */},\n\n{\nkey:\"pHash\",\nvalue:function pHash(){\nvar pHash=new _phash.default();\nreturn pHash.getHash(this);\n}\n/**\n     * Calculates the hamming distance of the current image and a hash based on their perceptual hash\n     * @param {hash} compareHash hash to compare to\n     * @returns {number} a number ranging from 0 to 1, 0 means they are believed to be identical\n     */},\n\n{\nkey:\"distanceFromHash\",\nvalue:function distanceFromHash(compareHash){\nvar pHash=new _phash.default();\nvar currentHash=pHash.getHash(this);\nreturn pHash.distance(currentHash,compareHash);\n}\n/**\n     * Converts the image to a buffer\n     * @param {string} mime the mime type of the image buffer to be created\n     * @param {function(Error, Jimp)} cb a Node-style function to call with the buffer as the second argument\n     * @returns {Jimp} this for chaining of methods\n     */},\n\n{\nkey:\"getPixelIndex\",\n\n/**\n     * Returns the offset of a pixel in the bitmap buffer\n     * @param {number} x the x coordinate\n     * @param {number} y the y coordinate\n     * @param {string} edgeHandling (optional) define how to sum pixels from outside the border\n     * @param {number} cb (optional) a callback for when complete\n     * @returns {number} the index of the pixel or -1 if not found\n     */\nvalue:function getPixelIndex(x,y,edgeHandling,cb){\nvar xi;\nvar yi;\n\nif(typeof edgeHandling==='function'&&typeof cb==='undefined'){\ncb=edgeHandling;\nedgeHandling=null;\n}\n\nif(!edgeHandling){\nedgeHandling=Jimp.EDGE_EXTEND;\n}\n\nif(typeof x!=='number'||typeof y!=='number'){\nreturn _utils.throwError.call(this,'x and y must be numbers',cb);\n}// round input\n\n\nx=Math.round(x);\ny=Math.round(y);\nxi=x;\nyi=y;\n\nif(edgeHandling===Jimp.EDGE_EXTEND){\nif(x<0)xi=0;\nif(x>=this.bitmap.width)xi=this.bitmap.width-1;\nif(y<0)yi=0;\nif(y>=this.bitmap.height)yi=this.bitmap.height-1;\n}\n\nif(edgeHandling===Jimp.EDGE_WRAP){\nif(x<0){\nxi=this.bitmap.width+x;\n}\n\nif(x>=this.bitmap.width){\nxi=x%this.bitmap.width;\n}\n\nif(y<0){\nxi=this.bitmap.height+y;\n}\n\nif(y>=this.bitmap.height){\nyi=y%this.bitmap.height;\n}\n}\n\nvar i=this.bitmap.width*yi+xi<<2;// if out of bounds index is -1\n\nif(xi<0||xi>=this.bitmap.width){\ni=-1;\n}\n\nif(yi<0||yi>=this.bitmap.height){\ni=-1;\n}\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,i);\n}\n\nreturn i;\n}\n/**\n     * Returns the hex colour value of a pixel\n     * @param {number} x the x coordinate\n     * @param {number} y the y coordinate\n     * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n     * @returns {number} the color of the pixel\n     */},\n\n{\nkey:\"getPixelColor\",\nvalue:function getPixelColor(x,y,cb){\nif(typeof x!=='number'||typeof y!=='number')return _utils.throwError.call(this,'x and y must be numbers',cb);// round input\n\nx=Math.round(x);\ny=Math.round(y);\nvar idx=this.getPixelIndex(x,y);\nvar hex=this.bitmap.data.readUInt32BE(idx);\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,hex);\n}\n\nreturn hex;\n}},\n{\nkey:\"setPixelColor\",\n\n/**\n     * Returns the hex colour value of a pixel\n     * @param {number} hex color to set\n     * @param {number} x the x coordinate\n     * @param {number} y the y coordinate\n     * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n     * @returns {number} the index of the pixel or -1 if not found\n     */\nvalue:function setPixelColor(hex,x,y,cb){\nif(typeof hex!=='number'||typeof x!=='number'||typeof y!=='number')return _utils.throwError.call(this,'hex, x and y must be numbers',cb);// round input\n\nx=Math.round(x);\ny=Math.round(y);\nvar idx=this.getPixelIndex(x,y);\nthis.bitmap.data.writeUInt32BE(hex,idx);\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n}},\n{\nkey:\"hasAlpha\",\n\n/**\n     * Determine if the image contains opaque pixels.\n     * @return {boolean} hasAlpha whether the image contains opaque pixels\n     */\nvalue:function hasAlpha(){\nfor(var yIndex=0;yIndex<this.bitmap.height;yIndex++){\nfor(var xIndex=0;xIndex<this.bitmap.width;xIndex++){\nvar idx=this.bitmap.width*yIndex+xIndex<<2;\nvar alpha=this.bitmap.data[idx+3];\n\nif(alpha!==0xff){\nreturn true;\n}\n}\n}\n\nreturn false;\n}}]);\n\n\nreturn Jimp;\n}(_events.default);\n\nfunction addConstants(constants){\nvar jimpInstance=arguments.length>1&&arguments[1]!==undefined?arguments[1]:Jimp;\nObject.entries(constants).forEach(function(_ref){\nvar _ref2=_slicedToArray(_ref,2),\nname=_ref2[0],\nvalue=_ref2[1];\n\njimpInstance[name]=value;\n});\n}\n\nfunction addJimpMethods(methods){\nvar jimpInstance=arguments.length>1&&arguments[1]!==undefined?arguments[1]:Jimp;\nObject.entries(methods).forEach(function(_ref3){\nvar _ref4=_slicedToArray(_ref3,2),\nname=_ref4[0],\nvalue=_ref4[1];\n\njimpInstance.prototype[name]=value;\n});\n}\n\naddConstants(constants);\naddJimpMethods({\ncomposite:_composite.default});\n\nJimp.__extraConstructors=[];\n/**\n * Allow client libs to add new ways to build a Jimp object.\n * @param {string} name identify the extra constructor.\n * @param {function} test a function that returns true when it accepts the arguments passed to the main constructor.\n * @param {function} run where the magic happens.\n */\n\nJimp.appendConstructorOption=function(name,test,run){\nJimp.__extraConstructors.push({\nname:name,\ntest:test,\nrun:run});\n\n};\n/**\n * Read an image from a file or a Buffer. Takes the same args as the constructor\n * @returns {Promise} a promise\n */\n\n\nJimp.read=function(){\nfor(var _len3=arguments.length,args=new Array(_len3),_key3=0;_key3<_len3;_key3++){\nargs[_key3]=arguments[_key3];\n}\n\nreturn new Promise(function(resolve,reject){\n_construct(Jimp,args.concat([function(err,image){\nif(err)reject(err);else resolve(image);\n}]));\n});\n};\n\nJimp.create=Jimp.read;\n/**\n * A static helper method that converts RGBA values to a single integer value\n * @param {number} r the red value (0-255)\n * @param {number} g the green value (0-255)\n * @param {number} b the blue value (0-255)\n * @param {number} a the alpha value (0-255)\n * @param {function(Error, Jimp)} cb (optional) A callback for when complete\n * @returns {number} an single integer colour value\n */\n\nJimp.rgbaToInt=function(r,g,b,a,cb){\nif(typeof r!=='number'||typeof g!=='number'||typeof b!=='number'||typeof a!=='number'){\nreturn _utils.throwError.call(this,'r, g, b and a must be numbers',cb);\n}\n\nif(r<0||r>255){\nreturn _utils.throwError.call(this,'r must be between 0 and 255',cb);\n}\n\nif(g<0||g>255){\n_utils.throwError.call(this,'g must be between 0 and 255',cb);\n}\n\nif(b<0||b>255){\nreturn _utils.throwError.call(this,'b must be between 0 and 255',cb);\n}\n\nif(a<0||a>255){\nreturn _utils.throwError.call(this,'a must be between 0 and 255',cb);\n}\n\nr=Math.round(r);\nb=Math.round(b);\ng=Math.round(g);\na=Math.round(a);\nvar i=r*Math.pow(256,3)+g*Math.pow(256,2)+b*Math.pow(256,1)+a*Math.pow(256,0);\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,i);\n}\n\nreturn i;\n};\n/**\n * A static helper method that converts RGBA values to a single integer value\n * @param {number} i a single integer value representing an RGBA colour (e.g. 0xFF0000FF for red)\n * @param {function(Error, Jimp)} cb (optional) A callback for when complete\n * @returns {object} an object with the properties r, g, b and a representing RGBA values\n */\n\n\nJimp.intToRGBA=function(i,cb){\nif(typeof i!=='number'){\nreturn _utils.throwError.call(this,'i must be a number',cb);\n}\n\nvar rgba={};\nrgba.r=Math.floor(i/Math.pow(256,3));\nrgba.g=Math.floor((i-rgba.r*Math.pow(256,3))/Math.pow(256,2));\nrgba.b=Math.floor((i-rgba.r*Math.pow(256,3)-rgba.g*Math.pow(256,2))/Math.pow(256,1));\nrgba.a=Math.floor((i-rgba.r*Math.pow(256,3)-rgba.g*Math.pow(256,2)-rgba.b*Math.pow(256,1))/Math.pow(256,0));\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,rgba);\n}\n\nreturn rgba;\n};\n/**\n * Converts a css color (Hex, 8-digit (RGBA) Hex, RGB, RGBA, HSL, HSLA, HSV, HSVA, Named) to a hex number\n * @param {string} cssColor a number\n * @returns {number} a hex number representing a color\n */\n\n\nJimp.cssColorToHex=function(cssColor){\ncssColor=cssColor||0;// 0, null, undefined, NaN\n\nif(typeof cssColor==='number')return Number(cssColor);\nreturn parseInt((0,_tinycolor.default)(cssColor).toHex8(),16);\n};\n/**\n * Limits a number to between 0 or 255\n * @param {number} n a number\n * @returns {number} the number limited to between 0 or 255\n */\n\n\nJimp.limit255=function(n){\nn=Math.max(n,0);\nn=Math.min(n,255);\nreturn n;\n};\n/**\n * Diffs two images and returns\n * @param {Jimp} img1 a Jimp image to compare\n * @param {Jimp} img2 a Jimp image to compare\n * @param {number} threshold (optional) a number, 0 to 1, the smaller the value the more sensitive the comparison (default: 0.1)\n * @returns {object} an object { percent: percent similar, diff: a Jimp image highlighting differences }\n */\n\n\nJimp.diff=function(img1,img2){\nvar threshold=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0.1;\nif(!(img1 instanceof Jimp)||!(img2 instanceof Jimp))return _utils.throwError.call(this,'img1 and img2 must be an Jimp images');\nvar bmp1=img1.bitmap;\nvar bmp2=img2.bitmap;\n\nif(bmp1.width!==bmp2.width||bmp1.height!==bmp2.height){\nif(bmp1.width*bmp1.height>bmp2.width*bmp2.height){\n// img1 is bigger\nimg1=img1.cloneQuiet().resize(bmp2.width,bmp2.height);\n}else{\n// img2 is bigger (or they are the same in area)\nimg2=img2.cloneQuiet().resize(bmp1.width,bmp1.height);\n}\n}\n\nif(typeof threshold!=='number'||threshold<0||threshold>1){\nreturn _utils.throwError.call(this,'threshold must be a number between 0 and 1');\n}\n\nvar diff=new Jimp(bmp1.width,bmp1.height,0xffffffff);\nvar numDiffPixels=(0,_pixelmatch.default)(bmp1.data,bmp2.data,diff.bitmap.data,diff.bitmap.width,diff.bitmap.height,{\nthreshold:threshold});\n\nreturn{\npercent:numDiffPixels/(diff.bitmap.width*diff.bitmap.height),\nimage:diff};\n\n};\n/**\n * Calculates the hamming distance of two images based on their perceptual hash\n * @param {Jimp} img1 a Jimp image to compare\n * @param {Jimp} img2 a Jimp image to compare\n * @returns {number} a number ranging from 0 to 1, 0 means they are believed to be identical\n */\n\n\nJimp.distance=function(img1,img2){\nvar phash=new _phash.default();\nvar hash1=phash.getHash(img1);\nvar hash2=phash.getHash(img2);\nreturn phash.distance(hash1,hash2);\n};\n/**\n * Calculates the hamming distance of two images based on their perceptual hash\n * @param {hash} hash1 a pHash\n * @param {hash} hash2 a pHash\n * @returns {number} a number ranging from 0 to 1, 0 means they are believed to be identical\n */\n\n\nJimp.compareHashes=function(hash1,hash2){\nvar phash=new _phash.default();\nreturn phash.distance(hash1,hash2);\n};\n/**\n * Compute color difference\n * 0 means no difference, 1 means maximum difference.\n * @param {number} rgba1:    first color to compare.\n * @param {number} rgba2:    second color to compare.\n * Both parameters must be an color object {r:val, g:val, b:val, a:val}\n * Where `a` is optional and `val` is an integer between 0 and 255.\n * @returns {number} float between 0 and 1.\n */\n\n\nJimp.colorDiff=function(rgba1,rgba2){\nvar pow=function pow(n){\nreturn Math.pow(n,2);\n};\n\nvar max=Math.max;\nvar maxVal=255*255*3;\n\nif(rgba1.a!==0&&!rgba1.a){\nrgba1.a=255;\n}\n\nif(rgba2.a!==0&&!rgba2.a){\nrgba2.a=255;\n}\n\nreturn(max(pow(rgba1.r-rgba2.r),pow(rgba1.r-rgba2.r-rgba1.a+rgba2.a))+max(pow(rgba1.g-rgba2.g),pow(rgba1.g-rgba2.g-rgba1.a+rgba2.a))+max(pow(rgba1.b-rgba2.b),pow(rgba1.b-rgba2.b-rgba1.a+rgba2.a)))/maxVal;\n};\n/**\n * Helper to create Jimp methods that emit events before and after its execution.\n * @param {string} methodName   The name to be appended to Jimp prototype.\n * @param {string} evName       The event name to be called.\n *                     It will be prefixed by `before-` and emitted when on method call.\n *                     It will be appended by `ed` and emitted after the method run.\n * @param {function} method       A function implementing the method itself.\n * It will also create a quiet version that will not emit events, to not\n * mess the user code with many `changed` event calls. You can call with\n * `methodName + \"Quiet\"`.\n *\n * The emitted event comes with a object parameter to the listener with the\n * `methodName` as one attribute.\n */\n\n\nfunction jimpEvMethod(methodName,evName,method){\nvar evNameBefore='before-'+evName;\nvar evNameAfter=evName.replace(/e$/,'')+'ed';\n\nJimp.prototype[methodName]=function(){\nvar wrappedCb;\n\nfor(var _len4=arguments.length,args=new Array(_len4),_key4=0;_key4<_len4;_key4++){\nargs[_key4]=arguments[_key4];\n}\n\nvar cb=args[method.length-1];\nvar jimpInstance=this;\n\nif(typeof cb==='function'){\nwrappedCb=function wrappedCb(){\nfor(var _len5=arguments.length,args=new Array(_len5),_key5=0;_key5<_len5;_key5++){\nargs[_key5]=arguments[_key5];\n}\n\nvar err=args[0],\ndata=args[1];\n\nif(err){\njimpInstance.emitError(methodName,err);\n}else{\njimpInstance.emitMulti(methodName,evNameAfter,_defineProperty({},methodName,data));\n}\n\ncb.apply(this,args);\n};\n\nargs[args.length-1]=wrappedCb;\n}else{\nwrappedCb=false;\n}\n\nthis.emitMulti(methodName,evNameBefore);\nvar result;\n\ntry{\nresult=method.apply(this,args);\n\nif(!wrappedCb){\nthis.emitMulti(methodName,evNameAfter,_defineProperty({},methodName,result));\n}\n}catch(error){\nerror.methodName=methodName;\nthis.emitError(methodName,error);\n}\n\nreturn result;\n};\n\nJimp.prototype[methodName+'Quiet']=method;\n}\n/**\n * Creates a new image that is a clone of this one.\n * @param {function(Error, Jimp)} cb (optional) A callback for when complete\n * @returns the new image\n */\n\n\njimpEvMethod('clone','clone',function(cb){\nvar clone=new Jimp(this);\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(clone,null,clone);\n}\n\nreturn clone;\n});\n/**\n * Simplify jimpEvMethod call for the common `change` evName.\n * @param {string} methodName name of the method\n * @param {function} method to watch changes for\n */\n\nfunction jimpEvChange(methodName,method){\njimpEvMethod(methodName,'change',method);\n}\n/**\n * Sets the type of the image (RGB or RGBA) when saving as PNG format (default is RGBA)\n * @param b A Boolean, true to use RGBA or false to use RGB\n * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n * @returns {Jimp} this for chaining of methods\n */\n\n\njimpEvChange('background',function(hex,cb){\nif(typeof hex!=='number'){\nreturn _utils.throwError.call(this,'hex must be a hexadecimal rgba value',cb);\n}\n\nthis._background=hex;\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n});\n/**\n * Scans through a region of the bitmap, calling a function for each pixel.\n * @param {number} x the x coordinate to begin the scan at\n * @param {number} y the y coordinate to begin the scan at\n * @param w the width of the scan region\n * @param h the height of the scan region\n * @param f a function to call on even pixel; the (x, y) position of the pixel\n * and the index of the pixel in the bitmap buffer are passed to the function\n * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n * @returns {Jimp} this for chaining of methods\n */\n\njimpEvChange('scan',function(x,y,w,h,f,cb){\nif(typeof x!=='number'||typeof y!=='number'){\nreturn _utils.throwError.call(this,'x and y must be numbers',cb);\n}\n\nif(typeof w!=='number'||typeof h!=='number'){\nreturn _utils.throwError.call(this,'w and h must be numbers',cb);\n}\n\nif(typeof f!=='function'){\nreturn _utils.throwError.call(this,'f must be a function',cb);\n}\n\nvar result=(0,_utils.scan)(this,x,y,w,h,f);\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,result);\n}\n\nreturn result;\n});\n\nif(true){\n// For use in a web browser or web worker\n\n/* global self */\nvar gl;\n\nif(typeof window!=='undefined'&&(typeof window===\"undefined\"?\"undefined\":_typeof(window))==='object'){\ngl=window;\n}\n\nif(typeof self!=='undefined'&&(typeof self===\"undefined\"?\"undefined\":_typeof(self))==='object'){\ngl=self;\n}\n\ngl.Jimp=Jimp;\ngl.Buffer=Buffer;\n}\n\nvar _default=Jimp;\nexports.default=_default;\n\n}).call(this,require(\"buffer\").Buffer);\n},{\"./composite\":263,\"./constants\":264,\"./modules/phash\":266,\"./request\":267,\"./utils/image-bitmap\":268,\"./utils/mime\":269,\"./utils/promisify\":270,\"@jimp/utils\":303,\"any-base\":1,\"buffer\":16,\"core-js/modules/es6.array.find\":117,\"core-js/modules/es6.array.for-each\":118,\"core-js/modules/es6.array.index-of\":120,\"core-js/modules/es6.array.is-array\":121,\"core-js/modules/es6.array.iterator\":122,\"core-js/modules/es6.date.to-string\":124,\"core-js/modules/es6.function.bind\":125,\"core-js/modules/es6.number.constructor\":126,\"core-js/modules/es6.object.assign\":127,\"core-js/modules/es6.object.create\":128,\"core-js/modules/es6.object.define-property\":129,\"core-js/modules/es6.object.set-prototype-of\":131,\"core-js/modules/es6.promise\":132,\"core-js/modules/es6.reflect.construct\":133,\"core-js/modules/es6.regexp.match\":135,\"core-js/modules/es6.regexp.replace\":136,\"core-js/modules/es6.regexp.to-string\":138,\"core-js/modules/es6.symbol\":141,\"core-js/modules/es6.typed.uint8-array\":144,\"core-js/modules/es6.typed.uint8-clamped-array\":145,\"core-js/modules/es7.object.entries\":147,\"core-js/modules/es7.symbol.async-iterator\":148,\"core-js/modules/web.dom.iterable\":149,\"events\":151,\"fs\":14,\"mkdirp\":174,\"path\":197,\"pixelmatch\":199,\"tinycolor2\":250}],266:[function(require,module,exports){\n\"use strict\";\n\n/*\nCopyright (c) 2011 Elliot Shepherd\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n// https://code.google.com/p/ironchef-team21/source/browse/ironchef_team21/src/ImagePHash.java\n\n/*\n * pHash-like image hash.\n * Author: Elliot Shepherd (elliot@jarofworms.com\n * Based On: http://www.hackerfactor.com/blog/index.php?/archives/432-Looks-Like-It.html\n */\nfunction ImagePHash(size,smallerSize){\nthis.size=this.size||size;\nthis.smallerSize=this.smallerSize||smallerSize;\ninitCoefficients(this.size);\n}\n\nImagePHash.prototype.size=32;\nImagePHash.prototype.smallerSize=8;\n\nImagePHash.prototype.distance=function(s1,s2){\nvar counter=0;\n\nfor(var k=0;k<s1.length;k++){\nif(s1[k]!==s2[k]){\ncounter++;\n}\n}\n\nreturn counter/s1.length;\n};// Returns a 'binary string' (like. 001010111011100010) which is easy to do a hamming distance on.\n\n\nImagePHash.prototype.getHash=function(img){\n/* 1. Reduce size.\n     * Like Average Hash, pHash starts with a small image.\n     * However, the image is larger than 8x8; 32x32 is a good size.\n     * This is really done to simplify the DCT computation and not\n     * because it is needed to reduce the high frequencies.\n     */\nimg=img.clone().resize(this.size,this.size);\n/* 2. Reduce color.\n     * The image is reduced to a grayscale just to further simplify\n     * the number of computations.\n     */\n\nimg.grayscale();\nvar vals=[];\n\nfor(var x=0;x<img.bitmap.width;x++){\nvals[x]=[];\n\nfor(var y=0;y<img.bitmap.height;y++){\nvals[x][y]=intToRGBA(img.getPixelColor(x,y)).b;\n}\n}\n/* 3. Compute the DCT.\n     * The DCT separates the image into a collection of frequencies\n     * and scalars. While JPEG uses an 8x8 DCT, this algorithm uses\n     * a 32x32 DCT.\n     */\n\n\nvar dctVals=applyDCT(vals,this.size);\n/* 4. Reduce the DCT.\n     * This is the magic step. While the DCT is 32x32, just keep the\n     * top-left 8x8. Those represent the lowest frequencies in the\n     * picture.\n     */\n\n/* 5. Compute the average value.\n     * Like the Average Hash, compute the mean DCT value (using only\n     * the 8x8 DCT low-frequency values and excluding the first term\n     * since the DC coefficient can be significantly different from\n     * the other values and will throw off the average).\n     */\n\nvar total=0;\n\nfor(var _x=0;_x<this.smallerSize;_x++){\nfor(var _y=0;_y<this.smallerSize;_y++){\ntotal+=dctVals[_x][_y];\n}\n}\n\nvar avg=total/(this.smallerSize*this.smallerSize);\n/* 6. Further reduce the DCT.\n     * This is the magic step. Set the 64 hash bits to 0 or 1\n     * depending on whether each of the 64 DCT values is above or\n     * below the average value. The result doesn't tell us the\n     * actual low frequencies; it just tells us the very-rough\n     * relative scale of the frequencies to the mean. The result\n     * will not vary as long as the overall structure of the image\n     * remains the same; this can survive gamma and color histogram\n     * adjustments without a problem.\n     */\n\nvar hash='';\n\nfor(var _x2=0;_x2<this.smallerSize;_x2++){\nfor(var _y2=0;_y2<this.smallerSize;_y2++){\nhash+=dctVals[_x2][_y2]>avg?'1':'0';\n}\n}\n\nreturn hash;\n};// DCT function stolen from http://stackoverflow.com/questions/4240490/problems-with-dct-and-idct-algorithm-in-java\n\n\nfunction intToRGBA(i){\nvar rgba={};\nrgba.r=Math.floor(i/Math.pow(256,3));\nrgba.g=Math.floor((i-rgba.r*Math.pow(256,3))/Math.pow(256,2));\nrgba.b=Math.floor((i-rgba.r*Math.pow(256,3)-rgba.g*Math.pow(256,2))/Math.pow(256,1));\nrgba.a=Math.floor((i-rgba.r*Math.pow(256,3)-rgba.g*Math.pow(256,2)-rgba.b*Math.pow(256,1))/Math.pow(256,0));\nreturn rgba;\n}\n\nvar c=[];\n\nfunction initCoefficients(size){\nfor(var i=1;i<size;i++){\nc[i]=1;\n}\n\nc[0]=1/Math.sqrt(2.0);\n}\n\nfunction applyDCT(f,size){\nvar N=size;\nvar F=[];\n\nfor(var u=0;u<N;u++){\nF[u]=[];\n\nfor(var v=0;v<N;v++){\nvar sum=0;\n\nfor(var i=0;i<N;i++){\nfor(var j=0;j<N;j++){\nsum+=Math.cos((2*i+1)/(2.0*N)*u*Math.PI)*Math.cos((2*j+1)/(2.0*N)*v*Math.PI)*f[i][j];\n}\n}\n\nsum*=c[u]*c[v]/4;\nF[u][v]=sum;\n}\n}\n\nreturn F;\n}\n\nmodule.exports=ImagePHash;\n\n},{}],267:[function(require,module,exports){\n(function(process,Buffer){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nfunction _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};var ownKeys=Object.keys(source);if(typeof Object.getOwnPropertySymbols==='function'){ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable;}));}ownKeys.forEach(function(key){_defineProperty(target,key,source[key]);});}return target;}\n\nfunction _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}\n\n/* global XMLHttpRequest */\nif(process.browser||\"BROWSER\"==='BROWSER'||typeof process.versions.electron!=='undefined'&&process.type==='renderer'&&typeof XMLHttpRequest==='function'){\n// If we run into a browser or the electron renderer process,\n// use XHR method instead of Request node module.\nmodule.exports=function(options,cb){\nvar xhr=new XMLHttpRequest();\nxhr.open('GET',options.url,true);\nxhr.responseType='arraybuffer';\nxhr.addEventListener('load',function(){\nif(xhr.status<400){\ntry{\nvar data=Buffer.from(this.response);\ncb(null,xhr,data);\n}catch(error){\nreturn cb(new Error('Response is not a buffer for url '+options.url+'. Error: '+error.message));\n}\n}else{\ncb(new Error('HTTP Status '+xhr.status+' for url '+options.url));\n}\n});\nxhr.addEventListener('error',function(e){\ncb(e);\n});\nxhr.send();\n};\n}else{\nmodule.exports=function(_ref,cb){\nvar options=Object.assign({},_ref);\n\nvar p=require('phin');\n\np(_objectSpread({\ncompression:true},\noptions),function(err,res){\nif(err===null){\ncb(null,res,res.body);\n}else{\ncb(err);\n}\n});\n};\n}\n\n}).call(this,require('_process'),require(\"buffer\").Buffer);\n},{\"_process\":223,\"buffer\":16,\"core-js/modules/es6.array.filter\":115,\"core-js/modules/es6.array.for-each\":118,\"core-js/modules/es6.array.iterator\":122,\"core-js/modules/es6.object.assign\":127,\"core-js/modules/es6.object.define-property\":129,\"core-js/modules/es6.object.keys\":130,\"core-js/modules/web.dom.iterable\":149,\"phin\":198}],268:[function(require,module,exports){\n(function(Buffer){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.parseBitmap=parseBitmap;\nexports.getBuffer=getBuffer;\nexports.getBufferAsync=getBufferAsync;\n\nvar _fileType=_interopRequireDefault(require(\"file-type\"));\n\nvar _exifParser=_interopRequireDefault(require(\"exif-parser\"));\n\nvar _utils=require(\"@jimp/utils\");\n\nvar constants=_interopRequireWildcard(require(\"../constants\"));\n\nvar MIME=_interopRequireWildcard(require(\"./mime\"));\n\nvar _promisify=_interopRequireDefault(require(\"./promisify\"));\n\nfunction _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}}newObj.default=obj;return newObj;}}\n\nfunction _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}\n\nfunction getMIMEFromBuffer(buffer,path){\nvar fileTypeFromBuffer=(0,_fileType.default)(buffer);\n\nif(fileTypeFromBuffer){\n// If fileType returns something for buffer, then return the mime given\nreturn fileTypeFromBuffer.mime;\n}\n\nif(path){\n// If a path is supplied, and fileType yields no results, then retry with MIME\n// Path can be either a file path or a url\nreturn MIME.getType(path);\n}\n\nreturn null;\n}\n/*\n * Automagically rotates an image based on its EXIF data (if present)\n * @param img a constants object\n*/\n\n\nfunction exifRotate(img){\nvar exif=img._exif;\n\nif(exif&&exif.tags&&exif.tags.Orientation){\nswitch(img._exif.tags.Orientation){\ncase 1:\n// Horizontal (normal)\n// do nothing\nbreak;\n\ncase 2:\n// Mirror horizontal\nimg.mirror(true,false);\nbreak;\n\ncase 3:\n// Rotate 180\nimg.rotate(180,false);\nbreak;\n\ncase 4:\n// Mirror vertical\nimg.mirror(false,true);\nbreak;\n\ncase 5:\n// Mirror horizontal and rotate 270 CW\nimg.rotate(-90,false).mirror(true,false);\nbreak;\n\ncase 6:\n// Rotate 90 CW\nimg.rotate(-90,false);\nbreak;\n\ncase 7:\n// Mirror horizontal and rotate 90 CW\nimg.rotate(90,false).mirror(true,false);\nbreak;\n\ncase 8:\n// Rotate 270 CW\nimg.rotate(-270,false);\nbreak;\n\ndefault:\nbreak;}\n\n}\n\nreturn img;\n}// parses a bitmap from the constructor to the JIMP bitmap property\n\n\nfunction parseBitmap(data,path,cb){\nvar mime=getMIMEFromBuffer(data,path);\n\nif(typeof mime!=='string'){\nreturn cb(new Error('Could not find MIME for Buffer <'+path+'>'));\n}\n\nthis._originalMime=mime.toLowerCase();\n\ntry{\nvar _mime=this.getMIME();\n\nif(this.constructor.decoders[_mime]){\nthis.bitmap=this.constructor.decoders[_mime](data);\n}else{\nreturn _utils.throwError.call(this,'Unsupported MIME type: '+_mime,cb);\n}\n}catch(error){\nreturn cb.call(this,error,this);\n}\n\ntry{\nthis._exif=_exifParser.default.create(data).parse();\nexifRotate(this);// EXIF data\n}catch(error){\n/* meh */\n}\n\ncb.call(this,null,this);\nreturn this;\n}\n\nfunction compositeBitmapOverBackground(Jimp,image){\nreturn new Jimp(image.bitmap.width,image.bitmap.height,image._background).composite(image,0,0).bitmap;\n}\n/**\n * Converts the image to a buffer\n * @param {string} mime the mime type of the image buffer to be created\n * @param {function(Error, Jimp)} cb a Node-style function to call with the buffer as the second argument\n * @returns {Jimp} this for chaining of methods\n */\n\n\nfunction getBuffer(mime,cb){\nif(mime===constants.AUTO){\n// allow auto MIME detection\nmime=this.getMIME();\n}\n\nif(typeof mime!=='string'){\nreturn _utils.throwError.call(this,'mime must be a string',cb);\n}\n\nif(typeof cb!=='function'){\nreturn _utils.throwError.call(this,'cb must be a function',cb);\n}\n\nmime=mime.toLowerCase();\n\nif(this._rgba&&this.constructor.hasAlpha[mime]){\nthis.bitmap.data=Buffer.from(this.bitmap.data);\n}else{\n// when format doesn't support alpha\n// composite onto a new image so that the background shows through alpha channels\nthis.bitmap.data=compositeBitmapOverBackground(this.constructor,this).data;\n}\n\nif(this.constructor.encoders[mime]){\nvar buffer=this.constructor.encoders[mime](this);\ncb.call(this,null,buffer);\n}else{\ncb.call(this,'Unsupported MIME type: '+mime);\n}\n\nreturn this;\n}\n\nfunction getBufferAsync(mime){\nreturn(0,_promisify.default)(getBuffer,this,mime);\n}\n\n}).call(this,require(\"buffer\").Buffer);\n},{\"../constants\":264,\"./mime\":269,\"./promisify\":270,\"@jimp/utils\":303,\"buffer\":16,\"core-js/modules/es6.object.define-property\":129,\"exif-parser\":152,\"file-type\":161}],269:[function(require,module,exports){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.getExtension=exports.getType=exports.addType=void 0;\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es7.object.entries\");\n\nrequire(\"core-js/modules/es6.array.find\");\n\nvar mimeTypes={};\n\nvar findType=function findType(extension){\nreturn Object.entries(mimeTypes).find(function(type){\nreturn type[1].includes(extension);\n})||[];\n};\n\nvar addType=function addType(mime,extensions){\nmimeTypes[mime]=extensions;\n};\n/**\n * Lookup a mime type based on extension\n * @param {string} path path to find extension for\n * @returns {string} mime found mime type\n */\n\n\nexports.addType=addType;\n\nvar getType=function getType(path){\nvar pathParts=path.split('/').slice(-1);\nvar extension=pathParts[pathParts.length-1].split('.')[1];\nvar type=findType(extension);\nreturn type[0];\n};\n/**\n * Return file extension associated with a mime type\n * @param {string} type mime type to look up\n * @returns {string} extension file extension\n */\n\n\nexports.getType=getType;\n\nvar getExtension=function getExtension(type){\nreturn(mimeTypes[type.toLowerCase()]||[])[0];\n};\n\nexports.getExtension=getExtension;\n\n},{\"core-js/modules/es6.array.find\":117,\"core-js/modules/es6.array.iterator\":122,\"core-js/modules/es6.object.define-property\":129,\"core-js/modules/es6.regexp.split\":137,\"core-js/modules/es6.string.includes\":139,\"core-js/modules/es7.array.includes\":146,\"core-js/modules/es7.object.entries\":147,\"core-js/modules/web.dom.iterable\":149}],270:[function(require,module,exports){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.default=void 0;\n\nrequire(\"core-js/modules/es6.function.bind\");\n\nrequire(\"core-js/modules/es6.promise\");\n\nvar promisify=function promisify(fun,ctx){\nfor(var _len=arguments.length,args=new Array(_len>2?_len-2:0),_key=2;_key<_len;_key++){\nargs[_key-2]=arguments[_key];\n}\n\nreturn new Promise(function(resolve,reject){\nargs.push(function(err,data){\nif(err){\nreject(err);\n}\n\nresolve(data);\n});\nfun.bind(ctx).apply(void 0,args);\n});\n};\n\nvar _default=promisify;\nexports.default=_default;\nmodule.exports=exports.default;\n\n},{\"core-js/modules/es6.function.bind\":125,\"core-js/modules/es6.object.define-property\":129,\"core-js/modules/es6.promise\":132}],271:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.default=configure;\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.array.from\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es7.object.entries\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nvar _core=_interopRequireWildcard(require(\"@jimp/core\"));\n\nfunction _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}}newObj.default=obj;return newObj;}}\n\nfunction _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_nonIterableSpread();}\n\nfunction _nonIterableSpread(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\");}\n\nfunction _iterableToArray(iter){if(Symbol.iterator in Object(iter)||Object.prototype.toString.call(iter)===\"[object Arguments]\")return Array.from(iter);}\n\nfunction _arrayWithoutHoles(arr){if(Array.isArray(arr)){for(var i=0,arr2=new Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}}\n\nfunction _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};var ownKeys=Object.keys(source);if(typeof Object.getOwnPropertySymbols==='function'){ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable;}));}ownKeys.forEach(function(key){_defineProperty(target,key,source[key]);});}return target;}\n\nfunction _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}\n\nfunction _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_nonIterableRest();}\n\nfunction _nonIterableRest(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");}\n\nfunction _iterableToArrayLimit(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i[\"return\"]!=null)_i[\"return\"]();}finally{if(_d)throw _e;}}return _arr;}\n\nfunction _arrayWithHoles(arr){if(Array.isArray(arr))return arr;}\n\nfunction configure(configuration){\nvar jimpInstance=arguments.length>1&&arguments[1]!==undefined?arguments[1]:_core.default;\nvar jimpConfig={\nhasAlpha:{},\nencoders:{},\ndecoders:{},\nclass:{},\nconstants:{}};\n\n\nfunction addToConfig(newConfig){\nObject.entries(newConfig).forEach(function(_ref){\nvar _ref2=_slicedToArray(_ref,2),\nkey=_ref2[0],\nvalue=_ref2[1];\n\njimpConfig[key]=_objectSpread({},jimpConfig[key],value);\n});\n}\n\nfunction addImageType(typeModule){\nvar type=typeModule();\n\nif(Array.isArray(type.mime)){\n_core.addType.apply(void 0,_toConsumableArray(type.mime));\n}else{\nObject.entries(type.mime).forEach(function(mimeType){\nreturn _core.addType.apply(void 0,_toConsumableArray(mimeType));\n});\n}\n\ndelete type.mime;\naddToConfig(type);\n}\n\nfunction addPlugin(pluginModule){\nvar plugin=pluginModule(_core.jimpEvChange)||{};\n\nif(!plugin.class&&!plugin.constants){\n// Default to class function\naddToConfig({\nclass:plugin});\n\n}else{\naddToConfig(plugin);\n}\n}\n\nif(configuration.types){\nconfiguration.types.forEach(addImageType);\njimpInstance.decoders=_objectSpread({},jimpInstance.decoders,jimpConfig.decoders);\njimpInstance.encoders=_objectSpread({},jimpInstance.encoders,jimpConfig.encoders);\njimpInstance.hasAlpha=_objectSpread({},jimpInstance.hasAlpha,jimpConfig.hasAlpha);\n}\n\nif(configuration.plugins){\nconfiguration.plugins.forEach(addPlugin);\n}\n\n(0,_core.addJimpMethods)(jimpConfig.class,jimpInstance);\n(0,_core.addConstants)(jimpConfig.constants,jimpInstance);\nreturn _core.default;\n}\n\nmodule.exports=exports.default;\n\n},{\"@jimp/core\":265,\"core-js/modules/es6.array.filter\":115,\"core-js/modules/es6.array.for-each\":118,\"core-js/modules/es6.array.from\":119,\"core-js/modules/es6.array.is-array\":121,\"core-js/modules/es6.array.iterator\":122,\"core-js/modules/es6.date.to-string\":124,\"core-js/modules/es6.object.define-property\":129,\"core-js/modules/es6.object.keys\":130,\"core-js/modules/es6.regexp.to-string\":138,\"core-js/modules/es6.string.iterator\":140,\"core-js/modules/es6.symbol\":141,\"core-js/modules/es7.object.entries\":147,\"core-js/modules/es7.symbol.async-iterator\":148,\"core-js/modules/web.dom.iterable\":149}],272:[function(require,module,exports){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.default=void 0;\n\nvar _custom=_interopRequireDefault(require(\"@jimp/custom\"));\n\nvar _types=_interopRequireDefault(require(\"@jimp/types\"));\n\nvar _plugins=_interopRequireDefault(require(\"@jimp/plugins\"));\n\nfunction _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}\n\nvar _default=(0,_custom.default)({\ntypes:[_types.default],\nplugins:[_plugins.default]});\n\n\nexports.default=_default;\nmodule.exports=exports.default;\n\n},{\"@jimp/custom\":271,\"@jimp/plugins\":296,\"@jimp/types\":302,\"core-js/modules/es6.object.define-property\":129}],273:[function(require,module,exports){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.default=void 0;\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nvar _utils=require(\"@jimp/utils\");\n\nfunction _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}\n\nvar _default=function _default(){\nreturn{\n/**\n     * Blits a source image on to this image\n     * @param {Jimp} src the source Jimp instance\n     * @param {number} x the x position to blit the image\n     * @param {number} y the y position to blit the image\n     * @param {number} srcx (optional) the x position from which to crop the source image\n     * @param {number} srcy (optional) the y position from which to crop the source image\n     * @param {number} srcw (optional) the width to which to crop the source image\n     * @param {number} srch (optional) the height to which to crop the source image\n     * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n     * @returns {Jimp} this for chaining of methods\n     */\nblit:function blit(src,x,y,srcx,srcy,srcw,srch,cb){\nif(!(src instanceof this.constructor)){\nreturn _utils.throwError.call(this,'The source must be a Jimp image',cb);\n}\n\nif(typeof x!=='number'||typeof y!=='number'){\nreturn _utils.throwError.call(this,'x and y must be numbers',cb);\n}\n\nif(typeof srcx==='function'){\ncb=srcx;\nsrcx=0;\nsrcy=0;\nsrcw=src.bitmap.width;\nsrch=src.bitmap.height;\n}else if(_typeof(srcx)===_typeof(srcy)&&_typeof(srcy)===_typeof(srcw)&&_typeof(srcw)===_typeof(srch)){\nsrcx=srcx||0;\nsrcy=srcy||0;\nsrcw=srcw||src.bitmap.width;\nsrch=srch||src.bitmap.height;\n}else{\nreturn _utils.throwError.call(this,'srcx, srcy, srcw, srch must be numbers',cb);\n}// round input\n\n\nx=Math.round(x);\ny=Math.round(y);// round input\n\nsrcx=Math.round(srcx);\nsrcy=Math.round(srcy);\nsrcw=Math.round(srcw);\nsrch=Math.round(srch);\nvar maxWidth=this.bitmap.width;\nvar maxHeight=this.bitmap.height;\nvar baseImage=this;\nsrc.scanQuiet(srcx,srcy,srcw,srch,function(sx,sy,idx){\nvar xOffset=x+sx-srcx;\nvar yOffset=y+sy-srcy;\n\nif(xOffset>=0&&yOffset>=0&&maxWidth-xOffset>0&&maxHeight-yOffset>0){\nvar dstIdx=baseImage.getPixelIndex(xOffset,yOffset);\nvar _src={\nr:this.bitmap.data[idx],\ng:this.bitmap.data[idx+1],\nb:this.bitmap.data[idx+2],\na:this.bitmap.data[idx+3]};\n\nvar dst={\nr:baseImage.bitmap.data[dstIdx],\ng:baseImage.bitmap.data[dstIdx+1],\nb:baseImage.bitmap.data[dstIdx+2],\na:baseImage.bitmap.data[dstIdx+3]};\n\nbaseImage.bitmap.data[dstIdx]=(_src.a*(_src.r-dst.r)-dst.r+255>>8)+dst.r;\nbaseImage.bitmap.data[dstIdx+1]=(_src.a*(_src.g-dst.g)-dst.g+255>>8)+dst.g;\nbaseImage.bitmap.data[dstIdx+2]=(_src.a*(_src.b-dst.b)-dst.b+255>>8)+dst.b;\nbaseImage.bitmap.data[dstIdx+3]=this.constructor.limit255(dst.a+_src.a);\n}\n});\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n}};\n\n};\n\nexports.default=_default;\nmodule.exports=exports.default;\n\n},{\"@jimp/utils\":303,\"core-js/modules/es6.object.define-property\":129,\"core-js/modules/es6.symbol\":141,\"core-js/modules/es7.symbol.async-iterator\":148}],274:[function(require,module,exports){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.shgTable=exports.mulTable=void 0;\nvar mulTable=[1,57,41,21,203,34,97,73,227,91,149,62,105,45,39,137,241,107,3,173,39,71,65,238,219,101,187,87,81,151,141,133,249,117,221,209,197,187,177,169,5,153,73,139,133,127,243,233,223,107,103,99,191,23,177,171,165,159,77,149,9,139,135,131,253,245,119,231,224,109,211,103,25,195,189,23,45,175,171,83,81,79,155,151,147,9,141,137,67,131,129,251,123,30,235,115,113,221,217,53,13,51,50,49,193,189,185,91,179,175,43,169,83,163,5,79,155,19,75,147,145,143,35,69,17,67,33,65,255,251,247,243,239,59,29,229,113,111,219,27,213,105,207,51,201,199,49,193,191,47,93,183,181,179,11,87,43,85,167,165,163,161,159,157,155,77,19,75,37,73,145,143,141,35,138,137,135,67,33,131,129,255,63,250,247,61,121,239,237,117,29,229,227,225,111,55,109,216,213,211,209,207,205,203,201,199,197,195,193,48,190,47,93,185,183,181,179,178,176,175,173,171,85,21,167,165,41,163,161,5,79,157,78,154,153,19,75,149,74,147,73,144,143,71,141,140,139,137,17,135,134,133,66,131,65,129,1];\nexports.mulTable=mulTable;\nvar shgTable=[0,9,10,10,14,12,14,14,16,15,16,15,16,15,15,17,18,17,12,18,16,17,17,19,19,18,19,18,18,19,19,19,20,19,20,20,20,20,20,20,15,20,19,20,20,20,21,21,21,20,20,20,21,18,21,21,21,21,20,21,17,21,21,21,22,22,21,22,22,21,22,21,19,22,22,19,20,22,22,21,21,21,22,22,22,18,22,22,21,22,22,23,22,20,23,22,22,23,23,21,19,21,21,21,23,23,23,22,23,23,21,23,22,23,18,22,23,20,22,23,23,23,21,22,20,22,21,22,24,24,24,24,24,22,21,24,23,23,24,21,24,23,24,22,24,24,22,24,24,22,23,24,24,24,20,23,22,23,24,24,24,24,24,24,24,23,21,23,22,23,24,24,24,22,24,24,24,23,22,24,24,25,23,25,25,23,24,25,25,24,22,25,25,25,24,23,24,25,25,25,25,25,25,25,25,25,25,25,25,23,25,23,24,25,25,25,25,25,25,25,25,25,24,22,25,25,23,25,25,20,24,25,24,25,25,22,24,25,24,25,24,25,25,24,25,25,25,25,22,25,25,25,24,25,24,25,18];\nexports.shgTable=shgTable;\n\n},{\"core-js/modules/es6.object.define-property\":129}],275:[function(require,module,exports){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.default=void 0;\n\nvar _utils=require(\"@jimp/utils\");\n\nvar _blurTables=require(\"./blur-tables\");\n\n/*\n    Superfast Blur (0.5)\n    http://www.quasimondo.com/BoxBlurForCanvas/FastBlur.js\n\n    Copyright (c) 2011 Mario Klingemann\n\n    Permission is hereby granted, free of charge, to any person\n    obtaining a copy of this software and associated documentation\n    files (the \"Software\"), to deal in the Software without\n    restriction, including without limitation the rights to use,\n    copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the\n    Software is furnished to do so, subject to the following\n    conditions:\n\n    The above copyright notice and this permission notice shall be\n    included in all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n    OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n    OTHER DEALINGS IN THE SOFTWARE.\n*/\nvar _default=function _default(){\nreturn{\n/**\n     * A fast blur algorithm that produces similar effect to a Gaussian blur - but MUCH quicker\n     * @param {number} r the pixel radius of the blur\n     * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n     * @returns {Jimp} this for chaining of methods\n     */\nblur:function blur(r,cb){\nif(typeof r!=='number')return _utils.throwError.call(this,'r must be a number',cb);\nif(r<1)return _utils.throwError.call(this,'r must be greater than 0',cb);\nvar rsum;\nvar gsum;\nvar bsum;\nvar asum;\nvar x;\nvar y;\nvar i;\nvar p;\nvar p1;\nvar p2;\nvar yp;\nvar yi;\nvar yw;\nvar pa;\nvar wm=this.bitmap.width-1;\nvar hm=this.bitmap.height-1;// const wh = this.bitmap.width * this.bitmap.height;\n\nvar rad1=r+1;\nvar mulSum=_blurTables.mulTable[r];\nvar shgSum=_blurTables.shgTable[r];\nvar red=[];\nvar green=[];\nvar blue=[];\nvar alpha=[];\nvar vmin=[];\nvar vmax=[];\nvar iterations=2;\n\nwhile(iterations-->0){\nyi=0;\nyw=0;\n\nfor(y=0;y<this.bitmap.height;y++){\nrsum=this.bitmap.data[yw]*rad1;\ngsum=this.bitmap.data[yw+1]*rad1;\nbsum=this.bitmap.data[yw+2]*rad1;\nasum=this.bitmap.data[yw+3]*rad1;\n\nfor(i=1;i<=r;i++){\np=yw+((i>wm?wm:i)<<2);\nrsum+=this.bitmap.data[p++];\ngsum+=this.bitmap.data[p++];\nbsum+=this.bitmap.data[p++];\nasum+=this.bitmap.data[p];\n}\n\nfor(x=0;x<this.bitmap.width;x++){\nred[yi]=rsum;\ngreen[yi]=gsum;\nblue[yi]=bsum;\nalpha[yi]=asum;\n\nif(y===0){\nvmin[x]=((p=x+rad1)<wm?p:wm)<<2;\nvmax[x]=(p=x-r)>0?p<<2:0;\n}\n\np1=yw+vmin[x];\np2=yw+vmax[x];\nrsum+=this.bitmap.data[p1++]-this.bitmap.data[p2++];\ngsum+=this.bitmap.data[p1++]-this.bitmap.data[p2++];\nbsum+=this.bitmap.data[p1++]-this.bitmap.data[p2++];\nasum+=this.bitmap.data[p1]-this.bitmap.data[p2];\nyi++;\n}\n\nyw+=this.bitmap.width<<2;\n}\n\nfor(x=0;x<this.bitmap.width;x++){\nyp=x;\nrsum=red[yp]*rad1;\ngsum=green[yp]*rad1;\nbsum=blue[yp]*rad1;\nasum=alpha[yp]*rad1;\n\nfor(i=1;i<=r;i++){\nyp+=i>hm?0:this.bitmap.width;\nrsum+=red[yp];\ngsum+=green[yp];\nbsum+=blue[yp];\nasum+=alpha[yp];\n}\n\nyi=x<<2;\n\nfor(y=0;y<this.bitmap.height;y++){\npa=asum*mulSum>>>shgSum;\nthis.bitmap.data[yi+3]=pa;// normalize alpha\n\nif(pa>255){\nthis.bitmap.data[yi+3]=255;\n}\n\nif(pa>0){\npa=255/pa;\nthis.bitmap.data[yi]=(rsum*mulSum>>>shgSum)*pa;\nthis.bitmap.data[yi+1]=(gsum*mulSum>>>shgSum)*pa;\nthis.bitmap.data[yi+2]=(bsum*mulSum>>>shgSum)*pa;\n}else{\nthis.bitmap.data[yi+2]=0;\nthis.bitmap.data[yi+1]=0;\nthis.bitmap.data[yi]=0;\n}\n\nif(x===0){\nvmin[y]=((p=y+rad1)<hm?p:hm)*this.bitmap.width;\nvmax[y]=(p=y-r)>0?p*this.bitmap.width:0;\n}\n\np1=x+vmin[y];\np2=x+vmax[y];\nrsum+=red[p1]-red[p2];\ngsum+=green[p1]-green[p2];\nbsum+=blue[p1]-blue[p2];\nasum+=alpha[p1]-alpha[p2];\nyi+=this.bitmap.width<<2;\n}\n}\n}\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n}};\n\n};\n\nexports.default=_default;\nmodule.exports=exports.default;\n\n},{\"./blur-tables\":274,\"@jimp/utils\":303,\"core-js/modules/es6.object.define-property\":129}],276:[function(require,module,exports){\n(function(Buffer){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.default=void 0;\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.array.from\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nvar _tinycolor=_interopRequireDefault(require(\"tinycolor2\"));\n\nvar _utils=require(\"@jimp/utils\");\n\nfunction _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}\n\nfunction _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_nonIterableSpread();}\n\nfunction _nonIterableSpread(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\");}\n\nfunction _iterableToArray(iter){if(Symbol.iterator in Object(iter)||Object.prototype.toString.call(iter)===\"[object Arguments]\")return Array.from(iter);}\n\nfunction _arrayWithoutHoles(arr){if(Array.isArray(arr)){for(var i=0,arr2=new Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}}\n\nfunction applyKernel(im,kernel,x,y){\nvar value=[0,0,0];\nvar size=(kernel.length-1)/2;\n\nfor(var kx=0;kx<kernel.length;kx+=1){\nfor(var ky=0;ky<kernel[kx].length;ky+=1){\nvar idx=im.getPixelIndex(x+kx-size,y+ky-size);\nvalue[0]+=im.bitmap.data[idx]*kernel[kx][ky];\nvalue[1]+=im.bitmap.data[idx+1]*kernel[kx][ky];\nvalue[2]+=im.bitmap.data[idx+2]*kernel[kx][ky];\n}\n}\n\nreturn value;\n}\n\nvar isDef=function isDef(v){\nreturn typeof v!=='undefined'&&v!==null;\n};\n\nfunction greyscale(cb){\nthis.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(x,y,idx){\nvar grey=parseInt(0.2126*this.bitmap.data[idx]+0.7152*this.bitmap.data[idx+1]+0.0722*this.bitmap.data[idx+2],10);\nthis.bitmap.data[idx]=grey;\nthis.bitmap.data[idx+1]=grey;\nthis.bitmap.data[idx+2]=grey;\n});\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n}\n\nfunction mix(clr,clr2){\nvar p=arguments.length>2&&arguments[2]!==undefined?arguments[2]:50;\nreturn{\nr:(clr2.r-clr.r)*(p/100)+clr.r,\ng:(clr2.g-clr.g)*(p/100)+clr.g,\nb:(clr2.b-clr.b)*(p/100)+clr.b};\n\n}\n\nfunction colorFn(actions,cb){\nvar _this=this;\n\nif(!actions||!Array.isArray(actions)){\nreturn _utils.throwError.call(this,'actions must be an array',cb);\n}\n\nactions=actions.map(function(action){\nif(action.apply==='xor'||action.apply==='mix'){\naction.params[0]=(0,_tinycolor.default)(action.params[0]).toRgb();\n}\n\nreturn action;\n});\nthis.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(x,y,idx){\nvar clr={\nr:_this.bitmap.data[idx],\ng:_this.bitmap.data[idx+1],\nb:_this.bitmap.data[idx+2]};\n\n\nvar colorModifier=function colorModifier(i,amount){\nreturn _this.constructor.limit255(clr[i]+amount);\n};\n\nactions.forEach(function(action){\nif(action.apply==='mix'){\nclr=mix(clr,action.params[0],action.params[1]);\n}else if(action.apply==='tint'){\nclr=mix(clr,{\nr:255,\ng:255,\nb:255},\naction.params[0]);\n}else if(action.apply==='shade'){\nclr=mix(clr,{\nr:0,\ng:0,\nb:0},\naction.params[0]);\n}else if(action.apply==='xor'){\nclr={\nr:clr.r^action.params[0].r,\ng:clr.g^action.params[0].g,\nb:clr.b^action.params[0].b};\n\n}else if(action.apply==='red'){\nclr.r=colorModifier('r',action.params[0]);\n}else if(action.apply==='green'){\nclr.g=colorModifier('g',action.params[0]);\n}else if(action.apply==='blue'){\nclr.b=colorModifier('b',action.params[0]);\n}else{\nvar _clr;\n\nif(action.apply==='hue'){\naction.apply='spin';\n}\n\nclr=(0,_tinycolor.default)(clr);\n\nif(!clr[action.apply]){\nreturn _utils.throwError.call(_this,'action '+action.apply+' not supported',cb);\n}\n\nclr=(_clr=clr)[action.apply].apply(_clr,_toConsumableArray(action.params)).toRgb();\n}\n});\n_this.bitmap.data[idx]=clr.r;\n_this.bitmap.data[idx+1]=clr.g;\n_this.bitmap.data[idx+2]=clr.b;\n});\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n}\n\nvar _default=function _default(){\nreturn{\n/**\n     * Adjusts the brightness of the image\n     * @param {number} val the amount to adjust the brightness, a number between -1 and +1\n     * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n     * @returns {Jimp }this for chaining of methods\n     */\nbrightness:function brightness(val,cb){\nif(typeof val!=='number'){\nreturn _utils.throwError.call(this,'val must be numbers',cb);\n}\n\nif(val<-1||val>+1){\nreturn _utils.throwError.call(this,'val must be a number between -1 and +1',cb);\n}\n\nthis.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(x,y,idx){\nif(val<0.0){\nthis.bitmap.data[idx]=this.bitmap.data[idx]*(1+val);\nthis.bitmap.data[idx+1]=this.bitmap.data[idx+1]*(1+val);\nthis.bitmap.data[idx+2]=this.bitmap.data[idx+2]*(1+val);\n}else{\nthis.bitmap.data[idx]=this.bitmap.data[idx]+(255-this.bitmap.data[idx])*val;\nthis.bitmap.data[idx+1]=this.bitmap.data[idx+1]+(255-this.bitmap.data[idx+1])*val;\nthis.bitmap.data[idx+2]=this.bitmap.data[idx+2]+(255-this.bitmap.data[idx+2])*val;\n}\n});\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n},\n\n/**\n     * Adjusts the contrast of the image\n     * @param {number} val the amount to adjust the contrast, a number between -1 and +1\n     * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n     * @returns {Jimp }this for chaining of methods\n     */\ncontrast:function contrast(val,cb){\nif(typeof val!=='number'){\nreturn _utils.throwError.call(this,'val must be numbers',cb);\n}\n\nif(val<-1||val>+1){\nreturn _utils.throwError.call(this,'val must be a number between -1 and +1',cb);\n}\n\nvar factor=(val+1)/(1-val);\n\nfunction adjust(value){\nvalue=Math.floor(factor*(value-127)+127);\nreturn value<0?0:value>255?255:value;\n}\n\nthis.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(x,y,idx){\nthis.bitmap.data[idx]=adjust(this.bitmap.data[idx]);\nthis.bitmap.data[idx+1]=adjust(this.bitmap.data[idx+1]);\nthis.bitmap.data[idx+2]=adjust(this.bitmap.data[idx+2]);\n});\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n},\n\n/**\n     * Apply a posterize effect\n     * @param {number} n the amount to adjust the contrast, minimum threshold is two\n     * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n     * @returns {Jimp }this for chaining of methods\n     */\nposterize:function posterize(n,cb){\nif(typeof n!=='number'){\nreturn _utils.throwError.call(this,'n must be numbers',cb);\n}\n\nif(n<2){\nn=2;\n}// minimum of 2 levels\n\n\nthis.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(x,y,idx){\nthis.bitmap.data[idx]=Math.floor(this.bitmap.data[idx]/255*(n-1))/(n-1)*255;\nthis.bitmap.data[idx+1]=Math.floor(this.bitmap.data[idx+1]/255*(n-1))/(n-1)*255;\nthis.bitmap.data[idx+2]=Math.floor(this.bitmap.data[idx+2]/255*(n-1))/(n-1)*255;\n});\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n},\n\n/**\n     * Removes colour from the image using ITU Rec 709 luminance values\n     * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n     * @returns {Jimp }this for chaining of methods\n     */\ngreyscale:greyscale,\n// Alias of greyscale for our American friends\ngrayscale:greyscale,\n\n/**\n     * Multiplies the opacity of each pixel by a factor between 0 and 1\n     * @param {number} f A number, the factor by which to multiply the opacity of each pixel\n     * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n     * @returns {Jimp }this for chaining of methods\n     */\nopacity:function opacity(f,cb){\nif(typeof f!=='number')return _utils.throwError.call(this,'f must be a number',cb);\nif(f<0||f>1)return _utils.throwError.call(this,'f must be a number from 0 to 1',cb);\nthis.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(x,y,idx){\nvar v=this.bitmap.data[idx+3]*f;\nthis.bitmap.data[idx+3]=v;\n});\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n},\n\n/**\n     * Applies a sepia tone to the image\n     * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n     * @returns {Jimp }this for chaining of methods\n     */\nsepia:function sepia(cb){\nthis.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(x,y,idx){\nvar red=this.bitmap.data[idx];\nvar green=this.bitmap.data[idx+1];\nvar blue=this.bitmap.data[idx+2];\nred=red*0.393+green*0.769+blue*0.189;\ngreen=red*0.349+green*0.686+blue*0.168;\nblue=red*0.272+green*0.534+blue*0.131;\nthis.bitmap.data[idx]=red<255?red:255;\nthis.bitmap.data[idx+1]=green<255?green:255;\nthis.bitmap.data[idx+2]=blue<255?blue:255;\n});\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n},\n\n/**\n     * Fades each pixel by a factor between 0 and 1\n     * @param {number} f A number from 0 to 1. 0 will haven no effect. 1 will turn the image completely transparent.\n     * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n     * @returns {Jimp }this for chaining of methods\n     */\nfade:function fade(f,cb){\nif(typeof f!=='number'){\nreturn _utils.throwError.call(this,'f must be a number',cb);\n}\n\nif(f<0||f>1){\nreturn _utils.throwError.call(this,'f must be a number from 0 to 1',cb);\n}// this method is an alternative to opacity (which may be deprecated)\n\n\nthis.opacity(1-f);\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n},\n\n/**\n     * Adds each element of the image to its local neighbors, weighted by the kernel\n     * @param {array} kernel a matrix to weight the neighbors sum\n     * @param {string} edgeHandling (optional) define how to sum pixels from outside the border\n     * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n     * @returns {Jimp }this for chaining of methods\n     */\nconvolution:function convolution(kernel,edgeHandling,cb){\nif(typeof edgeHandling==='function'&&typeof cb==='undefined'){\ncb=edgeHandling;\nedgeHandling=null;\n}\n\nif(!edgeHandling){\nedgeHandling=this.constructor.EDGE_EXTEND;\n}\n\nvar newData=Buffer.from(this.bitmap.data);\nvar kRows=kernel.length;\nvar kCols=kernel[0].length;\nvar rowEnd=Math.floor(kRows/2);\nvar colEnd=Math.floor(kCols/2);\nvar rowIni=-rowEnd;\nvar colIni=-colEnd;\nvar weight;\nvar rSum;\nvar gSum;\nvar bSum;\nvar ri;\nvar gi;\nvar bi;\nvar xi;\nvar yi;\nvar idxi;\nthis.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(x,y,idx){\nbSum=0;\ngSum=0;\nrSum=0;\n\nfor(var row=rowIni;row<=rowEnd;row++){\nfor(var col=colIni;col<=colEnd;col++){\nxi=x+col;\nyi=y+row;\nweight=kernel[row+rowEnd][col+colEnd];\nidxi=this.getPixelIndex(xi,yi,edgeHandling);\n\nif(idxi===-1){\nbi=0;\ngi=0;\nri=0;\n}else{\nri=this.bitmap.data[idxi+0];\ngi=this.bitmap.data[idxi+1];\nbi=this.bitmap.data[idxi+2];\n}\n\nrSum+=weight*ri;\ngSum+=weight*gi;\nbSum+=weight*bi;\n}\n}\n\nif(rSum<0){\nrSum=0;\n}\n\nif(gSum<0){\ngSum=0;\n}\n\nif(bSum<0){\nbSum=0;\n}\n\nif(rSum>255){\nrSum=255;\n}\n\nif(gSum>255){\ngSum=255;\n}\n\nif(bSum>255){\nbSum=255;\n}\n\nnewData[idx+0]=rSum;\nnewData[idx+1]=gSum;\nnewData[idx+2]=bSum;\n});\nthis.bitmap.data=newData;\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n},\n\n/**\n     * Set the alpha channel on every pixel to fully opaque\n     * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n     * @returns {Jimp }this for chaining of methods\n     */\nopaque:function opaque(cb){\nthis.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(x,y,idx){\nthis.bitmap.data[idx+3]=255;\n});\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n},\n\n/**\n     * Pixelates the image or a region\n     * @param {number} size the size of the pixels\n     * @param {number} x (optional) the x position of the region to pixelate\n     * @param {number} y (optional) the y position of the region to pixelate\n     * @param {number} w (optional) the width of the region to pixelate\n     * @param {number} h (optional) the height of the region to pixelate\n     * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n     * @returns {Jimp }this for chaining of methods\n     */\npixelate:function pixelate(size,x,y,w,h,cb){\nif(typeof x==='function'){\ncb=x;\nh=null;\nw=null;\ny=null;\nx=null;\n}else{\nif(typeof size!=='number'){\nreturn _utils.throwError.call(this,'size must be a number',cb);\n}\n\nif(isDef(x)&&typeof x!=='number'){\nreturn _utils.throwError.call(this,'x must be a number',cb);\n}\n\nif(isDef(y)&&typeof y!=='number'){\nreturn _utils.throwError.call(this,'y must be a number',cb);\n}\n\nif(isDef(w)&&typeof w!=='number'){\nreturn _utils.throwError.call(this,'w must be a number',cb);\n}\n\nif(isDef(h)&&typeof h!=='number'){\nreturn _utils.throwError.call(this,'h must be a number',cb);\n}\n}\n\nvar kernel=[[1/16,2/16,1/16],[2/16,4/16,2/16],[1/16,2/16,1/16]];\nx=x||0;\ny=y||0;\nw=isDef(w)?w:this.bitmap.width-x;\nh=isDef(h)?h:this.bitmap.height-y;\nvar source=this.cloneQuiet();\nthis.scanQuiet(x,y,w,h,function(xx,yx,idx){\nxx=size*Math.floor(xx/size);\nyx=size*Math.floor(yx/size);\nvar value=applyKernel(source,kernel,xx,yx);\nthis.bitmap.data[idx]=value[0];\nthis.bitmap.data[idx+1]=value[1];\nthis.bitmap.data[idx+2]=value[2];\n});\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n},\n\n/**\n     * Applies a convolution kernel to the image or a region\n     * @param {array} kernel the convolution kernel\n     * @param {number} x (optional) the x position of the region to apply convolution to\n     * @param {number} y (optional) the y position of the region to apply convolution to\n     * @param {number} w (optional) the width of the region to apply convolution to\n     * @param {number} h (optional) the height of the region to apply convolution to\n     * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n     * @returns {Jimp }this for chaining of methods\n     */\nconvolute:function convolute(kernel,x,y,w,h,cb){\nif(!Array.isArray(kernel))return _utils.throwError.call(this,'the kernel must be an array',cb);\n\nif(typeof x==='function'){\ncb=x;\nx=null;\ny=null;\nw=null;\nh=null;\n}else{\nif(isDef(x)&&typeof x!=='number'){\nreturn _utils.throwError.call(this,'x must be a number',cb);\n}\n\nif(isDef(y)&&typeof y!=='number'){\nreturn _utils.throwError.call(this,'y must be a number',cb);\n}\n\nif(isDef(w)&&typeof w!=='number'){\nreturn _utils.throwError.call(this,'w must be a number',cb);\n}\n\nif(isDef(h)&&typeof h!=='number'){\nreturn _utils.throwError.call(this,'h must be a number',cb);\n}\n}\n\nvar ksize=(kernel.length-1)/2;\nx=isDef(x)?x:ksize;\ny=isDef(y)?y:ksize;\nw=isDef(w)?w:this.bitmap.width-x;\nh=isDef(h)?h:this.bitmap.height-y;\nvar source=this.cloneQuiet();\nthis.scanQuiet(x,y,w,h,function(xx,yx,idx){\nvar value=applyKernel(source,kernel,xx,yx);\nthis.bitmap.data[idx]=this.constructor.limit255(value[0]);\nthis.bitmap.data[idx+1]=this.constructor.limit255(value[1]);\nthis.bitmap.data[idx+2]=this.constructor.limit255(value[2]);\n});\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n},\n\n/**\n     * Apply multiple color modification rules\n     * @param {array} actions list of color modification rules, in following format: { apply: '<rule-name>', params: [ <rule-parameters> ]  }\n     * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n     * @returns {Jimp }this for chaining of methods\n     */\ncolor:colorFn,\ncolour:colorFn};\n\n};\n\nexports.default=_default;\nmodule.exports=exports.default;\n\n}).call(this,require(\"buffer\").Buffer);\n},{\"@jimp/utils\":303,\"buffer\":16,\"core-js/modules/es6.array.for-each\":118,\"core-js/modules/es6.array.from\":119,\"core-js/modules/es6.array.is-array\":121,\"core-js/modules/es6.array.map\":123,\"core-js/modules/es6.date.to-string\":124,\"core-js/modules/es6.object.define-property\":129,\"core-js/modules/es6.regexp.to-string\":138,\"core-js/modules/es6.string.iterator\":140,\"core-js/modules/es6.symbol\":141,\"core-js/modules/es7.symbol.async-iterator\":148,\"core-js/modules/web.dom.iterable\":149,\"tinycolor2\":250}],277:[function(require,module,exports){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.default=void 0;\n\nvar _utils=require(\"@jimp/utils\");\n\n/**\n * Scale the image to the given width and height keeping the aspect ratio. Some parts of the image may be letter boxed.\n * @param {number} w the width to resize the image to\n * @param {number} h the height to resize the image to\n * @param {number} alignBits (optional) A bitmask for horizontal and vertical alignment\n * @param {string} mode (optional) a scaling method (e.g. Jimp.RESIZE_BEZIER)\n * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n * @returns {Jimp} this for chaining of methods\n */\nvar _default=function _default(){\nreturn{\ncontain:function contain(w,h,alignBits,mode,cb){\nif(typeof w!=='number'||typeof h!=='number'){\nreturn _utils.throwError.call(this,'w and h must be numbers',cb);\n}// permit any sort of optional parameters combination\n\n\nif(typeof alignBits==='string'){\nif(typeof mode==='function'&&typeof cb==='undefined')cb=mode;\nmode=alignBits;\nalignBits=null;\n}\n\nif(typeof alignBits==='function'){\nif(typeof cb==='undefined')cb=alignBits;\nmode=null;\nalignBits=null;\n}\n\nif(typeof mode==='function'&&typeof cb==='undefined'){\ncb=mode;\nmode=null;\n}\n\nalignBits=alignBits||this.constructor.HORIZONTAL_ALIGN_CENTER|this.constructor.VERTICAL_ALIGN_MIDDLE;\nvar hbits=alignBits&(1<<3)-1;\nvar vbits=alignBits>>3;// check if more flags than one is in the bit sets\n\nif(!(hbits!==0&&!(hbits&hbits-1)||vbits!==0&&!(vbits&vbits-1))){\nreturn _utils.throwError.call(this,'only use one flag per alignment direction',cb);\n}\n\nvar alignH=hbits>>1;// 0, 1, 2\n\nvar alignV=vbits>>1;// 0, 1, 2\n\nvar f=w/h>this.bitmap.width/this.bitmap.height?h/this.bitmap.height:w/this.bitmap.width;\nvar c=this.cloneQuiet().scale(f,mode);\nthis.resize(w,h,mode);\nthis.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(x,y,idx){\nthis.bitmap.data.writeUInt32BE(this._background,idx);\n});\nthis.blit(c,(this.bitmap.width-c.bitmap.width)/2*alignH,(this.bitmap.height-c.bitmap.height)/2*alignV);\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n}};\n\n};\n\nexports.default=_default;\nmodule.exports=exports.default;\n\n},{\"@jimp/utils\":303,\"core-js/modules/es6.object.define-property\":129}],278:[function(require,module,exports){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.default=void 0;\n\nvar _utils=require(\"@jimp/utils\");\n\n/**\n * Scale the image so the given width and height keeping the aspect ratio. Some parts of the image may be clipped.\n * @param {number} w the width to resize the image to\n * @param {number} h the height to resize the image to\n * @param {number} alignBits (optional) A bitmask for horizontal and vertical alignment\n * @param {string} mode (optional) a scaling method (e.g. Jimp.RESIZE_BEZIER)\n * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n * @returns {Jimp} this for chaining of methods\n */\nvar _default=function _default(){\nreturn{\ncover:function cover(w,h,alignBits,mode,cb){\nif(typeof w!=='number'||typeof h!=='number'){\nreturn _utils.throwError.call(this,'w and h must be numbers',cb);\n}\n\nif(alignBits&&typeof alignBits==='function'&&typeof cb==='undefined'){\ncb=alignBits;\nalignBits=null;\nmode=null;\n}else if(typeof mode==='function'&&typeof cb==='undefined'){\ncb=mode;\nmode=null;\n}\n\nalignBits=alignBits||this.constructor.HORIZONTAL_ALIGN_CENTER|this.constructor.VERTICAL_ALIGN_MIDDLE;\nvar hbits=alignBits&(1<<3)-1;\nvar vbits=alignBits>>3;// check if more flags than one is in the bit sets\n\nif(!(hbits!==0&&!(hbits&hbits-1)||vbits!==0&&!(vbits&vbits-1)))return _utils.throwError.call(this,'only use one flag per alignment direction',cb);\nvar alignH=hbits>>1;// 0, 1, 2\n\nvar alignV=vbits>>1;// 0, 1, 2\n\nvar f=w/h>this.bitmap.width/this.bitmap.height?w/this.bitmap.width:h/this.bitmap.height;\nthis.scale(f,mode);\nthis.crop((this.bitmap.width-w)/2*alignH,(this.bitmap.height-h)/2*alignV,w,h);\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n}};\n\n};\n\nexports.default=_default;\nmodule.exports=exports.default;\n\n},{\"@jimp/utils\":303,\"core-js/modules/es6.object.define-property\":129}],279:[function(require,module,exports){\n(function(Buffer){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.default=pluginCrop;\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nvar _utils=require(\"@jimp/utils\");\n\nfunction _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}\n\nfunction pluginCrop(event){\n/**\n   * Crops the image at a given point to a give size\n   * @param {number} x the x coordinate to crop form\n   * @param {number} y the y coordinate to crop form\n   * @param w the width of the crop region\n   * @param h the height of the crop region\n   * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n   * @returns {Jimp} this for chaining of methods\n   */\nevent('crop',function(x,y,w,h,cb){\nif(typeof x!=='number'||typeof y!=='number')return _utils.throwError.call(this,'x and y must be numbers',cb);\nif(typeof w!=='number'||typeof h!=='number')return _utils.throwError.call(this,'w and h must be numbers',cb);// round input\n\nx=Math.round(x);\ny=Math.round(y);\nw=Math.round(w);\nh=Math.round(h);\n\nif(x===0&&w===this.bitmap.width){\n// shortcut\nvar start=w*y+x<<2;\nvar end=start+h*w<<2+1;\nthis.bitmap.data=this.bitmap.data.slice(start,end);\n}else{\nvar bitmap=Buffer.allocUnsafe(w*h*4);\nvar offset=0;\nthis.scanQuiet(x,y,w,h,function(x,y,idx){\nvar data=this.bitmap.data.readUInt32BE(idx,true);\nbitmap.writeUInt32BE(data,offset,true);\noffset+=4;\n});\nthis.bitmap.data=bitmap;\n}\n\nthis.bitmap.width=w;\nthis.bitmap.height=h;\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n});\nreturn{\nclass:{\n/**\n       * Autocrop same color borders from this image\n       * @param {number} tolerance (optional): a percent value of tolerance for pixels color difference (default: 0.0002%)\n       * @param {boolean} cropOnlyFrames (optional): flag to crop only real frames: all 4 sides of the image must have some border (default: true)\n       * @param {function(Error, Jimp)} cb (optional): a callback for when complete (default: no callback)\n       * @returns {Jimp} this for chaining of methods\n       */\nautocrop:function autocrop(){\nvar w=this.bitmap.width;\nvar h=this.bitmap.height;\nvar minPixelsPerSide=1;// to avoid cropping completely the image, resulting in an invalid 0 sized image\n\nvar cb;// callback\n\nvar leaveBorder=0;// Amount of pixels in border to leave\n\nvar tolerance=0.0002;// percent of color difference tolerance (default value)\n\nvar cropOnlyFrames=true;// flag to force cropping only if the image has a real \"frame\"\n// i.e. all 4 sides have some border (default value)\n\nvar cropSymmetric=false;// flag to force cropping top be symmetric.\n// i.e. north and south / east and west are cropped by the same value\n// parse arguments\n\nfor(var a=0,len=arguments.length;a<len;a++){\nif(typeof(a<0||arguments.length<=a?undefined:arguments[a])==='number'){\n// tolerance value passed\ntolerance=a<0||arguments.length<=a?undefined:arguments[a];\n}\n\nif(typeof(a<0||arguments.length<=a?undefined:arguments[a])==='boolean'){\n// cropOnlyFrames value passed\ncropOnlyFrames=a<0||arguments.length<=a?undefined:arguments[a];\n}\n\nif(typeof(a<0||arguments.length<=a?undefined:arguments[a])==='function'){\n// callback value passed\ncb=a<0||arguments.length<=a?undefined:arguments[a];\n}\n\nif(_typeof(a<0||arguments.length<=a?undefined:arguments[a])==='object'){\n// config object passed\nvar config=a<0||arguments.length<=a?undefined:arguments[a];\n\nif(typeof config.tolerance!=='undefined'){\ntolerance=config.tolerance;\n}\n\nif(typeof config.cropOnlyFrames!=='undefined'){\ncropOnlyFrames=config.cropOnlyFrames;\n}\n\nif(typeof config.cropSymmetric!=='undefined'){\ncropSymmetric=config.cropSymmetric;\n}\n\nif(typeof config.leaveBorder!=='undefined'){\nleaveBorder=config.leaveBorder;\n}\n}\n}\n/**\n         * All borders must be of the same color as the top left pixel, to be cropped.\n         * It should be possible to crop borders each with a different color,\n         * but since there are many ways for corners to intersect, it would\n         * introduce unnecessary complexity to the algorithm.\n         */\n// scan each side for same color borders\n\n\nvar colorTarget=this.getPixelColor(0,0);// top left pixel color is the target color\n\nvar rgba1=this.constructor.intToRGBA(colorTarget);// for north and east sides\n\nvar northPixelsToCrop=0;\nvar eastPixelsToCrop=0;\nvar southPixelsToCrop=0;\nvar westPixelsToCrop=0;// north side (scan rows from north to south)\n\ncolorTarget=this.getPixelColor(0,0);\n\nnorth:for(var y=0;y<h-minPixelsPerSide;y++){\nfor(var x=0;x<w;x++){\nvar colorXY=this.getPixelColor(x,y);\nvar rgba2=this.constructor.intToRGBA(colorXY);\n\nif(this.constructor.colorDiff(rgba1,rgba2)>tolerance){\n// this pixel is too distant from the first one: abort this side scan\nbreak north;\n}\n}// this row contains all pixels with the same color: increment this side pixels to crop\n\n\nnorthPixelsToCrop++;\n}// east side (scan columns from east to west)\n\n\ncolorTarget=this.getPixelColor(w,0);\n\neast:for(var _x=0;_x<w-minPixelsPerSide;_x++){\nfor(var _y=0+northPixelsToCrop;_y<h;_y++){\nvar _colorXY=this.getPixelColor(_x,_y);\n\nvar _rgba=this.constructor.intToRGBA(_colorXY);\n\nif(this.constructor.colorDiff(rgba1,_rgba)>tolerance){\n// this pixel is too distant from the first one: abort this side scan\nbreak east;\n}\n}// this column contains all pixels with the same color: increment this side pixels to crop\n\n\neastPixelsToCrop++;\n}// south side (scan rows from south to north)\n\n\ncolorTarget=this.getPixelColor(0,h);\n\nsouth:for(var _y2=h-1;_y2>=northPixelsToCrop+minPixelsPerSide;_y2--){\nfor(var _x2=w-eastPixelsToCrop-1;_x2>=0;_x2--){\nvar _colorXY2=this.getPixelColor(_x2,_y2);\n\nvar _rgba2=this.constructor.intToRGBA(_colorXY2);\n\nif(this.constructor.colorDiff(rgba1,_rgba2)>tolerance){\n// this pixel is too distant from the first one: abort this side scan\nbreak south;\n}\n}// this row contains all pixels with the same color: increment this side pixels to crop\n\n\nsouthPixelsToCrop++;\n}// west side (scan columns from west to east)\n\n\ncolorTarget=this.getPixelColor(w,h);\n\nwest:for(var _x3=w-1;_x3>=0+eastPixelsToCrop+minPixelsPerSide;_x3--){\nfor(var _y3=h-1;_y3>=0+northPixelsToCrop;_y3--){\nvar _colorXY3=this.getPixelColor(_x3,_y3);\n\nvar _rgba3=this.constructor.intToRGBA(_colorXY3);\n\nif(this.constructor.colorDiff(rgba1,_rgba3)>tolerance){\n// this pixel is too distant from the first one: abort this side scan\nbreak west;\n}\n}// this column contains all pixels with the same color: increment this side pixels to crop\n\n\nwestPixelsToCrop++;\n}// decide if a crop is needed\n\n\nvar doCrop=false;// apply leaveBorder\n\nwestPixelsToCrop=westPixelsToCrop-leaveBorder;\neastPixelsToCrop=eastPixelsToCrop-leaveBorder;\nnorthPixelsToCrop=northPixelsToCrop-leaveBorder;\nsouthPixelsToCrop=southPixelsToCrop-leaveBorder;\n\nif(cropSymmetric){\nvar horizontal=Math.min(eastPixelsToCrop,westPixelsToCrop);\nvar vertical=Math.min(northPixelsToCrop,southPixelsToCrop);\nwestPixelsToCrop=horizontal;\neastPixelsToCrop=horizontal;\nnorthPixelsToCrop=vertical;\nsouthPixelsToCrop=vertical;\n}// safety checks\n\n\nvar widthOfRemainingPixels=w-(westPixelsToCrop+eastPixelsToCrop);\nvar heightOfRemainingPixels=h-(southPixelsToCrop+northPixelsToCrop);// make sure that crops are > 0\n\nwestPixelsToCrop=westPixelsToCrop>=0?westPixelsToCrop:0;\neastPixelsToCrop=eastPixelsToCrop>=0?eastPixelsToCrop:0;\nnorthPixelsToCrop=northPixelsToCrop>=0?northPixelsToCrop:0;\nsouthPixelsToCrop=southPixelsToCrop>=0?southPixelsToCrop:0;\n\nif(cropOnlyFrames){\n// crop image if all sides should be cropped\ndoCrop=eastPixelsToCrop!==0&&northPixelsToCrop!==0&&westPixelsToCrop!==0&&southPixelsToCrop!==0;\n}else{\n// crop image if at least one side should be cropped\ndoCrop=eastPixelsToCrop!==0||northPixelsToCrop!==0||westPixelsToCrop!==0||southPixelsToCrop!==0;\n}\n\nif(doCrop){\n// do the real crop\nthis.crop(eastPixelsToCrop,northPixelsToCrop,widthOfRemainingPixels,heightOfRemainingPixels);\n}\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n}}};\n\n\n}\n\nmodule.exports=exports.default;\n\n}).call(this,require(\"buffer\").Buffer);\n},{\"@jimp/utils\":303,\"buffer\":16,\"core-js/modules/es6.object.define-property\":129,\"core-js/modules/es6.symbol\":141,\"core-js/modules/es7.symbol.async-iterator\":148}],280:[function(require,module,exports){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.default=void 0;\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nvar _utils=require(\"@jimp/utils\");\n\nfunction _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}\n\n/**\n * Displaces the image based on the provided displacement map\n * @param {object} map the source Jimp instance\n * @param {number} offset the maximum displacement value\n * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n * @returns {Jimp} this for chaining of methods\n */\nvar _default=function _default(){\nreturn{\ndisplace:function displace(map,offset,cb){\nif(_typeof(map)!=='object'||map.constructor!==this.constructor){\nreturn _utils.throwError.call(this,'The source must be a Jimp image',cb);\n}\n\nif(typeof offset!=='number'){\nreturn _utils.throwError.call(this,'factor must be a number',cb);\n}\n\nvar source=this.cloneQuiet();\nthis.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(x,y,idx){\nvar displacement=map.bitmap.data[idx]/256*offset;\ndisplacement=Math.round(displacement);\nvar ids=this.getPixelIndex(x+displacement,y);\nthis.bitmap.data[ids]=source.bitmap.data[idx];\nthis.bitmap.data[ids+1]=source.bitmap.data[idx+1];\nthis.bitmap.data[ids+2]=source.bitmap.data[idx+2];\n});\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n}};\n\n};\n\nexports.default=_default;\nmodule.exports=exports.default;\n\n},{\"@jimp/utils\":303,\"core-js/modules/es6.object.define-property\":129,\"core-js/modules/es6.symbol\":141,\"core-js/modules/es7.symbol.async-iterator\":148}],281:[function(require,module,exports){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.default=void 0;\n\nvar _utils=require(\"@jimp/utils\");\n\n/**\n * Apply a ordered dithering effect\n * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n * @returns {Jimp} this for chaining of methods\n */\nfunction dither(cb){\nvar rgb565Matrix=[1,9,3,11,13,5,15,7,4,12,2,10,16,8,14,6];\nthis.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(x,y,idx){\nvar thresholdId=((y&3)<<2)+x%4;\nvar dither=rgb565Matrix[thresholdId];\nthis.bitmap.data[idx]=Math.min(this.bitmap.data[idx]+dither,0xff);\nthis.bitmap.data[idx+1]=Math.min(this.bitmap.data[idx+1]+dither,0xff);\nthis.bitmap.data[idx+2]=Math.min(this.bitmap.data[idx+2]+dither,0xff);\n});\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n}\n\nvar _default=function _default(){\nreturn{\ndither565:dither,\ndither16:dither};\n\n};\n\nexports.default=_default;\nmodule.exports=exports.default;\n\n},{\"@jimp/utils\":303,\"core-js/modules/es6.object.define-property\":129}],282:[function(require,module,exports){\n(function(Buffer){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.default=void 0;\n\nvar _utils=require(\"@jimp/utils\");\n\n/**\n * Flip the image horizontally\n * @param {boolean} horizontal a Boolean, if true the image will be flipped horizontally\n * @param {boolean} vertical a Boolean, if true the image will be flipped vertically\n * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n * @returns {Jimp} this for chaining of methods\n */\nfunction flipFn(horizontal,vertical,cb){\nif(typeof horizontal!=='boolean'||typeof vertical!=='boolean')return _utils.throwError.call(this,'horizontal and vertical must be Booleans',cb);\n\nif(horizontal&&vertical){\n// shortcut\nreturn this.rotate(180,true,cb);\n}\n\nvar bitmap=Buffer.alloc(this.bitmap.data.length);\nthis.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(x,y,idx){\nvar _x=horizontal?this.bitmap.width-1-x:x;\n\nvar _y=vertical?this.bitmap.height-1-y:y;\n\nvar _idx=this.bitmap.width*_y+_x<<2;\n\nvar data=this.bitmap.data.readUInt32BE(idx);\nbitmap.writeUInt32BE(data,_idx);\n});\nthis.bitmap.data=Buffer.from(bitmap);\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n}\n\nvar _default=function _default(){\nreturn{\nflip:flipFn,\nmirror:flipFn};\n\n};\n\nexports.default=_default;\nmodule.exports=exports.default;\n\n}).call(this,require(\"buffer\").Buffer);\n},{\"@jimp/utils\":303,\"buffer\":16,\"core-js/modules/es6.object.define-property\":129}],283:[function(require,module,exports){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.default=void 0;\n\nvar _utils=require(\"@jimp/utils\");\n\n/**\n * Applies a true Gaussian blur to the image (warning: this is VERY slow)\n * @param {number} r the pixel radius of the blur\n * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n * @returns {Jimp} this for chaining of methods\n */\nvar _default=function _default(){\nreturn{\ngaussian:function gaussian(r,cb){\n// http://blog.ivank.net/fastest-gaussian-blur.html\nif(typeof r!=='number'){\nreturn _utils.throwError.call(this,'r must be a number',cb);\n}\n\nif(r<1){\nreturn _utils.throwError.call(this,'r must be greater than 0',cb);\n}\n\nvar rs=Math.ceil(r*2.57);// significant radius\n\nvar range=rs*2+1;\nvar rr2=r*r*2;\nvar rr2pi=rr2*Math.PI;\nvar weights=[];\n\nfor(var y=0;y<range;y++){\nweights[y]=[];\n\nfor(var x=0;x<range;x++){\nvar dsq=Math.pow(x-rs,2)+Math.pow(y-rs,2);\nweights[y][x]=Math.exp(-dsq/rr2)/rr2pi;\n}\n}\n\nfor(var _y=0;_y<this.bitmap.height;_y++){\nfor(var _x=0;_x<this.bitmap.width;_x++){\nvar red=0;\nvar green=0;\nvar blue=0;\nvar alpha=0;\nvar wsum=0;\n\nfor(var iy=0;iy<range;iy++){\nfor(var ix=0;ix<range;ix++){\nvar x1=Math.min(this.bitmap.width-1,Math.max(0,ix+_x-rs));\nvar y1=Math.min(this.bitmap.height-1,Math.max(0,iy+_y-rs));\nvar weight=weights[iy][ix];\n\nvar _idx=y1*this.bitmap.width+x1<<2;\n\nred+=this.bitmap.data[_idx]*weight;\ngreen+=this.bitmap.data[_idx+1]*weight;\nblue+=this.bitmap.data[_idx+2]*weight;\nalpha+=this.bitmap.data[_idx+3]*weight;\nwsum+=weight;\n}\n\nvar idx=_y*this.bitmap.width+_x<<2;\nthis.bitmap.data[idx]=Math.round(red/wsum);\nthis.bitmap.data[idx+1]=Math.round(green/wsum);\nthis.bitmap.data[idx+2]=Math.round(blue/wsum);\nthis.bitmap.data[idx+3]=Math.round(alpha/wsum);\n}\n}\n}\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n}};\n\n};\n\nexports.default=_default;\nmodule.exports=exports.default;\n\n},{\"@jimp/utils\":303,\"core-js/modules/es6.object.define-property\":129}],284:[function(require,module,exports){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.default=void 0;\n\nvar _utils=require(\"@jimp/utils\");\n\n/**\n * Inverts the image\n * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n * @returns {Jimp} this for chaining of methods\n */\nvar _default=function _default(){\nreturn{\ninvert:function invert(cb){\nthis.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(x,y,idx){\nthis.bitmap.data[idx]=255-this.bitmap.data[idx];\nthis.bitmap.data[idx+1]=255-this.bitmap.data[idx+1];\nthis.bitmap.data[idx+2]=255-this.bitmap.data[idx+2];\n});\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n}};\n\n};\n\nexports.default=_default;\nmodule.exports=exports.default;\n\n},{\"@jimp/utils\":303,\"core-js/modules/es6.object.define-property\":129}],285:[function(require,module,exports){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.default=void 0;\n\nvar _utils=require(\"@jimp/utils\");\n\n/**\n * Masks a source image on to this image using average pixel colour. A completely black pixel on the mask will turn a pixel in the image completely transparent.\n * @param {Jimp} src the source Jimp instance\n * @param {number} x the horizontal position to blit the image\n * @param {number} y the vertical position to blit the image\n * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n * @returns {Jimp} this for chaining of methods\n */\nvar _default=function _default(){\nreturn{\nmask:function mask(src){\nvar x=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;\nvar y=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;\nvar cb=arguments.length>3?arguments[3]:undefined;\n\nif(!(src instanceof this.constructor)){\nreturn _utils.throwError.call(this,'The source must be a Jimp image',cb);\n}\n\nif(typeof x!=='number'||typeof y!=='number'){\nreturn _utils.throwError.call(this,'x and y must be numbers',cb);\n}// round input\n\n\nx=Math.round(x);\ny=Math.round(y);\nvar w=this.bitmap.width;\nvar h=this.bitmap.height;\nvar baseImage=this;\nsrc.scanQuiet(0,0,src.bitmap.width,src.bitmap.height,function(sx,sy,idx){\nvar destX=x+sx;\nvar destY=y+sy;\n\nif(destX>=0&&destY>=0&&destX<w&&destY<h){\nvar dstIdx=baseImage.getPixelIndex(destX,destY);\nvar data=this.bitmap.data;\nvar avg=(data[idx+0]+data[idx+1]+data[idx+2])/3;\nbaseImage.bitmap.data[dstIdx+3]*=avg/255;\n}\n});\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n}};\n\n};\n\nexports.default=_default;\nmodule.exports=exports.default;\n\n},{\"@jimp/utils\":303,\"core-js/modules/es6.object.define-property\":129}],286:[function(require,module,exports){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.default=void 0;\n\nrequire(\"core-js/modules/es6.array.find-index\");\n\nrequire(\"core-js/modules/es6.array.fill\");\n\nvar _utils=require(\"@jimp/utils\");\n\n/* eslint-disable no-labels */\n\n/**\n * Get an image's histogram\n * @return {object} An object with an array of color occurrence counts for each channel (r,g,b)\n */\nfunction histogram(){\nvar histogram={\nr:new Array(256).fill(0),\ng:new Array(256).fill(0),\nb:new Array(256).fill(0)};\n\nthis.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(x,y,index){\nhistogram.r[this.bitmap.data[index+0]]++;\nhistogram.g[this.bitmap.data[index+1]]++;\nhistogram.b[this.bitmap.data[index+2]]++;\n});\nreturn histogram;\n}\n/**\n * Normalize values\n * @param  {integer} value Pixel channel value.\n * @param  {integer} min   Minimum value for channel\n * @param  {integer} max   Maximum value for channel\n * @return {integer} normalized values\n */\n\n\nvar _normalize=function normalize(value,min,max){\nreturn(value-min)*255/(max-min);\n};\n\nvar getBounds=function getBounds(histogramChannel){\nreturn[histogramChannel.findIndex(function(value){\nreturn value>0;\n}),255-histogramChannel.slice().reverse().findIndex(function(value){\nreturn value>0;\n})];\n};\n/**\n * Normalizes the image\n * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n * @returns {Jimp} this for chaining of methods\n */\n\n\nvar _default=function _default(){\nreturn{\nnormalize:function normalize(cb){\nvar h=histogram.call(this);// store bounds (minimum and maximum values)\n\nvar bounds={\nr:getBounds(h.r),\ng:getBounds(h.g),\nb:getBounds(h.b)};\n// apply value transformations\n\nthis.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(x,y,idx){\nvar r=this.bitmap.data[idx+0];\nvar g=this.bitmap.data[idx+1];\nvar b=this.bitmap.data[idx+2];\nthis.bitmap.data[idx+0]=_normalize(r,bounds.r[0],bounds.r[1]);\nthis.bitmap.data[idx+1]=_normalize(g,bounds.g[0],bounds.g[1]);\nthis.bitmap.data[idx+2]=_normalize(b,bounds.b[0],bounds.b[1]);\n});\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n}};\n\n};\n\nexports.default=_default;\nmodule.exports=exports.default;\n\n},{\"@jimp/utils\":303,\"core-js/modules/es6.array.fill\":114,\"core-js/modules/es6.array.find-index\":116,\"core-js/modules/es6.object.define-property\":129}],287:[function(require,module,exports){\n(function(__dirname){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.default=void 0;\n\nrequire(\"core-js/modules/es6.array.from\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es7.object.entries\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.promise\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nvar _path=_interopRequireDefault(require(\"path\"));\n\nvar _loadBmfont=_interopRequireDefault(require(\"load-bmfont\"));\n\nvar _utils=require(\"@jimp/utils\");\n\nvar _measureText=require(\"./measure-text\");\n\nfunction _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}\n\nfunction _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}\n\nfunction _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_nonIterableSpread();}\n\nfunction _nonIterableSpread(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\");}\n\nfunction _iterableToArray(iter){if(Symbol.iterator in Object(iter)||Object.prototype.toString.call(iter)===\"[object Arguments]\")return Array.from(iter);}\n\nfunction _arrayWithoutHoles(arr){if(Array.isArray(arr)){for(var i=0,arr2=new Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}}\n\nfunction xOffsetBasedOnAlignment(constants,font,line,maxWidth,alignment){\nif(alignment===constants.HORIZONTAL_ALIGN_LEFT){\nreturn 0;\n}\n\nif(alignment===constants.HORIZONTAL_ALIGN_CENTER){\nreturn(maxWidth-(0,_measureText.measureText)(font,line))/2;\n}\n\nreturn maxWidth-(0,_measureText.measureText)(font,line);\n}\n\nfunction drawCharacter(image,font,x,y,char){\nif(char.width>0&&char.height>0){\nvar characterPage=font.pages[char.page];\nimage.blit(characterPage,x+char.xoffset,y+char.yoffset,char.x,char.y,char.width,char.height);\n}\n\nreturn image;\n}\n\nfunction printText(font,x,y,text,defaultCharWidth){\nfor(var i=0;i<text.length;i++){\nvar char=void 0;\n\nif(font.chars[text[i]]){\nchar=text[i];\n}else if(/\\s/.test(text[i])){\nchar='';\n}else{\nchar='?';\n}\n\nvar fontChar=font.chars[char]||{};\nvar fontKerning=font.kernings[char];\ndrawCharacter(this,font,x,y,fontChar||{});\nvar kerning=fontKerning&&fontKerning[text[i+1]]?fontKerning[text[i+1]]:0;\nx+=kerning+(fontChar.xadvance||defaultCharWidth);\n}\n}\n\nfunction splitLines(font,text,maxWidth){\nvar words=text.split(' ');\nvar lines=[];\nvar currentLine=[];\nvar longestLine=0;\nwords.forEach(function(word){\nvar line=_toConsumableArray(currentLine).concat([word]).join(' ');\n\nvar length=(0,_measureText.measureText)(font,line);\n\nif(length<=maxWidth){\nif(length>longestLine){\nlongestLine=length;\n}\n\ncurrentLine.push(word);\n}else{\nlines.push(currentLine);\ncurrentLine=[word];\n}\n});\nlines.push(currentLine);\nreturn{\nlines:lines,\nlongestLine:longestLine};\n\n}\n\nfunction loadPages(Jimp,dir,pages){\nvar newPages=pages.map(function(page){\nreturn Jimp.read(dir+'/'+page);\n});\nreturn Promise.all(newPages);\n}\n\nvar dir=\"browser/lib/\"||false;\n\nvar _default=function _default(){\nreturn{\nconstants:{\nmeasureText:_measureText.measureText,\nmeasureTextHeight:_measureText.measureTextHeight,\nFONT_SANS_8_BLACK:_path.default.join(dir,'fonts/open-sans/open-sans-8-black/open-sans-8-black.fnt'),\nFONT_SANS_10_BLACK:_path.default.join(dir,'fonts/open-sans/open-sans-10-black/open-sans-10-black.fnt'),\nFONT_SANS_12_BLACK:_path.default.join(dir,'fonts/open-sans/open-sans-12-black/open-sans-12-black.fnt'),\nFONT_SANS_14_BLACK:_path.default.join(dir,'fonts/open-sans/open-sans-14-black/open-sans-14-black.fnt'),\nFONT_SANS_16_BLACK:_path.default.join(dir,'fonts/open-sans/open-sans-16-black/open-sans-16-black.fnt'),\nFONT_SANS_32_BLACK:_path.default.join(dir,'fonts/open-sans/open-sans-32-black/open-sans-32-black.fnt'),\nFONT_SANS_64_BLACK:_path.default.join(dir,'fonts/open-sans/open-sans-64-black/open-sans-64-black.fnt'),\nFONT_SANS_128_BLACK:_path.default.join(dir,'fonts/open-sans/open-sans-128-black/open-sans-128-black.fnt'),\nFONT_SANS_8_WHITE:_path.default.join(dir,'fonts/open-sans/open-sans-8-white/open-sans-8-white.fnt'),\nFONT_SANS_16_WHITE:_path.default.join(dir,'fonts/open-sans/open-sans-16-white/open-sans-16-white.fnt'),\nFONT_SANS_32_WHITE:_path.default.join(dir,'fonts/open-sans/open-sans-32-white/open-sans-32-white.fnt'),\nFONT_SANS_64_WHITE:_path.default.join(dir,'fonts/open-sans/open-sans-64-white/open-sans-64-white.fnt'),\nFONT_SANS_128_WHITE:_path.default.join(dir,'fonts/open-sans/open-sans-128-white/open-sans-128-white.fnt'),\n\n/**\n       * Loads a bitmap font from a file\n       * @param {string} file the file path of a .fnt file\n       * @param {function(Error, Jimp)} cb (optional) a function to call when the font is loaded\n       * @returns {Promise} a promise\n       */\nloadFont:function loadFont(file,cb){\nvar _this=this;\n\nif(typeof file!=='string')return _utils.throwError.call(this,'file must be a string',cb);\nreturn new Promise(function(resolve,reject){\ncb=cb||function(err,font){\nif(err)reject(err);else resolve(font);\n};\n\n(0,_loadBmfont.default)(file,function(err,font){\nvar chars={};\nvar kernings={};\n\nif(err){\nreturn _utils.throwError.call(_this,err,cb);\n}\n\nfor(var i=0;i<font.chars.length;i++){\nchars[String.fromCharCode(font.chars[i].id)]=font.chars[i];\n}\n\nfor(var _i=0;_i<font.kernings.length;_i++){\nvar firstString=String.fromCharCode(font.kernings[_i].first);\nkernings[firstString]=kernings[firstString]||{};\nkernings[firstString][String.fromCharCode(font.kernings[_i].second)]=font.kernings[_i].amount;\n}\n\nloadPages(_this,_path.default.dirname(file),font.pages).then(function(pages){\ncb(null,{\nchars:chars,\nkernings:kernings,\npages:pages,\ncommon:font.common,\ninfo:font.info});\n\n});\n});\n});\n}},\n\nclass:{\n/**\n       * Draws a text on a image on a given boundary\n       * @param {Jimp} font a bitmap font loaded from `Jimp.loadFont` command\n       * @param {number} x the x position to start drawing the text\n       * @param {number} y the y position to start drawing the text\n       * @param {any} text the text to draw (string or object with `text`, `alignmentX`, and/or `alignmentY`)\n       * @param {number} maxWidth (optional) the boundary width to draw in\n       * @param {number} maxHeight (optional) the boundary height to draw in\n       * @param {function(Error, Jimp)} cb (optional) a function to call when the text is written\n       * @returns {Jimp} this for chaining of methods\n       */\nprint:function print(font,x,y,text,maxWidth,maxHeight,cb){\nvar _this2=this;\n\nif(typeof maxWidth==='function'&&typeof cb==='undefined'){\ncb=maxWidth;\nmaxWidth=Infinity;\n}\n\nif(typeof maxWidth==='undefined'){\nmaxWidth=Infinity;\n}\n\nif(typeof maxHeight==='function'&&typeof cb==='undefined'){\ncb=maxHeight;\nmaxHeight=Infinity;\n}\n\nif(typeof maxHeight==='undefined'){\nmaxHeight=Infinity;\n}\n\nif(_typeof(font)!=='object'){\nreturn _utils.throwError.call(this,'font must be a Jimp loadFont',cb);\n}\n\nif(typeof x!=='number'||typeof y!=='number'||typeof maxWidth!=='number'){\nreturn _utils.throwError.call(this,'x, y and maxWidth must be numbers',cb);\n}\n\nif(typeof maxWidth!=='number'){\nreturn _utils.throwError.call(this,'maxWidth must be a number',cb);\n}\n\nif(typeof maxHeight!=='number'){\nreturn _utils.throwError.call(this,'maxHeight must be a number',cb);\n}\n\nvar alignmentX;\nvar alignmentY;\n\nif(_typeof(text)==='object'&&text.text!==null&&text.text!==undefined){\nalignmentX=text.alignmentX||this.constructor.HORIZONTAL_ALIGN_LEFT;\nalignmentY=text.alignmentY||this.constructor.VERTICAL_ALIGN_TOP;\nvar _text=text;\ntext=_text.text;\n}else{\nalignmentX=this.constructor.HORIZONTAL_ALIGN_LEFT;\nalignmentY=this.constructor.VERTICAL_ALIGN_TOP;\ntext=text.toString();\n}\n\nif(maxHeight!==Infinity&&alignmentY===this.constructor.VERTICAL_ALIGN_BOTTOM){\ny+=maxHeight-(0,_measureText.measureTextHeight)(font,text,maxWidth);\n}else if(maxHeight!==Infinity&&alignmentY===this.constructor.VERTICAL_ALIGN_MIDDLE){\ny+=maxHeight/2-(0,_measureText.measureTextHeight)(font,text,maxWidth)/2;\n}\n\nvar defaultCharWidth=Object.entries(font.chars)[0][1].xadvance;\n\nvar _splitLines=splitLines(font,text,maxWidth),\nlines=_splitLines.lines,\nlongestLine=_splitLines.longestLine;\n\nlines.forEach(function(line){\nvar lineString=line.join(' ');\nvar alignmentWidth=xOffsetBasedOnAlignment(_this2.constructor,font,lineString,maxWidth,alignmentX);\nprintText.call(_this2,font,x+alignmentWidth,y,lineString,defaultCharWidth);\ny+=font.common.lineHeight;\n});\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this,{\nx:x+longestLine,\ny:y});\n\n}\n\nreturn this;\n}}};\n\n\n};\n\nexports.default=_default;\nmodule.exports=exports.default;\n\n}).call(this,\"/../../node_modules/@jimp/plugin-print/dist\");\n},{\"./measure-text\":288,\"@jimp/utils\":303,\"core-js/modules/es6.array.for-each\":118,\"core-js/modules/es6.array.from\":119,\"core-js/modules/es6.array.is-array\":121,\"core-js/modules/es6.array.iterator\":122,\"core-js/modules/es6.array.map\":123,\"core-js/modules/es6.date.to-string\":124,\"core-js/modules/es6.object.define-property\":129,\"core-js/modules/es6.promise\":132,\"core-js/modules/es6.regexp.split\":137,\"core-js/modules/es6.regexp.to-string\":138,\"core-js/modules/es6.string.iterator\":140,\"core-js/modules/es6.symbol\":141,\"core-js/modules/es7.object.entries\":147,\"core-js/modules/es7.symbol.async-iterator\":148,\"core-js/modules/web.dom.iterable\":149,\"load-bmfont\":289,\"path\":197}],288:[function(require,module,exports){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.measureText=measureText;\nexports.measureTextHeight=measureTextHeight;\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nfunction measureText(font,text){\nvar x=0;\n\nfor(var i=0;i<text.length;i++){\nif(font.chars[text[i]]){\nvar kerning=font.kernings[text[i]]&&font.kernings[text[i]][text[i+1]]?font.kernings[text[i]][text[i+1]]:0;\nx+=(font.chars[text[i]].xadvance||0)+kerning;\n}\n}\n\nreturn x;\n}\n\nfunction measureTextHeight(font,text,maxWidth){\nvar words=text.split(' ');\nvar line='';\nvar textTotalHeight=font.common.lineHeight;\n\nfor(var n=0;n<words.length;n++){\nvar testLine=line+words[n]+' ';\nvar testWidth=measureText(font,testLine);\n\nif(testWidth>maxWidth&&n>0){\ntextTotalHeight+=font.common.lineHeight;\nline=words[n]+' ';\n}else{\nline=testLine;\n}\n}\n\nreturn textTotalHeight;\n}\n\n},{\"core-js/modules/es6.object.define-property\":129,\"core-js/modules/es6.regexp.split\":137}],289:[function(require,module,exports){\n(function(Buffer){\nvar xhr=require('xhr');\nvar noop=function noop(){};\nvar parseASCII=require('parse-bmfont-ascii');\nvar parseXML=require('parse-bmfont-xml');\nvar readBinary=require('parse-bmfont-binary');\nvar isBinaryFormat=require('./lib/is-binary');\nvar xtend=require('xtend');\n\nvar xml2=function hasXML2(){\nreturn self.XMLHttpRequest&&\"withCredentials\"in new XMLHttpRequest();\n}();\n\nmodule.exports=function(opt,cb){\ncb=typeof cb==='function'?cb:noop;\n\nif(typeof opt==='string')\nopt={uri:opt};else\nif(!opt)\nopt={};\n\nvar expectBinary=opt.binary;\nif(expectBinary)\nopt=getBinaryOpts(opt);\n\nxhr(opt,function(err,res,body){\nif(err)\nreturn cb(err);\nif(!/^2/.test(res.statusCode))\nreturn cb(new Error('http status code: '+res.statusCode));\nif(!body)\nreturn cb(new Error('no body result'));\n\nvar binary=false;\n\n//if the response type is an array buffer,\n//we need to convert it into a regular Buffer object\nif(isArrayBuffer(body)){\nvar array=new Uint8Array(body);\nbody=new Buffer(array,'binary');\n}\n\n//now check the string/Buffer response\n//and see if it has a binary BMF header\nif(isBinaryFormat(body)){\nbinary=true;\n//if we have a string, turn it into a Buffer\nif(typeof body==='string')\nbody=new Buffer(body,'binary');\n}\n\n//we are not parsing a binary format, just ASCII/XML/etc\nif(!binary){\n//might still be a buffer if responseType is 'arraybuffer'\nif(Buffer.isBuffer(body))\nbody=body.toString(opt.encoding);\nbody=body.trim();\n}\n\nvar result;\ntry{\nvar type=res.headers['content-type'];\nif(binary)\nresult=readBinary(body);else\nif(/json/.test(type)||body.charAt(0)==='{')\nresult=JSON.parse(body);else\nif(/xml/.test(type)||body.charAt(0)==='<')\nresult=parseXML(body);else\n\nresult=parseASCII(body);\n}catch(e){\ncb(new Error('error parsing font '+e.message));\ncb=noop;\n}\ncb(null,result);\n});\n};\n\nfunction isArrayBuffer(arr){\nvar str=Object.prototype.toString;\nreturn str.call(arr)==='[object ArrayBuffer]';\n}\n\nfunction getBinaryOpts(opt){\n//IE10+ and other modern browsers support array buffers\nif(xml2)\nreturn xtend(opt,{responseType:'arraybuffer'});\n\nif(typeof self.XMLHttpRequest==='undefined')\nthrow new Error('your browser does not support XHR loading');\n\n//IE9 and XML1 browsers could still use an override\nvar req=new self.XMLHttpRequest();\nreq.overrideMimeType('text/plain; charset=x-user-defined');\nreturn xtend({\nxhr:req},\nopt);\n}\n\n}).call(this,require(\"buffer\").Buffer);\n},{\"./lib/is-binary\":290,\"buffer\":16,\"parse-bmfont-ascii\":192,\"parse-bmfont-binary\":193,\"parse-bmfont-xml\":194,\"xhr\":259,\"xtend\":261}],290:[function(require,module,exports){\n(function(Buffer){\nvar equal=require('buffer-equal');\nvar HEADER=new Buffer([66,77,70,3]);\n\nmodule.exports=function(buf){\nif(typeof buf==='string')\nreturn buf.substring(0,3)==='BMF';\nreturn buf.length>4&&equal(buf.slice(0,4),HEADER);\n};\n}).call(this,require(\"buffer\").Buffer);\n},{\"buffer\":16,\"buffer-equal\":15}],291:[function(require,module,exports){\n(function(Buffer){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.default=void 0;\n\nvar _utils=require(\"@jimp/utils\");\n\nvar _resize=_interopRequireDefault(require(\"./modules/resize\"));\n\nvar _resize2=_interopRequireDefault(require(\"./modules/resize2\"));\n\nfunction _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}\n\nvar _default=function _default(){\nreturn{\nconstants:{\nRESIZE_NEAREST_NEIGHBOR:'nearestNeighbor',\nRESIZE_BILINEAR:'bilinearInterpolation',\nRESIZE_BICUBIC:'bicubicInterpolation',\nRESIZE_HERMITE:'hermiteInterpolation',\nRESIZE_BEZIER:'bezierInterpolation'},\n\nclass:{\n/**\n       * Resizes the image to a set width and height using a 2-pass bilinear algorithm\n       * @param {number} w the width to resize the image to (or Jimp.AUTO)\n       * @param {number} h the height to resize the image to (or Jimp.AUTO)\n       * @param {string} mode (optional) a scaling method (e.g. Jimp.RESIZE_BEZIER)\n       * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n       * @returns {Jimp} this for chaining of methods\n       */\nresize:function resize(w,h,mode,cb){\nif(typeof w!=='number'||typeof h!=='number'){\nreturn _utils.throwError.call(this,'w and h must be numbers',cb);\n}\n\nif(typeof mode==='function'&&typeof cb==='undefined'){\ncb=mode;\nmode=null;\n}\n\nif(w===this.constructor.AUTO&&h===this.constructor.AUTO){\nreturn _utils.throwError.call(this,'w and h cannot both be set to auto',cb);\n}\n\nif(w===this.constructor.AUTO){\nw=this.bitmap.width*(h/this.bitmap.height);\n}\n\nif(h===this.constructor.AUTO){\nh=this.bitmap.height*(w/this.bitmap.width);\n}\n\nif(w<0||h<0){\nreturn _utils.throwError.call(this,'w and h must be positive numbers',cb);\n}// round inputs\n\n\nw=Math.round(w);\nh=Math.round(h);\n\nif(typeof _resize2.default[mode]==='function'){\nvar dst={\ndata:Buffer.alloc(w*h*4),\nwidth:w,\nheight:h};\n\n\n_resize2.default[mode](this.bitmap,dst);\n\nthis.bitmap=dst;\n}else{\nvar image=this;\nvar resize=new _resize.default(this.bitmap.width,this.bitmap.height,w,h,true,true,function(buffer){\nimage.bitmap.data=Buffer.from(buffer);\nimage.bitmap.width=w;\nimage.bitmap.height=h;\n});\nresize.resize(this.bitmap.data);\n}\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n}}};\n\n\n};\n\nexports.default=_default;\nmodule.exports=exports.default;\n\n}).call(this,require(\"buffer\").Buffer);\n},{\"./modules/resize\":292,\"./modules/resize2\":293,\"@jimp/utils\":303,\"buffer\":16,\"core-js/modules/es6.object.define-property\":129}],292:[function(require,module,exports){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.typed.uint8-array\");\n\nrequire(\"core-js/modules/es6.typed.float64-array\");\n\nrequire(\"core-js/modules/es6.typed.float32-array\");\n\n// JavaScript Image Resizer (c) 2012 - Grant Galitz\n// Released to public domain 29 July 2013: https://github.com/grantgalitz/JS-Image-Resizer/issues/4\nfunction Resize(widthOriginal,heightOriginal,targetWidth,targetHeight,blendAlpha,interpolationPass,resizeCallback){\nthis.widthOriginal=Math.abs(Math.floor(widthOriginal)||0);\nthis.heightOriginal=Math.abs(Math.floor(heightOriginal)||0);\nthis.targetWidth=Math.abs(Math.floor(targetWidth)||0);\nthis.targetHeight=Math.abs(Math.floor(targetHeight)||0);\nthis.colorChannels=blendAlpha?4:3;\nthis.interpolationPass=Boolean(interpolationPass);\nthis.resizeCallback=typeof resizeCallback==='function'?resizeCallback:function(){};\nthis.targetWidthMultipliedByChannels=this.targetWidth*this.colorChannels;\nthis.originalWidthMultipliedByChannels=this.widthOriginal*this.colorChannels;\nthis.originalHeightMultipliedByChannels=this.heightOriginal*this.colorChannels;\nthis.widthPassResultSize=this.targetWidthMultipliedByChannels*this.heightOriginal;\nthis.finalResultSize=this.targetWidthMultipliedByChannels*this.targetHeight;\nthis.initialize();\n}\n\nResize.prototype.initialize=function(){\n// Perform some checks:\nif(this.widthOriginal>0&&this.heightOriginal>0&&this.targetWidth>0&&this.targetHeight>0){\nthis.configurePasses();\n}else{\nthrow new Error('Invalid settings specified for the resizer.');\n}\n};\n\nResize.prototype.configurePasses=function(){\nif(this.widthOriginal===this.targetWidth){\n// Bypass the width resizer pass:\nthis.resizeWidth=this.bypassResizer;\n}else{\n// Setup the width resizer pass:\nthis.ratioWeightWidthPass=this.widthOriginal/this.targetWidth;\n\nif(this.ratioWeightWidthPass<1&&this.interpolationPass){\nthis.initializeFirstPassBuffers(true);\nthis.resizeWidth=this.colorChannels===4?this.resizeWidthInterpolatedRGBA:this.resizeWidthInterpolatedRGB;\n}else{\nthis.initializeFirstPassBuffers(false);\nthis.resizeWidth=this.colorChannels===4?this.resizeWidthRGBA:this.resizeWidthRGB;\n}\n}\n\nif(this.heightOriginal===this.targetHeight){\n// Bypass the height resizer pass:\nthis.resizeHeight=this.bypassResizer;\n}else{\n// Setup the height resizer pass:\nthis.ratioWeightHeightPass=this.heightOriginal/this.targetHeight;\n\nif(this.ratioWeightHeightPass<1&&this.interpolationPass){\nthis.initializeSecondPassBuffers(true);\nthis.resizeHeight=this.resizeHeightInterpolated;\n}else{\nthis.initializeSecondPassBuffers(false);\nthis.resizeHeight=this.colorChannels===4?this.resizeHeightRGBA:this.resizeHeightRGB;\n}\n}\n};\n\nResize.prototype._resizeWidthInterpolatedRGBChannels=function(buffer,fourthChannel){\nvar channelsNum=fourthChannel?4:3;\nvar ratioWeight=this.ratioWeightWidthPass;\nvar outputBuffer=this.widthBuffer;\nvar weight=0;\nvar finalOffset=0;\nvar pixelOffset=0;\nvar firstWeight=0;\nvar secondWeight=0;\nvar targetPosition;// Handle for only one interpolation input being valid for start calculation:\n\nfor(targetPosition=0;weight<1/3;targetPosition+=channelsNum,weight+=ratioWeight){\nfor(finalOffset=targetPosition,pixelOffset=0;finalOffset<this.widthPassResultSize;pixelOffset+=this.originalWidthMultipliedByChannels,finalOffset+=this.targetWidthMultipliedByChannels){\noutputBuffer[finalOffset]=buffer[pixelOffset];\noutputBuffer[finalOffset+1]=buffer[pixelOffset+1];\noutputBuffer[finalOffset+2]=buffer[pixelOffset+2];\nif(fourthChannel)outputBuffer[finalOffset+3]=buffer[pixelOffset+3];\n}\n}// Adjust for overshoot of the last pass's counter:\n\n\nweight-=1/3;\nvar interpolationWidthSourceReadStop;\n\nfor(interpolationWidthSourceReadStop=this.widthOriginal-1;weight<interpolationWidthSourceReadStop;targetPosition+=channelsNum,weight+=ratioWeight){\n// Calculate weightings:\nsecondWeight=weight%1;\nfirstWeight=1-secondWeight;// Interpolate:\n\nfor(finalOffset=targetPosition,pixelOffset=Math.floor(weight)*channelsNum;finalOffset<this.widthPassResultSize;pixelOffset+=this.originalWidthMultipliedByChannels,finalOffset+=this.targetWidthMultipliedByChannels){\noutputBuffer[finalOffset+0]=buffer[pixelOffset+0]*firstWeight+buffer[pixelOffset+channelsNum+0]*secondWeight;\noutputBuffer[finalOffset+1]=buffer[pixelOffset+1]*firstWeight+buffer[pixelOffset+channelsNum+1]*secondWeight;\noutputBuffer[finalOffset+2]=buffer[pixelOffset+2]*firstWeight+buffer[pixelOffset+channelsNum+2]*secondWeight;\nif(fourthChannel)outputBuffer[finalOffset+3]=buffer[pixelOffset+3]*firstWeight+buffer[pixelOffset+channelsNum+3]*secondWeight;\n}\n}// Handle for only one interpolation input being valid for end calculation:\n\n\nfor(interpolationWidthSourceReadStop=this.originalWidthMultipliedByChannels-channelsNum;targetPosition<this.targetWidthMultipliedByChannels;targetPosition+=channelsNum){\nfor(finalOffset=targetPosition,pixelOffset=interpolationWidthSourceReadStop;finalOffset<this.widthPassResultSize;pixelOffset+=this.originalWidthMultipliedByChannels,finalOffset+=this.targetWidthMultipliedByChannels){\noutputBuffer[finalOffset]=buffer[pixelOffset];\noutputBuffer[finalOffset+1]=buffer[pixelOffset+1];\noutputBuffer[finalOffset+2]=buffer[pixelOffset+2];\nif(fourthChannel)outputBuffer[finalOffset+3]=buffer[pixelOffset+3];\n}\n}\n\nreturn outputBuffer;\n};\n\nResize.prototype._resizeWidthRGBChannels=function(buffer,fourthChannel){\nvar channelsNum=fourthChannel?4:3;\nvar ratioWeight=this.ratioWeightWidthPass;\nvar ratioWeightDivisor=1/ratioWeight;\nvar nextLineOffsetOriginalWidth=this.originalWidthMultipliedByChannels-channelsNum+1;\nvar nextLineOffsetTargetWidth=this.targetWidthMultipliedByChannels-channelsNum+1;\nvar output=this.outputWidthWorkBench;\nvar outputBuffer=this.widthBuffer;\nvar trustworthyColorsCount=this.outputWidthWorkBenchOpaquePixelsCount;\nvar weight=0;\nvar amountToNext=0;\nvar actualPosition=0;\nvar currentPosition=0;\nvar line=0;\nvar pixelOffset=0;\nvar outputOffset=0;\nvar multiplier=1;\nvar r=0;\nvar g=0;\nvar b=0;\nvar a=0;\n\ndo{\nfor(line=0;line<this.originalHeightMultipliedByChannels;){\noutput[line++]=0;\noutput[line++]=0;\noutput[line++]=0;\n\nif(fourthChannel){\noutput[line++]=0;\ntrustworthyColorsCount[line/channelsNum-1]=0;\n}\n}\n\nweight=ratioWeight;\n\ndo{\namountToNext=1+actualPosition-currentPosition;\nmultiplier=Math.min(weight,amountToNext);\n\nfor(line=0,pixelOffset=actualPosition;line<this.originalHeightMultipliedByChannels;pixelOffset+=nextLineOffsetOriginalWidth){\nr=buffer[pixelOffset];\ng=buffer[++pixelOffset];\nb=buffer[++pixelOffset];\na=fourthChannel?buffer[++pixelOffset]:255;// Ignore RGB values if pixel is completely transparent\n\noutput[line++]+=(a?r:0)*multiplier;\noutput[line++]+=(a?g:0)*multiplier;\noutput[line++]+=(a?b:0)*multiplier;\n\nif(fourthChannel){\noutput[line++]+=a*multiplier;\ntrustworthyColorsCount[line/channelsNum-1]+=a?multiplier:0;\n}\n}\n\nif(weight>=amountToNext){\nactualPosition+=channelsNum;\ncurrentPosition=actualPosition;\nweight-=amountToNext;\n}else{\ncurrentPosition+=weight;\nbreak;\n}\n}while(weight>0&&actualPosition<this.originalWidthMultipliedByChannels);\n\nfor(line=0,pixelOffset=outputOffset;line<this.originalHeightMultipliedByChannels;pixelOffset+=nextLineOffsetTargetWidth){\nweight=fourthChannel?trustworthyColorsCount[line/channelsNum]:1;\nmultiplier=fourthChannel?weight?1/weight:0:ratioWeightDivisor;\noutputBuffer[pixelOffset]=output[line++]*multiplier;\noutputBuffer[++pixelOffset]=output[line++]*multiplier;\noutputBuffer[++pixelOffset]=output[line++]*multiplier;\nif(fourthChannel)outputBuffer[++pixelOffset]=output[line++]*ratioWeightDivisor;\n}\n\noutputOffset+=channelsNum;\n}while(outputOffset<this.targetWidthMultipliedByChannels);\n\nreturn outputBuffer;\n};\n\nResize.prototype._resizeHeightRGBChannels=function(buffer,fourthChannel){\nvar ratioWeight=this.ratioWeightHeightPass;\nvar ratioWeightDivisor=1/ratioWeight;\nvar output=this.outputHeightWorkBench;\nvar outputBuffer=this.heightBuffer;\nvar trustworthyColorsCount=this.outputHeightWorkBenchOpaquePixelsCount;\nvar weight=0;\nvar amountToNext=0;\nvar actualPosition=0;\nvar currentPosition=0;\nvar pixelOffset=0;\nvar outputOffset=0;\nvar caret=0;\nvar multiplier=1;\nvar r=0;\nvar g=0;\nvar b=0;\nvar a=0;\n\ndo{\nfor(pixelOffset=0;pixelOffset<this.targetWidthMultipliedByChannels;){\noutput[pixelOffset++]=0;\noutput[pixelOffset++]=0;\noutput[pixelOffset++]=0;\n\nif(fourthChannel){\noutput[pixelOffset++]=0;\ntrustworthyColorsCount[pixelOffset/4-1]=0;\n}\n}\n\nweight=ratioWeight;\n\ndo{\namountToNext=1+actualPosition-currentPosition;\nmultiplier=Math.min(weight,amountToNext);\ncaret=actualPosition;\n\nfor(pixelOffset=0;pixelOffset<this.targetWidthMultipliedByChannels;){\nr=buffer[caret++];\ng=buffer[caret++];\nb=buffer[caret++];\na=fourthChannel?buffer[caret++]:255;// Ignore RGB values if pixel is completely transparent\n\noutput[pixelOffset++]+=(a?r:0)*multiplier;\noutput[pixelOffset++]+=(a?g:0)*multiplier;\noutput[pixelOffset++]+=(a?b:0)*multiplier;\n\nif(fourthChannel){\noutput[pixelOffset++]+=a*multiplier;\ntrustworthyColorsCount[pixelOffset/4-1]+=a?multiplier:0;\n}\n}\n\nif(weight>=amountToNext){\nactualPosition=caret;\ncurrentPosition=actualPosition;\nweight-=amountToNext;\n}else{\ncurrentPosition+=weight;\nbreak;\n}\n}while(weight>0&&actualPosition<this.widthPassResultSize);\n\nfor(pixelOffset=0;pixelOffset<this.targetWidthMultipliedByChannels;){\nweight=fourthChannel?trustworthyColorsCount[pixelOffset/4]:1;\nmultiplier=fourthChannel?weight?1/weight:0:ratioWeightDivisor;\noutputBuffer[outputOffset++]=Math.round(output[pixelOffset++]*multiplier);\noutputBuffer[outputOffset++]=Math.round(output[pixelOffset++]*multiplier);\noutputBuffer[outputOffset++]=Math.round(output[pixelOffset++]*multiplier);\n\nif(fourthChannel){\noutputBuffer[outputOffset++]=Math.round(output[pixelOffset++]*ratioWeightDivisor);\n}\n}\n}while(outputOffset<this.finalResultSize);\n\nreturn outputBuffer;\n};\n\nResize.prototype.resizeWidthInterpolatedRGB=function(buffer){\nreturn this._resizeWidthInterpolatedRGBChannels(buffer,false);\n};\n\nResize.prototype.resizeWidthInterpolatedRGBA=function(buffer){\nreturn this._resizeWidthInterpolatedRGBChannels(buffer,true);\n};\n\nResize.prototype.resizeWidthRGB=function(buffer){\nreturn this._resizeWidthRGBChannels(buffer,false);\n};\n\nResize.prototype.resizeWidthRGBA=function(buffer){\nreturn this._resizeWidthRGBChannels(buffer,true);\n};\n\nResize.prototype.resizeHeightInterpolated=function(buffer){\nvar ratioWeight=this.ratioWeightHeightPass;\nvar outputBuffer=this.heightBuffer;\nvar weight=0;\nvar finalOffset=0;\nvar pixelOffset=0;\nvar pixelOffsetAccumulated=0;\nvar pixelOffsetAccumulated2=0;\nvar firstWeight=0;\nvar secondWeight=0;\nvar interpolationHeightSourceReadStop;// Handle for only one interpolation input being valid for start calculation:\n\nfor(;weight<1/3;weight+=ratioWeight){\nfor(pixelOffset=0;pixelOffset<this.targetWidthMultipliedByChannels;){\noutputBuffer[finalOffset++]=Math.round(buffer[pixelOffset++]);\n}\n}// Adjust for overshoot of the last pass's counter:\n\n\nweight-=1/3;\n\nfor(interpolationHeightSourceReadStop=this.heightOriginal-1;weight<interpolationHeightSourceReadStop;weight+=ratioWeight){\n// Calculate weightings:\nsecondWeight=weight%1;\nfirstWeight=1-secondWeight;// Interpolate:\n\npixelOffsetAccumulated=Math.floor(weight)*this.targetWidthMultipliedByChannels;\npixelOffsetAccumulated2=pixelOffsetAccumulated+this.targetWidthMultipliedByChannels;\n\nfor(pixelOffset=0;pixelOffset<this.targetWidthMultipliedByChannels;++pixelOffset){\noutputBuffer[finalOffset++]=Math.round(buffer[pixelOffsetAccumulated++]*firstWeight+buffer[pixelOffsetAccumulated2++]*secondWeight);\n}\n}// Handle for only one interpolation input being valid for end calculation:\n\n\nwhile(finalOffset<this.finalResultSize){\nfor(pixelOffset=0,pixelOffsetAccumulated=interpolationHeightSourceReadStop*this.targetWidthMultipliedByChannels;pixelOffset<this.targetWidthMultipliedByChannels;++pixelOffset){\noutputBuffer[finalOffset++]=Math.round(buffer[pixelOffsetAccumulated++]);\n}\n}\n\nreturn outputBuffer;\n};\n\nResize.prototype.resizeHeightRGB=function(buffer){\nreturn this._resizeHeightRGBChannels(buffer,false);\n};\n\nResize.prototype.resizeHeightRGBA=function(buffer){\nreturn this._resizeHeightRGBChannels(buffer,true);\n};\n\nResize.prototype.resize=function(buffer){\nthis.resizeCallback(this.resizeHeight(this.resizeWidth(buffer)));\n};\n\nResize.prototype.bypassResizer=function(buffer){\n// Just return the buffer passed:\nreturn buffer;\n};\n\nResize.prototype.initializeFirstPassBuffers=function(BILINEARAlgo){\n// Initialize the internal width pass buffers:\nthis.widthBuffer=this.generateFloatBuffer(this.widthPassResultSize);\n\nif(!BILINEARAlgo){\nthis.outputWidthWorkBench=this.generateFloatBuffer(this.originalHeightMultipliedByChannels);\n\nif(this.colorChannels>3){\nthis.outputWidthWorkBenchOpaquePixelsCount=this.generateFloat64Buffer(this.heightOriginal);\n}\n}\n};\n\nResize.prototype.initializeSecondPassBuffers=function(BILINEARAlgo){\n// Initialize the internal height pass buffers:\nthis.heightBuffer=this.generateUint8Buffer(this.finalResultSize);\n\nif(!BILINEARAlgo){\nthis.outputHeightWorkBench=this.generateFloatBuffer(this.targetWidthMultipliedByChannels);\n\nif(this.colorChannels>3){\nthis.outputHeightWorkBenchOpaquePixelsCount=this.generateFloat64Buffer(this.targetWidth);\n}\n}\n};\n\nResize.prototype.generateFloatBuffer=function(bufferLength){\n// Generate a float32 typed array buffer:\ntry{\nreturn new Float32Array(bufferLength);\n}catch(error){\nreturn[];\n}\n};\n\nResize.prototype.generateFloat64Buffer=function(bufferLength){\n// Generate a float64 typed array buffer:\ntry{\nreturn new Float64Array(bufferLength);\n}catch(error){\nreturn[];\n}\n};\n\nResize.prototype.generateUint8Buffer=function(bufferLength){\n// Generate a uint8 typed array buffer:\ntry{\nreturn new Uint8Array(bufferLength);\n}catch(error){\nreturn[];\n}\n};\n\nmodule.exports=Resize;\n\n},{\"core-js/modules/es6.typed.float32-array\":142,\"core-js/modules/es6.typed.float64-array\":143,\"core-js/modules/es6.typed.uint8-array\":144}],293:[function(require,module,exports){\n(function(Buffer){\n\"use strict\";\n\n/**\n * Copyright (c) 2015 Guyon Roche\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:</p>\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nmodule.exports={\nnearestNeighbor:function nearestNeighbor(src,dst){\nvar wSrc=src.width;\nvar hSrc=src.height;\nvar wDst=dst.width;\nvar hDst=dst.height;\nvar bufSrc=src.data;\nvar bufDst=dst.data;\n\nfor(var i=0;i<hDst;i++){\nfor(var j=0;j<wDst;j++){\nvar posDst=(i*wDst+j)*4;\nvar iSrc=Math.floor(i*hSrc/hDst);\nvar jSrc=Math.floor(j*wSrc/wDst);\nvar posSrc=(iSrc*wSrc+jSrc)*4;\nbufDst[posDst++]=bufSrc[posSrc++];\nbufDst[posDst++]=bufSrc[posSrc++];\nbufDst[posDst++]=bufSrc[posSrc++];\nbufDst[posDst++]=bufSrc[posSrc++];\n}\n}\n},\nbilinearInterpolation:function bilinearInterpolation(src,dst){\nvar wSrc=src.width;\nvar hSrc=src.height;\nvar wDst=dst.width;\nvar hDst=dst.height;\nvar bufSrc=src.data;\nvar bufDst=dst.data;\n\nvar interpolate=function interpolate(k,kMin,vMin,kMax,vMax){\n// special case - k is integer\nif(kMin===kMax){\nreturn vMin;\n}\n\nreturn Math.round((k-kMin)*vMax+(kMax-k)*vMin);\n};\n\nvar assign=function assign(pos,offset,x,xMin,xMax,y,yMin,yMax){\nvar posMin=(yMin*wSrc+xMin)*4+offset;\nvar posMax=(yMin*wSrc+xMax)*4+offset;\nvar vMin=interpolate(x,xMin,bufSrc[posMin],xMax,bufSrc[posMax]);// special case, y is integer\n\nif(yMax===yMin){\nbufDst[pos+offset]=vMin;\n}else{\nposMin=(yMax*wSrc+xMin)*4+offset;\nposMax=(yMax*wSrc+xMax)*4+offset;\nvar vMax=interpolate(x,xMin,bufSrc[posMin],xMax,bufSrc[posMax]);\nbufDst[pos+offset]=interpolate(y,yMin,vMin,yMax,vMax);\n}\n};\n\nfor(var i=0;i<hDst;i++){\nfor(var j=0;j<wDst;j++){\nvar posDst=(i*wDst+j)*4;// x & y in src coordinates\n\nvar x=j*wSrc/wDst;\nvar xMin=Math.floor(x);\nvar xMax=Math.min(Math.ceil(x),wSrc-1);\nvar y=i*hSrc/hDst;\nvar yMin=Math.floor(y);\nvar yMax=Math.min(Math.ceil(y),hSrc-1);\nassign(posDst,0,x,xMin,xMax,y,yMin,yMax);\nassign(posDst,1,x,xMin,xMax,y,yMin,yMax);\nassign(posDst,2,x,xMin,xMax,y,yMin,yMax);\nassign(posDst,3,x,xMin,xMax,y,yMin,yMax);\n}\n}\n},\n_interpolate2D:function _interpolate2D(src,dst,options,interpolate){\nvar bufSrc=src.data;\nvar bufDst=dst.data;\nvar wSrc=src.width;\nvar hSrc=src.height;\nvar wDst=dst.width;\nvar hDst=dst.height;// when dst smaller than src/2, interpolate first to a multiple between 0.5 and 1.0 src, then sum squares\n\nvar wM=Math.max(1,Math.floor(wSrc/wDst));\nvar wDst2=wDst*wM;\nvar hM=Math.max(1,Math.floor(hSrc/hDst));\nvar hDst2=hDst*hM;// ===========================================================\n// Pass 1 - interpolate rows\n// buf1 has width of dst2 and height of src\n\nvar buf1=Buffer.alloc(wDst2*hSrc*4);\n\nfor(var i=0;i<hSrc;i++){\nfor(var j=0;j<wDst2;j++){\n// i in src coords, j in dst coords\n// calculate x in src coords\n// this interpolation requires 4 sample points and the two inner ones must be real\n// the outer points can be fudged for the edges.\n// therefore (wSrc-1)/wDst2\nvar x=j*(wSrc-1)/wDst2;\nvar xPos=Math.floor(x);\nvar t=x-xPos;\nvar srcPos=(i*wSrc+xPos)*4;\nvar buf1Pos=(i*wDst2+j)*4;\n\nfor(var k=0;k<4;k++){\nvar kPos=srcPos+k;\nvar x0=xPos>0?bufSrc[kPos-4]:2*bufSrc[kPos]-bufSrc[kPos+4];\nvar x1=bufSrc[kPos];\nvar x2=bufSrc[kPos+4];\nvar x3=xPos<wSrc-2?bufSrc[kPos+8]:2*bufSrc[kPos+4]-bufSrc[kPos];\nbuf1[buf1Pos+k]=interpolate(x0,x1,x2,x3,t);\n}\n}\n}// this._writeFile(wDst2, hSrc, buf1, \"out/buf1.jpg\");\n// ===========================================================\n// Pass 2 - interpolate columns\n// buf2 has width and height of dst2\n\n\nvar buf2=Buffer.alloc(wDst2*hDst2*4);\n\nfor(var _i=0;_i<hDst2;_i++){\nfor(var _j=0;_j<wDst2;_j++){\n// i&j in dst2 coords\n// calculate y in buf1 coords\n// this interpolation requires 4 sample points and the two inner ones must be real\n// the outer points can be fudged for the edges.\n// therefore (hSrc-1)/hDst2\nvar y=_i*(hSrc-1)/hDst2;\nvar yPos=Math.floor(y);\n\nvar _t=y-yPos;\n\nvar _buf1Pos=(yPos*wDst2+_j)*4;\n\nvar buf2Pos=(_i*wDst2+_j)*4;\n\nfor(var _k=0;_k<4;_k++){\nvar _kPos=_buf1Pos+_k;\n\nvar y0=yPos>0?buf1[_kPos-wDst2*4]:2*buf1[_kPos]-buf1[_kPos+wDst2*4];\nvar y1=buf1[_kPos];\nvar y2=buf1[_kPos+wDst2*4];\nvar y3=yPos<hSrc-2?buf1[_kPos+wDst2*8]:2*buf1[_kPos+wDst2*4]-buf1[_kPos];\nbuf2[buf2Pos+_k]=interpolate(y0,y1,y2,y3,_t);\n}\n}\n}// this._writeFile(wDst2, hDst2, buf2, \"out/buf2.jpg\");\n// ===========================================================\n// Pass 3 - scale to dst\n\n\nvar m=wM*hM;\n\nif(m>1){\nfor(var _i2=0;_i2<hDst;_i2++){\nfor(var _j2=0;_j2<wDst;_j2++){\n// i&j in dst bounded coords\nvar r=0;\nvar g=0;\nvar b=0;\nvar a=0;\nvar realColors=0;\n\nfor(var _y=0;_y<hM;_y++){\nvar _yPos=_i2*hM+_y;\n\nfor(var _x=0;_x<wM;_x++){\nvar _xPos=_j2*wM+_x;\n\nvar xyPos=(_yPos*wDst2+_xPos)*4;\nvar pixelAlpha=buf2[xyPos+3];\n\nif(pixelAlpha){\nr+=buf2[xyPos];\ng+=buf2[xyPos+1];\nb+=buf2[xyPos+2];\nrealColors++;\n}\n\na+=pixelAlpha;\n}\n}\n\nvar pos=(_i2*wDst+_j2)*4;\nbufDst[pos]=realColors?Math.round(r/realColors):0;\nbufDst[pos+1]=realColors?Math.round(g/realColors):0;\nbufDst[pos+2]=realColors?Math.round(b/realColors):0;\nbufDst[pos+3]=Math.round(a/m);\n}\n}\n}else{\n// replace dst buffer with buf2\ndst.data=buf2;\n}\n},\nbicubicInterpolation:function bicubicInterpolation(src,dst,options){\nvar interpolateCubic=function interpolateCubic(x0,x1,x2,x3,t){\nvar a0=x3-x2-x0+x1;\nvar a1=x0-x1-a0;\nvar a2=x2-x0;\nvar a3=x1;\nreturn Math.max(0,Math.min(255,a0*(t*t*t)+a1*(t*t)+a2*t+a3));\n};\n\nreturn this._interpolate2D(src,dst,options,interpolateCubic);\n},\nhermiteInterpolation:function hermiteInterpolation(src,dst,options){\nvar interpolateHermite=function interpolateHermite(x0,x1,x2,x3,t){\nvar c0=x1;\nvar c1=0.5*(x2-x0);\nvar c2=x0-2.5*x1+2*x2-0.5*x3;\nvar c3=0.5*(x3-x0)+1.5*(x1-x2);\nreturn Math.max(0,Math.min(255,Math.round(((c3*t+c2)*t+c1)*t+c0)));\n};\n\nreturn this._interpolate2D(src,dst,options,interpolateHermite);\n},\nbezierInterpolation:function bezierInterpolation(src,dst,options){\n// between 2 points y(n), y(n+1), use next points out, y(n-1), y(n+2)\n// to predict control points (a & b) to be placed at n+0.5\n//  ya(n) = y(n) + (y(n+1)-y(n-1))/4\n//  yb(n) = y(n+1) - (y(n+2)-y(n))/4\n// then use std bezier to interpolate [n,n+1)\n//  y(n+t) = y(n)*(1-t)^3 + 3 * ya(n)*(1-t)^2*t + 3 * yb(n)*(1-t)*t^2 + y(n+1)*t^3\n//  note the 3* factor for the two control points\n// for edge cases, can choose:\n//  y(-1) = y(0) - 2*(y(1)-y(0))\n//  y(w) = y(w-1) + 2*(y(w-1)-y(w-2))\n// but can go with y(-1) = y(0) and y(w) = y(w-1)\nvar interpolateBezier=function interpolateBezier(x0,x1,x2,x3,t){\n// x1, x2 are the knots, use x0 and x3 to calculate control points\nvar cp1=x1+(x2-x0)/4;\nvar cp2=x2-(x3-x1)/4;\nvar nt=1-t;\nvar c0=x1*nt*nt*nt;\nvar c1=3*cp1*nt*nt*t;\nvar c2=3*cp2*nt*t*t;\nvar c3=x2*t*t*t;\nreturn Math.max(0,Math.min(255,Math.round(c0+c1+c2+c3)));\n};\n\nreturn this._interpolate2D(src,dst,options,interpolateBezier);\n}};\n\n\n}).call(this,require(\"buffer\").Buffer);\n},{\"buffer\":16}],294:[function(require,module,exports){\n(function(Buffer){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.default=void 0;\n\nvar _utils=require(\"@jimp/utils\");\n\nfunction rotate90degrees(bitmap,dstBuffer,clockwise){\nvar dstOffsetStep=clockwise?-4:4;\nvar dstOffset=clockwise?dstBuffer.length-4:0;\nvar tmp;\nvar x;\nvar y;\nvar srcOffset;\n\nfor(x=0;x<bitmap.width;x++){\nfor(y=bitmap.height-1;y>=0;y--){\nsrcOffset=bitmap.width*y+x<<2;\ntmp=bitmap.data.readUInt32BE(srcOffset,true);\ndstBuffer.writeUInt32BE(tmp,dstOffset,true);\ndstOffset+=dstOffsetStep;\n}\n}\n}\n/**\n * Rotates an image clockwise by an arbitrary number of degrees. NB: 'this' must be a Jimp object.\n * @param {number} deg the number of degrees to rotate the image by\n * @param {string|boolean} mode (optional) resize mode or a boolean, if false then the width and height of the image will not be changed\n */\n\n\nfunction advancedRotate(deg,mode){\ndeg%=360;\nvar rad=deg*Math.PI/180;\nvar cosine=Math.cos(rad);\nvar sine=Math.sin(rad);// the final width and height will change if resize == true\n\nvar w=this.bitmap.width;\nvar h=this.bitmap.height;\n\nif(mode===true||typeof mode==='string'){\n// resize the image to it maximum dimension and blit the existing image\n// onto the center so that when it is rotated the image is kept in bounds\n// http://stackoverflow.com/questions/3231176/how-to-get-size-of-a-rotated-rectangle\n// Plus 1 border pixel to ensure to show all rotated result for some cases.\nw=Math.ceil(Math.abs(this.bitmap.width*cosine)+Math.abs(this.bitmap.height*sine))+1;\nh=Math.ceil(Math.abs(this.bitmap.width*sine)+Math.abs(this.bitmap.height*cosine))+1;// Ensure destination to have even size to a better result.\n\nif(w%2!==0){\nw++;\n}\n\nif(h%2!==0){\nh++;\n}\n\nvar c=this.cloneQuiet();\nthis.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,function(x,y,idx){\nthis.bitmap.data.writeUInt32BE(this._background,idx);\n});\nvar max=Math.max(w,h,this.bitmap.width,this.bitmap.height);\nthis.resize(max,max,mode);\nthis.blit(c,this.bitmap.width/2-c.bitmap.width/2,this.bitmap.height/2-c.bitmap.height/2);\n}\n\nvar bW=this.bitmap.width;\nvar bH=this.bitmap.height;\nvar dstBuffer=Buffer.alloc(this.bitmap.data.length);\n\nfunction createTranslationFunction(deltaX,deltaY){\nreturn function(x,y){\nreturn{\nx:x+deltaX,\ny:y+deltaY};\n\n};\n}\n\nvar translate2Cartesian=createTranslationFunction(-(bW/2),-(bH/2));\nvar translate2Screen=createTranslationFunction(bW/2+0.5,bH/2+0.5);\n\nfor(var y=1;y<=bH;y++){\nfor(var x=1;x<=bW;x++){\nvar cartesian=translate2Cartesian(x,y);\nvar source=translate2Screen(cosine*cartesian.x-sine*cartesian.y,cosine*cartesian.y+sine*cartesian.x);\nvar dstIdx=bW*(y-1)+x-1<<2;\n\nif(source.x>=0&&source.x<bW&&source.y>=0&&source.y<bH){\nvar srcIdx=(bW*(source.y|0)+source.x|0)<<2;\nvar pixelRGBA=this.bitmap.data.readUInt32BE(srcIdx);\ndstBuffer.writeUInt32BE(pixelRGBA,dstIdx);\n}else{\n// reset off-image pixels\ndstBuffer.writeUInt32BE(this._background,dstIdx);\n}\n}\n}\n\nthis.bitmap.data=dstBuffer;\n\nif(mode===true||typeof mode==='string'){\n// now crop the image to the final size\nvar _x=bW/2-w/2;\n\nvar _y=bH/2-h/2;\n\nthis.crop(_x,_y,w,h);\n}\n}\n\nvar _default=function _default(){\nreturn{\n/**\n     * Rotates the image clockwise by a number of degrees. By default the width and height of the image will be resized appropriately.\n     * @param {number} deg the number of degrees to rotate the image by\n     * @param {string|boolean} mode (optional) resize mode or a boolean, if false then the width and height of the image will not be changed\n     * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n     * @returns {Jimp} this for chaining of methods\n     */\nrotate:function rotate(deg,mode,cb){\n// enable overloading\nif(typeof mode==='undefined'||mode===null){\n// e.g. image.resize(120);\n// e.g. image.resize(120, null, cb);\n// e.g. image.resize(120, undefined, cb);\nmode=true;\n}\n\nif(typeof mode==='function'&&typeof cb==='undefined'){\n// e.g. image.resize(120, cb);\ncb=mode;\nmode=true;\n}\n\nif(typeof deg!=='number'){\nreturn _utils.throwError.call(this,'deg must be a number',cb);\n}\n\nif(typeof mode!=='boolean'&&typeof mode!=='string'){\nreturn _utils.throwError.call(this,'mode must be a boolean or a string',cb);\n}\n\nadvancedRotate.call(this,deg,mode,cb);\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n}};\n\n};\n\nexports.default=_default;\nmodule.exports=exports.default;\n\n}).call(this,require(\"buffer\").Buffer);\n},{\"@jimp/utils\":303,\"buffer\":16,\"core-js/modules/es6.object.define-property\":129}],295:[function(require,module,exports){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.default=void 0;\n\nvar _utils=require(\"@jimp/utils\");\n\nvar _default=function _default(){\nreturn{\n/**\n     * Uniformly scales the image by a factor.\n     * @param {number} f the factor to scale the image by\n     * @param {string} mode (optional) a scaling method (e.g. Jimp.RESIZE_BEZIER)\n     * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n     * @returns {Jimp} this for chaining of methods\n     */\nscale:function scale(f,mode,cb){\nif(typeof f!=='number'){\nreturn _utils.throwError.call(this,'f must be a number',cb);\n}\n\nif(f<0){\nreturn _utils.throwError.call(this,'f must be a positive number',cb);\n}\n\nif(typeof mode==='function'&&typeof cb==='undefined'){\ncb=mode;\nmode=null;\n}\n\nvar w=this.bitmap.width*f;\nvar h=this.bitmap.height*f;\nthis.resize(w,h,mode);\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n},\n\n/**\n     * Scale the image to the largest size that fits inside the rectangle that has the given width and height.\n     * @param {number} w the width to resize the image to\n     * @param {number} h the height to resize the image to\n     * @param {string} mode (optional) a scaling method (e.g. Jimp.RESIZE_BEZIER)\n     * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n     * @returns {Jimp} this for chaining of methods\n     */\nscaleToFit:function scaleToFit(w,h,mode,cb){\nif(typeof w!=='number'||typeof h!=='number'){\nreturn _utils.throwError.call(this,'w and h must be numbers',cb);\n}\n\nif(typeof mode==='function'&&typeof cb==='undefined'){\ncb=mode;\nmode=null;\n}\n\nvar f=w/h>this.bitmap.width/this.bitmap.height?h/this.bitmap.height:w/this.bitmap.width;\nthis.scale(f,mode);\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n}};\n\n};\n\nexports.default=_default;\nmodule.exports=exports.default;\n\n},{\"@jimp/utils\":303,\"core-js/modules/es6.object.define-property\":129}],296:[function(require,module,exports){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.default=void 0;\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.array.from\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nvar _timm=require(\"timm\");\n\nvar _pluginDither=_interopRequireDefault(require(\"@jimp/plugin-dither\"));\n\nvar _pluginResize=_interopRequireDefault(require(\"@jimp/plugin-resize\"));\n\nvar _pluginBlit=_interopRequireDefault(require(\"@jimp/plugin-blit\"));\n\nvar _pluginRotate=_interopRequireDefault(require(\"@jimp/plugin-rotate\"));\n\nvar _pluginColor=_interopRequireDefault(require(\"@jimp/plugin-color\"));\n\nvar _pluginPrint=_interopRequireDefault(require(\"@jimp/plugin-print\"));\n\nvar _pluginBlur=_interopRequireDefault(require(\"@jimp/plugin-blur\"));\n\nvar _pluginCrop=_interopRequireDefault(require(\"@jimp/plugin-crop\"));\n\nvar _pluginNormalize=_interopRequireDefault(require(\"@jimp/plugin-normalize\"));\n\nvar _pluginInvert=_interopRequireDefault(require(\"@jimp/plugin-invert\"));\n\nvar _pluginGaussian=_interopRequireDefault(require(\"@jimp/plugin-gaussian\"));\n\nvar _pluginFlip=_interopRequireDefault(require(\"@jimp/plugin-flip\"));\n\nvar _pluginMask=_interopRequireDefault(require(\"@jimp/plugin-mask\"));\n\nvar _pluginScale=_interopRequireDefault(require(\"@jimp/plugin-scale\"));\n\nvar _pluginDisplace=_interopRequireDefault(require(\"@jimp/plugin-displace\"));\n\nvar _pluginContain=_interopRequireDefault(require(\"@jimp/plugin-contain\"));\n\nvar _pluginCover=_interopRequireDefault(require(\"@jimp/plugin-cover\"));\n\nfunction _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}\n\nfunction _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_nonIterableSpread();}\n\nfunction _nonIterableSpread(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\");}\n\nfunction _iterableToArray(iter){if(Symbol.iterator in Object(iter)||Object.prototype.toString.call(iter)===\"[object Arguments]\")return Array.from(iter);}\n\nfunction _arrayWithoutHoles(arr){if(Array.isArray(arr)){for(var i=0,arr2=new Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}}\n\nvar plugins=[_pluginDither.default,_pluginResize.default,_pluginBlit.default,_pluginRotate.default,_pluginColor.default,_pluginPrint.default,_pluginBlur.default,_pluginCrop.default,_pluginNormalize.default,_pluginInvert.default,_pluginGaussian.default,_pluginFlip.default,_pluginMask.default,_pluginScale.default,_pluginDisplace.default,_pluginContain.default,_pluginCover.default];\n\nvar _default=function _default(jimpEvChange){\nvar initializedPlugins=plugins.map(function(pluginModule){\nvar plugin=pluginModule(jimpEvChange)||{};\n\nif(!plugin.class&&!plugin.constants){\n// Default to class function\nplugin={\nclass:plugin};\n\n}\n\nreturn plugin;\n});\nreturn _timm.mergeDeep.apply(void 0,_toConsumableArray(initializedPlugins));\n};\n\nexports.default=_default;\nmodule.exports=exports.default;\n\n},{\"@jimp/plugin-blit\":273,\"@jimp/plugin-blur\":275,\"@jimp/plugin-color\":276,\"@jimp/plugin-contain\":277,\"@jimp/plugin-cover\":278,\"@jimp/plugin-crop\":279,\"@jimp/plugin-displace\":280,\"@jimp/plugin-dither\":281,\"@jimp/plugin-flip\":282,\"@jimp/plugin-gaussian\":283,\"@jimp/plugin-invert\":284,\"@jimp/plugin-mask\":285,\"@jimp/plugin-normalize\":286,\"@jimp/plugin-print\":287,\"@jimp/plugin-resize\":291,\"@jimp/plugin-rotate\":294,\"@jimp/plugin-scale\":295,\"core-js/modules/es6.array.from\":119,\"core-js/modules/es6.array.is-array\":121,\"core-js/modules/es6.array.map\":123,\"core-js/modules/es6.date.to-string\":124,\"core-js/modules/es6.object.define-property\":129,\"core-js/modules/es6.regexp.to-string\":138,\"core-js/modules/es6.string.iterator\":140,\"core-js/modules/es6.symbol\":141,\"core-js/modules/es7.symbol.async-iterator\":148,\"core-js/modules/web.dom.iterable\":149,\"timm\":249}],297:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.default=void 0;\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nvar _bmpJs=_interopRequireDefault(require(\"bmp-js\"));\n\nvar _utils=require(\"@jimp/utils\");\n\nfunction _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}\n\nfunction _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}\n\nvar MIME_TYPE='image/bmp';\nvar MIME_TYPE_SECOND='image/x-ms-bmp';\n\nfunction toAGBR(image){\nreturn(0,_utils.scan)(image,0,0,image.bitmap.width,image.bitmap.height,function(x,y,index){\nvar red=this.bitmap.data[index+0];\nvar green=this.bitmap.data[index+1];\nvar blue=this.bitmap.data[index+2];\nvar alpha=this.bitmap.data[index+3];\nthis.bitmap.data[index+0]=alpha;\nthis.bitmap.data[index+1]=blue;\nthis.bitmap.data[index+2]=green;\nthis.bitmap.data[index+3]=red;\n}).bitmap;\n}\n\nfunction fromAGBR(bitmap){\nreturn(0,_utils.scan)({\nbitmap:bitmap},\n0,0,bitmap.width,bitmap.height,function(x,y,index){\nvar alpha=this.bitmap.data[index+0];\nvar blue=this.bitmap.data[index+1];\nvar green=this.bitmap.data[index+2];\nvar red=this.bitmap.data[index+3];\nthis.bitmap.data[index+0]=red;\nthis.bitmap.data[index+1]=green;\nthis.bitmap.data[index+2]=blue;\nthis.bitmap.data[index+3]=bitmap.is_with_alpha?alpha:0xff;\n}).bitmap;\n}\n\nvar decode=function decode(data){\nreturn fromAGBR(_bmpJs.default.decode(data));\n};\n\nvar encode=function encode(image){\nreturn _bmpJs.default.encode(toAGBR(image)).data;\n};\n\nvar _default=function _default(){\nvar _decoders,_encoders;\n\nreturn{\nmime:_defineProperty({},MIME_TYPE,['bmp']),\nconstants:{\nMIME_BMP:MIME_TYPE,\nMIME_X_MS_BMP:MIME_TYPE_SECOND},\n\ndecoders:(_decoders={},_defineProperty(_decoders,MIME_TYPE,decode),_defineProperty(_decoders,MIME_TYPE_SECOND,decode),_decoders),\nencoders:(_encoders={},_defineProperty(_encoders,MIME_TYPE,encode),_defineProperty(_encoders,MIME_TYPE_SECOND,encode),_encoders)};\n\n};\n\nexports.default=_default;\nmodule.exports=exports.default;\n\n},{\"@jimp/utils\":303,\"bmp-js\":8,\"core-js/modules/es6.object.define-property\":129}],298:[function(require,module,exports){\n(function(Buffer){\n\"use strict\";\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.default=void 0;\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nvar _omggif=_interopRequireDefault(require(\"omggif\"));\n\nfunction _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}\n\nfunction _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}\n\nvar MIME_TYPE='image/gif';\n\nvar _default=function _default(){\nreturn{\nmime:_defineProperty({},MIME_TYPE,['gif']),\nconstants:{\nMIME_GIF:MIME_TYPE},\n\ndecoders:_defineProperty({},MIME_TYPE,function(data){\nvar gifObj=new _omggif.default.GifReader(data);\nvar gifData=Buffer.alloc(gifObj.width*gifObj.height*4);\ngifObj.decodeAndBlitFrameRGBA(0,gifData);\nreturn{\ndata:gifData,\nwidth:gifObj.width,\nheight:gifObj.height};\n\n})};\n\n};\n\nexports.default=_default;\nmodule.exports=exports.default;\n\n}).call(this,require(\"buffer\").Buffer);\n},{\"buffer\":16,\"core-js/modules/es6.object.define-property\":129,\"omggif\":175}],299:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.default=void 0;\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nvar _jpegJs=_interopRequireDefault(require(\"jpeg-js\"));\n\nvar _utils=require(\"@jimp/utils\");\n\nfunction _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}\n\nfunction _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}\n\nvar MIME_TYPE='image/jpeg';\n\nvar _default=function _default(){\nreturn{\nmime:_defineProperty({},MIME_TYPE,['jpeg','jpg','jpe']),\nconstants:{\nMIME_JPEG:MIME_TYPE},\n\ndecoders:_defineProperty({},MIME_TYPE,_jpegJs.default.decode),\nencoders:_defineProperty({},MIME_TYPE,function(image){\nreturn _jpegJs.default.encode(image.bitmap,image._quality).data;\n}),\nclass:{\n// The quality to be used when saving JPEG images\n_quality:100,\n\n/**\n       * Sets the quality of the image when saving as JPEG format (default is 100)\n       * @param {number} n The quality to use 0-100\n       * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n       * @returns {Jimp} this for chaining of methods\n       */\nquality:function quality(n,cb){\nif(typeof n!=='number'){\nreturn _utils.throwError.call(this,'n must be a number',cb);\n}\n\nif(n<0||n>100){\nreturn _utils.throwError.call(this,'n must be a number 0 - 100',cb);\n}\n\nthis._quality=Math.round(n);\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n}}};\n\n\n};\n\nexports.default=_default;\nmodule.exports=exports.default;\n\n},{\"@jimp/utils\":303,\"core-js/modules/es6.object.define-property\":129,\"jpeg-js\":171}],300:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.default=void 0;\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nvar _pngjs=require(\"pngjs\");\n\nvar _utils=require(\"@jimp/utils\");\n\nfunction _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}\n\nvar MIME_TYPE='image/png';// PNG filter types\n\nvar PNG_FILTER_AUTO=-1;\nvar PNG_FILTER_NONE=0;\nvar PNG_FILTER_SUB=1;\nvar PNG_FILTER_UP=2;\nvar PNG_FILTER_AVERAGE=3;\nvar PNG_FILTER_PATH=4;\n\nvar _default=function _default(){\nreturn{\nmime:_defineProperty({},MIME_TYPE,['png']),\nconstants:{\nMIME_PNG:MIME_TYPE,\nPNG_FILTER_AUTO:PNG_FILTER_AUTO,\nPNG_FILTER_NONE:PNG_FILTER_NONE,\nPNG_FILTER_SUB:PNG_FILTER_SUB,\nPNG_FILTER_UP:PNG_FILTER_UP,\nPNG_FILTER_AVERAGE:PNG_FILTER_AVERAGE,\nPNG_FILTER_PATH:PNG_FILTER_PATH},\n\nhasAlpha:_defineProperty({},MIME_TYPE,true),\ndecoders:_defineProperty({},MIME_TYPE,_pngjs.PNG.sync.read),\nencoders:_defineProperty({},MIME_TYPE,function(data){\nvar png=new _pngjs.PNG({\nwidth:data.bitmap.width,\nheight:data.bitmap.height});\n\npng.data=data.bitmap.data;\nreturn _pngjs.PNG.sync.write(png,{\nwidth:data.bitmap.width,\nheight:data.bitmap.height,\ndeflateLevel:data._deflateLevel,\ndeflateStrategy:data._deflateStrategy,\nfilterType:data._filterType,\ncolorType:typeof data._colorType==='number'?data._colorType:data._rgba?6:2,\ninputHasAlpha:data._rgba});\n\n}),\nclass:{\n_deflateLevel:9,\n_deflateStrategy:3,\n_filterType:PNG_FILTER_AUTO,\n_colorType:null,\n\n/**\n       * Sets the deflate level used when saving as PNG format (default is 9)\n       * @param {number} l Deflate level to use 0-9. 0 is no compression. 9 (default) is maximum compression.\n       * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n       * @returns {Jimp} this for chaining of methods\n       */\ndeflateLevel:function deflateLevel(l,cb){\nif(typeof l!=='number'){\nreturn _utils.throwError.call(this,'l must be a number',cb);\n}\n\nif(l<0||l>9){\nreturn _utils.throwError.call(this,'l must be a number 0 - 9',cb);\n}\n\nthis._deflateLevel=Math.round(l);\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n},\n\n/**\n       * Sets the deflate strategy used when saving as PNG format (default is 3)\n       * @param {number} s Deflate strategy to use 0-3.\n       * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n       * @returns {Jimp} this for chaining of methods\n       */\ndeflateStrategy:function deflateStrategy(s,cb){\nif(typeof s!=='number'){\nreturn _utils.throwError.call(this,'s must be a number',cb);\n}\n\nif(s<0||s>3){\nreturn _utils.throwError.call(this,'s must be a number 0 - 3',cb);\n}\n\nthis._deflateStrategy=Math.round(s);\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n},\n\n/**\n       * Sets the filter type used when saving as PNG format (default is automatic filters)\n       * @param {number} f The quality to use -1-4.\n       * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n       * @returns {Jimp} this for chaining of methods\n       */\nfilterType:function filterType(f,cb){\nif(typeof f!=='number'){\nreturn _utils.throwError.call(this,'n must be a number',cb);\n}\n\nif(f<-1||f>4){\nreturn _utils.throwError.call(this,'n must be -1 (auto) or a number 0 - 4',cb);\n}\n\nthis._filterType=Math.round(f);\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n},\n\n/**\n       * Sets the color type used when saving as PNG format\n       * @param {number} s color type to use 0, 2, 4, 6.\n       * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n       * @returns {Jimp} this for chaining of methods\n       */\ncolorType:function colorType(s,cb){\nif(typeof s!=='number'){\nreturn _utils.throwError.call(this,'s must be a number',cb);\n}\n\nif(s!==0&&s!==2&&s!==4&&s!==6){\nreturn _utils.throwError.call(this,'s must be a number 0, 2, 4, 6.',cb);\n}\n\nthis._colorType=Math.round(s);\n\nif((0,_utils.isNodePattern)(cb)){\ncb.call(this,null,this);\n}\n\nreturn this;\n}}};\n\n\n};\n\nexports.default=_default;\nmodule.exports=exports.default;\n\n},{\"@jimp/utils\":303,\"core-js/modules/es6.object.define-property\":129,\"pngjs\":219}],301:[function(require,module,exports){\n(function(Buffer){\n\"use strict\";\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.default=void 0;\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nvar _utif=_interopRequireDefault(require(\"utif\"));\n\nfunction _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}\n\nfunction _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}\n\nvar MIME_TYPE='image/tiff';\n\nvar _default=function _default(){\nreturn{\nmime:_defineProperty({},MIME_TYPE,['tiff','tif']),\nconstants:{\nMIME_TIFF:MIME_TYPE},\n\ndecoders:_defineProperty({},MIME_TYPE,function(data){\nvar ifds=_utif.default.decode(data);\n\nvar page=ifds[0];\n\n_utif.default.decodeImages(data,ifds);\n\nvar rgba=_utif.default.toRGBA8(page);\n\nreturn{\ndata:Buffer.from(rgba),\nwidth:page.t256[0],\nheight:page.t257[0]};\n\n}),\nencoders:_defineProperty({},MIME_TYPE,function(image){\nvar tiff=_utif.default.encodeImage(image.bitmap.data,image.bitmap.width,image.bitmap.height);\n\nreturn Buffer.from(tiff);\n})};\n\n};\n\nexports.default=_default;\nmodule.exports=exports.default;\n\n}).call(this,require(\"buffer\").Buffer);\n},{\"buffer\":16,\"core-js/modules/es6.object.define-property\":129,\"utif\":255}],302:[function(require,module,exports){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.default=void 0;\n\nvar _timm=require(\"timm\");\n\nvar _jpeg=_interopRequireDefault(require(\"@jimp/jpeg\"));\n\nvar _png=_interopRequireDefault(require(\"@jimp/png\"));\n\nvar _bmp=_interopRequireDefault(require(\"@jimp/bmp\"));\n\nvar _tiff=_interopRequireDefault(require(\"@jimp/tiff\"));\n\nvar _gif=_interopRequireDefault(require(\"@jimp/gif\"));\n\nfunction _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}\n\nvar _default=function _default(){\nreturn(0,_timm.mergeDeep)((0,_jpeg.default)(),(0,_png.default)(),(0,_bmp.default)(),(0,_tiff.default)(),(0,_gif.default)());\n};\n\nexports.default=_default;\nmodule.exports=exports.default;\n\n},{\"@jimp/bmp\":297,\"@jimp/gif\":298,\"@jimp/jpeg\":299,\"@jimp/png\":300,\"@jimp/tiff\":301,\"core-js/modules/es6.object.define-property\":129,\"timm\":249}],303:[function(require,module,exports){\n\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports,\"__esModule\",{\nvalue:true});\n\nexports.isNodePattern=isNodePattern;\nexports.throwError=throwError;\nexports.scan=scan;\n\nfunction isNodePattern(cb){\nif(typeof cb==='undefined'){\nreturn false;\n}\n\nif(typeof cb!=='function'){\nthrow new TypeError('Callback must be a function');\n}\n\nreturn true;\n}\n\nfunction throwError(error,cb){\nif(typeof error==='string'){\nerror=new Error(error);\n}\n\nif(typeof cb==='function'){\nreturn cb.call(this,error);\n}\n\nthrow error;\n}\n\nfunction scan(image,x,y,w,h,f){\n// round input\nx=Math.round(x);\ny=Math.round(y);\nw=Math.round(w);\nh=Math.round(h);\n\nfor(var _y=y;_y<y+h;_y++){\nfor(var _x=x;_x<x+w;_x++){\nvar idx=image.bitmap.width*_y+_x<<2;\nf.call(image,_x,_y,idx);\n}\n}\n\nreturn image;\n}\n\n},{\"core-js/modules/es6.object.define-property\":129}]},{},[272])(272);\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=uni-app:///node_modules/jimp/browser/lib/jimp.js?9b40");

/***/ }),

/***/ "../../../../../../Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/pages/rili/rili.vue":
/*!********************************************************************************!*\
  !*** /Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/pages/rili/rili.vue ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _rili_vue_vue_type_template_id_07b3ff04___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rili.vue?vue&type=template&id=07b3ff04& */ \"../../../../../../Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/pages/rili/rili.vue?vue&type=template&id=07b3ff04&\");\n/* harmony import */ var _rili_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rili.vue?vue&type=script&lang=js& */ \"../../../../../../Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/pages/rili/rili.vue?vue&type=script&lang=js&\");\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _rili_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _rili_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/vue-loader/lib/runtime/componentNormalizer.js */ \"./node_modules/vue-loader/lib/runtime/componentNormalizer.js\");\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _rili_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _rili_vue_vue_type_template_id_07b3ff04___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _rili_vue_vue_type_template_id_07b3ff04___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/pages/rili/rili.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);\n\n//# sourceURL=Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/pages/rili/rili.vue");

/***/ }),

/***/ "../../../../../../Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/pages/rili/rili.vue?vue&type=script&lang=js&":
/*!*********************************************************************************************************!*\
  !*** /Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/pages/rili/rili.vue?vue&type=script&lang=js& ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_18_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_rili_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--12-1!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--18-0!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/vue-loader/lib??vue-loader-options!./rili.vue?vue&type=script&lang=js& */ \"./node_modules/babel-loader/lib/index.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js?!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js?!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib/index.js?!../../../../../../Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/pages/rili/rili.vue?vue&type=script&lang=js&\");\n/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_18_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_rili_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_18_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_rili_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_18_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_rili_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_18_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_rili_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_18_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_rili_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); \n\n//# sourceURL=uni-app:///pages/rili/rili.vue?vue&type=script&lang=js&?2015");

/***/ }),

/***/ "../../../../../../Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/pages/rili/rili.vue?vue&type=template&id=07b3ff04&":
/*!***************************************************************************************************************!*\
  !*** /Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/pages/rili/rili.vue?vue&type=template&id=07b3ff04& ***!
  \***************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_17_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_rili_vue_vue_type_template_id_07b3ff04___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--17-0!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/vue-loader/lib??vue-loader-options!./rili.vue?vue&type=template&id=07b3ff04& */ \"./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js?!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!./node_modules/vue-loader/lib/index.js?!../../../../../../Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/pages/rili/rili.vue?vue&type=template&id=07b3ff04&\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_17_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_rili_vue_vue_type_template_id_07b3ff04___WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_17_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_rili_vue_vue_type_template_id_07b3ff04___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n\n\n//# sourceURL=Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/pages/rili/rili.vue?vue&type=template&id=07b3ff04&");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js?!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js?!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib/index.js?!../../../../../../Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/pages/rili/rili.vue?vue&type=script&lang=js&":
/*!********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--12-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--18-0!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib??vue-loader-options!/Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/pages/rili/rili.vue?vue&type=script&lang=js& ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _dayjs = _interopRequireDefault(__webpack_require__(/*! dayjs */ \"../../../../../../Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/node_modules/dayjs/dayjs.min.js\"));\nvar _imageTools = __webpack_require__(/*! image-tools */ \"../../../../../../Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/node_modules/image-tools/index.js\");function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}var Jimp = __webpack_require__(/*! jimp */ \"../../../../../../Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/node_modules/jimp/browser/lib/jimp.js\");var _default =\n{\n  data: function data() {\n    return {\n      canDownload: false,\n      text: '',\n      selectImagePath: '',\n      rate: 1,\n      X: 0,\n      Y: 0,\n      isSliderDisable: false };\n\n  },\n\n  onReady: function onReady() {\n    var context = uni.createCanvasContext('myCanvas');\n    context.fillStyle = '#FFFFFF';\n    context.fillRect(0, 0, 300, 300);\n    context.drawImage('../../static/img/logo.jpg', 10, 260, 500 / 7, 198 / 7);\n    context.drawImage('../../static/img/qr.jpeg', 250, 250, 37, 37);\n    context.fillStyle = '#ececec';\n    context.arc(150, 145, 130, 0, 360);\n    context.fill();\n    context.draw();\n  },\n\n  methods: {\n    changeBrt: function changeBrt(e) {var _this2 = this;\n      this.isSliderDisable = true;\n      Jimp.read(this.selectImagePath).\n      then(function (image) {\n        var value = e.detail.value / 100 - 0.5;\n        image.brightness(value).\n        getBase64Async(Jimp.MIME_PNG).\n        then(function (imgSrc) {\n          _this2.isSliderDisable = false;\n          _this2.drawAll(imgSrc);\n        });\n      });\n    },\n\n    changeCons: function changeCons(e) {var _this3 = this;\n      this.isSliderDisable = true;\n      Jimp.read(this.selectImagePath).\n      then(function (image) {\n        var value = e.detail.value / 100 - 0.5;\n        image.contrast(value).\n        getBase64Async(Jimp.MIME_PNG).\n        then(function (imgSrc) {\n          _this3.isSliderDisable = false;\n          _this3.drawAll(imgSrc);\n        });\n      });\n    },\n    big: function big() {\n      this.rate += 0.02;\n      this.drawAll();\n    },\n    small: function small() {\n      this.rate -= 0.02;\n      this.drawAll();\n    },\n\n    up: function up() {\n      this.Y -= 1;\n      this.drawAll();\n    },\n    down: function down() {\n      this.Y += 1;\n      this.drawAll();\n    },\n    left: function left() {\n      this.X -= 1;\n      this.drawAll();\n    },\n    right: function right() {\n      this.X += 1;\n      this.drawAll();\n    },\n    drawAll: function drawAll() {var imagePath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var _this = this;\n      uni.getImageInfo({\n        src: _this.selectImagePath,\n        success: function success(image) {\n          // console.log('drawAll', image)\n          var context = uni.createCanvasContext('myCanvas');\n          context.clearRect(0, 0, 300, 300);\n          context.arc(150, 145, 130, 0, 360);\n          context.fillStyle = '#ffffff';\n          context.fill();\n          context.globalCompositeOperation = 'source-atop';var _this$getCanvasInfo =\n\n\n\n\n\n          _this.getCanvasInfo(image, 300, 300),dx = _this$getCanvasInfo.dx,dy = _this$getCanvasInfo.dy,dWidth = _this$getCanvasInfo.dWidth,dHeight = _this$getCanvasInfo.dHeight;\n          var p = imagePath ? imagePath : image.path;\n          context.drawImage(p, -dx + _this.X, -dy + _this.Y, dWidth * _this.rate, dHeight * _this.rate);\n          context.globalCompositeOperation = 'source-over';\n          context.drawImage('../../static/img/logo.jpg', 10, 260, 500 / 7, 198 / 7);\n          context.drawImage('../../static/img/qr.jpeg', 250, 250, 37, 37);\n          context.setFontSize(20);\n          context.setTextAlign('center');\n          context.setFillStyle('DarkGray');\n          context.setFontSize('14');\n          context.fillText((0, _dayjs.default)().format('MM.DD'), 265, 245);\n          context.draw();\n          _this.canDownload = true;\n        } });\n\n    },\n\n    copy: function copy() {\n      var _this = this;\n      uni.setClipboardData({\n        data: _this.text,\n        success: function success() {\n          uni.showToast({\n            title: '已复制到剪贴板',\n            mask: false,\n            duration: 1500 });\n\n        } });\n\n    },\n    //  重新调整选择图片\n    getCanvasInfo: function getCanvasInfo(headImg, canvW, canH) {\n      var imgX = headImg.width;\n      var imgY = headImg.height;\n      var dWidth = 0;\n      var dHeight = 0;\n      if (imgX > imgY) {\n        dHeight = canH;\n        dWidth = imgX / (imgY / canH);\n        if (dWidth < canvW) {\n          dWidth = canvW;\n          dHeight = imgY / (imgX / canvW);\n        }\n      } else {\n        dWidth = canvW;\n        dHeight = imgY / (imgX / canvW);\n        if (dHeight < canH) {\n          dHeight = canH;\n          dWidth = imgX / (imgY / canH);\n        }\n      }\n      var dx = (dWidth - canvW) / 2;\n      var dy = (dHeight - canH) / 2;\n      return {\n        dx: dx,\n        dy: dy,\n        dWidth: dWidth,\n        dHeight: dHeight };\n\n    },\n\n    open: function open() {\n      var _this = this;\n      uni.chooseImage({\n        success: function success(res) {\n          var imagePath = res.tempFilePaths[0];\n          _this.selectImagePath = imagePath;\n          _this.drawAll();\n        },\n        fail: function fail() {\n          uni.showToast({\n            title: '失败啦！！！',\n            mask: false,\n            duration: 1500 });\n\n        } });\n\n    },\n\n    getText: function getText() {\n      var _this = this;\n      uni.showLoading({\n        title: '',\n        mask: false });\n\n      setTimeout(function () {\n        uni.canvasToTempFilePath({\n          canvasId: 'myCanvas',\n          fileType: 'jpg',\n          success: function success(res) {\n            var img = res.tempFilePath;\n            (0, _imageTools.pathToBase64)(img).\n            then(function (base64) {\n\n              uni.request({\n                url: 'https://ocrapi-document.taobao.com/ocrservice/document',\n                method: 'POST',\n                header: {\n                  'Authorization': 'APPCODE afe6ff03025c425fb75801d07ae0b3fe' },\n\n                data: {\n                  img: base64 },\n\n                success: function success(res) {\n                  res.data.prism_wordsInfo.forEach(function (item, index, array) {\n                    if (index != array.length - 1) {\n                      _this.text += item.word;\n                    } else {\n                      _this.text = '【2019年无境书茶日历】'.concat('', _this.text);\n                    }\n                  });\n                },\n                fail: function fail(err) {\n                  console.error(JSON.stringify(err));\n                },\n                complete: function complete() {\n                  uni.hideLoading();\n                } });\n\n\n            });\n            // _this.c = img\n\n          } });\n\n\n      }, 100);\n    },\n\n    save: function save() {\n      uni.canvasToTempFilePath({\n        canvasId: 'myCanvas',\n        fileType: 'jpg',\n        success: function success(res) {\n          uni.saveImageToPhotosAlbum({\n            filePath: res.tempFilePath,\n            success: function success() {\n              uni.showToast({\n                title: '保存成功',\n                mask: false,\n                duration: 1500 });\n\n            },\n\n            fail: function fail() {\n              uni.showToast({\n                title: '保存失败',\n                mask: false,\n                duration: 1500 });\n\n            } });\n\n        } });\n\n    } } };exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ \"./node_modules/@dcloudio/uni-app-plus/dist/index.js\")[\"default\"]))\n\n//# sourceURL=uni-app:///pages/rili/rili.vue?vue&type=script&lang=js&?8000");

/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js?!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!./node_modules/vue-loader/lib/index.js?!../../../../../../Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/pages/rili/rili.vue?vue&type=template&id=07b3ff04&":
/*!******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--17-0!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!./node_modules/vue-loader/lib??vue-loader-options!/Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/pages/rili/rili.vue?vue&type=template&id=07b3ff04& ***!
  \******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"view\",\n    {\n      staticStyle: {\n        width: \"100vw\",\n        display: \"flex\",\n        \"flex-direction\": \"column\",\n        \"justify-content\": \"flex-start\",\n        \"align-items\": \"center\"\n      }\n    },\n    [\n      _c(\"canvas\", {\n        staticStyle: {\n          width: \"300px\",\n          height: \"300px\",\n          background: \"#EFEFF4\",\n          border: \"1px solid #DDDDDD\",\n          margin: \"20px 0\"\n        },\n        attrs: { \"canvas-id\": \"myCanvas\", eventid: \"ccb09d8c-0\" },\n        on: { touchstart: _vm.touchStart }\n      }),\n      _c(\n        \"view\",\n        {\n          staticStyle: {\n            display: \"flex\",\n            \"flex-direction\": \"row\",\n            \"justify-content\": \"space-between\",\n            width: \"90vw\"\n          }\n        },\n        [\n          _c(\n            \"button\",\n            {\n              attrs: { type: \"primary\", eventid: \"ccb09d8c-1\" },\n              on: { click: _vm.open }\n            },\n            [_vm._v(\"获取图片\")]\n          ),\n          _c(\n            \"button\",\n            {\n              attrs: {\n                type: \"default\",\n                disabled: !_vm.canDownload,\n                eventid: \"ccb09d8c-2\"\n              },\n              on: { click: _vm.save }\n            },\n            [_vm._v(\"保存图片\")]\n          ),\n          _c(\n            \"button\",\n            {\n              attrs: {\n                type: \"default\",\n                disabled: !_vm.canDownload,\n                eventid: \"ccb09d8c-3\"\n              },\n              on: { click: _vm.getText }\n            },\n            [_vm._v(\"识别文字\")]\n          )\n        ],\n        1\n      ),\n      _c(\n        \"view\",\n        {\n          staticStyle: {\n            display: \"flex\",\n            \"flex-direction\": \"row\",\n            \"justify-content\": \"space-between\",\n            width: \"90vw\",\n            \"margin-top\": \"20px\"\n          }\n        },\n        [\n          _c(\n            \"button\",\n            {\n              attrs: {\n                type: \"default\",\n                disabled: !_vm.canDownload,\n                eventid: \"ccb09d8c-4\"\n              },\n              on: { click: _vm.big }\n            },\n            [_vm._v(\"放大\")]\n          ),\n          _c(\n            \"button\",\n            {\n              attrs: {\n                type: \"default\",\n                disabled: !_vm.canDownload,\n                eventid: \"ccb09d8c-5\"\n              },\n              on: { click: _vm.small }\n            },\n            [_vm._v(\"缩小\")]\n          )\n        ],\n        1\n      ),\n      _c(\n        \"view\",\n        {\n          staticStyle: {\n            display: \"flex\",\n            \"flex-direction\": \"row\",\n            \"justify-content\": \"space-between\",\n            width: \"90vw\",\n            \"margin-top\": \"20px\"\n          }\n        },\n        [\n          _c(\n            \"button\",\n            {\n              attrs: {\n                type: \"default\",\n                disabled: !_vm.canDownload,\n                eventid: \"ccb09d8c-6\"\n              },\n              on: { click: _vm.up }\n            },\n            [_vm._v(\"⬆️\")]\n          ),\n          _c(\n            \"button\",\n            {\n              attrs: {\n                type: \"default\",\n                disabled: !_vm.canDownload,\n                eventid: \"ccb09d8c-7\"\n              },\n              on: { click: _vm.down }\n            },\n            [_vm._v(\"⬇️\")]\n          ),\n          _c(\n            \"button\",\n            {\n              attrs: {\n                type: \"default\",\n                disabled: !_vm.canDownload,\n                eventid: \"ccb09d8c-8\"\n              },\n              on: { click: _vm.left }\n            },\n            [_vm._v(\"⬅️\")]\n          ),\n          _c(\n            \"button\",\n            {\n              attrs: {\n                type: \"default\",\n                disabled: !_vm.canDownload,\n                eventid: \"ccb09d8c-9\"\n              },\n              on: { click: _vm.right }\n            },\n            [_vm._v(\"➡️\")]\n          )\n        ],\n        1\n      ),\n      _c(\"view\", { staticClass: \"uni-title\" }, [_vm._v(\"亮度\")]),\n      _c(\"slider\", {\n        staticStyle: { width: \"80vw\" },\n        attrs: {\n          value: \"60\",\n          step: \"5\",\n          disabled: _vm.isSliderDisable,\n          \"show-value\": \"\",\n          eventid: \"ccb09d8c-10\"\n        },\n        on: { change: _vm.changeBrt }\n      }),\n      _c(\"view\", { staticClass: \"uni-title\" }, [_vm._v(\"对比度\")]),\n      _c(\"slider\", {\n        staticStyle: { width: \"80vw\" },\n        attrs: {\n          value: \"60\",\n          step: \"5\",\n          disabled: _vm.isSliderDisable,\n          \"show-value\": \"\",\n          eventid: \"ccb09d8c-11\"\n        },\n        on: { change: _vm.changeCons }\n      }),\n      _c(\"textarea\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.text,\n            expression: \"text\"\n          }\n        ],\n        staticStyle: { border: \"1rpx solid #DDDDDD\", margin: \"20px 10px\" },\n        style: { display: !_vm.text ? \"none\" : \"block\" },\n        attrs: { maxlength: \"-1\", eventid: \"ccb09d8c-12\" },\n        domProps: { value: _vm.text },\n        on: {\n          input: function($event) {\n            if ($event.target.composing) {\n              return\n            }\n            _vm.text = $event.target.value\n          }\n        }\n      }),\n      _c(\n        \"button\",\n        {\n          attrs: { type: \"default\", hidden: !_vm.text, eventid: \"ccb09d8c-13\" },\n          on: { click: _vm.copy }\n        },\n        [_vm._v(\"复制文本\")]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n\n\n//# sourceURL=Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/pages/rili/rili.vue?vue&type=template&id=07b3ff04&");

/***/ })

},[["../../../../../../Users/oldpotter/HBuilderProjects/wjsc-tools-uni-app/main.js?{\"page\":\"pages%2Frili%2Frili\"}","common/runtime","common/vendor"]]]);